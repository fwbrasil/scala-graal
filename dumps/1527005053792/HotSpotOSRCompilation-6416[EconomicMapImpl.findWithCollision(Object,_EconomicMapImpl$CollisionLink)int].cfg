begin_compilation
  name " HotSpotOSRCompilation-6416[org.graalvm.collections.EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)@3]"
  method "HotSpotOSRCompilation-6416[org.graalvm.collections.EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)@3]"
  date 1527005116579
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1765 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1765  <|@  <|@
f <@~|@floating>@ <|@
tid j1761 <|@
d <@d|@=== Debug Properties ===
index: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1762 v2434 v2435 v2436 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2434 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j1761 
index: - 
=== Succesors ===
=== Usages ===
a1765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1761 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1765 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2434 
=== Succesors ===
next: a1768 
=== Usages ===
v2443 ?60 ?11 v1790 ?750 v2408 v2405 ?151 ?70 ?200 ?665 
=== Predecessor ===
v1760 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2434 #next: a1768  <|@  <|@
f <@~|@floating>@ <|@
tid v2435 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j1761 
index: - 
=== Succesors ===
=== Usages ===
a1768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1761 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1768 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2435 
=== Succesors ===
next: a1770 
=== Usages ===
?60 ?151 ?70 v1170 v1166 ?750 ?11 v1403 v1218 ?200 v118 v169 ?261 ?2039 v2448 ?2041 v1937 ?2040 v2416 ?2042 ?316 ?476 v2423 v1362 v2430 v2426 ?2043 v1317 ?386 ?2048 v1326 ?404 ?2047 v1335 ?422 ?2046 v1344 ?440 ?2045 v1353 ?458 ?2044 ?2036 ?2037 ?2038 v2511 
=== Predecessor ===
a1765 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2435 #next: a1770  <|@  <|@
f <@~|@floating>@ <|@
tid v2436 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1761 
index: - 
=== Succesors ===
=== Usages ===
a1770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1761 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1770 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2436 
=== Succesors ===
next: v1762 
=== Usages ===
v1772 ?60 v2404 v2442 v2510 
=== Predecessor ===
a1768 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2436 #next: v1762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: OSR_migration_end(long)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1761 
=== Succesors ===
next: v1775 
=== Usages ===
=== Predecessor ===
a1770 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1761 #next: v1775  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 290
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1765 a1768 - - - a1770 - - 
=== Succesors ===
=== Usages ===
v2092 v2510 i2358 v2511 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a1768 - - - a1770 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
value: a1770 
=== Succesors ===
=== Usages ===
v1775 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1770  <|@  <|@
f <@~|@floating>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2264 v2267 v2268 v2269 v2274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1772 
=== Succesors ===
trueSuccessor: v1774 
falseSuccessor: v1773 
=== Usages ===
=== Predecessor ===
v1762 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1772 #trueSuccessor: v1774 #falseSuccessor: v1773  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2153 
=== Usages ===
=== Predecessor ===
v1775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2153  <|@  <|@
f <@*|@fixed>@ <|@
tid v2153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2151 
=== Predecessor ===
v1774 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B153" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2355 
=== Usages ===
=== Predecessor ===
v1775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2355  <|@  <|@
f <@~|@floating>@ <|@
tid v2442 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1770 
index: - 
=== Succesors ===
=== Usages ===
v2355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2442 
=== Succesors ===
next: v2312 
=== Usages ===
v2264 
=== Predecessor ===
v1773 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2442 #next: v2312  <|@  <|@
f <@~|@floating>@ <|@
tid v2264 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2355 
y: v2263 
=== Succesors ===
=== Usages ===
v2312 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2355 y: v2263  <|@  <|@
f <@*|@fixed>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2264 
=== Succesors ===
trueSuccessor: v2311 
falseSuccessor: v2158 
=== Usages ===
=== Predecessor ===
v2355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2264 #trueSuccessor: v2311 #falseSuccessor: v2158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2161 
=== Usages ===
=== Predecessor ===
v2312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2161  <|@  <|@
f <@*|@fixed>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2151 
=== Predecessor ===
v2311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2153 v2161 
=== Succesors ===
next: v1793 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2153 v2161 #next: v1793  <|@  <|@
f <@~|@floating>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
value: a1765 
=== Succesors ===
=== Usages ===
v1793 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1765  <|@  <|@
f <@~|@floating>@ <|@
tid a2097 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2091 a2091 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2096 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -276540
stableDimension: 0
stamp: i32 [-276540] ⇊00000000fffbc7c4 ⇈00000000fffbc7c4
stampKind: i32
value: int[-276540|0xfffffffffffbc7c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2090 i2090 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1790 
=== Succesors ===
trueSuccessor: v1792 
falseSuccessor: v1791 
=== Usages ===
=== Predecessor ===
v2151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1790 #trueSuccessor: v1792 #falseSuccessor: v1791  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2095 
=== Usages ===
=== Predecessor ===
v1793 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2095  <|@  <|@
f <@*|@fixed>@ <|@
tid v2095 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
v1792 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2356 
=== Usages ===
=== Predecessor ===
v1793 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2356  <|@  <|@
f <@~|@floating>@ <|@
tid v2443 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1765 
index: - 
=== Succesors ===
=== Usages ===
v2356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1765 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2443 
=== Succesors ===
next: v1799 
=== Usages ===
v2266 
=== Predecessor ===
v1791 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2443 #next: v1799  <|@  <|@
f <@~|@floating>@ <|@
tid v2265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2356 
y: v2265 
=== Succesors ===
=== Usages ===
v1799 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2356 y: v2265  <|@  <|@
f <@*|@fixed>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2266 
=== Succesors ===
trueSuccessor: v1797 
falseSuccessor: v1798 
=== Usages ===
=== Predecessor ===
v2356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2266 #trueSuccessor: v1797 #falseSuccessor: v1798  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B151" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:147) [bci: 69]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2510 
=== Usages ===
=== Predecessor ===
v1799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
object: a1770 
=== Succesors ===
next: a2357 
=== Usages ===
=== Predecessor ===
v1797 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?60 object: a1770 #next: a2357  <|@  <|@
f <@~|@floating>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1765 
index: - 
=== Succesors ===
=== Usages ===
a2357 a2364 a2400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1765 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2405 
=== Succesors ===
next: i2358 
=== Usages ===
a1089 v2406 
=== Predecessor ===
v2510 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2405 #next: i2358  <|@  <|@
f <@~|@floating>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2357 
=== Succesors ===
=== Usages ===
i2358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?60 
guard: - 
address: v2406 
=== Succesors ===
next: i2359 
=== Usages ===
v1095 v1121 
=== Predecessor ===
a2357 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?60 guard: - address: v2406 #next: i2359  <|@  <|@
f <@~|@floating>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1770 
index: - 
=== Succesors ===
=== Usages ===
i2359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:291) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2404 
=== Succesors ===
next: v1567 
=== Usages ===
i66 ?70 ?151 v114 ?665 v724 
=== Predecessor ===
i2358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2404 #next: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 i66 i516 i210 i161 i2353 i2354 i2352 i1299 i1313 i2351 i2349 i2350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i2359 
y: i22 
=== Succesors ===
=== Usages ===
v2407 i161 v1095 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2359 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i2358 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i66 y: i2358  <|@  <|@
f <@~|@floating>@ <|@
tid a2058 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2061 v2143 v2113 v2123 a2091 a2091 ?665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1095 
=== Succesors ===
trueSuccessor: v1564 
falseSuccessor: v1566 
=== Usages ===
=== Predecessor ===
i2359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1095 #trueSuccessor: v1564 #falseSuccessor: v1566  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2360 
=== Usages ===
a2360 
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2360  <|@  <|@
f <@~|@floating>@ <|@
tid a1089 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2357 
=== Succesors ===
=== Usages ===
v2409 a999 v2407 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2357  <|@  <|@
f <@~|@floating>@ <|@
tid v2407 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1089 
index: i66 
=== Succesors ===
=== Usages ===
a2360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1089 index: i66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1564 
address: v2407 
=== Succesors ===
next: v121 
=== Usages ===
a1105 
=== Predecessor ===
v1564 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1564 address: v2407 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid a1105 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2360 
=== Succesors ===
=== Usages ===
v1170 v118 v1166 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2360  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1105 
y: a1768 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1105 y: a1768  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.08493593479678752
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
a2360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4590784699771983760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v724  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i2359 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i2359 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B18" 
    xhandlers
    flags 
    probability 4606417383911415054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2361 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2361  <|@  <|@
f <@~|@floating>@ <|@
tid v2408 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1765 
index: - 
=== Succesors ===
=== Usages ===
a2361 a2371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1765 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2408 
=== Succesors ===
next: v127 
=== Usages ===
a1109 v1167 v1442 v1444 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2408 #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a2361 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2361  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i66 
y: i22 
=== Succesors ===
=== Usages ===
v2411 v1151 v2409 v1121 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i66 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 v71 ?70 ?665 ?750 v1030 v1298 i315 v511 i1299 v1312 i1313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1441 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1442 v1451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1443 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 v1452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 60]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2498 v115 v656 v2500 v2497 v2499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9609648093772144
=== Inputs ===
condition: v1167 
=== Succesors ===
trueSuccessor: v125 
falseSuccessor: v126 
=== Usages ===
=== Predecessor ===
a2361 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1167 #trueSuccessor: v125 #falseSuccessor: v126  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B17" 
    xhandlers
    flags 
    probability 4606095649454238501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1571 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1571  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i2358 
=== Succesors ===
=== Usages ===
v1571 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i161 y: i2358  <|@  <|@
f <@*|@fixed>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1121 
=== Succesors ===
trueSuccessor: v1568 
falseSuccessor: v1570 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1121 #trueSuccessor: v1568 #falseSuccessor: v1570  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4606095649454238501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2362 
=== Usages ===
a2362 
=== Predecessor ===
v1571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2362  <|@  <|@
f <@~|@floating>@ <|@
tid v2409 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1089 
index: i161 
=== Succesors ===
=== Usages ===
a2362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1089 index: i161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1568 
address: v2409 
=== Succesors ===
next: v1810 
=== Usages ===
a1119 v1131 v2444 
=== Predecessor ===
v1568 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1568 address: v2409 #next: v1810  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 52]
stamp: void
=== Inputs ===
value: a2362 
=== Succesors ===
=== Usages ===
v1810 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2362  <|@  <|@
f <@*|@fixed>@ <|@
tid v1810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1131 
=== Succesors ===
trueSuccessor: v1809 
falseSuccessor: v1808 
=== Usages ===
=== Predecessor ===
a2362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1131 #trueSuccessor: v1809 #falseSuccessor: v1808  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4591000764590334595
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2499 
=== Usages ===
=== Predecessor ===
v1810 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2499  <|@  <|@
f <@*|@fixed>@ <|@
tid v2499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1809 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605303606463342293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2363 
=== Usages ===
=== Predecessor ===
v1810 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2363  <|@  <|@
f <@~|@floating>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2362 
=== Succesors ===
=== Usages ===
v2363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2444 
=== Succesors ===
next: v2490 
=== Usages ===
v2267 
=== Predecessor ===
v1808 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2444 #next: v2490  <|@  <|@
f <@~|@floating>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2363 
y: v2263 
=== Succesors ===
=== Usages ===
v2490 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2363 y: v2263  <|@  <|@
f <@*|@fixed>@ <|@
tid v2490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9958011670017366
=== Inputs ===
condition: v2267 
=== Succesors ===
trueSuccessor: v2488 
falseSuccessor: v2487 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2267 #trueSuccessor: v2488 #falseSuccessor: v2487  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4605273675557126329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v2490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid a1119 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2362 
=== Succesors ===
=== Usages ===
a2053 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2362  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
v2488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4569808734517599273
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2500 
=== Usages ===
=== Predecessor ===
v2490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2500  <|@  <|@
f <@*|@fixed>@ <|@
tid v2500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2487 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2104 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2104  <|@  <|@
f <@~|@floating>@ <|@
tid i2105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284699
stableDimension: 0
stamp: i32 [-284699] ⇊00000000fffba7e5 ⇈00000000fffba7e5
stampKind: i32
value: int[-284699|0xfffffffffffba7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2090 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
v1570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4585308572350619273
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2361 
y: a1443 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2361 y: a1443  <|@  <|@
tid ?151 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1765 a1768 - i2359 - - - - 
=== Succesors ===
=== Usages ===
?2034 ?2033 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a1768 - i2359 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.7355351947531783
=== Inputs ===
condition: v1444 
=== Succesors ===
trueSuccessor: v137 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1444 #trueSuccessor: v137 #falseSuccessor: v131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4583229925940205174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2511 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
object: a1768 
=== Succesors ===
next: i141 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?60 object: a1768 #next: i141  <|@  <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6472b792
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a1768 a1105 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1768 a1105  <|@  <|@
tid ?2033 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - - - 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1166 
stateDuring: ?2033 
=== Succesors ===
next: v155 
=== Usages ===
i154 
=== Predecessor ===
v2511 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1166 stateDuring: ?2033 #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
i141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4576599217976790328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2361 
y: a1441 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2361 y: a1441  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.003959995166108514
=== Inputs ===
condition: v1442 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1442 #trueSuccessor: v132 #falseSuccessor: v138  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4540645345622683902
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2462 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576577653442178631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i146 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i146  <|@  <|@
f <@~|@floating>@ <|@
tid a1109 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a2361 
=== Succesors ===
=== Usages ===
v1170 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2361  <|@  <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@5a0ac4d1
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a1109 a1768 a1105 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1109 a1768 a1105  <|@  <|@
tid ?2034 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - - - 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1170 
stateDuring: ?2034 
=== Succesors ===
next: v156 
=== Usages ===
i154 
=== Predecessor ===
v138 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1170 stateDuring: ?2034 #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
i146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" 
    successors "B24" "B150" 
    xhandlers
    flags 
    probability 4585303181216966349
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v152 
values: i141 i146 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v152 values: i141 i146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v155 v156 
=== Succesors ===
next: v74 
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v155 v156 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i28 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i154 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
trueSuccessorProbability: 0.9941860553050733
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v72 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4585273283819271622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2463 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2463  <|@  <|@
f <@*|@fixed>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2462 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B21" 
    successors "B26" "B149" 
    xhandlers
    flags 
    probability 4585278674952924546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2463 v158 
=== Succesors ===
next: a2364 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2463 v158 #next: a2364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2405 
=== Succesors ===
next: i2365 
=== Usages ===
a1135 v2410 
=== Predecessor ===
v2462 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2405 #next: i2365  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1765 a1768 - i2359 - - - - i28 
=== Succesors ===
=== Usages ===
v2113 i2365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a1768 - i2359 - - - - i28  <|@  <|@
f <@~|@floating>@ <|@
tid v2410 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2364 
=== Succesors ===
=== Usages ===
i2365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?70 
guard: - 
address: v2410 
=== Succesors ===
next: v1587 
=== Usages ===
v1151 
=== Predecessor ===
a2364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?70 guard: - address: v2410 #next: v1587  <|@  <|@
f <@~|@floating>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i2365 
=== Succesors ===
=== Usages ===
v1587 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i161 y: i2365  <|@  <|@
f <@*|@fixed>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1151 
=== Succesors ===
trueSuccessor: v1584 
falseSuccessor: v1586 
=== Usages ===
=== Predecessor ===
i2365 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1151 #trueSuccessor: v1584 #falseSuccessor: v1586  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585278674952924546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2366 
=== Usages ===
a2366 
=== Predecessor ===
v1587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2366  <|@  <|@
f <@~|@floating>@ <|@
tid a1135 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2364 
=== Succesors ===
=== Usages ===
v2411 a999 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2364  <|@  <|@
f <@~|@floating>@ <|@
tid v2411 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1135 
index: i161 
=== Succesors ===
=== Usages ===
a2366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1135 index: i161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1584 
address: v2411 
=== Succesors ===
next: v1827 
=== Usages ===
a1149 v1161 v2445 
=== Predecessor ===
v1584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1584 address: v2411 #next: v1827  <|@  <|@
f <@~|@floating>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 52]
stamp: void
=== Inputs ===
value: a2366 
=== Succesors ===
=== Usages ===
v1827 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1161 
=== Succesors ===
trueSuccessor: v1826 
falseSuccessor: v1825 
=== Usages ===
=== Predecessor ===
a2366 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1161 #trueSuccessor: v1826 #falseSuccessor: v1825  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4570334988793720629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2497 
=== Usages ===
=== Predecessor ===
v1827 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1826 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B148" 
    xhandlers
    flags 
    probability 4584766889561211535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2367 
=== Usages ===
=== Predecessor ===
v1827 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2367  <|@  <|@
f <@~|@floating>@ <|@
tid v2445 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2366 
=== Succesors ===
=== Usages ===
v2367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2445 
=== Succesors ===
next: v2469 
=== Usages ===
v2268 
=== Predecessor ===
v1825 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2445 #next: v2469  <|@  <|@
f <@~|@floating>@ <|@
tid v2268 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2367 
y: v2263 
=== Succesors ===
=== Usages ===
v2469 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2367 y: v2263  <|@  <|@
f <@*|@fixed>@ <|@
tid v2469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9958011670017366
=== Inputs ===
condition: v2268 
=== Succesors ===
trueSuccessor: v2467 
falseSuccessor: v2466 
=== Usages ===
=== Predecessor ===
v2367 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2268 #trueSuccessor: v2467 #falseSuccessor: v2466  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4584747549448694751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v2469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid a1149 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2366 
=== Succesors ===
=== Usages ===
a2053 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
v2467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B15" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605560346082932599
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2053 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v664 
values: a1149 a1119 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v664 values: a1149 a1119  <|@  <|@
f <@~|@floating>@ <|@
tid a999 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v664 
values: a1135 a1089 
=== Succesors ===
=== Usages ===
a613 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v664 values: a1135 a1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v663 v666 
=== Succesors ===
next: v1595 
=== Usages ===
a2053 a999 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v663 v666 #next: v1595  <|@  <|@
f <@~|@floating>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 4]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1768 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1768  <|@  <|@
f <@*|@fixed>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1937 
=== Succesors ===
trueSuccessor: v1594 
falseSuccessor: v1592 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1937 #trueSuccessor: v1594 #falseSuccessor: v1592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1593 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1593  <|@  <|@
tid ?665 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1765 a2058 - i2359 - - - - i28 
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a2058 - i2359 - - - - i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1216
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
reason: NullCheckException
speculation: Object[d.a@1122723832]
stamp: void
=== Inputs ===
stateBefore: ?665 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1594 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?665  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605560346082932599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v1592 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B135" "B41" 
    successors "B34" "B146" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4635419071001135499
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a101 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
valueDescription: a -
=== Inputs ===
merge: v7 
values: a2053 a1425 a1201 
=== Succesors ===
=== Usages ===
?11 v2412 v2507 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v7 values: a2053 a1425 a1201  <|@  <|@
f <@~|@floating>@ <|@
tid a613 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v7 
values: a999 a1411 a613 
=== Succesors ===
=== Usages ===
v2415 a613 v2414 v2413 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v7 values: a999 a1411 a613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 99.11647640614552
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v6 
=== Succesors ===
next: v2507 
=== Usages ===
a101 v42 v51 v32 a613 v638 v649 v1738 v1723 v1728 v1609 v1614 v1753 v1663 v1629 v1634 v1733 v1681 v1675 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v6 #next: v2507  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 290
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1765 a1768 - - - a101 - - 
=== Succesors ===
=== Usages ===
v1541 v2061 v2507 i2368 v2508 v2509 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a1768 - - - a101 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
object: a101 
=== Succesors ===
next: i2368 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?11 object: a101 #next: i2368  <|@  <|@
f <@~|@floating>@ <|@
tid v2413 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a613 
index: - 
=== Succesors ===
=== Usages ===
i2368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a613 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v2413 
=== Succesors ===
next: i2369 
=== Usages ===
v1181 v1203 
=== Predecessor ===
v2507 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v2413 #next: i2369  <|@  <|@
f <@~|@floating>@ <|@
tid v2412 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a101 
index: - 
=== Succesors ===
=== Usages ===
i2369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a101 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:291) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2412 
=== Succesors ===
next: v1610 
=== Usages ===
i23 ?750 v113 ?200 
=== Predecessor ===
i2368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2412 #next: v1610  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i2369 
y: i22 
=== Succesors ===
=== Usages ===
v2414 i210 v1181 i2354 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2369 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i23 
y: i2368 
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i23 y: i2368  <|@  <|@
f <@*|@fixed>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1181 
=== Succesors ===
trueSuccessor: v1606 
falseSuccessor: v1609 
=== Usages ===
=== Predecessor ===
i2369 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1181 #trueSuccessor: v1606 #falseSuccessor: v1609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4635419071001135499
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2370 
=== Usages ===
a2370 
=== Predecessor ===
v1610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2370  <|@  <|@
f <@~|@floating>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a613 
index: i23 
=== Succesors ===
=== Usages ===
a2370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a613 index: i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1606 
address: v2414 
=== Succesors ===
next: v172 
=== Usages ===
a1189 v1223 v2425 v2428 v2431 v2449 v2509 v2514 
=== Predecessor ===
v1606 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1606 address: v2414 #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid a1189 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2370 
=== Succesors ===
=== Usages ===
v1406 v169 v1218 ?261 ?2037 ?2038 ?2041 ?2042 ?316 v1368 ?476 ?2049 ?2039 ?2043 ?2040 ?386 v1323 ?2048 ?404 v1332 ?2047 ?422 v1341 ?2046 ?440 v1350 ?2045 ?458 v1359 ?2044 ?2036 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2370  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1189 
y: a1768 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1189 y: a1768  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.08493593479678752
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v170 
falseSuccessor: v171 
=== Usages ===
=== Predecessor ===
a2370 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v170 #falseSuccessor: v171  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B141" 
    xhandlers
    flags 
    probability 4619457526087033470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v170 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634933351772407651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2371 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2408 
=== Succesors ===
next: v178 
=== Usages ===
v2447 v1450 v1451 v1452 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2408 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a2371 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2371  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9609648093772144
=== Inputs ===
condition: v1450 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
a2371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1450 #trueSuccessor: v176 #falseSuccessor: v177  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634729083163585819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1615 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1615  <|@  <|@
f <@~|@floating>@ <|@
tid i2354 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i23 
y: i22 
=== Succesors ===
=== Usages ===
v1203 v2415 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i23 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2354 
y: i2368 
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2354 y: i2368  <|@  <|@
f <@*|@fixed>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1203 
=== Succesors ===
trueSuccessor: v1611 
falseSuccessor: v1614 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1203 #trueSuccessor: v1611 #falseSuccessor: v1614  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634729083163585819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2372 
=== Usages ===
a2372 
=== Predecessor ===
v1615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2372  <|@  <|@
f <@~|@floating>@ <|@
tid v2415 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a613 
index: i2354 
=== Succesors ===
=== Usages ===
a2372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a613 index: i2354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1611 
address: v2415 
=== Succesors ===
next: v1844 
=== Usages ===
a1201 v1213 v2446 
=== Predecessor ===
v1611 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1611 address: v2415 #next: v1844  <|@  <|@
f <@~|@floating>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 52]
stamp: void
=== Inputs ===
value: a2372 
=== Succesors ===
=== Usages ===
v1844 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2372  <|@  <|@
f <@*|@fixed>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1213 
=== Succesors ===
trueSuccessor: v1843 
falseSuccessor: v1842 
=== Usages ===
=== Predecessor ===
a2372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1213 #trueSuccessor: v1843 #falseSuccessor: v1842  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4619731884390133392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1852 
=== Usages ===
=== Predecessor ===
v1844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1852  <|@  <|@
f <@*|@fixed>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2474 
=== Predecessor ===
v1843 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634226216540914226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2373 
=== Usages ===
=== Predecessor ===
v1844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2373  <|@  <|@
f <@~|@floating>@ <|@
tid v2446 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2372 
=== Succesors ===
=== Usages ===
v2373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2446 
=== Succesors ===
next: v2480 
=== Usages ===
v2269 
=== Predecessor ===
v1842 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2446 #next: v2480  <|@  <|@
f <@~|@floating>@ <|@
tid v2269 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2373 
y: v2263 
=== Succesors ===
=== Usages ===
v2480 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2373 y: v2263  <|@  <|@
f <@*|@fixed>@ <|@
tid v2480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9958011670017366
=== Inputs ===
condition: v2269 
=== Succesors ===
trueSuccessor: v2478 
falseSuccessor: v2477 
=== Usages ===
=== Predecessor ===
v2373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2269 #trueSuccessor: v2478 #falseSuccessor: v2477  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634207213464193237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1541 
=== Usages ===
=== Predecessor ===
v2480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v2478 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?11 #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid a1201 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2372 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2372  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1541 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4598536407558479054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2481 
=== Usages ===
=== Predecessor ===
v2480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2481  <|@  <|@
f <@*|@fixed>@ <|@
tid v2481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2474 
=== Predecessor ===
v2477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4620035933617669213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1852 v2481 
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1852 v2481 #next: v649  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4620035933617669213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v2474 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2066 
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2066  <|@  <|@
f <@~|@floating>@ <|@
tid i2067 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305691
stableDimension: 0
stamp: i32 [-305691] ⇊00000000fffb55e5 ⇈00000000fffb55e5
stampKind: i32
value: int[-305691|0xfffffffffffb55e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613719014282316025
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2371 
y: a1443 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2371 y: a1443  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1765 a1768 - i2369 - - - - 
=== Succesors ===
=== Usages ===
?2035 ?285 ?264 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a1768 - i2369 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.7355351947531783
=== Inputs ===
condition: v1452 
=== Succesors ===
trueSuccessor: v186 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1452 #trueSuccessor: v186 #falseSuccessor: v181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611990314831112667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i190 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i190  <|@  <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@43c7bccf
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a1768 a1189 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1768 a1189  <|@  <|@
tid ?2035 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: - - - 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1218 
stateDuring: ?2035 
=== Succesors ===
next: v1032 
=== Usages ===
v1030 
=== Predecessor ===
v186 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1218 stateDuring: ?2035 #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i28 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i190 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
trueSuccessorProbability: 0.9941860553050733
=== Inputs ===
condition: v1030 
=== Succesors ===
trueSuccessor: v1031 
falseSuccessor: v1033 
=== Usages ===
=== Predecessor ===
i190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1030 #trueSuccessor: v1031 #falseSuccessor: v1033  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611962361989488922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1034 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v1031 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B141" 
    xhandlers
    flags 
    probability 4578309549236732251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v1033 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605090017350089849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2371 
y: a1441 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2371 y: a1441  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.003959995166108514
=== Inputs ===
condition: v1451 
=== Succesors ===
trueSuccessor: v182 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1451 #trueSuccessor: v182 #falseSuccessor: v187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569156359392022262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v906  <|@  <|@
f <@*|@fixed>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605062634784208170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2374 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2374  <|@  <|@
f <@~|@floating>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2371 
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2447 
=== Succesors ===
next: v232 
=== Usages ===
v2273 v2271 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2447 #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2271 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2374 
y: v2270 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2374 y: v2270  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a2370 
=== Succesors ===
=== Usages ===
v1959 v1899 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2370  <|@  <|@
f <@~|@floating>@ <|@
tid v2448 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1768 
index: - 
=== Succesors ===
=== Usages ===
v2375 v2396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1768 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=equals target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9987323537885335
=== Inputs ===
condition: v2271 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
v2374 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2271 #trueSuccessor: v225 #falseSuccessor: v231  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=equals target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2375 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2448 
=== Succesors ===
next: v2376 
=== Usages ===
v2437 
=== Predecessor ===
v225 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2448 #next: v2376  <|@  <|@
f <@~|@floating>@ <|@
tid v2437 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2375 
=== Succesors ===
=== Usages ===
v2376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2437 
=== Succesors ===
next: v2320 
=== Usages ===
v1884 
=== Predecessor ===
v2375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2437 #next: v2320  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1884 v1903 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2376 
y: v1876 
=== Succesors ===
=== Usages ===
v2320 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2376 y: v1876  <|@  <|@
f <@*|@fixed>@ <|@
tid v2320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1884 
=== Succesors ===
trueSuccessor: v2319 
falseSuccessor: v1629 
=== Usages ===
=== Predecessor ===
v2376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1884 #trueSuccessor: v2319 #falseSuccessor: v1629  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1899 
=== Usages ===
=== Predecessor ===
v2320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1899  <|@  <|@
f <@*|@fixed>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1223 
=== Succesors ===
trueSuccessor: v1898 
falseSuccessor: v1897 
=== Usages ===
=== Predecessor ===
v2319 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1223 #trueSuccessor: v1898 #falseSuccessor: v1897  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590167368209642788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2184 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2184  <|@  <|@
f <@*|@fixed>@ <|@
tid v2184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
v1898 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604366035535064010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2377 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2377  <|@  <|@
f <@~|@floating>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2370 
=== Succesors ===
=== Usages ===
v2377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2449 
=== Succesors ===
next: v2378 
=== Usages ===
v2438 
=== Predecessor ===
v1897 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2449 #next: v2378  <|@  <|@
f <@~|@floating>@ <|@
tid v2438 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2377 
=== Succesors ===
=== Usages ===
v2378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2438 
=== Succesors ===
next: v2328 
=== Usages ===
v1903 
=== Predecessor ===
v2377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2438 #next: v2328  <|@  <|@
f <@~|@floating>@ <|@
tid v1903 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2378 
y: v1876 
=== Succesors ===
=== Usages ===
v2328 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2378 y: v1876  <|@  <|@
f <@*|@fixed>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1903 
=== Succesors ===
trueSuccessor: v2327 
falseSuccessor: v1634 
=== Usages ===
=== Predecessor ===
v2378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1903 #trueSuccessor: v2327 #falseSuccessor: v1634  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604366035535064010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2193 
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2193  <|@  <|@
f <@*|@fixed>@ <|@
tid v2193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
v2327 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2184 v2193 
=== Succesors ===
next: a2379 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2184 v2193 #next: a2379  <|@  <|@
f <@~|@floating>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1768 
index: - 
=== Succesors ===
=== Usages ===
a2379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1768 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.nodeClass
nodeSourcePosition: at org.graalvm.compiler.graph.Node.getNodeClass(Node.java:717) [bci: 1]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 1]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeClass;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2416 
=== Succesors ===
next: v2508 
=== Usages ===
?2039 v2508 v2417 ?2041 ?2042 ?316 ?2040 ?476 ?2046 ?2043 ?2044 ?2048 ?2045 ?422 ?458 ?2047 ?440 ?386 ?404 ?2036 ?2037 ?2038 
=== Predecessor ===
v2182 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2416 #next: v2508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
object: a2379 
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
a2379 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?11 object: a2379 #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v2417 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2379 
=== Succesors ===
=== Usages ===
a2380 a2389 a2390 a2391 a2392 a2393 a2394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2379  <|@  <|@
tid ?264 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: - - - 
=== Succesors ===
=== Usages ===
?261 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: - - -  <|@  <|@
tid ?261 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<Graph$1.equals(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: Graph.java
sourceLine: 145
stackSize: 0
=== Inputs ===
outerFrameState: ?264 
values: - a1768 a1189 
=== Succesors ===
=== Usages ===
?540 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?264 values: - a1768 a1189  <|@  <|@
tid ?540 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Node.valueEquals(Node)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Node.java
sourceLine: 1304
stackSize: 0
=== Inputs ===
outerFrameState: ?261 
values: - - 
=== Succesors ===
=== Usages ===
?316 ?440 ?2042 ?422 ?2043 ?2046 ?458 ?476 ?386 ?2048 ?2045 ?404 ?2047 ?2044 ?2036 ?2037 ?2038 ?2039 ?2040 ?2041 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?261 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v2508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B65" "B110" "B103" "B100" "B98" "B94" "B90" "B86" "B82" "B78" "B72" 
    successors "B60" "B116" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4607365294794397851
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v314 
values: i28 i516 i2352 i2353 i2349 i2349 i2349 i2349 i2349 i2349 i2350 i2351 
=== Succesors ===
=== Usages ===
?316 v323 v2422 v2429 v1301 i516 v2424 v1253 ?2043 ?2042 v2427 v1317 ?386 v1323 ?2048 v1326 ?404 v1332 ?2047 v1335 ?422 v1341 ?2046 v1344 ?440 v1350 ?2045 v1353 ?458 v1359 ?2044 v1362 ?476 v1368 ?2036 ?2037 ?2038 ?2039 ?2040 ?2041 v2347 v2348 i2349 i2350 i2351 i2352 i2353 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v314 values: i28 i516 i2352 i2353 i2349 i2349 i2349 i2349 i2349 i2349 i2350 i2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.362608117099135
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 11
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v313 
=== Succesors ===
next: a2380 
=== Usages ===
i315 v325 v357 v375 v393 v411 v429 v447 v465 v483 v499 v504 v512 v517 v528 v529 v530 v531 v532 v533 v534 v535 v536 v537 v1722 v1680 v1674 v1662 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v313 #next: a2380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 29]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: a2381 
=== Usages ===
a1234 v2420 v2418 
=== Predecessor ===
v314 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: a2381  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 659
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
v1542 v1543 v1545 v1544 v2123 a2381 i2382 i2384 v2386 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2418 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2380 
=== Succesors ===
=== Usages ===
a2381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.offsets
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: n# [J
=== Inputs ===
stateBefore: ?316 
guard: - 
address: v2418 
=== Succesors ===
next: i2382 
=== Usages ===
a1238 v2419 a2512 a2513 
=== Predecessor ===
a2380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?316 guard: - address: v2418 #next: i2382  <|@  <|@
f <@~|@floating>@ <|@
tid v2419 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2381 
=== Succesors ===
=== Usages ===
i2382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 4]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?316 
guard: - 
address: v2419 
=== Succesors ===
next: v327 
=== Usages ===
v323 v1301 v2347 v2348 
=== Predecessor ===
a2381 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?316 guard: - address: v2419 #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 35]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2382 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i315 y: i2382  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 35]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
i2382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v324 #falseSuccessor: v325  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602861695167027355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 38]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2383 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2383  <|@  <|@
f <@~|@floating>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2380 
=== Succesors ===
=== Usages ===
a2383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2383 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.types
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n# [Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2420 
=== Succesors ===
next: i2384 
=== Usages ===
a1247 v2421 
=== Predecessor ===
v324 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2420 #next: i2384  <|@  <|@
f <@~|@floating>@ <|@
tid v2421 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2383 
=== Succesors ===
=== Usages ===
i2384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?316 
guard: - 
address: v2421 
=== Succesors ===
next: v1664 
=== Usages ===
v1253 
=== Predecessor ===
a2383 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?316 guard: - address: v2421 #next: v1664  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2384 
=== Succesors ===
=== Usages ===
v1664 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i315 y: i2384  <|@  <|@
f <@*|@fixed>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1253 
=== Succesors ===
trueSuccessor: v1659 
falseSuccessor: v1662 
=== Usages ===
=== Predecessor ===
i2384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1253 #trueSuccessor: v1659 #falseSuccessor: v1662  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602861695167027355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2385 
=== Usages ===
a2385 
=== Predecessor ===
v1664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2385  <|@  <|@
f <@~|@floating>@ <|@
tid a1247 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a# [Ljava/lang/Class;
=== Inputs ===
value: a2383 
=== Succesors ===
=== Usages ===
v2422 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2383  <|@  <|@
f <@~|@floating>@ <|@
tid v2422 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1247 
index: i315 
=== Succesors ===
=== Usages ===
a2385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1247 index: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: v1659 
address: v2422 
=== Succesors ===
next: v2386 
=== Usages ===
v2439 v1473 v1459 v1461 v1463 v1465 v1467 v1469 v1471 
=== Predecessor ===
v1659 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1659 address: v2422 #next: v2386  <|@  <|@
f <@~|@floating>@ <|@
tid v2439 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2385 
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class._klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:89) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:661) [bci: 50]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: Klass*
=== Inputs ===
stateBefore: ?316 
guard: - 
address: v2439 
=== Succesors ===
next: v341 
=== Usages ===
v338 
=== Predecessor ===
a2385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?316 guard: - address: v2439 #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:90) [bci: 6]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:661) [bci: 50]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: v2386 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: v2386  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:661) [bci: 53]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v340 
=== Usages ===
=== Predecessor ===
v2386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v339 #falseSuccessor: v340  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 56]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid a1458 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 61]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:int
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:int]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 61]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1458 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1458  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 61]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1459 
=== Succesors ===
trueSuccessor: v344 
falseSuccessor: v345 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1459 #trueSuccessor: v344 #falseSuccessor: v345  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:663) [bci: 64]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1676 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1676  <|@  <|@
f <@~|@floating>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2382 
=== Succesors ===
=== Usages ===
v1676 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i315 y: i2382  <|@  <|@
f <@*|@fixed>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2347 
=== Succesors ===
trueSuccessor: v1671 
falseSuccessor: v1674 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2347 #trueSuccessor: v1671 #falseSuccessor: v1674  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2387 
=== Usages ===
j2387 
=== Predecessor ===
v1676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2387  <|@  <|@
f <@~|@floating>@ <|@
tid a2512 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2381 
=== Succesors ===
=== Usages ===
v2424 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2381  <|@  <|@
f <@~|@floating>@ <|@
tid v2424 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a2512 
index: i315 
=== Succesors ===
=== Usages ===
j2387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2512 index: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1671 
address: v2424 
=== Succesors ===
next: i1274 
=== Usages ===
v2425 v2423 
=== Predecessor ===
v1671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1671 address: v2424 #next: i1274  <|@  <|@
f <@~|@floating>@ <|@
tid v2423 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1768 
index: j2387 
=== Succesors ===
=== Usages ===
i1274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1768 index: j2387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1274 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getInt(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:663) [bci: 70]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2423 
=== Succesors ===
next: i1285 
=== Usages ===
v355 
=== Predecessor ===
j2387 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2423 #next: i1285  <|@  <|@
f <@~|@floating>@ <|@
tid v2425 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2387 
index: a2370 
=== Succesors ===
=== Usages ===
i1285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2387 index: a2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getInt(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2425 
=== Succesors ===
next: v359 
=== Usages ===
v355 
=== Predecessor ===
i1274 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2425 #next: v359  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:665) [bci: 90]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1274 
y: i1285 
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1274 y: i1285  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:665) [bci: 90]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v356 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
i1285 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v356 #falseSuccessor: v357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 95]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1542 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?316 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i315 
y: i22 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:666) [bci: 93]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v751  <|@  <|@
f <@*|@fixed>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v1675 
=== Usages ===
=== Predecessor ===
v1676 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v1675  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2132 
=== Usages ===
=== Predecessor ===
v1674 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2132  <|@  <|@
f <@~|@floating>@ <|@
tid i2133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326939
stableDimension: 0
stamp: i32 [-326939] ⇊00000000fffb02e5 ⇈00000000fffb02e5
stampKind: i32
value: int[-326939|0xfffffffffffb02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2118 
=== Predecessor ===
v1675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B70" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 98]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid a1460 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 103]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:boolean
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:boolean]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 103]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1460 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1460  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 103]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1461 
=== Succesors ===
trueSuccessor: v362 
falseSuccessor: v363 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1461 #trueSuccessor: v362 #falseSuccessor: v363  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 106]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1682 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1682  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2382 
=== Succesors ===
=== Usages ===
v1682 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i315 y: i2382  <|@  <|@
f <@*|@fixed>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1301 
=== Succesors ===
trueSuccessor: v1677 
falseSuccessor: v1680 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1301 #trueSuccessor: v1677 #falseSuccessor: v1680  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2388 
=== Usages ===
j2388 
=== Predecessor ===
v1682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2388  <|@  <|@
f <@~|@floating>@ <|@
tid a1238 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2381 
=== Succesors ===
=== Usages ===
v2427 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2381  <|@  <|@
f <@~|@floating>@ <|@
tid v2427 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1238 
index: i315 
=== Succesors ===
=== Usages ===
j2388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1238 index: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1677 
address: v2427 
=== Succesors ===
next: i1296 
=== Usages ===
v2428 v2426 
=== Predecessor ===
v1677 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1677 address: v2427 #next: i1296  <|@  <|@
f <@~|@floating>@ <|@
tid v2426 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1768 
index: j2388 
=== Succesors ===
=== Usages ===
i1296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1768 index: j2388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v2426 
=== Succesors ===
next: i1310 
=== Usages ===
i1297 
=== Predecessor ===
j2388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2426 #next: i1310  <|@  <|@
f <@~|@floating>@ <|@
tid v2428 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2388 
index: a2370 
=== Succesors ===
=== Usages ===
i1310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2388 index: a2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1310 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v2428 
=== Succesors ===
next: v377 
=== Usages ===
i1311 
=== Predecessor ===
i1296 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2428 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid i1297 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1296 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1296  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1297 
y: i28 
=== Succesors ===
=== Usages ===
i1299 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1297 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1298 
trueValue: i28 
falseValue: i22 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1298 trueValue: i28 falseValue: i22  <|@  <|@
f <@~|@floating>@ <|@
tid i1311 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1310 
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1310  <|@  <|@
f <@~|@floating>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1311 
y: i28 
=== Succesors ===
=== Usages ===
i1313 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1311 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i1313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1312 
trueValue: i28 
falseValue: i22 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1312 trueValue: i28 falseValue: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:671) [bci: 132]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1299 
y: i1313 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1299 y: i1313  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:671) [bci: 132]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v373 
=== Succesors ===
trueSuccessor: v374 
falseSuccessor: v375 
=== Usages ===
=== Predecessor ===
i1310 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v373 #trueSuccessor: v374 #falseSuccessor: v375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 137]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1545 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?316 #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid i2351 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i315 
y: i22 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 10
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1545 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584847296657545371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:672) [bci: 135]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v798  <|@  <|@
f <@*|@fixed>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v1681 
=== Usages ===
=== Predecessor ===
v1682 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v1681  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2134 
=== Usages ===
=== Predecessor ===
v1680 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2134  <|@  <|@
f <@~|@floating>@ <|@
tid i2135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333339
stableDimension: 0
stamp: i32 [-333339] ⇊00000000fffae9e5 ⇈00000000fffae9e5
stampKind: i32
value: int[-333339|0xfffffffffffae9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2118 
=== Predecessor ===
v1681 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 140]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid a1462 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 145]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:long
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:long]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1463 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 145]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1462 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1462  <|@  <|@
f <@~|@floating>@ <|@
tid a1234 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 29]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2380 
=== Succesors ===
=== Usages ===
v1362 v1353 v1344 v1317 v1326 v1335 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2380  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 145]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1463 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1463 #trueSuccessor: v380 #falseSuccessor: v381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 148]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j385 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j385  <|@  <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i64
signature: [Ljdk.vm.ci.meta.JavaType;@73ec9e74
stamp: void
targetMethod: HotSpotMethod<Fields.getLong(Object, int)>
=== Inputs ===
arguments: a1234 a1768 i315 
=== Succesors ===
=== Usages ===
j385 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1234 a1768 i315  <|@  <|@
tid ?2036 <|@
d <@d|@=== Debug Properties ===
bci: 154
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 675
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
j385 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j385 <|@
d <@d|@=== Debug Properties ===
bci: 154
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i64
targetMethod: Direct#Fields.getLong
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1317 
stateDuring: ?2036 
=== Succesors ===
next: a2389 
=== Usages ===
?386 ?2038 v391 
=== Predecessor ===
v380 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1317 stateDuring: ?2036 #next: a2389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 160]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v2501 
=== Usages ===
a1319 v2501 
=== Predecessor ===
j385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v2501  <|@  <|@
tid ?386 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 675
stackSize: 2
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - j385 - 
=== Succesors ===
=== Usages ===
v2501 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - - j385 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?386 
object: a2389 
=== Succesors ===
next: j389 
=== Usages ===
=== Predecessor ===
a2389 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?386 object: a2389 #next: j389  <|@  <|@
f <@~|@floating>@ <|@
tid a1319 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 160]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2389 
=== Succesors ===
=== Usages ===
v1323 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2389  <|@  <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 165]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i64
signature: [Ljdk.vm.ci.meta.JavaType;@2d369bc
stamp: void
targetMethod: HotSpotMethod<Fields.getLong(Object, int)>
=== Inputs ===
arguments: a1319 a1189 i315 
=== Succesors ===
=== Usages ===
j389 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1319 a1189 i315  <|@  <|@
tid ?2038 <|@
d <@d|@=== Debug Properties ===
bci: 165
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 676
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - j385 - - - 
=== Succesors ===
=== Usages ===
j389 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - j385 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j389 <|@
d <@d|@=== Debug Properties ===
bci: 165
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 165]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i64
targetMethod: Direct#Fields.getLong
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1323 
stateDuring: ?2038 
=== Succesors ===
next: v395 
=== Usages ===
v391 
=== Predecessor ===
v2501 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1323 stateDuring: ?2038 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:677) [bci: 175]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j385 
y: j389 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j385 y: j389  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:677) [bci: 175]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v391 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
j389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v391 #trueSuccessor: v392 #falseSuccessor: v393  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 180]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid i2350 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i315 
y: i22 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 9
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580343697030174875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:678) [bci: 178]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v834  <|@  <|@
f <@*|@fixed>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 183]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid a1464 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 188]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:float
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:float]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 188]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1464 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1464  <|@  <|@
f <@~|@floating>@ <|@
tid i2349 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i315 
y: i22 
=== Succesors ===
=== Usages ===
i315 i315 i315 i315 i315 i315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 188]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1465 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v399 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1465 #trueSuccessor: v398 #falseSuccessor: v399  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 191]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: f403 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: f403  <|@  <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: f32
signature: [Ljdk.vm.ci.meta.JavaType;@ef3097b
stamp: void
targetMethod: HotSpotMethod<Fields.getFloat(Object, int)>
=== Inputs ===
arguments: a1234 a1768 i315 
=== Succesors ===
=== Usages ===
f403 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1234 a1768 i315  <|@  <|@
tid ?2037 <|@
d <@d|@=== Debug Properties ===
bci: 197
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 681
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
f403 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f403 <|@
d <@d|@=== Debug Properties ===
bci: 197
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: f32
targetMethod: Direct#Fields.getFloat
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1326 
stateDuring: ?2037 
=== Succesors ===
next: a2390 
=== Usages ===
?404 ?2041 v409 
=== Predecessor ===
v398 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1326 stateDuring: ?2037 #next: a2390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 203]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v2502 
=== Usages ===
a1328 v2502 
=== Predecessor ===
f403 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v2502  <|@  <|@
tid ?404 <|@
d <@d|@=== Debug Properties ===
bci: 200
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 681
stackSize: 1
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - f403 
=== Succesors ===
=== Usages ===
v2502 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - - f403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?404 
object: a2390 
=== Succesors ===
next: f407 
=== Usages ===
=== Predecessor ===
a2390 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?404 object: a2390 #next: f407  <|@  <|@
f <@~|@floating>@ <|@
tid a1328 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 203]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2390 
=== Succesors ===
=== Usages ===
v1332 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2390  <|@  <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: f32
signature: [Ljdk.vm.ci.meta.JavaType;@70acedae
stamp: void
targetMethod: HotSpotMethod<Fields.getFloat(Object, int)>
=== Inputs ===
arguments: a1328 a1189 i315 
=== Succesors ===
=== Usages ===
f407 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1328 a1189 i315  <|@  <|@
tid ?2041 <|@
d <@d|@=== Debug Properties ===
bci: 208
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 682
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - f403 - - - 
=== Succesors ===
=== Usages ===
f407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - f403 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f407 <|@
d <@d|@=== Debug Properties ===
bci: 208
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: f32
targetMethod: Direct#Fields.getFloat
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1332 
stateDuring: ?2041 
=== Succesors ===
next: v413 
=== Usages ===
v409 
=== Predecessor ===
v2502 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1332 stateDuring: ?2041 #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:683) [bci: 218]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: f403 
y: f407 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.FloatEqualsNode>@ x: f403 y: f407  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:683) [bci: 218]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v409 
=== Succesors ===
trueSuccessor: v410 
falseSuccessor: v411 
=== Usages ===
=== Predecessor ===
f407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v409 #trueSuccessor: v410 #falseSuccessor: v411  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 223]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 8
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575840097402804379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:684) [bci: 221]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v870  <|@  <|@
f <@*|@fixed>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B88" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 226]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid a1466 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 231]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:double
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:double]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 231]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1466 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1466  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 231]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1467 
=== Succesors ===
trueSuccessor: v416 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1467 #trueSuccessor: v416 #falseSuccessor: v417  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 234]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: d421 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: d421  <|@  <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: f64
signature: [Ljdk.vm.ci.meta.JavaType;@6724c2f1
stamp: void
targetMethod: HotSpotMethod<Fields.getDouble(Object, int)>
=== Inputs ===
arguments: a1234 a1768 i315 
=== Succesors ===
=== Usages ===
d421 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1234 a1768 i315  <|@  <|@
tid ?2040 <|@
d <@d|@=== Debug Properties ===
bci: 240
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 687
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
d421 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d421 <|@
d <@d|@=== Debug Properties ===
bci: 240
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: f64
targetMethod: Direct#Fields.getDouble
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1335 
stateDuring: ?2040 
=== Succesors ===
next: a2391 
=== Usages ===
?422 ?2043 v427 
=== Predecessor ===
v416 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1335 stateDuring: ?2040 #next: a2391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 246]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v2503 
=== Usages ===
a1337 v2503 
=== Predecessor ===
d421 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v2503  <|@  <|@
tid ?422 <|@
d <@d|@=== Debug Properties ===
bci: 243
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 687
stackSize: 2
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - d421 - 
=== Succesors ===
=== Usages ===
v2503 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - - d421 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?422 
object: a2391 
=== Succesors ===
next: d425 
=== Usages ===
=== Predecessor ===
a2391 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?422 object: a2391 #next: d425  <|@  <|@
f <@~|@floating>@ <|@
tid a1337 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 246]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2391 
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2391  <|@  <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: f64
signature: [Ljdk.vm.ci.meta.JavaType;@7e23c920
stamp: void
targetMethod: HotSpotMethod<Fields.getDouble(Object, int)>
=== Inputs ===
arguments: a1337 a1189 i315 
=== Succesors ===
=== Usages ===
d425 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1337 a1189 i315  <|@  <|@
tid ?2043 <|@
d <@d|@=== Debug Properties ===
bci: 251
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 688
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - d421 - - - 
=== Succesors ===
=== Usages ===
d425 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - d421 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d425 <|@
d <@d|@=== Debug Properties ===
bci: 251
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: f64
targetMethod: Direct#Fields.getDouble
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1341 
stateDuring: ?2043 
=== Succesors ===
next: v431 
=== Usages ===
v427 
=== Predecessor ===
v2503 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1341 stateDuring: ?2043 #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:689) [bci: 261]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d421 
y: d425 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.FloatEqualsNode>@ x: d421 y: d425  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:689) [bci: 261]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
d425 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v428 #falseSuccessor: v429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 266]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 7
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571336497775433883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:690) [bci: 264]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v888  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 269]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid a1468 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 274]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:short
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:short]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 274]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1468 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1468  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 274]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1469 
=== Succesors ===
trueSuccessor: v434 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1469 #trueSuccessor: v434 #falseSuccessor: v435  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 277]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i439 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i439  <|@  <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-32768 - 32767]
signature: [Ljdk.vm.ci.meta.JavaType;@680daf4e
stamp: void
targetMethod: HotSpotMethod<Fields.getShort(Object, int)>
=== Inputs ===
arguments: a1234 a1768 i315 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1234 a1768 i315  <|@  <|@
tid ?2042 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 693
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
bci: 283
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-32768 - 32767]
targetMethod: Direct#Fields.getShort
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1344 
stateDuring: ?2042 
=== Succesors ===
next: a2392 
=== Usages ===
?440 ?2045 v445 
=== Predecessor ===
v434 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1344 stateDuring: ?2042 #next: a2392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 289]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v2504 
=== Usages ===
a1346 v2504 
=== Predecessor ===
i439 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v2504  <|@  <|@
tid ?440 <|@
d <@d|@=== Debug Properties ===
bci: 286
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 693
stackSize: 1
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - i439 
=== Succesors ===
=== Usages ===
v2504 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - - i439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?440 
object: a2392 
=== Succesors ===
next: i443 
=== Usages ===
=== Predecessor ===
a2392 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?440 object: a2392 #next: i443  <|@  <|@
f <@~|@floating>@ <|@
tid a1346 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 289]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2392 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2392  <|@  <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-32768 - 32767]
signature: [Ljdk.vm.ci.meta.JavaType;@7fdbee7c
stamp: void
targetMethod: HotSpotMethod<Fields.getShort(Object, int)>
=== Inputs ===
arguments: a1346 a1189 i315 
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1346 a1189 i315  <|@  <|@
tid ?2045 <|@
d <@d|@=== Debug Properties ===
bci: 294
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 694
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - i439 - - - 
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - i439 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i443 <|@
d <@d|@=== Debug Properties ===
bci: 294
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-32768 - 32767]
targetMethod: Direct#Fields.getShort
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1350 
stateDuring: ?2045 
=== Succesors ===
next: v449 
=== Usages ===
v445 
=== Predecessor ===
v2504 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1350 stateDuring: ?2045 #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:695) [bci: 303]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i439 
y: i443 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i439 y: i443  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:695) [bci: 303]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v445 
=== Succesors ===
trueSuccessor: v446 
falseSuccessor: v447 
=== Usages ===
=== Predecessor ===
i443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v445 #trueSuccessor: v446 #falseSuccessor: v447  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 308]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 6
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566832898148063387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:696) [bci: 306]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v924  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 311]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid a1470 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 316]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:char
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:char]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 316]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1470 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 316]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1471 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1471 #trueSuccessor: v452 #falseSuccessor: v453  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 319]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i457 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i457  <|@  <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 65535] ⇈000000000000ffff
signature: [Ljdk.vm.ci.meta.JavaType;@3e29883c
stamp: void
targetMethod: HotSpotMethod<Fields.getChar(Object, int)>
=== Inputs ===
arguments: a1234 a1768 i315 
=== Succesors ===
=== Usages ===
i457 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1234 a1768 i315  <|@  <|@
tid ?2044 <|@
d <@d|@=== Debug Properties ===
bci: 325
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 699
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
i457 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i457 <|@
d <@d|@=== Debug Properties ===
bci: 325
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 65535] ⇈000000000000ffff
targetMethod: Direct#Fields.getChar
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1353 
stateDuring: ?2044 
=== Succesors ===
next: a2393 
=== Usages ===
?458 ?2047 v463 
=== Predecessor ===
v452 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1353 stateDuring: ?2044 #next: a2393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2393 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 331]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v2505 
=== Usages ===
a1355 v2505 
=== Predecessor ===
i457 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v2505  <|@  <|@
tid ?458 <|@
d <@d|@=== Debug Properties ===
bci: 328
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 699
stackSize: 1
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - i457 
=== Succesors ===
=== Usages ===
v2505 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - - i457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?458 
object: a2393 
=== Succesors ===
next: i461 
=== Usages ===
=== Predecessor ===
a2393 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?458 object: a2393 #next: i461  <|@  <|@
f <@~|@floating>@ <|@
tid a1355 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 331]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2393 
=== Succesors ===
=== Usages ===
v1359 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2393  <|@  <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 65535] ⇈000000000000ffff
signature: [Ljdk.vm.ci.meta.JavaType;@5e232c10
stamp: void
targetMethod: HotSpotMethod<Fields.getChar(Object, int)>
=== Inputs ===
arguments: a1355 a1189 i315 
=== Succesors ===
=== Usages ===
i461 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1355 a1189 i315  <|@  <|@
tid ?2047 <|@
d <@d|@=== Debug Properties ===
bci: 336
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - i457 - - - 
=== Succesors ===
=== Usages ===
i461 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - i457 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
bci: 336
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 65535] ⇈000000000000ffff
targetMethod: Direct#Fields.getChar
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1359 
stateDuring: ?2047 
=== Succesors ===
next: v467 
=== Usages ===
v463 
=== Predecessor ===
v2505 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1359 stateDuring: ?2047 #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:701) [bci: 345]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i457 
y: i461 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i457 y: i461  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:701) [bci: 345]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v463 
=== Succesors ===
trueSuccessor: v464 
falseSuccessor: v465 
=== Usages ===
=== Predecessor ===
i461 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v463 #trueSuccessor: v464 #falseSuccessor: v465  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 350]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 5
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562329298520692891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:702) [bci: 348]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v942  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" "B100" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 353]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid a1472 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 358]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:byte
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:byte]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 358]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1472 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1472  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 358]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1473 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1473 #trueSuccessor: v470 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 361]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i475 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i475  <|@  <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-128 - 127]
signature: [Ljdk.vm.ci.meta.JavaType;@5bd18f45
stamp: void
targetMethod: HotSpotMethod<Fields.getByte(Object, int)>
=== Inputs ===
arguments: a1234 a1768 i315 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1234 a1768 i315  <|@  <|@
tid ?2046 <|@
d <@d|@=== Debug Properties ===
bci: 367
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 705
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
bci: 367
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-128 - 127]
targetMethod: Direct#Fields.getByte
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1362 
stateDuring: ?2046 
=== Succesors ===
next: a2394 
=== Usages ===
?476 ?2048 v481 
=== Predecessor ===
v470 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1362 stateDuring: ?2046 #next: a2394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2394 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 373]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v2506 
=== Usages ===
a1364 v2506 
=== Predecessor ===
i475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v2506  <|@  <|@
tid ?476 <|@
d <@d|@=== Debug Properties ===
bci: 370
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 705
stackSize: 1
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - i475 
=== Succesors ===
=== Usages ===
v2506 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - - i475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?476 
object: a2394 
=== Succesors ===
next: i479 
=== Usages ===
=== Predecessor ===
a2394 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?476 object: a2394 #next: i479  <|@  <|@
f <@~|@floating>@ <|@
tid a1364 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 373]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2394 
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2394  <|@  <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-128 - 127]
signature: [Ljdk.vm.ci.meta.JavaType;@7b59324d
stamp: void
targetMethod: HotSpotMethod<Fields.getByte(Object, int)>
=== Inputs ===
arguments: a1364 a1189 i315 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1364 a1189 i315  <|@  <|@
tid ?2048 <|@
d <@d|@=== Debug Properties ===
bci: 378
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 706
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - i475 - - - 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - i475 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i479 <|@
d <@d|@=== Debug Properties ===
bci: 378
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-128 - 127]
targetMethod: Direct#Fields.getByte
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1368 
stateDuring: ?2048 
=== Succesors ===
next: v485 
=== Usages ===
v481 
=== Predecessor ===
v2506 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1368 stateDuring: ?2048 #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:707) [bci: 387]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i475 
y: i479 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i475 y: i479  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:707) [bci: 387]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v482 
falseSuccessor: v483 
=== Usages ===
=== Predecessor ===
i479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v482 #falseSuccessor: v483  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4557825698893322395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:710) [bci: 392]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557825698893322395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:708) [bci: 390]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v978  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:711) [bci: 395]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1544 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?316 #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1544 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B102" "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 429]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1724 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1724  <|@  <|@
f <@~|@floating>@ <|@
tid v2348 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2382 
=== Succesors ===
=== Usages ===
v1724 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i315 y: i2382  <|@  <|@
f <@*|@fixed>@ <|@
tid v1724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2348 
=== Succesors ===
trueSuccessor: v1719 
falseSuccessor: v1722 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2348 #trueSuccessor: v1719 #falseSuccessor: v1722  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2395 
=== Usages ===
j2395 
=== Predecessor ===
v1724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2395  <|@  <|@
f <@~|@floating>@ <|@
tid a2513 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2381 
=== Succesors ===
=== Usages ===
v2429 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2381  <|@  <|@
f <@~|@floating>@ <|@
tid v2429 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a2513 
index: i315 
=== Succesors ===
=== Usages ===
j2395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2513 index: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1719 
address: v2429 
=== Succesors ===
next: a1379 
=== Usages ===
v2430 v2431 
=== Predecessor ===
v1719 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1719 address: v2429 #next: a1379  <|@  <|@
f <@~|@floating>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1768 
index: j2395 
=== Succesors ===
=== Usages ===
a1379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1768 index: j2395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2430 
=== Succesors ===
next: a1391 
=== Usages ===
a1380 v1479 v1480 
=== Predecessor ===
j2395 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2430 #next: a1391  <|@  <|@
f <@~|@floating>@ <|@
tid v2431 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2395 
index: a2370 
=== Succesors ===
=== Usages ===
a1391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2395 index: a2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:715) [bci: 446]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2431 
=== Succesors ===
next: v497 
=== Usages ===
a1392 v1480 v1482 
=== Predecessor ===
a1379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2431 #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:716) [bci: 455]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1379 
y: a1391 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1379 y: a1391  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:716) [bci: 455]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1480 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v495 
=== Usages ===
=== Predecessor ===
a1391 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1480 #trueSuccessor: v496 #falseSuccessor: v495  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1543 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?316 #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid i2353 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i315 
y: i22 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 458]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 460]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1379 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1379  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 460]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1479 
=== Succesors ===
trueSuccessor: v499 
falseSuccessor: v501 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1479 #trueSuccessor: v499 #falseSuccessor: v501  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:722) [bci: 480]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v780  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 463]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 465]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1391 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1391  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 465]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1482 
=== Succesors ===
trueSuccessor: v504 
falseSuccessor: v506 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1482 #trueSuccessor: v504 #falseSuccessor: v506  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584847296657545371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:722) [bci: 480]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v816  <|@  <|@
f <@*|@fixed>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 468]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i509 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i509  <|@  <|@
f <@~|@floating>@ <|@
tid a1380 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1379 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1379  <|@  <|@
f <@~|@floating>@ <|@
tid a1392 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:715) [bci: 446]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1391 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1391  <|@  <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@9432d72
stamp: void
targetMethod: HotSpotMethod<NodeClass.deepEquals0(Object, Object)>
=== Inputs ===
arguments: a1380 a1392 
=== Succesors ===
=== Usages ===
i509 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1380 a1392  <|@  <|@
tid ?2039 <|@
d <@d|@=== Debug Properties ===
bci: 472
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 718
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
i509 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
bci: 472
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#NodeClass.deepEquals0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1393 
stateDuring: ?2039 
=== Succesors ===
next: v515 
=== Usages ===
v511 
=== Predecessor ===
v506 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1393 stateDuring: ?2039 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 475]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i509 
y: i28 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i509 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 475]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v511 
=== Succesors ===
trueSuccessor: v512 
falseSuccessor: v514 
=== Usages ===
=== Predecessor ===
i509 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v511 #trueSuccessor: v512 #falseSuccessor: v514  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580343697030174875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:719) [bci: 478]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v852  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v512 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid i2352 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i315 
y: i22 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v1723 
=== Usages ===
=== Predecessor ===
v1724 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v1723  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2136 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2136  <|@  <|@
f <@~|@floating>@ <|@
tid i2137 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -351003
stableDimension: 0
stamp: i32 [-351003] ⇊00000000fffaa4e5 ⇈00000000fffaa4e5
stampKind: i32
value: int[-351003|0xfffffffffffaa4e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2118 
=== Predecessor ===
v1723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v1663 
=== Usages ===
=== Predecessor ===
v1664 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v1663  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2128 
=== Usages ===
=== Predecessor ===
v1662 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2128  <|@  <|@
f <@~|@floating>@ <|@
tid i2129 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -321051
stableDimension: 0
stamp: i32 [-321051] ⇊00000000fffb19e5 ⇈00000000fffb19e5
stampKind: i32
value: int[-321051|0xfffffffffffb19e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2118 
=== Predecessor ===
v1663 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B68" "B75" "B112" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2121 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-351003 - -316171] ⇊00000000fffa00e5 ⇈00000000fffbfff5
valueDescription: i32
=== Inputs ===
merge: v2118 
values: i2129 i2133 i2135 i2137 
=== Succesors ===
=== Usages ===
v2123 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2118 values: i2129 i2133 i2135 i2137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2128 v2132 v2134 v2136 
=== Succesors ===
next: v2123 
=== Usages ===
i2121 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2128 v2132 v2134 v2136 #next: v2123  <|@  <|@
f <@*|@fixed>@ <|@
tid v2123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
actionAndReason: i2121 
speculation: a2058 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2118 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?316 actionAndReason: i2121 speculation: a2058  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B141" 
    xhandlers
    flags 
    probability 4602861695167027355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:727) [bci: 488]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2074 
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2074  <|@  <|@
f <@~|@floating>@ <|@
tid i2075 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -313635
stableDimension: 0
stamp: i32 [-313635] ⇊00000000fffb36dd ⇈00000000fffb36dd
stampKind: i32
value: int[-313635|0xfffffffffffb36dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2074 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2072 
=== Usages ===
=== Predecessor ===
v2320 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2072  <|@  <|@
f <@~|@floating>@ <|@
tid i2073 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -312611
stableDimension: 0
stamp: i32 [-312611] ⇊00000000fffb3add ⇈00000000fffb3add
stampKind: i32
value: int[-312611|0xfffffffffffb3add]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2072 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B120" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1729 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1729  <|@  <|@
f <@~|@floating>@ <|@
tid v2272 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2273 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2374 
y: v2272 
=== Succesors ===
=== Usages ===
v1729 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2374 y: v2272  <|@  <|@
f <@*|@fixed>@ <|@
tid v1729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; target_method=equals target_method_class=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2273 
=== Succesors ===
trueSuccessor: v1725 
falseSuccessor: v1728 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2273 #trueSuccessor: v1725 #falseSuccessor: v1728  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; target_method=equals target_method_class=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2396 
=== Usages ===
=== Predecessor ===
v1729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2448 
=== Succesors ===
next: v2397 
=== Usages ===
v2440 
=== Predecessor ===
v1725 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2448 #next: v2397  <|@  <|@
f <@~|@floating>@ <|@
tid v2440 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2396 
=== Succesors ===
=== Usages ===
v2397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2440 
=== Succesors ===
next: v2336 
=== Usages ===
v1944 
=== Predecessor ===
v2396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2440 #next: v2336  <|@  <|@
f <@~|@floating>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1944 v1963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2397 
y: v1936 
=== Succesors ===
=== Usages ===
v2336 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2397 y: v1936  <|@  <|@
f <@*|@fixed>@ <|@
tid v2336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1944 
=== Succesors ===
trueSuccessor: v2335 
falseSuccessor: v1733 
=== Usages ===
=== Predecessor ===
v2397 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1944 #trueSuccessor: v2335 #falseSuccessor: v1733  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1959 
=== Usages ===
=== Predecessor ===
v2336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1959  <|@  <|@
f <@*|@fixed>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1223 
=== Succesors ===
trueSuccessor: v1958 
falseSuccessor: v1957 
=== Usages ===
=== Predecessor ===
v2335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1223 #trueSuccessor: v1958 #falseSuccessor: v1957  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546780700529023586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2216 
=== Usages ===
=== Predecessor ===
v1959 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2216  <|@  <|@
f <@*|@fixed>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2214 
=== Predecessor ===
v1958 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561185533928580529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2398 
=== Usages ===
=== Predecessor ===
v1959 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2398  <|@  <|@
f <@~|@floating>@ <|@
tid v2514 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2370 
=== Succesors ===
=== Usages ===
v2398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2398 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2514 
=== Succesors ===
next: v2399 
=== Usages ===
v2441 
=== Predecessor ===
v1957 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2514 #next: v2399  <|@  <|@
f <@~|@floating>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2398 
=== Succesors ===
=== Usages ===
v2399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2441 
=== Succesors ===
next: v2344 
=== Usages ===
v1963 
=== Predecessor ===
v2398 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2441 #next: v2344  <|@  <|@
f <@~|@floating>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2399 
y: v1936 
=== Succesors ===
=== Usages ===
v2344 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2399 y: v1936  <|@  <|@
f <@*|@fixed>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1963 
=== Succesors ===
trueSuccessor: v2343 
falseSuccessor: v1738 
=== Usages ===
=== Predecessor ===
v2399 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1963 #trueSuccessor: v2343 #falseSuccessor: v1738  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561185533928580529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2225 
=== Usages ===
=== Predecessor ===
v2344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2225  <|@  <|@
f <@*|@fixed>@ <|@
tid v2225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2214 
=== Predecessor ===
v2343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2216 v2225 
=== Succesors ===
next: v2509 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2216 v2225 #next: v2509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
object: a2370 
=== Succesors ===
next: a276 
=== Usages ===
=== Predecessor ===
v2214 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?11 object: a2370 #next: a276  <|@  <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@4e47d3e6
stamp: void
targetMethod: HotSpotMethod<Reference.get()>
=== Inputs ===
arguments: a1768 
=== Succesors ===
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1768  <|@  <|@
tid ?285 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: - - - 
=== Succesors ===
=== Usages ===
?2050 ?2049 ?300 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: - - -  <|@  <|@
tid ?2049 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<HotSpotGraalMBean$RefEquivalence.equals(Object, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: HotSpotGraalMBean.java
sourceLine: 351
stackSize: 0
=== Inputs ===
outerFrameState: ?285 
values: - - - - a1189 
=== Succesors ===
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?285 values: - - - - a1189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a276 <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Reference.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1403 
stateDuring: ?2049 
=== Succesors ===
next: a279 
=== Usages ===
?2050 v290 v1409 v286 
=== Predecessor ===
v2509 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1403 stateDuring: ?2049 #next: a279  <|@  <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@19bbc6cc
stamp: void
targetMethod: HotSpotMethod<Reference.get()>
=== Inputs ===
arguments: a1189 
=== Succesors ===
=== Usages ===
a279 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1189  <|@  <|@
tid ?2050 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<HotSpotGraalMBean$RefEquivalence.equals(Object, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: HotSpotGraalMBean.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?285 
values: - - - - - a276 
=== Succesors ===
=== Usages ===
a279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?285 values: - - - - - a276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a279 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Reference.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1406 
stateDuring: ?2050 
=== Succesors ===
next: v289 
=== Usages ===
v286 v1409 
=== Predecessor ===
a276 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1406 stateDuring: ?2050 #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 2]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a276 
y: a279 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a276 y: a279  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 2]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.8150490730643403
=== Inputs ===
condition: v286 
=== Succesors ===
trueSuccessor: v287 
falseSuccessor: v288 
=== Usages ===
=== Predecessor ===
a279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v286 #trueSuccessor: v287 #falseSuccessor: v288  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B141" 
    xhandlers
    flags 
    probability 4560426043318885864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 17]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v961  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4550746124525390932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 5]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 6]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a276 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a276  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 6]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.13679245283018868
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v291 
falseSuccessor: v292 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v291 #falseSuccessor: v292  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537859297389370054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 21]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v996 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v996  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549841365493559547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 9]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i295 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i295  <|@  <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 11]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2b4244ec
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a276 a279 
=== Succesors ===
=== Usages ===
i295 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a276 a279  <|@  <|@
tid ?300 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<HotSpotGraalMBean$RefEquivalence.equals(Object, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: HotSpotGraalMBean.java
sourceLine: 351
stackSize: 0
=== Inputs ===
outerFrameState: ?285 
values: - - - - - 
=== Succesors ===
=== Usages ===
?2051 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?285 values: - - - - -  <|@  <|@
tid ?2051 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Objects.equals(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Objects.java
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: ?300 
values: - - 
=== Succesors ===
=== Usages ===
i295 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?300 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 11]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1409 
stateDuring: ?2051 
=== Succesors ===
next: v35 
=== Usages ===
v29 
=== Predecessor ===
v292 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1409 stateDuring: ?2051 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i295 
y: i28 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i295 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
trueSuccessorProbability: 0.9941860553050733
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v692 
=== Usages ===
=== Predecessor ===
i295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v30 #falseSuccessor: v692  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549808171697969393
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B66" "B105" "B73" "B107" "B79" "B109" "B83" "B87" "B51" "B91" "B95" "B99" "B128" "B48" 
    successors "B132" "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612517661500465431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v749 v751 v780 v798 v816 v834 v852 v870 v888 v906 v924 v942 v978 v996 v1034 
=== Succesors ===
next: a2400 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v749 v751 v780 v798 v816 v834 v852 v870 v888 v906 v924 v942 v978 v996 v1034 #next: a2400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2400 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2405 
=== Succesors ===
next: i2401 
=== Usages ===
a1411 v2432 
=== Predecessor ===
v748 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2405 #next: i2401  <|@  <|@
tid ?750 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1765 a1768 - i2369 - - - - i28 
=== Succesors ===
=== Usages ===
v1540 v2143 i2401 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a1768 - i2369 - - - - i28  <|@  <|@
f <@~|@floating>@ <|@
tid v2432 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2400 
=== Succesors ===
=== Usages ===
i2401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?750 
guard: - 
address: v2432 
=== Succesors ===
next: v1754 
=== Usages ===
v1427 
=== Predecessor ===
a2400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?750 guard: - address: v2432 #next: v1754  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i23 
y: i22 
=== Succesors ===
=== Usages ===
v2433 v1427 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i23 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i210 
y: i2401 
=== Succesors ===
=== Usages ===
v1754 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i210 y: i2401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1427 
=== Succesors ===
trueSuccessor: v1750 
falseSuccessor: v1753 
=== Usages ===
=== Predecessor ===
i2401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1427 #trueSuccessor: v1750 #falseSuccessor: v1753  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612517661500465431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2402 
=== Usages ===
a2402 
=== Predecessor ===
v1754 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2402  <|@  <|@
f <@~|@floating>@ <|@
tid a1411 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2400 
=== Succesors ===
=== Usages ===
v2433 a613 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2400  <|@  <|@
f <@~|@floating>@ <|@
tid v2433 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1411 
index: i210 
=== Succesors ===
=== Usages ===
a2402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1411 index: i210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2402 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1750 
address: v2433 
=== Succesors ===
next: v1978 
=== Usages ===
a1425 v1437 v2450 
=== Predecessor ===
v1750 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1750 address: v2433 #next: v1978  <|@  <|@
f <@~|@floating>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 52]
stamp: void
=== Inputs ===
value: a2402 
=== Succesors ===
=== Usages ===
v1978 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2402  <|@  <|@
f <@*|@fixed>@ <|@
tid v1978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1437 
=== Succesors ===
trueSuccessor: v1977 
falseSuccessor: v1976 
=== Usages ===
=== Predecessor ===
a2402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1437 #trueSuccessor: v1977 #falseSuccessor: v1976  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4597704408611252259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1986 
=== Usages ===
=== Predecessor ===
v1978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1986  <|@  <|@
f <@*|@fixed>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2451 
=== Predecessor ===
v1977 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611984137230420629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2403 
=== Usages ===
=== Predecessor ===
v1978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2403  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2402 
=== Succesors ===
=== Usages ===
v2403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2450 
=== Succesors ===
next: v2457 
=== Usages ===
v2274 
=== Predecessor ===
v1976 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2450 #next: v2457  <|@  <|@
f <@~|@floating>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2403 
y: v2263 
=== Succesors ===
=== Usages ===
v2457 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2403 y: v2263  <|@  <|@
f <@*|@fixed>@ <|@
tid v2457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9958011670017366
=== Inputs ===
condition: v2274 
=== Succesors ===
trueSuccessor: v2455 
falseSuccessor: v2454 
=== Usages ===
=== Predecessor ===
v2403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2274 #trueSuccessor: v2455 #falseSuccessor: v2454  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611963975616626682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1540 
=== Usages ===
=== Predecessor ===
v2457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?750 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v2455 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?750 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid a1425 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2402 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2402  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4576314994912303768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2458 
=== Usages ===
=== Predecessor ===
v2457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2458  <|@  <|@
f <@*|@fixed>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2451 
=== Predecessor ===
v2454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" "B136" 
    successors "B138" 
    xhandlers
    flags 
    probability 4598026994431955404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1986 v2458 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1986 v2458 #next: v42  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors 
    xhandlers
    flags 
    probability 4598026994431955404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v2451 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2143 
=== Usages ===
=== Predecessor ===
v1754 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2143  <|@  <|@
f <@~|@floating>@ <|@
tid i2145 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -363035
stableDimension: 0
stamp: i32 [-363035] ⇊00000000fffa75e5 ⇈00000000fffa75e5
stampKind: i32
value: int[-363035|0xfffffffffffa75e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?750 
actionAndReason: i2145 
speculation: a2058 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1753 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?750 actionAndReason: i2145 speculation: a2058  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B141" 
    xhandlers
    flags 
    probability 4516600838668945907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v692 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B35" "B116" "B126" "B49" 
    successors "B142" 
    xhandlers
    flags 
    probability 4620058202477958767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v694 v696 v746 v961 v1035 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v694 v696 v746 v961 v1035 #next: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors 
    xhandlers
    flags 
    probability 4620058202477958767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i2369 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i2369 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2082 
=== Usages ===
=== Predecessor ===
v2344 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2082  <|@  <|@
f <@~|@floating>@ <|@
tid i2083 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -358435
stableDimension: 0
stamp: i32 [-358435] ⇊00000000fffa87dd ⇈00000000fffa87dd
stampKind: i32
value: int[-358435|0xfffffffffffa87dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2082 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1738 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2080 
=== Usages ===
=== Predecessor ===
v2336 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2080  <|@  <|@
f <@~|@floating>@ <|@
tid i2081 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -357667
stableDimension: 0
stamp: i32 [-357667] ⇊00000000fffa8add ⇈00000000fffa8add
stampKind: i32
value: int[-357667|0xfffffffffffa8add]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2080 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; target_method=equals target_method_class=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2078 
=== Usages ===
=== Predecessor ===
v1729 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2078  <|@  <|@
f <@~|@floating>@ <|@
tid i2079 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -356915
stableDimension: 0
stamp: i32 [-356915] ⇊00000000fffa8dcd ⇈00000000fffa8dcd
stampKind: i32
value: int[-356915|0xfffffffffffa8dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1728 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2064 
=== Usages ===
=== Predecessor ===
v1610 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2064  <|@  <|@
f <@~|@floating>@ <|@
tid i2065 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302619
stableDimension: 0
stamp: i32 [-302619] ⇊00000000fffb61e5 ⇈00000000fffb61e5
stampKind: i32
value: int[-302619|0xfffffffffffb61e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" "B45" "B118" "B117" "B145" "B144" "B143" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2059 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-359435 - -300043] ⇊00000000fffa00c5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2055 
values: i2065 i2067 i2073 i2075 i2079 i2081 i2083 
=== Succesors ===
=== Usages ===
v2061 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2055 values: i2065 i2067 i2073 i2075 i2079 i2081 i2083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2064 v2066 v2072 v2074 v2078 v2080 v2082 
=== Succesors ===
next: v2061 
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2064 v2066 v2072 v2074 v2078 v2080 v2082 #next: v2061  <|@  <|@
f <@*|@fixed>@ <|@
tid v2061 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
actionAndReason: i2059 
speculation: a2058 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2055 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?11 actionAndReason: i2059 speculation: a2058  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4549083092821127112
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2498 
=== Usages ===
=== Predecessor ===
v2469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2498  <|@  <|@
f <@*|@fixed>@ <|@
tid v2498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2466 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2113 
=== Usages ===
=== Predecessor ===
v1587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2113  <|@  <|@
f <@~|@floating>@ <|@
tid i2115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -292379
stableDimension: 0
stamp: i32 [-292379] ⇊00000000fffb89e5 ⇈00000000fffb89e5
stampKind: i32
value: int[-292379|0xfffffffffffb89e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?70 
actionAndReason: i2115 
speculation: a2058 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1586 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?70 actionAndReason: i2115 speculation: a2058  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4551785757826680500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i2359 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i2359 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2100 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2100  <|@  <|@
f <@~|@floating>@ <|@
tid i2101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -280603
stableDimension: 0
stamp: i32 [-280603] ⇊00000000fffbb7e5 ⇈00000000fffbb7e5
stampKind: i32
value: int[-280603|0xfffffffffffbb7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2090 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 59]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2227 
=== Usages ===
=== Predecessor ===
v1799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2227  <|@  <|@
f <@*|@fixed>@ <|@
tid v2227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
v1798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2228 
=== Usages ===
=== Predecessor ===
v2312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2228  <|@  <|@
f <@~|@floating>@ <|@
tid a2089 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1669091861
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1669091861]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2091 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2088 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -276284
stableDimension: 0
stamp: i32 [-276284] ⇊00000000fffbc8c4 ⇈00000000fffbc8c4
stampKind: i32
value: int[-276284|0xfffffffffffbc8c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2090 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
v2158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B5" "B151" "B17" "B152" "B153" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2090 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-297995 - -276284] ⇊00000000fffb00c4 ⇈00000000fffbfff5
valueDescription: i32
=== Inputs ===
merge: v2086 
values: i2096 i2101 i2105 i2096 i2088 
=== Succesors ===
=== Usages ===
v2092 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2086 values: i2096 i2101 i2105 i2096 i2088  <|@  <|@
f <@~|@floating>@ <|@
tid a2091 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
valueDescription: a -
=== Inputs ===
merge: v2086 
values: a2097 a2058 a2058 a2097 a2089 
=== Succesors ===
=== Usages ===
v2092 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2086 values: a2097 a2058 a2058 a2097 a2089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2086 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2095 v2100 v2104 v2227 v2228 
=== Succesors ===
next: v2092 
=== Usages ===
i2090 a2091 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2095 v2100 v2104 v2227 v2228 #next: v2092  <|@  <|@
f <@*|@fixed>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
actionAndReason: i2090 
speculation: a2091 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2086 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?60 actionAndReason: i2090 speculation: a2091  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1765 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1765  <|@  <|@
f <@~|@floating>@ <|@
tid j1761 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1762 v2434 v2435 v2436 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2434 <|@
result [v0|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j1761 
index: - 
=== Succesors ===
=== Usages ===
a1765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1761 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1765 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2434 
=== Succesors ===
next: a1768 
=== Usages ===
v2443 ?60 ?11 v1790 ?750 v2408 v2405 ?151 ?70 ?200 ?665 
=== Predecessor ===
v1760 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2434 #next: a1768  <|@  <|@
f <@~|@floating>@ <|@
tid v2435 <|@
result [v0|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j1761 
index: - 
=== Succesors ===
=== Usages ===
a1768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1761 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1768 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2435 
=== Succesors ===
next: a1770 
=== Usages ===
?60 ?151 ?70 v1170 v1166 ?750 ?11 v1403 v1218 ?200 v118 v169 ?261 ?2039 v2448 ?2041 v1937 ?2040 v2416 ?2042 ?316 ?476 v2423 v1362 v2430 v2426 ?2043 v1317 ?386 ?2048 v1326 ?404 ?2047 v1335 ?422 ?2046 v1344 ?440 ?2045 v1353 ?458 ?2044 ?2036 ?2037 ?2038 v2511 
=== Predecessor ===
a1765 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2435 #next: a1770  <|@  <|@
f <@~|@floating>@ <|@
tid v2436 <|@
result [v0|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1761 
index: - 
=== Succesors ===
=== Usages ===
a1770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1761 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1770 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2436 
=== Succesors ===
next: v1762 
=== Usages ===
v1772 ?60 v2404 v2442 v2510 
=== Predecessor ===
a1768 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2436 #next: v1762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: OSR_migration_end(long)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1761 
=== Succesors ===
next: v1775 
=== Usages ===
=== Predecessor ===
a1770 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1761 #next: v1775  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 290
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1765 a1768 - - - a1770 - - 
=== Succesors ===
=== Usages ===
v2092 v2510 i2358 v2511 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a1768 - - - a1770 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
value: a1770 
=== Succesors ===
=== Usages ===
v1775 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1770  <|@  <|@
f <@~|@floating>@ <|@
tid v2263 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2264 v2267 v2268 v2269 v2274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1772 
=== Succesors ===
trueSuccessor: v1774 
falseSuccessor: v1773 
=== Usages ===
=== Predecessor ===
v1762 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1772 #trueSuccessor: v1774 #falseSuccessor: v1773  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5fbbff59 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2153 
=== Usages ===
=== Predecessor ===
v1775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2153  <|@  <|@
f <@*|@fixed>@ <|@
tid v2153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2151 
=== Predecessor ===
v1774 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B153" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2355 
=== Usages ===
=== Predecessor ===
v1775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2355  <|@  <|@
f <@~|@floating>@ <|@
tid v2442 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1770 
index: - 
=== Succesors ===
=== Usages ===
v2355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2355 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2442 
=== Succesors ===
next: v2312 
=== Usages ===
v2264 
=== Predecessor ===
v1773 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2442 #next: v2312  <|@  <|@
f <@~|@floating>@ <|@
tid v2264 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2355 
y: v2263 
=== Succesors ===
=== Usages ===
v2312 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2355 y: v2263  <|@  <|@
f <@*|@fixed>@ <|@
tid v2312 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2264 
=== Succesors ===
trueSuccessor: v2311 
falseSuccessor: v2158 
=== Usages ===
=== Predecessor ===
v2355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2264 #trueSuccessor: v2311 #falseSuccessor: v2158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2161 
=== Usages ===
=== Predecessor ===
v2312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2161  <|@  <|@
f <@*|@fixed>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2151 
=== Predecessor ===
v2311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2153 v2161 
=== Succesors ===
next: v1793 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2153 v2161 #next: v1793  <|@  <|@
f <@~|@floating>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
value: a1765 
=== Succesors ===
=== Usages ===
v1793 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1765  <|@  <|@
f <@~|@floating>@ <|@
tid a2097 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2091 a2091 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2096 <|@
result int[-276540|0xfffffffffffbc7c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -276540
stableDimension: 0
stamp: i32 [-276540] ⇊00000000fffbc7c4 ⇈00000000fffbc7c4
stampKind: i32
value: int[-276540|0xfffffffffffbc7c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2090 i2090 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1790 
=== Succesors ===
trueSuccessor: v1792 
falseSuccessor: v1791 
=== Usages ===
=== Predecessor ===
v2151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1790 #trueSuccessor: v1792 #falseSuccessor: v1791  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2095 
=== Usages ===
=== Predecessor ===
v1793 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2095  <|@  <|@
f <@*|@fixed>@ <|@
tid v2095 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
v1792 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-276540|0xfffffffffffbc7c4], v4|QWORD[.]] destination: B5 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2356 
=== Usages ===
=== Predecessor ===
v1793 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2356  <|@  <|@
f <@~|@floating>@ <|@
tid v2443 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1765 
index: - 
=== Succesors ===
=== Usages ===
v2356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1765 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2356 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2443 
=== Succesors ===
next: v1799 
=== Usages ===
v2266 
=== Predecessor ===
v1791 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2443 #next: v1799  <|@  <|@
f <@~|@floating>@ <|@
tid v2265 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2266 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2356 
y: v2265 
=== Succesors ===
=== Usages ===
v1799 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2356 y: v2265  <|@  <|@
f <@*|@fixed>@ <|@
tid v1799 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2266 
=== Succesors ===
trueSuccessor: v1797 
falseSuccessor: v1798 
=== Usages ===
=== Predecessor ===
v2356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2266 #trueSuccessor: v1797 #falseSuccessor: v1798  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B151" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:147) [bci: 69]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2510 
=== Usages ===
=== Predecessor ===
v1799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
object: a1770 
=== Succesors ===
next: a2357 
=== Usages ===
=== Predecessor ===
v1797 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?60 object: a1770 #next: a2357  <|@  <|@
f <@~|@floating>@ <|@
tid v2405 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1765 
index: - 
=== Succesors ===
=== Usages ===
a2357 a2364 a2400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1765 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2357 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2405 
=== Succesors ===
next: i2358 
=== Usages ===
a1089 v2406 
=== Predecessor ===
v2510 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2405 #next: i2358  <|@  <|@
f <@~|@floating>@ <|@
tid v2406 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2357 
=== Succesors ===
=== Usages ===
i2358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2358 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?60 
guard: - 
address: v2406 
=== Succesors ===
next: i2359 
=== Usages ===
v1095 v1121 
=== Predecessor ===
a2357 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?60 guard: - address: v2406 #next: i2359  <|@  <|@
f <@~|@floating>@ <|@
tid v2404 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1770 
index: - 
=== Succesors ===
=== Usages ===
i2359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2359 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:291) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2404 
=== Succesors ===
next: v1567 
=== Usages ===
i66 ?70 ?151 v114 ?665 v724 
=== Predecessor ===
i2358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2404 #next: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 i66 i516 i210 i161 i2353 i2354 i2352 i1299 i1313 i2351 i2349 i2350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i2359 
y: i22 
=== Succesors ===
=== Usages ===
v2407 i161 v1095 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2359 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i2358 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i66 y: i2358  <|@  <|@
f <@~|@floating>@ <|@
tid a2058 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2061 v2143 v2113 v2123 a2091 a2091 ?665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1095 
=== Succesors ===
trueSuccessor: v1564 
falseSuccessor: v1566 
=== Usages ===
=== Predecessor ===
i2359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1095 #trueSuccessor: v1564 #falseSuccessor: v1566  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v3|QWORD[.]] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2360 
=== Usages ===
a2360 
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2360  <|@  <|@
f <@~|@floating>@ <|@
tid a1089 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2357 
=== Succesors ===
=== Usages ===
v2409 a999 v2407 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2357  <|@  <|@
f <@~|@floating>@ <|@
tid v2407 <|@
result [v9|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1089 
index: i66 
=== Succesors ===
=== Usages ===
a2360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1089 index: i66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2360 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1564 
address: v2407 
=== Succesors ===
next: v121 
=== Usages ===
a1105 
=== Predecessor ===
v1564 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1564 address: v2407 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid a1105 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2360 
=== Succesors ===
=== Usages ===
v1170 v118 v1166 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2360  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1105 
y: a1768 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1105 y: a1768  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.08493593479678752
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
a2360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD[.], y: v11|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08493593479678752 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4590784699771983760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v724  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i2359 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i2359 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B18" 
    xhandlers
    flags 
    probability 4606417383911415054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2361 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2361  <|@  <|@
f <@~|@floating>@ <|@
tid v2408 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1765 
index: - 
=== Succesors ===
=== Usages ===
a2361 a2371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1765 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2361 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2408 
=== Succesors ===
next: v127 
=== Usages ===
a1109 v1167 v1442 v1444 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2408 #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a2361 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2361  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i66 
y: i22 
=== Succesors ===
=== Usages ===
v2411 v1151 v2409 v1121 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i66 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 v71 ?70 ?665 ?750 v1030 v1298 i315 v511 i1299 v1312 i1313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1441 <|@
result NarrowOop[Equivalence$3@1213634123] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1442 v1451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1443 <|@
result NarrowOop[Equivalence$1@1642007824] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 v1452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 60]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2498 v115 v656 v2500 v2497 v2499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9609648093772144
=== Inputs ===
condition: v1167 
=== Succesors ===
trueSuccessor: v125 
falseSuccessor: v126 
=== Usages ===
=== Predecessor ===
a2361 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1167 #trueSuccessor: v125 #falseSuccessor: v126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD[.], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9609648093772144 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B17" 
    xhandlers
    flags 
    probability 4606095649454238501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1571 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1571  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i2358 
=== Succesors ===
=== Usages ===
v1571 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i161 y: i2358  <|@  <|@
f <@*|@fixed>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1121 
=== Succesors ===
trueSuccessor: v1568 
falseSuccessor: v1570 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1121 #trueSuccessor: v1568 #falseSuccessor: v1570  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4606095649454238501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2362 
=== Usages ===
a2362 
=== Predecessor ===
v1571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2362  <|@  <|@
f <@~|@floating>@ <|@
tid v2409 <|@
result [v9|QWORD[.] + v13|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1089 
index: i161 
=== Succesors ===
=== Usages ===
a2362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1089 index: i161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2362 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1568 
address: v2409 
=== Succesors ===
next: v1810 
=== Usages ===
a1119 v1131 v2444 
=== Predecessor ===
v1568 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1568 address: v2409 #next: v1810  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 52]
stamp: void
=== Inputs ===
value: a2362 
=== Succesors ===
=== Usages ===
v1810 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2362  <|@  <|@
f <@*|@fixed>@ <|@
tid v1810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1131 
=== Succesors ===
trueSuccessor: v1809 
falseSuccessor: v1808 
=== Usages ===
=== Predecessor ===
a2362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1131 #trueSuccessor: v1809 #falseSuccessor: v1808  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v9|QWORD[.] + v13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4591000764590334595
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2499 
=== Usages ===
=== Predecessor ===
v1810 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2499  <|@  <|@
f <@*|@fixed>@ <|@
tid v2499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1809 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605303606463342293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2363 
=== Usages ===
=== Predecessor ===
v1810 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2363  <|@  <|@
f <@~|@floating>@ <|@
tid v2444 <|@
result [v14|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2362 
=== Succesors ===
=== Usages ===
v2363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2363 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2444 
=== Succesors ===
next: v2490 
=== Usages ===
v2267 
=== Predecessor ===
v1808 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2444 #next: v2490  <|@  <|@
f <@~|@floating>@ <|@
tid v2267 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2363 
y: v2263 
=== Succesors ===
=== Usages ===
v2490 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2363 y: v2263  <|@  <|@
f <@*|@fixed>@ <|@
tid v2490 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9958011670017366
=== Inputs ===
condition: v2267 
=== Succesors ===
trueSuccessor: v2488 
falseSuccessor: v2487 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2267 #trueSuccessor: v2488 #falseSuccessor: v2487  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v14|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4605273675557126329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v2490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid a1119 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2362 
=== Succesors ===
=== Usages ===
a2053 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2362  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
v2488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.], v9|QWORD[.]] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4569808734517599273
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2500 
=== Usages ===
=== Predecessor ===
v2490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2500  <|@  <|@
f <@*|@fixed>@ <|@
tid v2500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2487 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2104 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2104  <|@  <|@
f <@~|@floating>@ <|@
tid i2105 <|@
result int[-284699|0xfffffffffffba7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284699
stableDimension: 0
stamp: i32 [-284699] ⇊00000000fffba7e5 ⇈00000000fffba7e5
stampKind: i32
value: int[-284699|0xfffffffffffba7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2090 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
v1570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284699|0xfffffffffffba7e5], Object[null]] destination: B17 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4585308572350619273
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2361 
y: a1443 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2361 y: a1443  <|@  <|@
tid ?151 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1765 a1768 - i2359 - - - - 
=== Succesors ===
=== Usages ===
?2034 ?2033 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a1768 - i2359 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.7355351947531783
=== Inputs ===
condition: v1444 
=== Succesors ===
trueSuccessor: v137 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1444 #trueSuccessor: v137 #falseSuccessor: v131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7355351947531783 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4583229925940205174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2511 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
object: a1768 
=== Succesors ===
next: i141 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?60 object: a1768 #next: i141  <|@  <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6472b792
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a1768 a1105 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1768 a1105  <|@  <|@
tid ?2033 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - - - 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i141 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1166 
stateDuring: ?2033 
=== Succesors ===
next: v155 
=== Usages ===
i154 
=== Predecessor ===
v2511 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1166 stateDuring: ?2033 #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
i141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v2|QWORD[.]] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4576599217976790328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2361 
y: a1441 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2361 y: a1441  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.003959995166108514
=== Inputs ===
condition: v1442 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1442 #trueSuccessor: v132 #falseSuccessor: v138  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.003959995166108514 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4540645345622683902
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2462 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576577653442178631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i146 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i146  <|@  <|@
f <@~|@floating>@ <|@
tid a1109 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a2361 
=== Succesors ===
=== Usages ===
v1170 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2361  <|@  <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@5a0ac4d1
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a1109 a1768 a1105 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1109 a1768 a1105  <|@  <|@
tid ?2034 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - - - 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i146 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1170 
stateDuring: ?2034 
=== Succesors ===
next: v156 
=== Usages ===
i154 
=== Predecessor ===
v138 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1170 stateDuring: ?2034 #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
i146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" 
    successors "B24" "B150" 
    xhandlers
    flags 
    probability 4585303181216966349
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i154 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v152 
values: i141 i146 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v152 values: i141 i146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v155 v156 
=== Succesors ===
next: v74 
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v155 v156 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i28 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i154 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
trueSuccessorProbability: 0.9941860553050733
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v72 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4585273283819271622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2463 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2463  <|@  <|@
f <@*|@fixed>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2462 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B21" 
    successors "B26" "B149" 
    xhandlers
    flags 
    probability 4585278674952924546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2463 v158 
=== Succesors ===
next: a2364 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2463 v158 #next: a2364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2364 <|@
result v20|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2405 
=== Succesors ===
next: i2365 
=== Usages ===
a1135 v2410 
=== Predecessor ===
v2462 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2405 #next: i2365  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1765 a1768 - i2359 - - - - i28 
=== Succesors ===
=== Usages ===
v2113 i2365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a1768 - i2359 - - - - i28  <|@  <|@
f <@~|@floating>@ <|@
tid v2410 <|@
result [v20|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2364 
=== Succesors ===
=== Usages ===
i2365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2365 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?70 
guard: - 
address: v2410 
=== Succesors ===
next: v1587 
=== Usages ===
v1151 
=== Predecessor ===
a2364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?70 guard: - address: v2410 #next: v1587  <|@  <|@
f <@~|@floating>@ <|@
tid v1151 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i2365 
=== Succesors ===
=== Usages ===
v1587 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i161 y: i2365  <|@  <|@
f <@*|@fixed>@ <|@
tid v1587 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1151 
=== Succesors ===
trueSuccessor: v1584 
falseSuccessor: v1586 
=== Usages ===
=== Predecessor ===
i2365 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1151 #trueSuccessor: v1584 #falseSuccessor: v1586  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction CMP (x: v13|DWORD, y: [v20|DWORD[.] * 8 + 12]) size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585278674952924546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2366 
=== Usages ===
a2366 
=== Predecessor ===
v1587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2366  <|@  <|@
f <@~|@floating>@ <|@
tid a1135 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2364 
=== Succesors ===
=== Usages ===
v2411 a999 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2364  <|@  <|@
f <@~|@floating>@ <|@
tid v2411 <|@
result [v21|QWORD[.] + v13|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1135 
index: i161 
=== Succesors ===
=== Usages ===
a2366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1135 index: i161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2366 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1584 
address: v2411 
=== Succesors ===
next: v1827 
=== Usages ===
a1149 v1161 v2445 
=== Predecessor ===
v1584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1584 address: v2411 #next: v1827  <|@  <|@
f <@~|@floating>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 52]
stamp: void
=== Inputs ===
value: a2366 
=== Succesors ===
=== Usages ===
v1827 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1161 
=== Succesors ===
trueSuccessor: v1826 
falseSuccessor: v1825 
=== Usages ===
=== Predecessor ===
a2366 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1161 #trueSuccessor: v1826 #falseSuccessor: v1825  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v21|QWORD[.] + v13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD[.], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4570334988793720629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2497 
=== Usages ===
=== Predecessor ===
v1827 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1826 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B148" 
    xhandlers
    flags 
    probability 4584766889561211535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2367 
=== Usages ===
=== Predecessor ===
v1827 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2367  <|@  <|@
f <@~|@floating>@ <|@
tid v2445 <|@
result [v22|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2366 
=== Succesors ===
=== Usages ===
v2367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2367 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2445 
=== Succesors ===
next: v2469 
=== Usages ===
v2268 
=== Predecessor ===
v1825 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2445 #next: v2469  <|@  <|@
f <@~|@floating>@ <|@
tid v2268 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2367 
y: v2263 
=== Succesors ===
=== Usages ===
v2469 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2367 y: v2263  <|@  <|@
f <@*|@fixed>@ <|@
tid v2469 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9958011670017366
=== Inputs ===
condition: v2268 
=== Succesors ===
trueSuccessor: v2467 
falseSuccessor: v2466 
=== Usages ===
=== Predecessor ===
v2367 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2268 #trueSuccessor: v2467 #falseSuccessor: v2466  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v22|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4584747549448694751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v2469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid a1149 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2366 
=== Succesors ===
=== Usages ===
a2053 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
v2467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.], v21|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B15" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605560346082932599
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2053 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v664 
values: a1149 a1119 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v664 values: a1149 a1119  <|@  <|@
f <@~|@floating>@ <|@
tid a999 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v664 
values: a1135 a1089 
=== Succesors ===
=== Usages ===
a613 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v664 values: a1135 a1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v663 v666 
=== Succesors ===
next: v1595 
=== Usages ===
a2053 a999 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v663 v666 #next: v1595  <|@  <|@
f <@~|@floating>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 4]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1768 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1768  <|@  <|@
f <@*|@fixed>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1937 
=== Succesors ===
trueSuccessor: v1594 
falseSuccessor: v1592 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1937 #trueSuccessor: v1594 #falseSuccessor: v1592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.], v25|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1593 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1593  <|@  <|@
tid ?665 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1765 a2058 - i2359 - - - - i28 
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a2058 - i2359 - - - - i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1216
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
reason: NullCheckException
speculation: Object[d.a@1122723832]
stamp: void
=== Inputs ===
stateBefore: ?665 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1594 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?665  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1122723832] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -311307 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] Object[null] - v7|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605560346082932599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v1592 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.], v25|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B135" "B41" 
    successors "B34" "B146" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4635419071001135499
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a101 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
valueDescription: a -
=== Inputs ===
merge: v7 
values: a2053 a1425 a1201 
=== Succesors ===
=== Usages ===
?11 v2412 v2507 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v7 values: a2053 a1425 a1201  <|@  <|@
f <@~|@floating>@ <|@
tid a613 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v7 
values: a999 a1411 a613 
=== Succesors ===
=== Usages ===
v2415 a613 v2414 v2413 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v7 values: a999 a1411 a613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 99.11647640614552
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v6 
=== Succesors ===
next: v2507 
=== Usages ===
a101 v42 v51 v32 a613 v638 v649 v1738 v1723 v1728 v1609 v1614 v1753 v1663 v1629 v1634 v1733 v1681 v1675 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v6 #next: v2507  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 290
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1765 a1768 - - - a101 - - 
=== Succesors ===
=== Usages ===
v1541 v2061 v2507 i2368 v2508 v2509 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a1768 - - - a101 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
object: a101 
=== Succesors ===
next: i2368 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?11 object: a101 #next: i2368  <|@  <|@
f <@~|@floating>@ <|@
tid v2413 <|@
result [v28|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a613 
index: - 
=== Succesors ===
=== Usages ===
i2368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a613 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2368 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v2413 
=== Succesors ===
next: i2369 
=== Usages ===
v1181 v1203 
=== Predecessor ===
v2507 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v2413 #next: i2369  <|@  <|@
f <@~|@floating>@ <|@
tid v2412 <|@
result [v27|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a101 
index: - 
=== Succesors ===
=== Usages ===
i2369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a101 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2369 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:291) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2412 
=== Succesors ===
next: v1610 
=== Usages ===
i23 ?750 v113 ?200 
=== Predecessor ===
i2368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2412 #next: v1610  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i2369 
y: i22 
=== Succesors ===
=== Usages ===
v2414 i210 v1181 i2354 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2369 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i23 
y: i2368 
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i23 y: i2368  <|@  <|@
f <@*|@fixed>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1181 
=== Succesors ===
trueSuccessor: v1606 
falseSuccessor: v1609 
=== Usages ===
=== Predecessor ===
i2369 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1181 #trueSuccessor: v1606 #falseSuccessor: v1609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.], v28|QWORD[.]] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v27|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v27|QWORD[.]] state [bci:3] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v27|QWORD[.] - - 
>@ <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV [v27|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4635419071001135499
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2370 
=== Usages ===
a2370 
=== Predecessor ===
v1610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2370  <|@  <|@
f <@~|@floating>@ <|@
tid v2414 <|@
result [v28|QWORD[.] + v31|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a613 
index: i23 
=== Succesors ===
=== Usages ===
a2370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a613 index: i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2370 <|@
result v32|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1606 
address: v2414 
=== Succesors ===
next: v172 
=== Usages ===
a1189 v1223 v2425 v2428 v2431 v2449 v2509 v2514 
=== Predecessor ===
v1606 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1606 address: v2414 #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid a1189 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2370 
=== Succesors ===
=== Usages ===
v1406 v169 v1218 ?261 ?2037 ?2038 ?2041 ?2042 ?316 v1368 ?476 ?2049 ?2039 ?2043 ?2040 ?386 v1323 ?2048 ?404 v1332 ?2047 ?422 v1341 ?2046 ?440 v1350 ?2045 ?458 v1359 ?2044 ?2036 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2370  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1189 
y: a1768 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1189 y: a1768  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.08493593479678752
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v170 
falseSuccessor: v171 
=== Usages ===
=== Predecessor ===
a2370 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v170 #falseSuccessor: v171  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD[.], y: v33|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08493593479678752 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B141" 
    xhandlers
    flags 
    probability 4619457526087033470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v170 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634933351772407651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2371 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2371 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2408 
=== Succesors ===
next: v178 
=== Usages ===
v2447 v1450 v1451 v1452 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2408 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a2371 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2371  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9609648093772144
=== Inputs ===
condition: v1450 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
a2371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1450 #trueSuccessor: v176 #falseSuccessor: v177  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9609648093772144 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634729083163585819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1615 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1615  <|@  <|@
f <@~|@floating>@ <|@
tid i2354 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i23 
y: i22 
=== Succesors ===
=== Usages ===
v1203 v2415 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i23 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2354 
y: i2368 
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2354 y: i2368  <|@  <|@
f <@*|@fixed>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1203 
=== Succesors ===
trueSuccessor: v1611 
falseSuccessor: v1614 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1203 #trueSuccessor: v1611 #falseSuccessor: v1614  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634729083163585819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2372 
=== Usages ===
a2372 
=== Predecessor ===
v1615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2372  <|@  <|@
f <@~|@floating>@ <|@
tid v2415 <|@
result [v28|QWORD[.] + v35|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a613 
index: i2354 
=== Succesors ===
=== Usages ===
a2372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a613 index: i2354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2372 <|@
result v36|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1611 
address: v2415 
=== Succesors ===
next: v1844 
=== Usages ===
a1201 v1213 v2446 
=== Predecessor ===
v1611 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1611 address: v2415 #next: v1844  <|@  <|@
f <@~|@floating>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 52]
stamp: void
=== Inputs ===
value: a2372 
=== Succesors ===
=== Usages ===
v1844 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2372  <|@  <|@
f <@*|@fixed>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1213 
=== Succesors ===
trueSuccessor: v1843 
falseSuccessor: v1842 
=== Usages ===
=== Predecessor ===
a2372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1213 #trueSuccessor: v1843 #falseSuccessor: v1842  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v28|QWORD[.] + v35|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD[.], y: v36|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4619731884390133392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1852 
=== Usages ===
=== Predecessor ===
v1844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1852  <|@  <|@
f <@*|@fixed>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2474 
=== Predecessor ===
v1843 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634226216540914226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2373 
=== Usages ===
=== Predecessor ===
v1844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2373  <|@  <|@
f <@~|@floating>@ <|@
tid v2446 <|@
result [v36|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2372 
=== Succesors ===
=== Usages ===
v2373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2373 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2446 
=== Succesors ===
next: v2480 
=== Usages ===
v2269 
=== Predecessor ===
v1842 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2446 #next: v2480  <|@  <|@
f <@~|@floating>@ <|@
tid v2269 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2373 
y: v2263 
=== Succesors ===
=== Usages ===
v2480 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2373 y: v2263  <|@  <|@
f <@*|@fixed>@ <|@
tid v2480 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9958011670017366
=== Inputs ===
condition: v2269 
=== Succesors ===
trueSuccessor: v2478 
falseSuccessor: v2477 
=== Usages ===
=== Predecessor ===
v2373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2269 #trueSuccessor: v2478 #falseSuccessor: v2477  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v36|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634207213464193237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1541 
=== Usages ===
=== Predecessor ===
v2480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v2478 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?11 #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid a1201 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2372 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2372  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1541 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v27|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.], v28|QWORD[.]] destination: B41 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4598536407558479054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2481 
=== Usages ===
=== Predecessor ===
v2480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2481  <|@  <|@
f <@*|@fixed>@ <|@
tid v2481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2474 
=== Predecessor ===
v2477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4620035933617669213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1852 v2481 
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1852 v2481 #next: v649  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4620035933617669213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v2474 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2066 
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2066  <|@  <|@
f <@~|@floating>@ <|@
tid i2067 <|@
result int[-305691|0xfffffffffffb55e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305691
stableDimension: 0
stamp: i32 [-305691] ⇊00000000fffb55e5 ⇈00000000fffb55e5
stampKind: i32
value: int[-305691|0xfffffffffffb55e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305691|0xfffffffffffb55e5]] destination: B45 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613719014282316025
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2371 
y: a1443 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2371 y: a1443  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1765 a1768 - i2369 - - - - 
=== Succesors ===
=== Usages ===
?2035 ?285 ?264 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a1768 - i2369 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.7355351947531783
=== Inputs ===
condition: v1452 
=== Succesors ===
trueSuccessor: v186 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1452 #trueSuccessor: v186 #falseSuccessor: v181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7355351947531783 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611990314831112667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i190 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i190  <|@  <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@43c7bccf
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a1768 a1189 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1768 a1189  <|@  <|@
tid ?2035 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: - - - 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i190 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1218 
stateDuring: ?2035 
=== Succesors ===
next: v1032 
=== Usages ===
v1030 
=== Predecessor ===
v186 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1218 stateDuring: ?2035 #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i28 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i190 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
trueSuccessorProbability: 0.9941860553050733
=== Inputs ===
condition: v1030 
=== Succesors ===
trueSuccessor: v1031 
falseSuccessor: v1033 
=== Usages ===
=== Predecessor ===
i190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1030 #trueSuccessor: v1031 #falseSuccessor: v1033  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611962361989488922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1034 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v1031 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B141" 
    xhandlers
    flags 
    probability 4578309549236732251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v1033 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605090017350089849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2371 
y: a1441 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2371 y: a1441  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.003959995166108514
=== Inputs ===
condition: v1451 
=== Succesors ===
trueSuccessor: v182 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1451 #trueSuccessor: v182 #falseSuccessor: v187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.003959995166108514 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569156359392022262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v906  <|@  <|@
f <@*|@fixed>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605062634784208170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2374 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2374  <|@  <|@
f <@~|@floating>@ <|@
tid v2447 <|@
result [v34|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2371 
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2374 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2447 
=== Succesors ===
next: v232 
=== Usages ===
v2273 v2271 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2447 #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v2270 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2271 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2374 
y: v2270 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2374 y: v2270  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a2370 
=== Succesors ===
=== Usages ===
v1959 v1899 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2370  <|@  <|@
f <@~|@floating>@ <|@
tid v2448 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1768 
index: - 
=== Succesors ===
=== Usages ===
v2375 v2396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1768 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=equals target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9987323537885335
=== Inputs ===
condition: v2271 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
v2374 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2271 #trueSuccessor: v225 #falseSuccessor: v231  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v39|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9987323537885335 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=equals target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2375 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2375 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2448 
=== Succesors ===
next: v2376 
=== Usages ===
v2437 
=== Predecessor ===
v225 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2448 #next: v2376  <|@  <|@
f <@~|@floating>@ <|@
tid v2437 <|@
result [v40|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2375 
=== Succesors ===
=== Usages ===
v2376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2376 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2437 
=== Succesors ===
next: v2320 
=== Usages ===
v1884 
=== Predecessor ===
v2375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2437 #next: v2320  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1884 v1903 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1884 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2376 
y: v1876 
=== Succesors ===
=== Usages ===
v2320 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2376 y: v1876  <|@  <|@
f <@*|@fixed>@ <|@
tid v2320 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1884 
=== Succesors ===
trueSuccessor: v2319 
falseSuccessor: v1629 
=== Usages ===
=== Predecessor ===
v2376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1884 #trueSuccessor: v2319 #falseSuccessor: v1629  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: [v40|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1899 
=== Usages ===
=== Predecessor ===
v2320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1899  <|@  <|@
f <@*|@fixed>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1223 
=== Succesors ===
trueSuccessor: v1898 
falseSuccessor: v1897 
=== Usages ===
=== Predecessor ===
v2319 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1223 #trueSuccessor: v1898 #falseSuccessor: v1897  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD[.], y: v32|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590167368209642788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2184 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2184  <|@  <|@
f <@*|@fixed>@ <|@
tid v2184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
v1898 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604366035535064010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2377 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2377  <|@  <|@
f <@~|@floating>@ <|@
tid v2449 <|@
result [v32|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2370 
=== Succesors ===
=== Usages ===
v2377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2377 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2449 
=== Succesors ===
next: v2378 
=== Usages ===
v2438 
=== Predecessor ===
v1897 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2449 #next: v2378  <|@  <|@
f <@~|@floating>@ <|@
tid v2438 <|@
result [v42|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2377 
=== Succesors ===
=== Usages ===
v2378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2378 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2438 
=== Succesors ===
next: v2328 
=== Usages ===
v1903 
=== Predecessor ===
v2377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2438 #next: v2328  <|@  <|@
f <@~|@floating>@ <|@
tid v1903 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2378 
y: v1876 
=== Succesors ===
=== Usages ===
v2328 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2378 y: v1876  <|@  <|@
f <@*|@fixed>@ <|@
tid v2328 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1903 
=== Succesors ===
trueSuccessor: v2327 
falseSuccessor: v1634 
=== Usages ===
=== Predecessor ===
v2378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1903 #trueSuccessor: v2327 #falseSuccessor: v1634  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v32|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: [v42|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604366035535064010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2193 
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2193  <|@  <|@
f <@*|@fixed>@ <|@
tid v2193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
v2327 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2184 v2193 
=== Succesors ===
next: a2379 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2184 v2193 #next: a2379  <|@  <|@
f <@~|@floating>@ <|@
tid v2416 <|@
result [v2|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1768 
index: - 
=== Succesors ===
=== Usages ===
a2379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1768 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2379 <|@
result v43|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.nodeClass
nodeSourcePosition: at org.graalvm.compiler.graph.Node.getNodeClass(Node.java:717) [bci: 1]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 1]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeClass;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2416 
=== Succesors ===
next: v2508 
=== Usages ===
?2039 v2508 v2417 ?2041 ?2042 ?316 ?2040 ?476 ?2046 ?2043 ?2044 ?2048 ?2045 ?422 ?458 ?2047 ?440 ?386 ?404 ?2036 ?2037 ?2038 
=== Predecessor ===
v2182 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2416 #next: v2508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
object: a2379 
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
a2379 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?11 object: a2379 #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v2417 <|@
result [v43|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2379 
=== Succesors ===
=== Usages ===
a2380 a2389 a2390 a2391 a2392 a2393 a2394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2379  <|@  <|@
tid ?264 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: - - - 
=== Succesors ===
=== Usages ===
?261 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: - - -  <|@  <|@
tid ?261 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<Graph$1.equals(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: Graph.java
sourceLine: 145
stackSize: 0
=== Inputs ===
outerFrameState: ?264 
values: - a1768 a1189 
=== Succesors ===
=== Usages ===
?540 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?264 values: - a1768 a1189  <|@  <|@
tid ?540 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Node.valueEquals(Node)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Node.java
sourceLine: 1304
stackSize: 0
=== Inputs ===
outerFrameState: ?261 
values: - - 
=== Succesors ===
=== Usages ===
?316 ?440 ?2042 ?422 ?2043 ?2046 ?458 ?476 ?386 ?2048 ?2045 ?404 ?2047 ?2044 ?2036 ?2037 ?2038 ?2039 ?2040 ?2041 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?261 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v2508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v27|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v43|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B65" "B110" "B103" "B100" "B98" "B94" "B90" "B86" "B82" "B78" "B72" 
    successors "B60" "B116" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4607365294794397851
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i315 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v314 
values: i28 i516 i2352 i2353 i2349 i2349 i2349 i2349 i2349 i2349 i2350 i2351 
=== Succesors ===
=== Usages ===
?316 v323 v2422 v2429 v1301 i516 v2424 v1253 ?2043 ?2042 v2427 v1317 ?386 v1323 ?2048 v1326 ?404 v1332 ?2047 v1335 ?422 v1341 ?2046 v1344 ?440 v1350 ?2045 v1353 ?458 v1359 ?2044 v1362 ?476 v1368 ?2036 ?2037 ?2038 ?2039 ?2040 ?2041 v2347 v2348 i2349 i2350 i2351 i2352 i2353 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v314 values: i28 i516 i2352 i2353 i2349 i2349 i2349 i2349 i2349 i2349 i2350 i2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.362608117099135
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 11
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v313 
=== Succesors ===
next: a2380 
=== Usages ===
i315 v325 v357 v375 v393 v411 v429 v447 v465 v483 v499 v504 v512 v517 v528 v529 v530 v531 v532 v533 v534 v535 v536 v537 v1722 v1680 v1674 v1662 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v313 #next: a2380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2380 <|@
result v45|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 29]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: a2381 
=== Usages ===
a1234 v2420 v2418 
=== Predecessor ===
v314 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: a2381  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 659
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
v1542 v1543 v1545 v1544 v2123 a2381 i2382 i2384 v2386 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2418 <|@
result [v45|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2380 
=== Succesors ===
=== Usages ===
a2381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2381 <|@
result v46|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.offsets
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: n# [J
=== Inputs ===
stateBefore: ?316 
guard: - 
address: v2418 
=== Succesors ===
next: i2382 
=== Usages ===
a1238 v2419 a2512 a2513 
=== Predecessor ===
a2380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?316 guard: - address: v2418 #next: i2382  <|@  <|@
f <@~|@floating>@ <|@
tid v2419 <|@
result [v46|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2381 
=== Succesors ===
=== Usages ===
i2382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2382 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 4]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?316 
guard: - 
address: v2419 
=== Succesors ===
next: v327 
=== Usages ===
v323 v1301 v2347 v2348 
=== Predecessor ===
a2381 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?316 guard: - address: v2419 #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 35]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2382 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i315 y: i2382  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 35]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
i2382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v324 #falseSuccessor: v325  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v46|DWORD[.] = MOV [v45|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v47|DWORD = MOV [v46|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602861695167027355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 38]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2383 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2383  <|@  <|@
f <@~|@floating>@ <|@
tid v2420 <|@
result [v45|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2380 
=== Succesors ===
=== Usages ===
a2383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2383 <|@
result v48|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.types
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n# [Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2420 
=== Succesors ===
next: i2384 
=== Usages ===
a1247 v2421 
=== Predecessor ===
v324 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2420 #next: i2384  <|@  <|@
f <@~|@floating>@ <|@
tid v2421 <|@
result [v48|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2383 
=== Succesors ===
=== Usages ===
i2384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2384 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?316 
guard: - 
address: v2421 
=== Succesors ===
next: v1664 
=== Usages ===
v1253 
=== Predecessor ===
a2383 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?316 guard: - address: v2421 #next: v1664  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2384 
=== Succesors ===
=== Usages ===
v1664 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i315 y: i2384  <|@  <|@
f <@*|@fixed>@ <|@
tid v1664 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1253 
=== Succesors ===
trueSuccessor: v1659 
falseSuccessor: v1662 
=== Usages ===
=== Predecessor ===
i2384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1253 #trueSuccessor: v1659 #falseSuccessor: v1662  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v45|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMP (x: v44|DWORD, y: [v48|DWORD[.] * 8 + 12]) size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602861695167027355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2385 
=== Usages ===
a2385 
=== Predecessor ===
v1664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2385  <|@  <|@
f <@~|@floating>@ <|@
tid a1247 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a# [Ljava/lang/Class;
=== Inputs ===
value: a2383 
=== Succesors ===
=== Usages ===
v2422 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2383  <|@  <|@
f <@~|@floating>@ <|@
tid v2422 <|@
result [v49|QWORD[.] + v44|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1247 
index: i315 
=== Succesors ===
=== Usages ===
a2385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1247 index: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2385 <|@
result v50|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: v1659 
address: v2422 
=== Succesors ===
next: v2386 
=== Usages ===
v2439 v1473 v1459 v1461 v1463 v1465 v1467 v1469 v1471 
=== Predecessor ===
v1659 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1659 address: v2422 #next: v2386  <|@  <|@
f <@~|@floating>@ <|@
tid v2439 <|@
result [v50|DWORD[.] * 8 + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2385 
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2386 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class._klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:89) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:661) [bci: 50]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: Klass*
=== Inputs ===
stateBefore: ?316 
guard: - 
address: v2439 
=== Succesors ===
next: v341 
=== Usages ===
v338 
=== Predecessor ===
a2385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?316 guard: - address: v2439 #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:90) [bci: 6]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:661) [bci: 50]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: v2386 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: v2386  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:661) [bci: 53]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v340 
=== Usages ===
=== Predecessor ===
v2386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v339 #falseSuccessor: v340  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = MOV [v49|QWORD[.] + v44|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v51|QWORD = MOV [v50|DWORD[.] * 8 + 72] size: QWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 56]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid a1458 <|@
result NarrowOop[Class:int] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 61]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:int
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:int]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 61]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1458 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1458  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 61]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1459 
=== Succesors ===
trueSuccessor: v344 
falseSuccessor: v345 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1459 #trueSuccessor: v344 #falseSuccessor: v345  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:663) [bci: 64]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1676 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1676  <|@  <|@
f <@~|@floating>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2382 
=== Succesors ===
=== Usages ===
v1676 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i315 y: i2382  <|@  <|@
f <@*|@fixed>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2347 
=== Succesors ===
trueSuccessor: v1671 
falseSuccessor: v1674 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2347 #trueSuccessor: v1671 #falseSuccessor: v1674  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2387 
=== Usages ===
j2387 
=== Predecessor ===
v1676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2387  <|@  <|@
f <@~|@floating>@ <|@
tid a2512 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2381 
=== Succesors ===
=== Usages ===
v2424 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2381  <|@  <|@
f <@~|@floating>@ <|@
tid v2424 <|@
result [v52|QWORD[.] + v44|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a2512 
index: i315 
=== Succesors ===
=== Usages ===
j2387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2512 index: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2387 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1671 
address: v2424 
=== Succesors ===
next: i1274 
=== Usages ===
v2425 v2423 
=== Predecessor ===
v1671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1671 address: v2424 #next: i1274  <|@  <|@
f <@~|@floating>@ <|@
tid v2423 <|@
result [v2|QWORD[.] + v53|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1768 
index: j2387 
=== Succesors ===
=== Usages ===
i1274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1768 index: j2387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1274 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getInt(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:663) [bci: 70]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2423 
=== Succesors ===
next: i1285 
=== Usages ===
v355 
=== Predecessor ===
j2387 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2423 #next: i1285  <|@  <|@
f <@~|@floating>@ <|@
tid v2425 <|@
result [v53|QWORD + v32|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2387 
index: a2370 
=== Succesors ===
=== Usages ===
i1285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2387 index: a2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1285 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getInt(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2425 
=== Succesors ===
next: v359 
=== Usages ===
v355 
=== Predecessor ===
i1274 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2425 #next: v359  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:665) [bci: 90]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1274 
y: i1285 
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1274 y: i1285  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:665) [bci: 90]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v356 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
i1285 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v356 #falseSuccessor: v357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v52|QWORD[.] + v44|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOV [v2|QWORD[.] + v53|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: [v53|QWORD + v32|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 95]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1542 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?316 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i315 
y: i22 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD] destination: B65 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:666) [bci: 93]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v751  <|@  <|@
f <@*|@fixed>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v1675 
=== Usages ===
=== Predecessor ===
v1676 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v1675  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2132 
=== Usages ===
=== Predecessor ===
v1674 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2132  <|@  <|@
f <@~|@floating>@ <|@
tid i2133 <|@
result int[-326939|0xfffffffffffb02e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326939
stableDimension: 0
stamp: i32 [-326939] ⇊00000000fffb02e5 ⇈00000000fffb02e5
stampKind: i32
value: int[-326939|0xfffffffffffb02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2118 
=== Predecessor ===
v1675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326939|0xfffffffffffb02e5]] destination: B68 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B70" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 98]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid a1460 <|@
result NarrowOop[Class:boolean] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 103]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:boolean
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:boolean]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 103]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1460 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1460  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 103]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1461 
=== Succesors ===
trueSuccessor: v362 
falseSuccessor: v363 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1461 #trueSuccessor: v362 #falseSuccessor: v363  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 106]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1682 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1682  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2382 
=== Succesors ===
=== Usages ===
v1682 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i315 y: i2382  <|@  <|@
f <@*|@fixed>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1301 
=== Succesors ===
trueSuccessor: v1677 
falseSuccessor: v1680 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1301 #trueSuccessor: v1677 #falseSuccessor: v1680  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2388 
=== Usages ===
j2388 
=== Predecessor ===
v1682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2388  <|@  <|@
f <@~|@floating>@ <|@
tid a1238 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2381 
=== Succesors ===
=== Usages ===
v2427 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2381  <|@  <|@
f <@~|@floating>@ <|@
tid v2427 <|@
result [v56|QWORD[.] + v44|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1238 
index: i315 
=== Succesors ===
=== Usages ===
j2388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1238 index: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2388 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1677 
address: v2427 
=== Succesors ===
next: i1296 
=== Usages ===
v2428 v2426 
=== Predecessor ===
v1677 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1677 address: v2427 #next: i1296  <|@  <|@
f <@~|@floating>@ <|@
tid v2426 <|@
result [v2|QWORD[.] + v57|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1768 
index: j2388 
=== Succesors ===
=== Usages ===
i1296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1768 index: j2388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1296 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v2426 
=== Succesors ===
next: i1310 
=== Usages ===
i1297 
=== Predecessor ===
j2388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2426 #next: i1310  <|@  <|@
f <@~|@floating>@ <|@
tid v2428 <|@
result [v57|QWORD + v32|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2388 
index: a2370 
=== Succesors ===
=== Usages ===
i1310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2388 index: a2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1310 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v2428 
=== Succesors ===
next: v377 
=== Usages ===
i1311 
=== Predecessor ===
i1296 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2428 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid i1297 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1296 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1296  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1297 
y: i28 
=== Succesors ===
=== Usages ===
i1299 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1297 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i1299 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1298 
trueValue: i28 
falseValue: i22 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1298 trueValue: i28 falseValue: i22  <|@  <|@
f <@~|@floating>@ <|@
tid i1311 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1310 
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1310  <|@  <|@
f <@~|@floating>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1311 
y: i28 
=== Succesors ===
=== Usages ===
i1313 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1311 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i1313 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1312 
trueValue: i28 
falseValue: i22 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1312 trueValue: i28 falseValue: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:671) [bci: 132]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1299 
y: i1313 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1299 y: i1313  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:671) [bci: 132]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v373 
=== Succesors ===
trueSuccessor: v374 
falseSuccessor: v375 
=== Usages ===
=== Predecessor ===
i1310 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v373 #trueSuccessor: v374 #falseSuccessor: v375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v56|QWORD[.] + v44|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVSXB [v2|QWORD[.] + v57|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVZXB v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVZXB [v57|QWORD + v32|DWORD[.] * 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v61|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 137]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1545 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?316 #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid i2351 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i315 
y: i22 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 10
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1545 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|DWORD] destination: B72 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584847296657545371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:672) [bci: 135]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v798  <|@  <|@
f <@*|@fixed>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v1681 
=== Usages ===
=== Predecessor ===
v1682 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v1681  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2134 
=== Usages ===
=== Predecessor ===
v1680 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2134  <|@  <|@
f <@~|@floating>@ <|@
tid i2135 <|@
result int[-333339|0xfffffffffffae9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333339
stableDimension: 0
stamp: i32 [-333339] ⇊00000000fffae9e5 ⇈00000000fffae9e5
stampKind: i32
value: int[-333339|0xfffffffffffae9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2118 
=== Predecessor ===
v1681 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333339|0xfffffffffffae9e5]] destination: B75 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 140]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid a1462 <|@
result NarrowOop[Class:long] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 145]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:long
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:long]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1463 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 145]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1462 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1462  <|@  <|@
f <@~|@floating>@ <|@
tid a1234 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 29]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2380 
=== Succesors ===
=== Usages ===
v1362 v1353 v1344 v1317 v1326 v1335 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2380  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 145]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1463 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1463 #trueSuccessor: v380 #falseSuccessor: v381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 148]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j385 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j385  <|@  <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i64
signature: [Ljdk.vm.ci.meta.JavaType;@73ec9e74
stamp: void
targetMethod: HotSpotMethod<Fields.getLong(Object, int)>
=== Inputs ===
arguments: a1234 a1768 i315 
=== Succesors ===
=== Usages ===
j385 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1234 a1768 i315  <|@  <|@
tid ?2036 <|@
d <@d|@=== Debug Properties ===
bci: 154
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 675
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
j385 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j385 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
bci: 154
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i64
targetMethod: Direct#Fields.getLong
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1317 
stateDuring: ?2036 
=== Succesors ===
next: a2389 
=== Usages ===
?386 ?2038 v391 
=== Predecessor ===
v380 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1317 stateDuring: ?2036 #next: a2389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2389 <|@
result v66|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 160]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v2501 
=== Usages ===
a1319 v2501 
=== Predecessor ===
j385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v2501  <|@  <|@
tid ?386 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 675
stackSize: 2
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - j385 - 
=== Succesors ===
=== Usages ===
v2501 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - - j385 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?386 
object: a2389 
=== Succesors ===
next: j389 
=== Usages ===
=== Predecessor ===
a2389 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?386 object: a2389 #next: j389  <|@  <|@
f <@~|@floating>@ <|@
tid a1319 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 160]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2389 
=== Succesors ===
=== Usages ===
v1323 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2389  <|@  <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 165]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i64
signature: [Ljdk.vm.ci.meta.JavaType;@2d369bc
stamp: void
targetMethod: HotSpotMethod<Fields.getLong(Object, int)>
=== Inputs ===
arguments: a1319 a1189 i315 
=== Succesors ===
=== Usages ===
j389 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1319 a1189 i315  <|@  <|@
tid ?2038 <|@
d <@d|@=== Debug Properties ===
bci: 165
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 676
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - j385 - - - 
=== Succesors ===
=== Usages ===
j389 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - j385 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j389 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
bci: 165
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 165]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i64
targetMethod: Direct#Fields.getLong
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1323 
stateDuring: ?2038 
=== Succesors ===
next: v395 
=== Usages ===
v391 
=== Predecessor ===
v2501 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1323 stateDuring: ?2038 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:677) [bci: 175]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j385 
y: j389 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j385 y: j389  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:677) [bci: 175]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v391 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
j389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v391 #trueSuccessor: v392 #falseSuccessor: v393  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getLong(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:154, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 157]
stack: v65|QWORD - 
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v66|DWORD[.] * 8] state [bci:157, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 165]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - v65|QWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getLong(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:165, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v68|QWORD, y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 180]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid i2350 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i315 
y: i22 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 9
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|DWORD] destination: B78 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580343697030174875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:678) [bci: 178]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v834  <|@  <|@
f <@*|@fixed>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 183]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid a1464 <|@
result NarrowOop[Class:float] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 188]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:float
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:float]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 188]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1464 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1464  <|@  <|@
f <@~|@floating>@ <|@
tid i2349 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i315 
y: i22 
=== Succesors ===
=== Usages ===
i315 i315 i315 i315 i315 i315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 188]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1465 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v399 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1465 #trueSuccessor: v398 #falseSuccessor: v399  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 191]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: f403 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: f403  <|@  <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: f32
signature: [Ljdk.vm.ci.meta.JavaType;@ef3097b
stamp: void
targetMethod: HotSpotMethod<Fields.getFloat(Object, int)>
=== Inputs ===
arguments: a1234 a1768 i315 
=== Succesors ===
=== Usages ===
f403 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1234 a1768 i315  <|@  <|@
tid ?2037 <|@
d <@d|@=== Debug Properties ===
bci: 197
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 681
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
f403 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f403 <|@
result v71|SINGLE <|@
d <@d|@=== Debug Properties ===
bci: 197
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: f32
targetMethod: Direct#Fields.getFloat
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1326 
stateDuring: ?2037 
=== Succesors ===
next: a2390 
=== Usages ===
?404 ?2041 v409 
=== Predecessor ===
v398 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1326 stateDuring: ?2037 #next: a2390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2390 <|@
result v72|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 203]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v2502 
=== Usages ===
a1328 v2502 
=== Predecessor ===
f403 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v2502  <|@  <|@
tid ?404 <|@
d <@d|@=== Debug Properties ===
bci: 200
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 681
stackSize: 1
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - f403 
=== Succesors ===
=== Usages ===
v2502 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - - f403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?404 
object: a2390 
=== Succesors ===
next: f407 
=== Usages ===
=== Predecessor ===
a2390 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?404 object: a2390 #next: f407  <|@  <|@
f <@~|@floating>@ <|@
tid a1328 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 203]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2390 
=== Succesors ===
=== Usages ===
v1332 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2390  <|@  <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: f32
signature: [Ljdk.vm.ci.meta.JavaType;@70acedae
stamp: void
targetMethod: HotSpotMethod<Fields.getFloat(Object, int)>
=== Inputs ===
arguments: a1328 a1189 i315 
=== Succesors ===
=== Usages ===
f407 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1328 a1189 i315  <|@  <|@
tid ?2041 <|@
d <@d|@=== Debug Properties ===
bci: 208
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 682
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - f403 - - - 
=== Succesors ===
=== Usages ===
f407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - f403 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f407 <|@
result v74|SINGLE <|@
d <@d|@=== Debug Properties ===
bci: 208
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: f32
targetMethod: Direct#Fields.getFloat
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1332 
stateDuring: ?2041 
=== Succesors ===
next: v413 
=== Usages ===
v409 
=== Predecessor ===
v2502 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1332 stateDuring: ?2041 #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:683) [bci: 218]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: f403 
y: f407 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.FloatEqualsNode>@ x: f403 y: f407  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:683) [bci: 218]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v409 
=== Succesors ===
trueSuccessor: v410 
falseSuccessor: v411 
=== Usages ===
=== Predecessor ===
f407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v409 #trueSuccessor: v410 #falseSuccessor: v411  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:197, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v71|SINGLE = VMOVE xmm0|SINGLE <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 200]
stack: v71|SINGLE 
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v72|DWORD[.] * 8] state [bci:200, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v72|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - v71|SINGLE - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:208, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v74|SINGLE = VMOVE xmm0|SINGLE <|@ <|@
      nr   -1  <|@ instruction VUCOMISS (x: v74|SINGLE, y: v71|SINGLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 223]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 8
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B82 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575840097402804379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:684) [bci: 221]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v870  <|@  <|@
f <@*|@fixed>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B88" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 226]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid a1466 <|@
result NarrowOop[Class:double] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 231]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:double
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:double]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 231]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1466 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1466  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 231]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1467 
=== Succesors ===
trueSuccessor: v416 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1467 #trueSuccessor: v416 #falseSuccessor: v417  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 234]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: d421 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: d421  <|@  <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: f64
signature: [Ljdk.vm.ci.meta.JavaType;@6724c2f1
stamp: void
targetMethod: HotSpotMethod<Fields.getDouble(Object, int)>
=== Inputs ===
arguments: a1234 a1768 i315 
=== Succesors ===
=== Usages ===
d421 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1234 a1768 i315  <|@  <|@
tid ?2040 <|@
d <@d|@=== Debug Properties ===
bci: 240
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 687
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
d421 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d421 <|@
result v75|DOUBLE <|@
d <@d|@=== Debug Properties ===
bci: 240
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: f64
targetMethod: Direct#Fields.getDouble
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1335 
stateDuring: ?2040 
=== Succesors ===
next: a2391 
=== Usages ===
?422 ?2043 v427 
=== Predecessor ===
v416 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1335 stateDuring: ?2040 #next: a2391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2391 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 246]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v2503 
=== Usages ===
a1337 v2503 
=== Predecessor ===
d421 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v2503  <|@  <|@
tid ?422 <|@
d <@d|@=== Debug Properties ===
bci: 243
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 687
stackSize: 2
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - d421 - 
=== Succesors ===
=== Usages ===
v2503 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - - d421 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?422 
object: a2391 
=== Succesors ===
next: d425 
=== Usages ===
=== Predecessor ===
a2391 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?422 object: a2391 #next: d425  <|@  <|@
f <@~|@floating>@ <|@
tid a1337 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 246]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2391 
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2391  <|@  <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: f64
signature: [Ljdk.vm.ci.meta.JavaType;@7e23c920
stamp: void
targetMethod: HotSpotMethod<Fields.getDouble(Object, int)>
=== Inputs ===
arguments: a1337 a1189 i315 
=== Succesors ===
=== Usages ===
d425 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1337 a1189 i315  <|@  <|@
tid ?2043 <|@
d <@d|@=== Debug Properties ===
bci: 251
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 688
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - d421 - - - 
=== Succesors ===
=== Usages ===
d425 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - d421 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d425 <|@
result v78|DOUBLE <|@
d <@d|@=== Debug Properties ===
bci: 251
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: f64
targetMethod: Direct#Fields.getDouble
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1341 
stateDuring: ?2043 
=== Succesors ===
next: v431 
=== Usages ===
v427 
=== Predecessor ===
v2503 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1341 stateDuring: ?2043 #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:689) [bci: 261]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d421 
y: d425 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.FloatEqualsNode>@ x: d421 y: d425  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:689) [bci: 261]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
d425 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v428 #falseSuccessor: v429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:240, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v75|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 243]
stack: v75|DOUBLE - 
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v76|DWORD[.] * 8] state [bci:243, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - v75|DOUBLE - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:251, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v78|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction VUCOMISD (x: v78|DOUBLE, y: v75|DOUBLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 266]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 7
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B86 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571336497775433883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:690) [bci: 264]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v888  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 269]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid a1468 <|@
result NarrowOop[Class:short] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 274]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:short
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:short]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 274]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1468 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1468  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 274]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1469 
=== Succesors ===
trueSuccessor: v434 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1469 #trueSuccessor: v434 #falseSuccessor: v435  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 277]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i439 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i439  <|@  <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-32768 - 32767]
signature: [Ljdk.vm.ci.meta.JavaType;@680daf4e
stamp: void
targetMethod: HotSpotMethod<Fields.getShort(Object, int)>
=== Inputs ===
arguments: a1234 a1768 i315 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1234 a1768 i315  <|@  <|@
tid ?2042 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 693
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i439 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 283
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-32768 - 32767]
targetMethod: Direct#Fields.getShort
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1344 
stateDuring: ?2042 
=== Succesors ===
next: a2392 
=== Usages ===
?440 ?2045 v445 
=== Predecessor ===
v434 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1344 stateDuring: ?2042 #next: a2392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2392 <|@
result v80|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 289]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v2504 
=== Usages ===
a1346 v2504 
=== Predecessor ===
i439 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v2504  <|@  <|@
tid ?440 <|@
d <@d|@=== Debug Properties ===
bci: 286
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 693
stackSize: 1
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - i439 
=== Succesors ===
=== Usages ===
v2504 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - - i439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?440 
object: a2392 
=== Succesors ===
next: i443 
=== Usages ===
=== Predecessor ===
a2392 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?440 object: a2392 #next: i443  <|@  <|@
f <@~|@floating>@ <|@
tid a1346 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 289]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2392 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2392  <|@  <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-32768 - 32767]
signature: [Ljdk.vm.ci.meta.JavaType;@7fdbee7c
stamp: void
targetMethod: HotSpotMethod<Fields.getShort(Object, int)>
=== Inputs ===
arguments: a1346 a1189 i315 
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1346 a1189 i315  <|@  <|@
tid ?2045 <|@
d <@d|@=== Debug Properties ===
bci: 294
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 694
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - i439 - - - 
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - i439 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i443 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 294
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-32768 - 32767]
targetMethod: Direct#Fields.getShort
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1350 
stateDuring: ?2045 
=== Succesors ===
next: v449 
=== Usages ===
v445 
=== Predecessor ===
v2504 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1350 stateDuring: ?2045 #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:695) [bci: 303]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i439 
y: i443 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i439 y: i443  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:695) [bci: 303]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v445 
=== Succesors ===
trueSuccessor: v446 
falseSuccessor: v447 
=== Usages ===
=== Predecessor ===
i443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v445 #trueSuccessor: v446 #falseSuccessor: v447  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:283, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 286]
stack: v79|DWORD 
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v80|DWORD[.] * 8] state [bci:286, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - v79|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:294, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 308]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 6
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B90 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566832898148063387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:696) [bci: 306]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v924  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 311]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid a1470 <|@
result NarrowOop[Class:char] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 316]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:char
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:char]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 316]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1470 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 316]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1471 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1471 #trueSuccessor: v452 #falseSuccessor: v453  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 319]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i457 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i457  <|@  <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 65535] ⇈000000000000ffff
signature: [Ljdk.vm.ci.meta.JavaType;@3e29883c
stamp: void
targetMethod: HotSpotMethod<Fields.getChar(Object, int)>
=== Inputs ===
arguments: a1234 a1768 i315 
=== Succesors ===
=== Usages ===
i457 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1234 a1768 i315  <|@  <|@
tid ?2044 <|@
d <@d|@=== Debug Properties ===
bci: 325
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 699
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
i457 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i457 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 325
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 65535] ⇈000000000000ffff
targetMethod: Direct#Fields.getChar
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1353 
stateDuring: ?2044 
=== Succesors ===
next: a2393 
=== Usages ===
?458 ?2047 v463 
=== Predecessor ===
v452 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1353 stateDuring: ?2044 #next: a2393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2393 <|@
result v84|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 331]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v2505 
=== Usages ===
a1355 v2505 
=== Predecessor ===
i457 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v2505  <|@  <|@
tid ?458 <|@
d <@d|@=== Debug Properties ===
bci: 328
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 699
stackSize: 1
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - i457 
=== Succesors ===
=== Usages ===
v2505 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - - i457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?458 
object: a2393 
=== Succesors ===
next: i461 
=== Usages ===
=== Predecessor ===
a2393 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?458 object: a2393 #next: i461  <|@  <|@
f <@~|@floating>@ <|@
tid a1355 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 331]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2393 
=== Succesors ===
=== Usages ===
v1359 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2393  <|@  <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 65535] ⇈000000000000ffff
signature: [Ljdk.vm.ci.meta.JavaType;@5e232c10
stamp: void
targetMethod: HotSpotMethod<Fields.getChar(Object, int)>
=== Inputs ===
arguments: a1355 a1189 i315 
=== Succesors ===
=== Usages ===
i461 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1355 a1189 i315  <|@  <|@
tid ?2047 <|@
d <@d|@=== Debug Properties ===
bci: 336
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - i457 - - - 
=== Succesors ===
=== Usages ===
i461 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - i457 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i461 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 336
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 65535] ⇈000000000000ffff
targetMethod: Direct#Fields.getChar
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1359 
stateDuring: ?2047 
=== Succesors ===
next: v467 
=== Usages ===
v463 
=== Predecessor ===
v2505 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1359 stateDuring: ?2047 #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:701) [bci: 345]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i457 
y: i461 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i457 y: i461  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:701) [bci: 345]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v463 
=== Succesors ===
trueSuccessor: v464 
falseSuccessor: v465 
=== Usages ===
=== Predecessor ===
i461 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v463 #trueSuccessor: v464 #falseSuccessor: v465  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:325, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 328]
stack: v83|DWORD 
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v84|DWORD[.] * 8] state [bci:328, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - v83|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:336, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 350]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 5
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B94 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562329298520692891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:702) [bci: 348]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v942  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" "B100" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 353]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid a1472 <|@
result NarrowOop[Class:byte] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 358]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:byte
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:byte]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 358]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2385 
y: a1472 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2385 y: a1472  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 358]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1473 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1473 #trueSuccessor: v470 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 361]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i475 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i475  <|@  <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-128 - 127]
signature: [Ljdk.vm.ci.meta.JavaType;@5bd18f45
stamp: void
targetMethod: HotSpotMethod<Fields.getByte(Object, int)>
=== Inputs ===
arguments: a1234 a1768 i315 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1234 a1768 i315  <|@  <|@
tid ?2046 <|@
d <@d|@=== Debug Properties ===
bci: 367
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 705
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i475 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 367
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-128 - 127]
targetMethod: Direct#Fields.getByte
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1362 
stateDuring: ?2046 
=== Succesors ===
next: a2394 
=== Usages ===
?476 ?2048 v481 
=== Predecessor ===
v470 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1362 stateDuring: ?2046 #next: a2394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2394 <|@
result v88|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 373]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v2506 
=== Usages ===
a1364 v2506 
=== Predecessor ===
i475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v2506  <|@  <|@
tid ?476 <|@
d <@d|@=== Debug Properties ===
bci: 370
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 705
stackSize: 1
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - i475 
=== Succesors ===
=== Usages ===
v2506 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - - i475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?476 
object: a2394 
=== Succesors ===
next: i479 
=== Usages ===
=== Predecessor ===
a2394 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?476 object: a2394 #next: i479  <|@  <|@
f <@~|@floating>@ <|@
tid a1364 <|@
result v89|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 373]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2394 
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2394  <|@  <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-128 - 127]
signature: [Ljdk.vm.ci.meta.JavaType;@7b59324d
stamp: void
targetMethod: HotSpotMethod<Fields.getByte(Object, int)>
=== Inputs ===
arguments: a1364 a1189 i315 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1364 a1189 i315  <|@  <|@
tid ?2048 <|@
d <@d|@=== Debug Properties ===
bci: 378
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 706
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - i475 - - - 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - i475 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i479 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 378
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-128 - 127]
targetMethod: Direct#Fields.getByte
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1368 
stateDuring: ?2048 
=== Succesors ===
next: v485 
=== Usages ===
v481 
=== Predecessor ===
v2506 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1368 stateDuring: ?2048 #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:707) [bci: 387]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i475 
y: i479 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i475 y: i479  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:707) [bci: 387]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v482 
falseSuccessor: v483 
=== Usages ===
=== Predecessor ===
i479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v482 #falseSuccessor: v483  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:367, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 370]
stack: v87|DWORD 
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v88|DWORD[.] * 8] state [bci:370, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v89|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - v87|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:378, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4557825698893322395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:710) [bci: 392]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B98 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557825698893322395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:708) [bci: 390]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v978  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B99 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:711) [bci: 395]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1544 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?316 #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1544 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B100 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B102" "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 429]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1724 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1724  <|@  <|@
f <@~|@floating>@ <|@
tid v2348 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2382 
=== Succesors ===
=== Usages ===
v1724 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i315 y: i2382  <|@  <|@
f <@*|@fixed>@ <|@
tid v1724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2348 
=== Succesors ===
trueSuccessor: v1719 
falseSuccessor: v1722 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2348 #trueSuccessor: v1719 #falseSuccessor: v1722  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2395 
=== Usages ===
j2395 
=== Predecessor ===
v1724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2395  <|@  <|@
f <@~|@floating>@ <|@
tid a2513 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2381 
=== Succesors ===
=== Usages ===
v2429 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2381  <|@  <|@
f <@~|@floating>@ <|@
tid v2429 <|@
result [v91|QWORD[.] + v44|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a2513 
index: i315 
=== Succesors ===
=== Usages ===
j2395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2513 index: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2395 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1719 
address: v2429 
=== Succesors ===
next: a1379 
=== Usages ===
v2430 v2431 
=== Predecessor ===
v1719 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1719 address: v2429 #next: a1379  <|@  <|@
f <@~|@floating>@ <|@
tid v2430 <|@
result [v2|QWORD[.] + v92|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1768 
index: j2395 
=== Succesors ===
=== Usages ===
a1379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1768 index: j2395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1379 <|@
result v93|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2430 
=== Succesors ===
next: a1391 
=== Usages ===
a1380 v1479 v1480 
=== Predecessor ===
j2395 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2430 #next: a1391  <|@  <|@
f <@~|@floating>@ <|@
tid v2431 <|@
result [v92|QWORD + v32|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2395 
index: a2370 
=== Succesors ===
=== Usages ===
a1391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2395 index: a2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1391 <|@
result v94|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:715) [bci: 446]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2431 
=== Succesors ===
next: v497 
=== Usages ===
a1392 v1480 v1482 
=== Predecessor ===
a1379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2431 #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:716) [bci: 455]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1379 
y: a1391 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1379 y: a1391  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:716) [bci: 455]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1480 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v495 
=== Usages ===
=== Predecessor ===
a1391 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1480 #trueSuccessor: v496 #falseSuccessor: v495  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = MOV [v91|QWORD[.] + v44|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[.] = MOV [v2|QWORD[.] + v92|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[.] = MOV [v92|QWORD + v32|DWORD[.] * 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|DWORD[.], y: v93|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1543 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?316 #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid i2353 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i315 
y: i22 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|DWORD] destination: B103 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 458]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 460]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1379 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1379  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 460]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1479 
=== Succesors ===
trueSuccessor: v499 
falseSuccessor: v501 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1479 #trueSuccessor: v499 #falseSuccessor: v501  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD[.], y: v93|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:722) [bci: 480]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v780  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 463]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 465]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1391 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1391  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 465]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1482 
=== Succesors ===
trueSuccessor: v504 
falseSuccessor: v506 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1482 #trueSuccessor: v504 #falseSuccessor: v506  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|DWORD[.], y: v94|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584847296657545371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:722) [bci: 480]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v816  <|@  <|@
f <@*|@fixed>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 468]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i509 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i509  <|@  <|@
f <@~|@floating>@ <|@
tid a1380 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1379 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1379  <|@  <|@
f <@~|@floating>@ <|@
tid a1392 <|@
result v97|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:715) [bci: 446]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1391 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1391  <|@  <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@9432d72
stamp: void
targetMethod: HotSpotMethod<NodeClass.deepEquals0(Object, Object)>
=== Inputs ===
arguments: a1380 a1392 
=== Succesors ===
=== Usages ===
i509 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1380 a1392  <|@  <|@
tid ?2039 <|@
d <@d|@=== Debug Properties ===
bci: 472
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 718
stackSize: 0
=== Inputs ===
outerFrameState: ?540 
values: a2379 a1768 a1189 i315 - - - - - 
=== Succesors ===
=== Usages ===
i509 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?540 values: a2379 a1768 a1189 i315 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i509 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 472
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#NodeClass.deepEquals0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1393 
stateDuring: ?2039 
=== Succesors ===
next: v515 
=== Usages ===
v511 
=== Predecessor ===
v506 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1393 stateDuring: ?2039 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 475]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i509 
y: i28 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i509 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 475]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v511 
=== Succesors ===
trueSuccessor: v512 
falseSuccessor: v514 
=== Usages ===
=== Predecessor ===
i509 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v511 #trueSuccessor: v512 #falseSuccessor: v514  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v93|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepEquals0(Object, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:472, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580343697030174875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:719) [bci: 478]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v852  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v512 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid i2352 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i315 
y: i22 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v314 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|DWORD] destination: B110 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v1723 
=== Usages ===
=== Predecessor ===
v1724 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v1723  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2136 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2136  <|@  <|@
f <@~|@floating>@ <|@
tid i2137 <|@
result int[-351003|0xfffffffffffaa4e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -351003
stableDimension: 0
stamp: i32 [-351003] ⇊00000000fffaa4e5 ⇈00000000fffaa4e5
stampKind: i32
value: int[-351003|0xfffffffffffaa4e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2118 
=== Predecessor ===
v1723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-351003|0xfffffffffffaa4e5]] destination: B112 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v1663 
=== Usages ===
=== Predecessor ===
v1664 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v1663  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2128 
=== Usages ===
=== Predecessor ===
v1662 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2128  <|@  <|@
f <@~|@floating>@ <|@
tid i2129 <|@
result int[-321051|0xfffffffffffb19e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -321051
stableDimension: 0
stamp: i32 [-321051] ⇊00000000fffb19e5 ⇈00000000fffb19e5
stampKind: i32
value: int[-321051|0xfffffffffffb19e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2118 
=== Predecessor ===
v1663 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-321051|0xfffffffffffb19e5]] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B68" "B75" "B112" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2121 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-351003 - -316171] ⇊00000000fffa00e5 ⇈00000000fffbfff5
valueDescription: i32
=== Inputs ===
merge: v2118 
values: i2129 i2133 i2135 i2137 
=== Succesors ===
=== Usages ===
v2123 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2118 values: i2129 i2133 i2135 i2137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2128 v2132 v2134 v2136 
=== Succesors ===
next: v2123 
=== Usages ===
i2121 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2128 v2132 v2134 v2136 #next: v2123  <|@  <|@
f <@*|@fixed>@ <|@
tid v2123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
actionAndReason: i2121 
speculation: a2058 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2118 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?316 actionAndReason: i2121 speculation: a2058  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27, 6, 40, 46, 24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B141" 
    xhandlers
    flags 
    probability 4602861695167027355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:727) [bci: 488]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v314 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v314 #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2074 
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2074  <|@  <|@
f <@~|@floating>@ <|@
tid i2075 <|@
result int[-313635|0xfffffffffffb36dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -313635
stableDimension: 0
stamp: i32 [-313635] ⇊00000000fffb36dd ⇈00000000fffb36dd
stampKind: i32
value: int[-313635|0xfffffffffffb36dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2074 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-313635|0xfffffffffffb36dd]] destination: B117 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2072 
=== Usages ===
=== Predecessor ===
v2320 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2072  <|@  <|@
f <@~|@floating>@ <|@
tid i2073 <|@
result int[-312611|0xfffffffffffb3add] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -312611
stableDimension: 0
stamp: i32 [-312611] ⇊00000000fffb3add ⇈00000000fffb3add
stampKind: i32
value: int[-312611|0xfffffffffffb3add]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2072 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-312611|0xfffffffffffb3add]] destination: B118 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B120" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1729 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1729  <|@  <|@
f <@~|@floating>@ <|@
tid v2272 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2273 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2374 
y: v2272 
=== Succesors ===
=== Usages ===
v1729 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2374 y: v2272  <|@  <|@
f <@*|@fixed>@ <|@
tid v1729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; target_method=equals target_method_class=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2273 
=== Succesors ===
trueSuccessor: v1725 
falseSuccessor: v1728 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2273 #trueSuccessor: v1725 #falseSuccessor: v1728  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v39|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; target_method=equals target_method_class=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2396 
=== Usages ===
=== Predecessor ===
v1729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2396 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2448 
=== Succesors ===
next: v2397 
=== Usages ===
v2440 
=== Predecessor ===
v1725 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2448 #next: v2397  <|@  <|@
f <@~|@floating>@ <|@
tid v2440 <|@
result [v101|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2396 
=== Succesors ===
=== Usages ===
v2397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2397 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2440 
=== Succesors ===
next: v2336 
=== Usages ===
v1944 
=== Predecessor ===
v2396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2440 #next: v2336  <|@  <|@
f <@~|@floating>@ <|@
tid v1936 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1944 v1963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1944 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2397 
y: v1936 
=== Succesors ===
=== Usages ===
v2336 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2397 y: v1936  <|@  <|@
f <@*|@fixed>@ <|@
tid v2336 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1944 
=== Succesors ===
trueSuccessor: v2335 
falseSuccessor: v1733 
=== Usages ===
=== Predecessor ===
v2397 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1944 #trueSuccessor: v2335 #falseSuccessor: v1733  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v102|QWORD, y: [v101|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1959 
=== Usages ===
=== Predecessor ===
v2336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1959  <|@  <|@
f <@*|@fixed>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1223 
=== Succesors ===
trueSuccessor: v1958 
falseSuccessor: v1957 
=== Usages ===
=== Predecessor ===
v2335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1223 #trueSuccessor: v1958 #falseSuccessor: v1957  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD[.], y: v32|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546780700529023586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2216 
=== Usages ===
=== Predecessor ===
v1959 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2216  <|@  <|@
f <@*|@fixed>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2214 
=== Predecessor ===
v1958 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561185533928580529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2398 
=== Usages ===
=== Predecessor ===
v1959 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2398  <|@  <|@
f <@~|@floating>@ <|@
tid v2514 <|@
result [v32|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2370 
=== Succesors ===
=== Usages ===
v2398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2398 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2514 
=== Succesors ===
next: v2399 
=== Usages ===
v2441 
=== Predecessor ===
v1957 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2514 #next: v2399  <|@  <|@
f <@~|@floating>@ <|@
tid v2441 <|@
result [v103|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2398 
=== Succesors ===
=== Usages ===
v2399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2399 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2441 
=== Succesors ===
next: v2344 
=== Usages ===
v1963 
=== Predecessor ===
v2398 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2441 #next: v2344  <|@  <|@
f <@~|@floating>@ <|@
tid v1963 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2399 
y: v1936 
=== Succesors ===
=== Usages ===
v2344 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2399 y: v1936  <|@  <|@
f <@*|@fixed>@ <|@
tid v2344 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1963 
=== Succesors ===
trueSuccessor: v2343 
falseSuccessor: v1738 
=== Usages ===
=== Predecessor ===
v2399 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1963 #trueSuccessor: v2343 #falseSuccessor: v1738  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v32|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v102|QWORD, y: [v103|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561185533928580529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2225 
=== Usages ===
=== Predecessor ===
v2344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2225  <|@  <|@
f <@*|@fixed>@ <|@
tid v2225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2214 
=== Predecessor ===
v2343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2216 v2225 
=== Succesors ===
next: v2509 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2216 v2225 #next: v2509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
object: a2370 
=== Succesors ===
next: a276 
=== Usages ===
=== Predecessor ===
v2214 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?11 object: a2370 #next: a276  <|@  <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@4e47d3e6
stamp: void
targetMethod: HotSpotMethod<Reference.get()>
=== Inputs ===
arguments: a1768 
=== Succesors ===
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1768  <|@  <|@
tid ?285 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: - - - 
=== Succesors ===
=== Usages ===
?2050 ?2049 ?300 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: - - -  <|@  <|@
tid ?2049 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<HotSpotGraalMBean$RefEquivalence.equals(Object, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: HotSpotGraalMBean.java
sourceLine: 351
stackSize: 0
=== Inputs ===
outerFrameState: ?285 
values: - - - - a1189 
=== Succesors ===
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?285 values: - - - - a1189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a276 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Reference.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1403 
stateDuring: ?2049 
=== Succesors ===
next: a279 
=== Usages ===
?2050 v290 v1409 v286 
=== Predecessor ===
v2509 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1403 stateDuring: ?2049 #next: a279  <|@  <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@19bbc6cc
stamp: void
targetMethod: HotSpotMethod<Reference.get()>
=== Inputs ===
arguments: a1189 
=== Succesors ===
=== Usages ===
a279 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1189  <|@  <|@
tid ?2050 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<HotSpotGraalMBean$RefEquivalence.equals(Object, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: HotSpotGraalMBean.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?285 
values: - - - - - a276 
=== Succesors ===
=== Usages ===
a279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?285 values: - - - - - a276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a279 <|@
result v105|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Reference.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1406 
stateDuring: ?2050 
=== Succesors ===
next: v289 
=== Usages ===
v286 v1409 
=== Predecessor ===
a276 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1406 stateDuring: ?2050 #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 2]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a276 
y: a279 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a276 y: a279  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 2]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.8150490730643403
=== Inputs ===
condition: v286 
=== Succesors ===
trueSuccessor: v287 
falseSuccessor: v288 
=== Usages ===
=== Predecessor ===
a279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v286 #trueSuccessor: v287 #falseSuccessor: v288  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v27|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v32|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
locals: - - - - v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:12, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
stack: v104|QWORD[.] 
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8150490730643403 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B141" 
    xhandlers
    flags 
    probability 4560426043318885864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 17]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v961  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4550746124525390932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 5]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 6]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a276 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a276  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 6]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.13679245283018868
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v291 
falseSuccessor: v292 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v291 #falseSuccessor: v292  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v104|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13679245283018868 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537859297389370054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 21]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v996 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v996  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549841365493559547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 9]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i295 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i295  <|@  <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 11]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2b4244ec
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a276 a279 
=== Succesors ===
=== Usages ===
i295 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a276 a279  <|@  <|@
tid ?300 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<HotSpotGraalMBean$RefEquivalence.equals(Object, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: HotSpotGraalMBean.java
sourceLine: 351
stackSize: 0
=== Inputs ===
outerFrameState: ?285 
values: - - - - - 
=== Succesors ===
=== Usages ===
?2051 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?285 values: - - - - -  <|@  <|@
tid ?2051 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Objects.equals(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Objects.java
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: ?300 
values: - - 
=== Succesors ===
=== Usages ===
i295 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?300 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i295 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 11]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1409 
stateDuring: ?2051 
=== Succesors ===
next: v35 
=== Usages ===
v29 
=== Predecessor ===
v292 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1409 stateDuring: ?2051 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i295 
y: i28 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i295 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
trueSuccessorProbability: 0.9941860553050733
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v692 
=== Usages ===
=== Predecessor ===
i295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v30 #falseSuccessor: v692  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Objects.equals(Objects.java:59) [bci: 11]
locals: - - 
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 20, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v106|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549808171697969393
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B66" "B105" "B73" "B107" "B79" "B109" "B83" "B87" "B51" "B91" "B95" "B99" "B128" "B48" 
    successors "B132" "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612517661500465431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v749 v751 v780 v798 v816 v834 v852 v870 v888 v906 v924 v942 v978 v996 v1034 
=== Succesors ===
next: a2400 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v749 v751 v780 v798 v816 v834 v852 v870 v888 v906 v924 v942 v978 v996 v1034 #next: a2400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2400 <|@
result v107|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2405 
=== Succesors ===
next: i2401 
=== Usages ===
a1411 v2432 
=== Predecessor ===
v748 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2405 #next: i2401  <|@  <|@
tid ?750 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1765 a1768 - i2369 - - - - i28 
=== Succesors ===
=== Usages ===
v1540 v2143 i2401 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1765 a1768 - i2369 - - - - i28  <|@  <|@
f <@~|@floating>@ <|@
tid v2432 <|@
result [v107|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2400 
=== Succesors ===
=== Usages ===
i2401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2401 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?750 
guard: - 
address: v2432 
=== Succesors ===
next: v1754 
=== Usages ===
v1427 
=== Predecessor ===
a2400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?750 guard: - address: v2432 #next: v1754  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i23 
y: i22 
=== Succesors ===
=== Usages ===
v2433 v1427 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i23 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v1427 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i210 
y: i2401 
=== Succesors ===
=== Usages ===
v1754 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i210 y: i2401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1754 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1427 
=== Succesors ===
trueSuccessor: v1750 
falseSuccessor: v1753 
=== Usages ===
=== Predecessor ===
i2401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1427 #trueSuccessor: v1750 #falseSuccessor: v1753  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = INC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMP (x: v108|DWORD, y: [v107|DWORD[.] * 8 + 12]) size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B131 -> B132 falseDestination: B131 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612517661500465431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2402 
=== Usages ===
a2402 
=== Predecessor ===
v1754 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2402  <|@  <|@
f <@~|@floating>@ <|@
tid a1411 <|@
result v109|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2400 
=== Succesors ===
=== Usages ===
v2433 a613 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2400  <|@  <|@
f <@~|@floating>@ <|@
tid v2433 <|@
result [v109|QWORD[.] + v108|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1411 
index: i210 
=== Succesors ===
=== Usages ===
a2402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1411 index: i210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2402 <|@
result v110|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1750 
address: v2433 
=== Succesors ===
next: v1978 
=== Usages ===
a1425 v1437 v2450 
=== Predecessor ===
v1750 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1750 address: v2433 #next: v1978  <|@  <|@
f <@~|@floating>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 52]
stamp: void
=== Inputs ===
value: a2402 
=== Succesors ===
=== Usages ===
v1978 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2402  <|@  <|@
f <@*|@fixed>@ <|@
tid v1978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1437 
=== Succesors ===
trueSuccessor: v1977 
falseSuccessor: v1976 
=== Usages ===
=== Predecessor ===
a2402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1437 #trueSuccessor: v1977 #falseSuccessor: v1976  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v107|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[.] = MOV [v109|QWORD[.] + v108|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v110|DWORD[.], y: v110|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4597704408611252259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1986 
=== Usages ===
=== Predecessor ===
v1978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1986  <|@  <|@
f <@*|@fixed>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2451 
=== Predecessor ===
v1977 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611984137230420629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2403 
=== Usages ===
=== Predecessor ===
v1978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2403  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
result [v110|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2402 
=== Succesors ===
=== Usages ===
v2403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2403 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2450 
=== Succesors ===
next: v2457 
=== Usages ===
v2274 
=== Predecessor ===
v1976 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2450 #next: v2457  <|@  <|@
f <@~|@floating>@ <|@
tid v2274 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2403 
y: v2263 
=== Succesors ===
=== Usages ===
v2457 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2403 y: v2263  <|@  <|@
f <@*|@fixed>@ <|@
tid v2457 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9958011670017366
=== Inputs ===
condition: v2274 
=== Succesors ===
trueSuccessor: v2455 
falseSuccessor: v2454 
=== Usages ===
=== Predecessor ===
v2403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2274 #trueSuccessor: v2455 #falseSuccessor: v2454  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v110|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611963975616626682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1540 
=== Usages ===
=== Predecessor ===
v2457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?750 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v2455 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?750 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid a1425 <|@
result v111|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2402 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2402  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|QWORD[.], v109|QWORD[.]] destination: B135 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4576314994912303768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2458 
=== Usages ===
=== Predecessor ===
v2457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2458  <|@  <|@
f <@*|@fixed>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2451 
=== Predecessor ===
v2454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" "B136" 
    successors "B138" 
    xhandlers
    flags 
    probability 4598026994431955404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1986 v2458 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1986 v2458 #next: v42  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors 
    xhandlers
    flags 
    probability 4598026994431955404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v2451 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2143 
=== Usages ===
=== Predecessor ===
v1754 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2143  <|@  <|@
f <@~|@floating>@ <|@
tid i2145 <|@
result int[-363035|0xfffffffffffa75e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -363035
stableDimension: 0
stamp: i32 [-363035] ⇊00000000fffa75e5 ⇈00000000fffa75e5
stampKind: i32
value: int[-363035|0xfffffffffffa75e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?750 
actionAndReason: i2145 
speculation: a2058 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1753 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?750 actionAndReason: i2145 speculation: a2058  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -363035 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B141" 
    xhandlers
    flags 
    probability 4516600838668945907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v692 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B35" "B116" "B126" "B49" 
    successors "B142" 
    xhandlers
    flags 
    probability 4620058202477958767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v694 v696 v746 v961 v1035 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v694 v696 v746 v961 v1035 #next: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors 
    xhandlers
    flags 
    probability 4620058202477958767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i2369 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i2369 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2082 
=== Usages ===
=== Predecessor ===
v2344 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2082  <|@  <|@
f <@~|@floating>@ <|@
tid i2083 <|@
result int[-358435|0xfffffffffffa87dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -358435
stableDimension: 0
stamp: i32 [-358435] ⇊00000000fffa87dd ⇈00000000fffa87dd
stampKind: i32
value: int[-358435|0xfffffffffffa87dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2082 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1738 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-358435|0xfffffffffffa87dd]] destination: B143 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2080 
=== Usages ===
=== Predecessor ===
v2336 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2080  <|@  <|@
f <@~|@floating>@ <|@
tid i2081 <|@
result int[-357667|0xfffffffffffa8add] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -357667
stableDimension: 0
stamp: i32 [-357667] ⇊00000000fffa8add ⇈00000000fffa8add
stampKind: i32
value: int[-357667|0xfffffffffffa8add]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2080 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-357667|0xfffffffffffa8add]] destination: B144 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; target_method=equals target_method_class=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2078 
=== Usages ===
=== Predecessor ===
v1729 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2078  <|@  <|@
f <@~|@floating>@ <|@
tid i2079 <|@
result int[-356915|0xfffffffffffa8dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -356915
stableDimension: 0
stamp: i32 [-356915] ⇊00000000fffa8dcd ⇈00000000fffa8dcd
stampKind: i32
value: int[-356915|0xfffffffffffa8dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1728 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-356915|0xfffffffffffa8dcd]] destination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v2064 
=== Usages ===
=== Predecessor ===
v1610 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v2064  <|@  <|@
f <@~|@floating>@ <|@
tid i2065 <|@
result int[-302619|0xfffffffffffb61e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302619
stableDimension: 0
stamp: i32 [-302619] ⇊00000000fffb61e5 ⇈00000000fffb61e5
stampKind: i32
value: int[-302619|0xfffffffffffb61e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
v1609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-302619|0xfffffffffffb61e5]] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" "B45" "B118" "B117" "B145" "B144" "B143" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2059 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-359435 - -300043] ⇊00000000fffa00c5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2055 
values: i2065 i2067 i2073 i2075 i2079 i2081 i2083 
=== Succesors ===
=== Usages ===
v2061 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2055 values: i2065 i2067 i2073 i2075 i2079 i2081 i2083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2064 v2066 v2072 v2074 v2078 v2080 v2082 
=== Succesors ===
next: v2061 
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2064 v2066 v2072 v2074 v2078 v2080 v2082 #next: v2061  <|@  <|@
f <@*|@fixed>@ <|@
tid v2061 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
actionAndReason: i2059 
speculation: a2058 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2055 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?11 actionAndReason: i2059 speculation: a2058  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v112|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v27|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4549083092821127112
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2498 
=== Usages ===
=== Predecessor ===
v2469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2498  <|@  <|@
f <@*|@fixed>@ <|@
tid v2498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2466 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2113 
=== Usages ===
=== Predecessor ===
v1587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2113  <|@  <|@
f <@~|@floating>@ <|@
tid i2115 <|@
result int[-292379|0xfffffffffffb89e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -292379
stableDimension: 0
stamp: i32 [-292379] ⇊00000000fffb89e5 ⇈00000000fffb89e5
stampKind: i32
value: int[-292379|0xfffffffffffb89e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?70 
actionAndReason: i2115 
speculation: a2058 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1586 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?70 actionAndReason: i2115 speculation: a2058  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -292379 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4551785757826680500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i2359 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i2359 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2100 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2100  <|@  <|@
f <@~|@floating>@ <|@
tid i2101 <|@
result int[-280603|0xfffffffffffbb7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -280603
stableDimension: 0
stamp: i32 [-280603] ⇊00000000fffbb7e5 ⇈00000000fffbb7e5
stampKind: i32
value: int[-280603|0xfffffffffffbb7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2090 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-280603|0xfffffffffffbb7e5], Object[null]] destination: B151 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 59]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2227 
=== Usages ===
=== Predecessor ===
v1799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2227  <|@  <|@
f <@*|@fixed>@ <|@
tid v2227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
v1798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-276540|0xfffffffffffbc7c4], v4|QWORD[.]] destination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2228 
=== Usages ===
=== Predecessor ===
v2312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2228  <|@  <|@
f <@~|@floating>@ <|@
tid a2089 <|@
result v113|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1669091861
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1669091861]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2091 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2088 <|@
result int[-276284|0xfffffffffffbc8c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -276284
stableDimension: 0
stamp: i32 [-276284] ⇊00000000fffbc8c4 ⇈00000000fffbc8c4
stampKind: i32
value: int[-276284|0xfffffffffffbc8c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2090 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
v2158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1669091861] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-276284|0xfffffffffffbc8c4], v113|QWORD[.]] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B5" "B151" "B17" "B152" "B153" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2090 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-297995 - -276284] ⇊00000000fffb00c4 ⇈00000000fffbfff5
valueDescription: i32
=== Inputs ===
merge: v2086 
values: i2096 i2101 i2105 i2096 i2088 
=== Succesors ===
=== Usages ===
v2092 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2086 values: i2096 i2101 i2105 i2096 i2088  <|@  <|@
f <@~|@floating>@ <|@
tid a2091 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
valueDescription: a -
=== Inputs ===
merge: v2086 
values: a2097 a2058 a2058 a2097 a2089 
=== Succesors ===
=== Usages ===
v2092 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2086 values: a2097 a2058 a2058 a2097 a2089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2086 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2095 v2100 v2104 v2227 v2228 
=== Succesors ===
next: v2092 
=== Usages ===
i2090 a2091 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2095 v2100 v2104 v2227 v2228 #next: v2092  <|@  <|@
f <@*|@fixed>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
actionAndReason: i2090 
speculation: a2091 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2086 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?60 actionAndReason: i2090 speculation: a2091  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|DWORD, v115|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v115|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5fbbff59 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B153" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B151" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v3|QWORD[.]] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD[.], y: v11|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08493593479678752 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B18" 
    xhandlers
    flags 
    probability 4606417383911415054
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD[.], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9609648093772144 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B17" 
    xhandlers
    flags 
    probability 4606095649454238501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4606095649454238501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v9|QWORD[.] + v13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605303606463342293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v14|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4605273675557126329
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.], v9|QWORD[.]] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B15" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605560346082932599
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.], v25|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605560346082932599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.], v25|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B135" "B41" 
    successors "B34" "B146" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4635419071001135499
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.], v28|QWORD[.]] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v27|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v27|QWORD[.]] state [bci:3] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v27|QWORD[.] - - 
>@ <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV [v27|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4635419071001135499
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD[.], y: v33|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08493593479678752 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634933351772407651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9609648093772144 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634729083163585819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634729083163585819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v28|QWORD[.] + v35|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD[.], y: v36|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634226216540914226
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v36|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634207213464193237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v27|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.], v28|QWORD[.]] destination: B41 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613719014282316025
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7355351947531783 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611990314831112667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611962361989488922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B66" "B105" "B73" "B107" "B79" "B109" "B83" "B87" "B51" "B91" "B95" "B99" "B128" "B48" 
    successors "B132" "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612517661500465431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = INC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMP (x: v108|DWORD, y: [v107|DWORD[.] * 8 + 12]) size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B131 -> B132 falseDestination: B131 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612517661500465431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v107|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[.] = MOV [v109|QWORD[.] + v108|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v110|DWORD[.], y: v110|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611984137230420629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v110|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611963975616626682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|QWORD[.], v109|QWORD[.]] destination: B135 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605090017350089849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.003959995166108514 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605062634784208170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v39|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9987323537885335 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: [v40|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD[.], y: v32|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604366035535064010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v32|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: [v42|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604366035535064010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v27|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v43|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B65" "B110" "B103" "B100" "B98" "B94" "B90" "B86" "B82" "B78" "B72" 
    successors "B60" "B116" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4607365294794397851
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v46|DWORD[.] = MOV [v45|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v47|DWORD = MOV [v46|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602861695167027355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v45|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMP (x: v44|DWORD, y: [v48|DWORD[.] * 8 + 12]) size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602861695167027355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = MOV [v49|QWORD[.] + v44|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v51|QWORD = MOV [v50|DWORD[.] * 8 + 72] size: QWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B102" "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = MOV [v91|QWORD[.] + v44|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[.] = MOV [v2|QWORD[.] + v92|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[.] = MOV [v92|QWORD + v32|DWORD[.] * 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|DWORD[.], y: v93|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD[.], y: v93|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|DWORD[.], y: v94|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v93|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepEquals0(Object, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:472, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|DWORD] destination: B110 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B70" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B88" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" "B100" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B100 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|DWORD] destination: B103 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v52|QWORD[.] + v44|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOV [v2|QWORD[.] + v53|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: [v53|QWORD + v32|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD] destination: B65 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v56|QWORD[.] + v44|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVSXB [v2|QWORD[.] + v57|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVZXB v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVZXB [v57|QWORD + v32|DWORD[.] * 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v61|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|DWORD] destination: B72 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getLong(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:154, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 157]
stack: v65|QWORD - 
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v66|DWORD[.] * 8] state [bci:157, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 165]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - v65|QWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getLong(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:165, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v68|QWORD, y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|DWORD] destination: B78 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:197, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v71|SINGLE = VMOVE xmm0|SINGLE <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 200]
stack: v71|SINGLE 
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v72|DWORD[.] * 8] state [bci:200, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v72|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - v71|SINGLE - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:208, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v74|SINGLE = VMOVE xmm0|SINGLE <|@ <|@
      nr   -1  <|@ instruction VUCOMISS (x: v74|SINGLE, y: v71|SINGLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B82 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:240, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v75|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 243]
stack: v75|DOUBLE - 
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v76|DWORD[.] * 8] state [bci:243, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - v75|DOUBLE - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:251, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v78|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction VUCOMISD (x: v78|DOUBLE, y: v75|DOUBLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B86 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:283, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 286]
stack: v79|DWORD 
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v80|DWORD[.] * 8] state [bci:286, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - v79|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:294, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B90 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:325, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 328]
stack: v83|DWORD 
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v84|DWORD[.] * 8] state [bci:328, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - v83|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:336, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B94 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:367, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 370]
stack: v87|DWORD 
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v88|DWORD[.] * 8] state [bci:370, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v89|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - v87|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:378, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4557825698893322395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B98 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590167368209642788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589350896284915867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589350896284915867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584847296657545371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584847296657545371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580343697030174875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580343697030174875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575840097402804379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571336497775433883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569156359392022262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566832898148063387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562329298520692891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B120" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v39|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v102|QWORD, y: [v101|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD[.], y: v32|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561185533928580529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v32|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v102|QWORD, y: [v103|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561185533928580529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v27|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v32|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
locals: - - - - v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:12, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
stack: v104|QWORD[.] 
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8150490730643403 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4550746124525390932
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v104|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13679245283018868 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549841365493559547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Objects.equals(Objects.java:59) [bci: 11]
locals: - - 
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 20, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v106|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549808171697969393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557825698893322395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B99 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546780700529023586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537859297389370054
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4619731884390133392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4620035933617669213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4620035933617669213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B141" 
    xhandlers
    flags 
    probability 4619457526087033470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B35" "B116" "B126" "B49" 
    successors "B142" 
    xhandlers
    flags 
    probability 4620058202477958767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors 
    xhandlers
    flags 
    probability 4620058202477958767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B141" 
    xhandlers
    flags 
    probability 4602861695167027355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4598536407558479054
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4597704408611252259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" "B136" 
    successors "B138" 
    xhandlers
    flags 
    probability 4598026994431955404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors 
    xhandlers
    flags 
    probability 4598026994431955404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4591000764590334595
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4590784699771983760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4585308572350619273
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7355351947531783 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4583229925940205174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v2|QWORD[.]] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" 
    successors "B24" "B150" 
    xhandlers
    flags 
    probability 4585303181216966349
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4585273283819271622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B21" 
    successors "B26" "B149" 
    xhandlers
    flags 
    probability 4585278674952924546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction CMP (x: v13|DWORD, y: [v20|DWORD[.] * 8 + 12]) size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585278674952924546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v21|QWORD[.] + v13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD[.], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B148" 
    xhandlers
    flags 
    probability 4584766889561211535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v22|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4584747549448694751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.], v21|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B141" 
    xhandlers
    flags 
    probability 4578309549236732251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4576599217976790328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.003959995166108514 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576577653442178631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4576314994912303768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4570334988793720629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4569808734517599273
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B141" 
    xhandlers
    flags 
    probability 4560426043318885864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4551785757826680500
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4549083092821127112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4540645345622683902
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B141" 
    xhandlers
    flags 
    probability 4516600838668945907
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-276540|0xfffffffffffbc7c4], v117|QWORD[.]] destination: B5 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B5" "B151" "B17" "B152" "B153" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|DWORD, v115|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v115|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1122723832] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -311307 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] Object[null] - v7|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326939|0xfffffffffffb02e5]] destination: B68 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B68" "B75" "B112" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v43|DWORD[.] v2|QWORD[.] v33|QWORD[.] v44|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v2|QWORD[.] v33|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27, 6, 40, 46, 24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333339|0xfffffffffffae9e5]] destination: B75 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-358435|0xfffffffffffa87dd]] destination: B143 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" "B45" "B118" "B117" "B145" "B144" "B143" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v112|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v27|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305691|0xfffffffffffb55e5]] destination: B45 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-276540|0xfffffffffffbc7c4], v116|QWORD[.]] destination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-313635|0xfffffffffffb36dd]] destination: B117 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-357667|0xfffffffffffa8add]] destination: B144 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-351003|0xfffffffffffaa4e5]] destination: B112 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-321051|0xfffffffffffb19e5]] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-302619|0xfffffffffffb61e5]] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -363035 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-356915|0xfffffffffffa8dcd]] destination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -292379 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-280603|0xfffffffffffbb7e5], Object[null]] destination: B151 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284699|0xfffffffffffba7e5], Object[null]] destination: B17 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-312611|0xfffffffffffb3add]] destination: B118 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1669091861] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-276284|0xfffffffffffbc8c4], v113|QWORD[.]] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #39         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokespecial #3          // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokespecial #30         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokespecial #37         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokespecial #37         // getRawValue:(int)java.lang.Object
    52: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5fbbff59 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rbx|QWORD[.] = MOV [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOV [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   10  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction r14|QWORD[.] = MOV [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   14  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   16  <|@ instruction TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B153" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction CMP [r14|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction CMP [rbx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B151" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rbx:0, r13:0, r14:0, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] r13|QWORD[.] - - - r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r14|QWORD[.]] state [bci:3] <|@ <|@
      nr   60  <|@ instruction rsi|DWORD[.] = MOV [rbx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r13:0, r14:0, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] r13|QWORD[.] - - - r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   66  <|@ instruction r11|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   78  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction CMP (x: r13|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.08493593479678752 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B18" 
    xhandlers
    flags 
    probability 4606417383911415054
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction r9|DWORD[.] = MOV [rbx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   96  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.9609648093772144 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B17" 
    xhandlers
    flags 
    probability 4606095649454238501
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4606095649454238501
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605303606463342293
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4605273675557126329
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B15" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605560346082932599
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  264  <|@ instruction TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605560346082932599
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B135" "B41" 
    successors "B34" "B146" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4635419071001135499
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r13:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] r13|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:3] <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r13:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] r13|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  292  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  294  <|@ instruction r8|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4635419071001135499
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction CMP (x: r13|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.08493593479678752 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634933351772407651
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction rdi|DWORD[.] = MOV [rbx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  320  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  322  <|@ instruction BRANCH trueDestinationProbability: 0.9609648093772144 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634729083163585819
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634729083163585819
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634226216540914226
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634207213464193237
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r10:0, r13:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] r13|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:3] <|@ <|@
      nr  354  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B41 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613719014282316025
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.7355351947531783 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611990314831112667
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 24] <|@ <|@
      nr  398  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611962361989488922
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B48 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B66" "B105" "B73" "B107" "B79" "B109" "B83" "B87" "B51" "B91" "B95" "B99" "B128" "B48" 
    successors "B132" "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612517661500465431
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1298  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1300  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rbx|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:27] <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B131 -> B132 falseDestination: B131 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612517661500465431
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1306  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr 1308  <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1310  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1312  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611984137230420629
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1320  <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1322  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611963975616626682
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1326  <|@ st <@st|@reference-map: [rax:0, rbx:0, rsi:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rbx|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27] <|@ <|@
      nr 1328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr 1330  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B135 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605090017350089849
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.003959995166108514 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605062634784208170
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction stack:56|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction stack:64|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction r11|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  440  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.9987323537885335 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  452  <|@ instruction CMP (x: rdx|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604366035535064010
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  470  <|@ instruction CMP (x: rdx|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604366035535064010
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r11|DWORD[.] = MOV [r13|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  482  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [r9:0, r10:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: stack:40|QWORD[.] r13|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr  486  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B65" "B110" "B103" "B100" "B98" "B94" "B90" "B86" "B82" "B78" "B72" 
    successors "B60" "B116" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4607365294794397851
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  492  <|@ instruction r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@reference-map: [r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] r13|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - r13|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] r13|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rbx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  496  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] r13|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - r13|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] r13|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  498  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602861695167027355
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] r13|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - r13|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] r13|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602861695167027355
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] r13|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - r13|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] r13|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rsi|QWORD = MOV [rdx|DWORD[.] * 8 + 72] size: QWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  520  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B102" "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1038  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD = MOV [rbx|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD[.] = MOV [r13|QWORD[.] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr 1048  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD + r9|DWORD[.] * 8] size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMP (x: rsi|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1052  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1072  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr 1100  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr 1102  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepEquals0(Object, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:472, 6, 40, 46, 24] <|@ <|@
      nr 1108  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~[] destination: B110 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr  528  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B70" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr  594  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  672  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  734  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B88" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr  794  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr  852  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr  910  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" "B100" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr  968  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr 1026  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1030  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B100 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B103 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction CMP (x: rdi|DWORD, y: stack:72|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  542  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = MOV [rbx|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rdx|DWORD = MOV [r13|QWORD[.] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  550  <|@ instruction CMP (x: rdx|DWORD, y: [rsi|QWORD + r9|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr  552  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ st <@st|@reference-map: [r9:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] r13|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - r13|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] r13|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  558  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  560  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B65 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOV [rbx|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  614  <|@ instruction rdx|DWORD = MOVSXB [r13|QWORD[.] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVZXB rdx|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction rdx|DWORD = SETCC condition: != <|@ <|@
      nr  622  <|@ instruction rsi|DWORD = MOVZXB [rsi|QWORD + r9|DWORD[.] * 8] size: DWORD <|@ <|@
      nr  624  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction rsi|DWORD = SETCC condition: != <|@ <|@
      nr  628  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ st <@st|@reference-map: [r9:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] r13|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - r13|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] r13|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  638  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B72 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getLong(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:154, 6, 40, 46, 24] <|@ <|@
      nr  690  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 157]
stack: rax|QWORD - 
locals: r11|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:157, 6, 40, 46, 24] <|@ <|@
      nr  696  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  698  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ instruction stack:80|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 165]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:80|QWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getLong(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:165, 6, 40, 46, 24] <|@ <|@
      nr  706  <|@ instruction CMP (x: rax|QWORD, y: stack:80|QWORD) size: QWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  714  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B78 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  748  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:197, 6, 40, 46, 24] <|@ <|@
      nr  750  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  754  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 200]
stack: xmm0|SINGLE 
locals: r11|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:200, 6, 40, 46, 24] <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction stack:88|SINGLE = VMOVE xmm0|SINGLE <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:88|SINGLE - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:208, 6, 40, 46, 24] <|@ <|@
      nr  766  <|@ instruction VUCOMISS (x: xmm0|SINGLE, y: stack:88|SINGLE) <|@ <|@
      nr  768  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B82 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:240, 6, 40, 46, 24] <|@ <|@
      nr  808  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  812  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 243]
stack: xmm0|DOUBLE - 
locals: r11|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:243, 6, 40, 46, 24] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  816  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction stack:80|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:80|DOUBLE - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:251, 6, 40, 46, 24] <|@ <|@
      nr  824  <|@ instruction VUCOMISD (x: xmm0|DOUBLE, y: stack:80|DOUBLE) <|@ <|@
      nr  826  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B86 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:283, 6, 40, 46, 24] <|@ <|@
      nr  866  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 286]
stack: rax|DWORD 
locals: r11|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:286, 6, 40, 46, 24] <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:88|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:294, 6, 40, 46, 24] <|@ <|@
      nr  882  <|@ instruction CMP (x: rax|DWORD, y: stack:88|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B90 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:325, 6, 40, 46, 24] <|@ <|@
      nr  924  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 328]
stack: rax|DWORD 
locals: r11|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:328, 6, 40, 46, 24] <|@ <|@
      nr  930  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  932  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:88|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:336, 6, 40, 46, 24] <|@ <|@
      nr  940  <|@ instruction CMP (x: rax|DWORD, y: stack:88|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction JUMP ~[] destination: B94 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:367, 6, 40, 46, 24] <|@ <|@
      nr  982  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 370]
stack: rax|DWORD 
locals: r11|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:370, 6, 40, 46, 24] <|@ <|@
      nr  988  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:88|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:378, 6, 40, 46, 24] <|@ <|@
      nr  998  <|@ instruction CMP (x: rax|DWORD, y: stack:88|DWORD) size: DWORD <|@ <|@
      nr 1000  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4557825698893322395
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1004  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~[] destination: B98 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590167368209642788
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589350896284915867
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~[] destination: B105 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589350896284915867
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B66 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584847296657545371
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B73 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584847296657545371
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1094  <|@ instruction JUMP ~[] destination: B107 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580343697030174875
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B79 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580343697030174875
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1114  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction JUMP ~[] destination: B109 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575840097402804379
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B83 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571336497775433883
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B87 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569156359392022262
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B51 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566832898148063387
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B91 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562329298520692891
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  958  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B95 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B120" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1198  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed} <|@ <|@
      nr 1200  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1204  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1208  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>} <|@ <|@
      nr 1210  <|@ instruction CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr 1212  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1216  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr 1220  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561185533928580529
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1228  <|@ instruction rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1230  <|@ instruction CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr 1232  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561185533928580529
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1236  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1240  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:32, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: stack:40|QWORD[.] r13|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr 1242  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
locals: - - - - stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:12, 46, 24] <|@ <|@
      nr 1246  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
stack: stack:64|QWORD[.] 
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 46, 24] <|@ <|@
      nr 1252  <|@ instruction CMP (x: rax|QWORD[.], y: stack:64|QWORD[.]) size: QWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.8150490730643403 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4550746124525390932
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction BRANCH trueDestinationProbability: 0.13679245283018868 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549841365493559547
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1278  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
java.util.Objects.equals(Objects.java:59) [bci: 11]
locals: - - 
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 20, 46, 24] <|@ <|@
      nr 1282  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1284  <|@ instruction BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549808171697969393
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557825698893322395
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B99 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546780700529023586
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction JUMP ~[] destination: B122 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537859297389370054
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B128 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4619731884390133392
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4620035933617669213
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4620035933617669213
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B141" 
    xhandlers
    flags 
    probability 4619457526087033470
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B35 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B35" "B116" "B126" "B49" 
    successors "B142" 
    xhandlers
    flags 
    probability 4620058202477958767
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1368  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors 
    xhandlers
    flags 
    probability 4620058202477958767
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1372  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1374  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B141" 
    xhandlers
    flags 
    probability 4602861695167027355
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction JUMP ~[] destination: B116 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4598536407558479054
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4597704408611252259
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1316  <|@ instruction JUMP ~[] destination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" "B136" 
    successors "B138" 
    xhandlers
    flags 
    probability 4598026994431955404
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1344  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors 
    xhandlers
    flags 
    probability 4598026994431955404
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1350  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4591000764590334595
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4590784699771983760
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4585308572350619273
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.7355351947531783 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4583229925940205174
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [r8:0, r13:0, r14:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: stack:40|QWORD[.] r13|QWORD[.] - - - r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r13|QWORD[.]] state [bci:3] <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:48|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 24] <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" 
    successors "B24" "B150" 
    xhandlers
    flags 
    probability 4585303181216966349
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  206  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4585273283819271622
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B21" 
    successors "B26" "B149" 
    xhandlers
    flags 
    probability 4585278674952924546
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rbx|QWORD[.] stack:32|QWORD[.] - stack:48|DWORD - - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:27] <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585278674952924546
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B148" 
    xhandlers
    flags 
    probability 4584766889561211535
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4584747549448694751
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B141" 
    xhandlers
    flags 
    probability 4578309549236732251
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B49 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4576599217976790328
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.003959995166108514 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576577653442178631
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:48|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 24] <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4576314994912303768
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1340  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4570334988793720629
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  240  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4569808734517599273
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B141" 
    xhandlers
    flags 
    probability 4560426043318885864
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B126 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4551785757826680500
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1434  <|@ instruction rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4549083092821127112
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1420  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4540645345622683902
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B141" 
    xhandlers
    flags 
    probability 4516600838668945907
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652] <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[-276540|0xfffffffffffbc7c4] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B5 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B5" "B151" "B17" "B152" "B153" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1470  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1472  <|@ st <@st|@reference-map: [rbx:0, r14:0, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] stack:32|QWORD[.] - - - r14|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1122723832] <|@ <|@
      nr  274  <|@ instruction MOV [r15|QWORD + 668] y: -311307 size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rbx|QWORD[.] Object[null] - stack:48|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction r10|DWORD = MOVE input: int[-326939|0xfffffffffffb02e5] <|@ <|@
      nr  582  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B68 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B68" "B75" "B112" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r11:0, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] rcx|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: rbx|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27, 6, 40, 46, 24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-333339|0xfffffffffffae9e5] <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B75 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1378  <|@ instruction r11|DWORD = MOVE input: int[-358435|0xfffffffffffa87dd] <|@ <|@
      nr 1380  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B143 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" "B45" "B118" "B117" "B145" "B144" "B143" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] r13|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r11|DWORD = MOVE input: int[-305691|0xfffffffffffb55e5] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B45 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1448  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652] <|@ <|@
      nr 1450  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r10|DWORD = MOVE input: int[-276540|0xfffffffffffbc7c4] <|@ <|@
      nr 1454  <|@ instruction JUMP ~[] destination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1182  <|@ instruction r11|DWORD = MOVE input: int[-313635|0xfffffffffffb36dd] <|@ <|@
      nr 1184  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction JUMP ~[] destination: B117 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction r11|DWORD = MOVE input: int[-357667|0xfffffffffffa8add] <|@ <|@
      nr 1388  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction JUMP ~[] destination: B144 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1134  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-351003|0xfffffffffffaa4e5] <|@ <|@
      nr 1142  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction JUMP ~[] destination: B112 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1158  <|@ instruction r10|DWORD = MOVE input: int[-321051|0xfffffffffffb19e5] <|@ <|@
      nr 1160  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction r11|DWORD = MOVE input: int[-302619|0xfffffffffffb61e5] <|@ <|@
      nr 1406  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1356  <|@ instruction MOV [r15|QWORD + 668] y: -363035 size: DWORD <|@ <|@
      nr 1358  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1360  <|@ st <@st|@reference-map: [rbx:0, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rbx|QWORD[.] stack:32|QWORD[.] - r11|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction r11|DWORD = MOVE input: int[-356915|0xfffffffffffa8dcd] <|@ <|@
      nr 1396  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction JUMP ~[] destination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction MOV [r15|QWORD + 668] y: -292379 size: DWORD <|@ <|@
      nr 1428  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1430  <|@ st <@st|@reference-map: [rbx:0, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rbx|QWORD[.] stack:32|QWORD[.] - r10|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1442  <|@ instruction r10|DWORD = MOVE input: int[-280603|0xfffffffffffbb7e5] <|@ <|@
      nr 1444  <|@ instruction JUMP ~[] destination: B151 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOVE input: int[-284699|0xfffffffffffba7e5] <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B17 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1190  <|@ instruction r11|DWORD = MOVE input: int[-312611|0xfffffffffffb3add] <|@ <|@
      nr 1192  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~[] destination: B118 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1669091861] <|@ <|@
      nr 1460  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1462  <|@ instruction r10|DWORD = MOVE input: int[-276284|0xfffffffffffbc8c4] <|@ <|@
      nr 1464  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #39         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokespecial #3          // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokespecial #30         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokespecial #37         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokespecial #37         // getRawValue:(int)java.lang.Object
    52: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B4" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5fbbff59 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rbx|QWORD[.] = MOV [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOV [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   10  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction r14|QWORD[.] = MOV [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   14  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   16  <|@ instruction TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B153" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction CMP [r14|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction CMP [rbx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B151" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rbx:0, r13:0, r14:0, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] r13|QWORD[.] - - - r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r14|QWORD[.]] state [bci:3] <|@ <|@
      nr   60  <|@ instruction rsi|DWORD[.] = MOV [rbx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r13:0, r14:0, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] r13|QWORD[.] - - - r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   66  <|@ instruction r11|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   78  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction CMP (x: r13|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.08493593479678752 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B18" 
    xhandlers
    flags 
    probability 4606417383911415054
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction r9|DWORD[.] = MOV [rbx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   96  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.9609648093772144 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B17" 
    xhandlers
    flags 
    probability 4606095649454238501
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4606095649454238501
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605303606463342293
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4605273675557126329
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B15" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605560346082932599
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  264  <|@ instruction TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605560346082932599
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B135" "B41" 
    successors "B34" "B146" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4635419071001135499
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r13:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] r13|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:3] <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r13:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] r13|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  292  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  294  <|@ instruction r8|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4635419071001135499
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction CMP (x: r13|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.08493593479678752 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634933351772407651
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction rdi|DWORD[.] = MOV [rbx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  320  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  322  <|@ instruction BRANCH trueDestinationProbability: 0.9609648093772144 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634729083163585819
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634729083163585819
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B44 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4634226216540914226
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634207213464193237
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r10:0, r13:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] r13|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:3] <|@ <|@
      nr  354  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B41 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613719014282316025
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr  388  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.7355351947531783 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B131" "B142" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611990314831112667
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 24] <|@ <|@
      nr  398  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B47 -> B131 falseDestination: B47 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" "B64" "B104" "B71" "B106" "B77" "B108" "B81" "B85" "B50" "B89" "B93" "B97" "B127" "B47" 
    successors "B132" "B139" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612517661500465431
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1298  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1300  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rbx|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:27] <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B131 -> B132 falseDestination: B131 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B138" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612517661500465431
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1306  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr 1308  <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1310  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1312  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B132 -> B138 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B138" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611984137230420629
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1320  <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1322  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611963975616626682
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1326  <|@ st <@st|@reference-map: [rax:0, rbx:0, rsi:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rbx|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27] <|@ <|@
      nr 1328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr 1330  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B135 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B131" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605090017350089849
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.003959995166108514 condition: = trueDestination: B50 -> B131 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605062634784208170
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction stack:56|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction stack:64|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction r11|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  440  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.9987323537885335 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  452  <|@ instruction CMP (x: rdx|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B58 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604366035535064010
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  470  <|@ instruction CMP (x: rdx|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B58 falseDestination: B56 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605053903978373742
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r11|DWORD[.] = MOV [r13|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  482  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [r9:0, r10:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: stack:40|QWORD[.] r13|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr  486  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B65" "B110" "B103" "B100" "B98" "B94" "B90" "B86" "B82" "B78" "B72" 
    successors "B60" "B142" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4607365294794397851
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  492  <|@ instruction r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  494  <|@ st <@st|@reference-map: [r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] r13|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - r13|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] r13|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rbx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  496  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] r13|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - r13|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] r13|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  498  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602861695167027355
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] r13|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - r13|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] r13|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602861695167027355
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] r13|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - r13|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] r13|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rsi|QWORD = MOV [rdx|DWORD[.] * 8 + 72] size: QWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  520  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B102" "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1038  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD = MOV [rbx|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD[.] = MOV [r13|QWORD[.] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr 1048  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD + r9|DWORD[.] * 8] size: DWORD <|@ <|@
      nr 1050  <|@ instruction CMP (x: rsi|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1052  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B131" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1072  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B104 -> B131 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B131" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B106 -> B131 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B131" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr 1100  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr 1102  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepEquals0(Object, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:472, 6, 40, 46, 24] <|@ <|@
      nr 1108  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B108 -> B131 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~[] destination: B110 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598358095539656859
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr  528  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B70" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr  594  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  672  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  734  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B88" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr  794  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr  852  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr  910  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" "B100" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr  968  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr 1026  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1030  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B100 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B103 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction CMP (x: rdi|DWORD, y: stack:72|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593854495912286363
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  542  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = MOV [rbx|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rdx|DWORD = MOV [r13|QWORD[.] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  550  <|@ instruction CMP (x: rdx|DWORD, y: [rsi|QWORD + r9|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr  552  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ st <@st|@reference-map: [r9:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] r13|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - r13|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] r13|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  558  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  560  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B65 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589350896284915867
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOV [rbx|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  614  <|@ instruction rdx|DWORD = MOVSXB [r13|QWORD[.] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVZXB rdx|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction rdx|DWORD = SETCC condition: != <|@ <|@
      nr  622  <|@ instruction rsi|DWORD = MOVZXB [rsi|QWORD + r9|DWORD[.] * 8] size: DWORD <|@ <|@
      nr  624  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction rsi|DWORD = SETCC condition: != <|@ <|@
      nr  628  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ st <@st|@reference-map: [r9:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] r13|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - r13|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] r13|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  638  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B72 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584847296657545371
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getLong(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:154, 6, 40, 46, 24] <|@ <|@
      nr  690  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 157]
stack: rax|QWORD - 
locals: r11|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:157, 6, 40, 46, 24] <|@ <|@
      nr  696  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  698  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ instruction stack:80|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 165]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:80|QWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getLong(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:165, 6, 40, 46, 24] <|@ <|@
      nr  706  <|@ instruction CMP (x: rax|QWORD, y: stack:80|QWORD) size: QWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  714  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B78 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580343697030174875
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  748  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:197, 6, 40, 46, 24] <|@ <|@
      nr  750  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  754  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 200]
stack: xmm0|SINGLE 
locals: r11|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:200, 6, 40, 46, 24] <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction stack:88|SINGLE = VMOVE xmm0|SINGLE <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:88|SINGLE - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:208, 6, 40, 46, 24] <|@ <|@
      nr  766  <|@ instruction VUCOMISS (x: xmm0|SINGLE, y: stack:88|SINGLE) <|@ <|@
      nr  768  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B131 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B82 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575840097402804379
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:240, 6, 40, 46, 24] <|@ <|@
      nr  808  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  812  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 243]
stack: xmm0|DOUBLE - 
locals: r11|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:243, 6, 40, 46, 24] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  816  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction stack:80|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:80|DOUBLE - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:251, 6, 40, 46, 24] <|@ <|@
      nr  824  <|@ instruction VUCOMISD (x: xmm0|DOUBLE, y: stack:80|DOUBLE) <|@ <|@
      nr  826  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B131 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B86 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571336497775433883
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:283, 6, 40, 46, 24] <|@ <|@
      nr  866  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 286]
stack: rax|DWORD 
locals: r11|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:286, 6, 40, 46, 24] <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:88|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:294, 6, 40, 46, 24] <|@ <|@
      nr  882  <|@ instruction CMP (x: rax|DWORD, y: stack:88|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B90 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566832898148063387
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:325, 6, 40, 46, 24] <|@ <|@
      nr  924  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 328]
stack: rax|DWORD 
locals: r11|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:328, 6, 40, 46, 24] <|@ <|@
      nr  930  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  932  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:88|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:336, 6, 40, 46, 24] <|@ <|@
      nr  940  <|@ instruction CMP (x: rax|DWORD, y: stack:88|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction JUMP ~[] destination: B94 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4562329298520692891
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:367, 6, 40, 46, 24] <|@ <|@
      nr  982  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 370]
stack: rax|DWORD 
locals: r11|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:370, 6, 40, 46, 24] <|@ <|@
      nr  988  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
locals: stack:68|DWORD[.] stack:32|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:88|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:378, 6, 40, 46, 24] <|@ <|@
      nr  998  <|@ instruction CMP (x: rax|DWORD, y: stack:88|DWORD) size: DWORD <|@ <|@
      nr 1000  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4557825698893322395
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1004  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~[] destination: B98 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B120" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1198  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed} <|@ <|@
      nr 1200  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1204  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1208  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>} <|@ <|@
      nr 1210  <|@ instruction CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr 1212  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr 1220  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B121 -> B125 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B125" "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561185533928580529
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1228  <|@ instruction rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1230  <|@ instruction CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr 1232  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B123 -> B125 falseDestination: B123 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B121" "B123" 
    successors "B142" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562079568446025981
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1240  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:32, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: stack:40|QWORD[.] r13|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr 1242  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
locals: - - - - stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:12, 46, 24] <|@ <|@
      nr 1246  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
stack: stack:64|QWORD[.] 
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 46, 24] <|@ <|@
      nr 1252  <|@ instruction CMP (x: rax|QWORD[.], y: stack:64|QWORD[.]) size: QWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.8150490730643403 condition: = trueDestination: B125 -> B142 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B131" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4550746124525390932
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction BRANCH trueDestinationProbability: 0.13679245283018868 condition: = trueDestination: B127 -> B131 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" "B142" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4549841365493559547
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1278  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
java.util.Objects.equals(Objects.java:59) [bci: 11]
locals: - - 
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 20, 46, 24] <|@ <|@
      nr 1282  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1284  <|@ instruction BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B129 -> B131 falseDestination: B129 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 4620035933617669213
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B142" 
    xhandlers
    flags 
    probability 4619457526087033470
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B35 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B129" "B35" "B59" "B125" "B47" 
    successors 
    xhandlers
    flags 
    probability 4620058202477958767
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1372  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1374  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" 
    successors 
    xhandlers
    flags 
    probability 4598026994431955404
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1350  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4591000764590334595
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4590784699771983760
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4585308572350619273
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr  156  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.7355351947531783 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4583229925940205174
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [r8:0, r13:0, r14:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: stack:40|QWORD[.] r13|QWORD[.] - - - r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r13|QWORD[.]] state [bci:3] <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:48|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 24] <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" 
    successors "B25" "B150" 
    xhandlers
    flags 
    probability 4585303181216966349
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  206  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" "B20" 
    successors "B26" "B149" 
    xhandlers
    flags 
    probability 4585278674952924546
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rbx|QWORD[.] stack:32|QWORD[.] - stack:48|DWORD - - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:27] <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585278674952924546
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B148" 
    xhandlers
    flags 
    probability 4584766889561211535
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4584747549448694751
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4576599217976790328
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.003959995166108514 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576577653442178631
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - stack:48|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 24] <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4570334988793720629
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  240  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4569808734517599273
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  138  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4551785757826680500
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1434  <|@ instruction rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4549083092821127112
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1420  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652] <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[-276540|0xfffffffffffbc7c4] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B5 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B5" "B151" "B17" "B152" "B153" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1470  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1472  <|@ st <@st|@reference-map: [rbx:0, r14:0, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] stack:32|QWORD[.] - - - r14|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1122723832] <|@ <|@
      nr  274  <|@ instruction MOV [r15|QWORD + 668] y: -311307 size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rbx|QWORD[.] Object[null] - stack:48|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction r10|DWORD = MOVE input: int[-326939|0xfffffffffffb02e5] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B68 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B68" "B75" "B112" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1160  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r11:0, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:32|QWORD[.] rcx|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: rbx|QWORD[.] stack:32|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27, 6, 40, 46, 24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-333339|0xfffffffffffae9e5] <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B75 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1378  <|@ instruction r11|DWORD = MOVE input: int[-358435|0xfffffffffffa87dd] <|@ <|@
      nr 1380  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B143 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" "B45" "B118" "B117" "B145" "B144" "B143" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rbx|QWORD[.] r13|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r11|DWORD = MOVE input: int[-305691|0xfffffffffffb55e5] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B45 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1448  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652] <|@ <|@
      nr 1450  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r10|DWORD = MOVE input: int[-276540|0xfffffffffffbc7c4] <|@ <|@
      nr 1454  <|@ instruction JUMP ~[] destination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1182  <|@ instruction r11|DWORD = MOVE input: int[-313635|0xfffffffffffb36dd] <|@ <|@
      nr 1184  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction JUMP ~[] destination: B117 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction r11|DWORD = MOVE input: int[-357667|0xfffffffffffa8add] <|@ <|@
      nr 1388  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction JUMP ~[] destination: B144 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1134  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-351003|0xfffffffffffaa4e5] <|@ <|@
      nr 1148  <|@ instruction JUMP ~[] destination: B112 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1158  <|@ instruction r10|DWORD = MOVE input: int[-321051|0xfffffffffffb19e5] <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction r11|DWORD = MOVE input: int[-302619|0xfffffffffffb61e5] <|@ <|@
      nr 1406  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1356  <|@ instruction MOV [r15|QWORD + 668] y: -363035 size: DWORD <|@ <|@
      nr 1358  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1360  <|@ st <@st|@reference-map: [rbx:0, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rbx|QWORD[.] stack:32|QWORD[.] - r11|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction r11|DWORD = MOVE input: int[-356915|0xfffffffffffa8dcd] <|@ <|@
      nr 1396  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction JUMP ~[] destination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction MOV [r15|QWORD + 668] y: -292379 size: DWORD <|@ <|@
      nr 1428  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1430  <|@ st <@st|@reference-map: [rbx:0, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rbx|QWORD[.] stack:32|QWORD[.] - r10|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1442  <|@ instruction r10|DWORD = MOVE input: int[-280603|0xfffffffffffbb7e5] <|@ <|@
      nr 1444  <|@ instruction JUMP ~[] destination: B151 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOVE input: int[-284699|0xfffffffffffba7e5] <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B17 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1190  <|@ instruction r11|DWORD = MOVE input: int[-312611|0xfffffffffffb3add] <|@ <|@
      nr 1192  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~[] destination: B118 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1669091861] <|@ <|@
      nr 1460  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1462  <|@ instruction r10|DWORD = MOVE input: int[-276284|0xfffffffffffbc8c4] <|@ <|@
      nr 1464  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #39         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokespecial #3          // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokespecial #30         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokespecial #37         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokespecial #37         // getRawValue:(int)java.lang.Object
    52: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c2450488b5e384c8b6e304c896c24404c8b7610e800000000904d85f60f840e00000041817e08addeadde0f85ce0a00004885db0f8432090000817b08addeadde0f85d50900004185068b73188b14f50c000000458b560c458bda41d1e3413bd30f865e0a000048c1e603468b449e1049c1e0034d3be80f84b407000048895c2438448b4b2041ffc34585c90f85b5070000413bd30f863f0a0000428b549e1085d20f8471070000813cd508000000addeadde0f856c08000048c1e2034d85ed0f84cd0800004c8bd266660f1f8400000000004185028b560c458b5a0c458bc341d1e0413bd00f8682090000468b4c8610418bc948c1e1034c3be90f84e40600008b7b2085ff0f853900000041ffc0413bd00f86fc080000428b54861085d20f84a8060000813cd508000000addeadde0f859706000085050000000048c1e2034c8bd2eb8e81ffaddeadde448944242c44895c24340f857f000000498bf5488bd148b8ffffffffffffffff0f1f8000000000e8000000009085c00f856a060000448b44242c488b5c24388b431841ffc0443b04c50c0000000f83d808000048c1e003428b74801085f60f8452060000813cf508000000addeadde0f854106000085050000000048c1e6034c8bd64c8b6c2440488bf0e9f9feffff81ffaddeadde749e44894c242848894c2420448b1cfd080000004181fbaddeadde0f850a0500004c8b6c2440418b750848baaddeaddeaddeadde483b14f5300000000f85cd0800004585c90f8416000000428b34cd08000000483b14f5300000000f85f3070000458b5d2c44895c241c438504dc41ba000000000f1f8400000000000f1f8000000000468b04dd10000000428b1cc50c0000008b3cdd0c000000413bfa0f8e670500004489542418428b34c514000000443b14f50c0000000f83c007000048c1e603428b549610488b34d5480000004885f60f8474000000413bfa0f868d07000048c1e3034a8b74d310418b543500428b34ce3bf20f84d700000085d20f849dfeffff85f60f8495feffff48c1e203448bc649c1e003488bf2498bd0660f1f440000e8000000009085c00f8470feffff448b54241841ffc2448b5c241c448b4c24284c8b6c2440e937ffffff81faaddeadde0f849c00000081faaddeadde0f84d400000049c1e00381faaddeadde0f8420010000448b54241841ffc281faaddeadde0f847f01000081faaddeadde0f84e701000081faaddeadde0f845302000081faaddeadde0f84af02000081faaddeadde0f840b030000850500000000448b5c241c448b4c24284c8b6c2440e9b1feffff850500000000448b54241841ffc2448b5c241c448b4c24284c8b6c2440e98ffeffff3b7c24180f86dc050000448b542418448b4c24284c8b6c244048c1e3034a8b74d310418b543500423b14ce0f857bfdffff85050000000041ffc2448b5c241ce94bfeffff448b542418448b4c24284c8b6c2440413bfa0f86b805000048c1e3034a8b74d310410fbe5435000fb6d285d20f95c20fb6d2420fb634ce85f6400f95c6400fb6f63bf20f851ffdffff85050000000041ffc2448b5c241ce9effdffff448b5424184c8b6c2440498bf0498bd5418bca666690e80000000090448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241848894424100f1f8000000000e80000000090483b4424100f85b5fcffff448b54241841ffc2448b5c241c448b4c24284c8b6c2440e97cfdffff448954240c498bf0488b5424408b4c24186690e80000000090448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c2418c5fa11442408660f1f440000e80000000090c5f82e4424080f8a44fcffff0f853efcffff448b54240c448b5c241c448b4c24284c8b6c2440e908fdffff448954240c498bf0488b5424408b4c2418660f1f440000e80000000090448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c2418c5fb11442410660f1f440000e80000000090c5f92e4424100f8accfbffff0f85c6fbffff448b54240c448b5c241c448b4c24284c8b6c2440e990fcffff448954240c498bf0488b5424408b4c2418660f1f440000e80000000090448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241889442408e800000000903b4424080f855efbffff448b54240c448b5c241c448b4c24284c8b6c2440e928fcffff448954240c498bf0488b5424408b4c2418660f1f440000e80000000090448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241889442408e800000000903b4424080f85f6faffff448b54240c448b5c241c448b4c24284c8b6c2440e9c0fbffff448954240c498bf0488b5424408b4c2418660f1f440000e80000000090448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241889442408e800000000903b4424080f858efaffff448b54240c448b5c241c448b4c24284c8b6c2440e958fbffff4181fbaddeadde0f857b0300004c8b6c2440418b750849bbaddeaddeaddeadde4c3b1cf5300000000f85080300004585c90f8416000000428b34cd080000004c3b1cf5300000000f859d020000438504cc498bf548b8ffffffffffffffff90e80000000090488b742420488944242048b8ffffffffffffffff660f1f440000e80000000090483b4424200f844f000000488b7424204885f60f84d7f9ffff488bd048b8ffffffffffffffff0f1f4000e8000000009085c00f84b8f9ffffe91d000000b8ffffffff488b6c24504883c458850500000000c5f877c344895c24348b442434488b6c24504883c458850500000000c5f877c3b8ffffffff488b6c24504883c458850500000000c5f877c3b8ffffffff488b6c24504883c458850500000000c5f877c3418bc2488b6c24504883c458850500000000c5f877c34181f9addeadde44895c243444895424300f85820000004c8b6c244041854500498bf5498bd048b8ffffffffffffffff666690e8000000009085c00f85b5000000448b5c2434488b5c24388b4318443b1cc50c0000000f830502000048c1e003468b5498104585d20f845800000042813cd508000000addeadde0f858d00000049c1e203488bf0498bd2448b5424304c8b6c2440e9ddf7ffff4181f9addeadde749f49c1e103498bf1488b542440498bc848b8ffffffffffffffffe80000000090e973ffffffb8ffffffff488b6c24504883c458850500000000c5f877c3b8ffffffff488b6c24504883c458850500000000c5f877c38b442430488b6c24504883c458850500000000c5f877c3b8ffffffff488b6c24504883c458850500000000c5f877c349baaddeaddeaddeadde4d8bda41bac4c7fbff4589979c0200004d899fa8020000e80000000090448954243049baaddeaddeaddeadde41c7879c020000f53ffbff4d8997a8020000e80000000090488b5c243841bae502fbff448b442418448b5c241c488b4c24204589979c0200004d89a7a8020000e80000000090488b5c243841bae5e9faffebd041bbdd87faff488b5c243845899f9c0200004d89a7a8020000e8000000009041bbe555fbffebe449baaddeaddeaddeadde4d8bda41bac4c7fbffe94bffffff41bbdd36fbff488b5c2438ebbf41bbdd8afaff488b5c2438ebb2488b5c243841bae5a4faffe967ffffff488b5c243841bae519fbffe957ffffff41bbe561fbffeb8a448b5c243441c7879c020000e575faff4d89a7a8020000e8000000009041bbcd8dfaff4c8b6c2440488b5c2438e958ffffff448b54243041c7879c020000e589fbff4d89a7a8020000e8000000009049bb000000000000000041bae5b7fbffe9a5feffff49bb000000000000000041bae5a7fbffe990feffff41bbdd3afbff488b5c2438e901ffffff49baaddeaddeaddeadde4d8bda41bac4c8fbffe968feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5fbbff59 slotKind: QWORD  <||@
  Comment 48 6 rbx|QWORD[.] = MOV [rsi|QWORD + 56] size: QWORD  <||@
  Comment 52 8 r13|QWORD[.] = MOV [rsi|QWORD + 48] size: QWORD  <||@
  Comment 56 10 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 61 12 r14|QWORD[.] = MOV [rsi|QWORD + 16] size: QWORD  <||@
  Comment 65 14 - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 65 {Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 71 16 TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD  <||@
  Comment 74 18 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 80 block B2 null  <||@
  Comment 80 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 80 26 CMP [r14|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 80 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 88 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B153  <||@
  Comment 94 block B4 null  <||@
  Comment 94 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 36 TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD  <||@
  Comment 97 38 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 103 block B6 null  <||@
  Comment 103 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 52 CMP [rbx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}  <||@
  Comment 103 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}}  <||@
  Comment 110 54 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B152  <||@
  Comment 116 block B7 null  <||@
  Comment 116 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 116 58 NULLCHECK [r14|QWORD[.]] state [bci:3]  <||@
  Comment 116 [rbx:0, r13:0, r14:0, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r14|QWORD[.]  |-  |-   <||@
  Comment 116 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 119 60 rsi|DWORD[.] = MOV [rbx|QWORD[.] + 24] size: DWORD  <||@
  Comment 122 62 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 122 [rbx:0, rsi:0, r13:0, r14:0, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r14|QWORD[.]  |-  |-   <||@
  Comment 122 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 129 64 r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 133 66 r11|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 139 68 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 142 70 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B151  <||@
  Comment 148 block B8 null  <||@
  Comment 148 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 74 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 152 76 r8|DWORD[.] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 157 78 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 161 80 CMP (x: r13|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 164 82 BRANCH trueDestinationProbability: 0.08493593479678752 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 170 block B10 null  <||@
  Comment 170 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 170 92 stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 175 94 r9|DWORD[.] = MOV [rbx|QWORD[.] + 32] size: DWORD  <||@
  Comment 179 96 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 182 98 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 185 100 BRANCH trueDestinationProbability: 0.9609648093772144 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B18  <||@
  Comment 191 block B11 null  <||@
  Comment 191 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 104 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 194 106 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B17  <||@
  Comment 200 block B12 null  <||@
  Comment 200 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 110 rdx|DWORD[.] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 205 112 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 207 114 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 213 block B14 null  <||@
  Comment 213 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 124 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 213 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 224 126 BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 230 block B15 null  <||@
  Comment 230 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 230 130 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 234 132 JUMP ~[] destination: B15 -> B30  <||@
  Comment 234 block B30 null  <||@
  Comment 234 262 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 234 264 TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 237 266 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 243 block B32 null  <||@
  Comment 243 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 243 282 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 246 284 JUMP ~[] destination: B32 -> B33  <||@
  Comment 246 block B33 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 246 286 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 256 288 NULLCHECK [r10|QWORD[.]] state [bci:3]  <||@
  Comment 256 [rbx:0, rsi:0, r10:0, r13:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 256 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 259 290 rdx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:3]  <||@
  Comment 259 [rbx:0, rsi:0, r10:0, r13:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 259 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 262 292 r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 266 294 r8|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 272 296 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 275 298 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B146  <||@
  Comment 281 block B34 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 281 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 281 302 r9|DWORD[.] = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 286 304 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 293 306 CMP (x: r13|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 296 308 BRANCH trueDestinationProbability: 0.08493593479678752 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 302 block B36 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 302 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 302 318 rdi|DWORD[.] = MOV [rbx|QWORD[.] + 32] size: DWORD  <||@
  Comment 305 320 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 307 322 BRANCH trueDestinationProbability: 0.9609648093772144 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B46  <||@
  Comment 313 block B37 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 313 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 326 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 316 328 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 319 330 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B45  <||@
  Comment 325 block B38 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 325 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 325 334 rdx|DWORD[.] = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 330 336 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 332 338 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B44 falseDestination: B38 -> B40  <||@
  Comment 338 block B40 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 338 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 338 346 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 338 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 349 348 BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44  <||@
  Comment 355 block B41 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 355 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 355 352 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:3]  <||@
  Comment 355 [rdx:0, rbx:0, rsi:0, r10:0, r13:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 355 {infopoint: SAFEPOINT}  <||@
  Comment 355 11  <||@
  Comment 361 354 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 365 356 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 368 358 JUMP ~[] destination: B41 -> B33  <||@
  Comment 370 block B46 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 370 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 382 CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 370 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 376 388 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 381 390 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 386 384 BRANCH trueDestinationProbability: 0.7355351947531783 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B50  <||@
  Comment 392 block B47 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 392 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 392 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 395 394 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 398 396 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 24]  <||@
  Comment 398 7  <||@
  Comment 415 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 420 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 421 398 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 423 400 BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B47 -> B131 falseDestination: B47 -> B142  <||@
  Comment 429 block B131 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 429 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 1288 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 434 1290 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 439 1296 rax|DWORD[.] = MOV [rbx|QWORD[.] + 24] size: DWORD  <||@
  Comment 442 1298 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 445 1300 CMP (x: r8|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:27]  <||@
  Comment 445 [rax:0, rbx:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3               |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |                |   |   |   |    <||@
  Comment 445 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 453 1302 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B131 -> B132 falseDestination: B131 -> B139  <||@
  Comment 459 block B132 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 459 1304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 1306 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 463 1308 rsi|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 468 1310 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 470 1312 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B132 -> B138 falseDestination: B132 -> B134  <||@
  Comment 476 block B134 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 476 1318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 476 1320 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 476 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 487 1322 BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B138  <||@
  Comment 493 block B135 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 493 1324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 1326 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27]  <||@
  Comment 493 [rax:0, rbx:0, rsi:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3               |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |                |   |   |   |    <||@
  Comment 493 {infopoint: SAFEPOINT}  <||@
  Comment 493 11  <||@
  Comment 499 1328 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 503 1330 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 506 1332 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 511 1334 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 514 1336 JUMP ~[] destination: B135 -> B33  <||@
  Comment 519 block B50 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 519 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 519 420 CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 519 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 525 422 BRANCH trueDestinationProbability: 0.003959995166108514 condition: = trueDestination: B50 -> B131 falseDestination: B50 -> B52  <||@
  Comment 527 block B52 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 527 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 527 434 stack:56|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 532 436 stack:64|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 537 438 r11|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 545 440 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}  <||@
  Comment 545 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}}  <||@
  Comment 552 442 BRANCH trueDestinationProbability: 0.9987323537885335 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B119  <||@
  Comment 558 block B53 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 558 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 558 446 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 563 448 rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 567 450 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 567 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 577 452 CMP (x: rdx|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 585 454 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B118  <||@
  Comment 591 block B54 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 591 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 591 458 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 594 460 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B58 falseDestination: B54 -> B56  <||@
  Comment 600 block B56 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 600 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 600 468 rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 608 470 CMP (x: rdx|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 616 472 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B58 falseDestination: B56 -> B117  <||@
  Comment 622 block B58 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 622 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 622 480 r11|DWORD[.] = MOV [r13|QWORD[.] + 44] size: DWORD  <||@
  Comment 626 482 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 631 484 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:3]  <||@
  Comment 631 [r9:0, r10:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5             |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 631 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 635 486 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 641 488 JUMP ~[] destination: B58 -> B59  <||@
  Comment 641 block B59 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 641 490 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 656 492 r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 664 494 rbx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 664 [r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |r13|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |r13|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 664 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 672 496 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 672 [rbx:0, r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |r13|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |r13|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 672 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 679 498 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 682 500 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B142  <||@
  Comment 688 block B60 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 688 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 504 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 693 506 rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 701 508 CMP (x: r10|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 701 [rbx:0, rsi:0, r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |r13|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |r13|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 701 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 709 510 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B113  <||@
  Comment 715 block B61 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 715 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 715 514 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 719 516 rdx|DWORD[.] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 724 518 rsi|QWORD = MOV [rdx|DWORD[.] * 8 + 72] size: QWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 724 [rdx:0, rbx:0, r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |r13|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |r13|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 724 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 732 520 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 735 522 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B101  <||@
  Comment 741 block B101 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 741 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 741 1036 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 744 1038 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B111  <||@
  Comment 750 block B102 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 750 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 750 1042 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 754 1044 rsi|QWORD = MOV [rbx|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 759 1046 rdx|DWORD[.] = MOV [r13|QWORD[.] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 764 1048 rsi|DWORD[.] = MOV [rsi|QWORD + r9|DWORD[.] * 8] size: DWORD  <||@
  Comment 768 1050 CMP (x: rsi|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 770 1052 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B104  <||@
  Comment 776 block B104 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 776 1068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 776 1070 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 778 1072 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B104 -> B131 falseDestination: B104 -> B106  <||@
  Comment 784 block B106 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 784 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 784 1084 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 786 1086 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B106 -> B131 falseDestination: B106 -> B108  <||@
  Comment 792 block B108 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 792 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 792 1098 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 796 1100 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 803 1102 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 806 1104 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 809 1106 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepEquals0(Object, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:472, 6, 40, 46, 24]  <||@
  Comment 809 8  <||@
  Comment 815 {HotSpotMethod<NodeClass.deepEquals0(Object, Object)>}  <||@
  Comment 820 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 821 1108 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 823 1110 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B108 -> B131 falseDestination: B108 -> B110  <||@
  Comment 829 block B110 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 829 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 829 1122 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 837 1124 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 842 1126 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 847 1128 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 852 1130 JUMP ~[] destination: B110 -> B59  <||@
  Comment 857 block B62 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 857 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 857 526 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int]  <||@
  Comment 857 {NarrowOop[Class:int]}  <||@
  Comment 863 528 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B69  <||@
  Comment 869 block B69 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 869 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 592 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean]  <||@
  Comment 869 {NarrowOop[Class:boolean]}  <||@
  Comment 875 594 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B76  <||@
  Comment 881 block B76 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 881 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 670 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 885 672 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long]  <||@
  Comment 885 {NarrowOop[Class:long]}  <||@
  Comment 891 674 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B80  <||@
  Comment 897 block B80 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 897 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 897 732 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 905 734 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float]  <||@
  Comment 905 {NarrowOop[Class:float]}  <||@
  Comment 911 736 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84  <||@
  Comment 917 block B84 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 917 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 917 792 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double]  <||@
  Comment 917 {NarrowOop[Class:double]}  <||@
  Comment 923 794 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B88  <||@
  Comment 929 block B88 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 929 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 929 850 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short]  <||@
  Comment 929 {NarrowOop[Class:short]}  <||@
  Comment 935 852 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B92  <||@
  Comment 941 block B92 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 941 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 941 908 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char]  <||@
  Comment 941 {NarrowOop[Class:char]}  <||@
  Comment 947 910 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B96  <||@
  Comment 953 block B96 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 953 964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 953 966 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte]  <||@
  Comment 953 {NarrowOop[Class:byte]}  <||@
  Comment 959 968 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B100  <||@
  Comment 965 block B100 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 965 1022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 965 1024 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 965 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 965 {infopoint: SAFEPOINT}  <||@
  Comment 965 11  <||@
  Comment 971 1026 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 976 1028 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 981 1030 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 986 1032 JUMP ~[] destination: B100 -> B59  <||@
  Comment 991 block B103 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 991 1054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 991 1056 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 991 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 991 {infopoint: SAFEPOINT}  <||@
  Comment 991 11  <||@
  Comment 997 1058 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 1005 1060 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1010 1062 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1015 1064 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 1066 JUMP ~[] destination: B103 -> B59  <||@
  Comment 1025 block B63 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1025 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1025 532 CMP (x: rdi|DWORD, y: stack:72|DWORD) size: DWORD  <||@
  Comment 1029 534 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B67  <||@
  Comment 1035 block B64 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1035 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1035 538 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1040 540 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1045 542 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1050 544 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1054 546 rsi|QWORD = MOV [rbx|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1059 548 rdx|DWORD = MOV [r13|QWORD[.] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 1064 550 CMP (x: rdx|DWORD, y: [rsi|QWORD + r9|DWORD[.] * 8]) size: DWORD  <||@
  Comment 1068 552 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B131  <||@
  Comment 1074 block B65 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1074 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1074 556 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 1074 [r9:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |r13|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |r13|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1074 {infopoint: SAFEPOINT}  <||@
  Comment 1074 11  <||@
  Comment 1080 558 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1083 560 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1088 562 JUMP ~[] destination: B65 -> B59  <||@
  Comment 1093 block B70 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1093 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1093 598 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1098 600 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1103 602 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1108 604 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1111 606 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B70 -> B71 falseDestination: B70 -> B74  <||@
  Comment 1117 block B71 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1117 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1117 610 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1121 612 rsi|QWORD = MOV [rbx|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1126 614 rdx|DWORD = MOVSXB [r13|QWORD[.] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 1132 616 rdx|DWORD = MOVZXB rdx|DWORD size: DWORD  <||@
  Comment 1135 618 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1137 620 rdx|DWORD = SETCC condition: !=  <||@
  Comment 1143 622 rsi|DWORD = MOVZXB [rsi|QWORD + r9|DWORD[.] * 8] size: DWORD  <||@
  Comment 1148 624 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1150 626 rsi|DWORD = SETCC condition: !=  <||@
  Comment 1158 628 CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1160 630 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B131  <||@
  Comment 1166 block B72 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1166 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1166 634 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 1166 [r9:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |r13|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |r13|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1166 {infopoint: SAFEPOINT}  <||@
  Comment 1166 11  <||@
  Comment 1172 636 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1175 638 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1180 640 JUMP ~[] destination: B72 -> B59  <||@
  Comment 1185 block B77 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1185 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1185 678 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1190 680 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1195 682 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1198 684 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1201 686 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1204 688 rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getLong(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:154, 6, 40, 46, 24]  <||@
  Comment 1204 9  <||@
  Comment 1207 {HotSpotMethod<Fields.getLong(Object, int)>}  <||@
  Comment 1212 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1213 690 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1218 692 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1226 694 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:157, 6, 40, 46, 24]  <||@
  Comment 1226 [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 157, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|QWORD     |-                  |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1226 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1230 696 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1234 698 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1239 700 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1243 702 stack:80|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1248 704 rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getLong(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:165, 6, 40, 46, 24]  <||@
  Comment 1248 9  <||@
  Comment 1255 {HotSpotMethod<Fields.getLong(Object, int)>}  <||@
  Comment 1260 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 165, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:80|QWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1261 706 CMP (x: rax|QWORD, y: stack:80|QWORD) size: QWORD  <||@
  Comment 1266 708 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B131  <||@
  Comment 1272 block B78 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1272 710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 712 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 1280 714 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1285 716 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1290 718 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1295 720 JUMP ~[] destination: B78 -> B59  <||@
  Comment 1300 block B81 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1300 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1300 740 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1305 742 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1308 744 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1313 746 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1317 748 xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:197, 6, 40, 46, 24]  <||@
  Comment 1317 9  <||@
  Comment 1319 {HotSpotMethod<Fields.getFloat(Object, int)>}  <||@
  Comment 1324 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1325 750 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1330 752 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1338 754 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:200, 6, 40, 46, 24]  <||@
  Comment 1338 [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 200, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |xmm0|SINGLE   |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1338 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1342 756 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1346 758 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1351 760 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1355 762 stack:88|SINGLE = VMOVE xmm0|SINGLE  <||@
  Comment 1361 764 xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:208, 6, 40, 46, 24]  <||@
  Comment 1361 9  <||@
  Comment 1367 {HotSpotMethod<Fields.getFloat(Object, int)>}  <||@
  Comment 1372 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5                |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:88|SINGLE  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1373 766 VUCOMISS (x: xmm0|SINGLE, y: stack:88|SINGLE)  <||@
  Comment 1379 768 FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B131 unorderedIsTrue: false  <||@
  Comment 1391 block B82 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1391 770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1391 772 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1396 774 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1401 776 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1406 778 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1411 780 JUMP ~[] destination: B82 -> B59  <||@
  Comment 1416 block B85 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1416 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1416 798 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1421 800 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1424 802 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1429 804 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1433 806 xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:240, 6, 40, 46, 24]  <||@
  Comment 1433 9  <||@
  Comment 1439 {HotSpotMethod<Fields.getDouble(Object, int)>}  <||@
  Comment 1444 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1445 808 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1450 810 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1458 812 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:243, 6, 40, 46, 24]  <||@
  Comment 1458 [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 243, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |xmm0|DOUBLE   |-                  |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1458 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1462 814 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1466 816 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1471 818 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1475 820 stack:80|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 1481 822 xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:251, 6, 40, 46, 24]  <||@
  Comment 1481 9  <||@
  Comment 1487 {HotSpotMethod<Fields.getDouble(Object, int)>}  <||@
  Comment 1492 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5                |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:80|DOUBLE  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1493 824 VUCOMISD (x: xmm0|DOUBLE, y: stack:80|DOUBLE)  <||@
  Comment 1499 826 FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B131 unorderedIsTrue: false  <||@
  Comment 1511 block B86 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1511 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 830 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1516 832 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1521 834 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1526 836 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1531 838 JUMP ~[] destination: B86 -> B59  <||@
  Comment 1536 block B89 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1536 854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1536 856 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1541 858 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1544 860 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1549 862 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1553 864 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:283, 6, 40, 46, 24]  <||@
  Comment 1553 9  <||@
  Comment 1559 {HotSpotMethod<Fields.getShort(Object, int)>}  <||@
  Comment 1564 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1565 866 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1570 868 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1578 870 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:286, 6, 40, 46, 24]  <||@
  Comment 1578 [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 286, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1578 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1582 872 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1586 874 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1591 876 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1595 878 stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1599 880 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:294, 6, 40, 46, 24]  <||@
  Comment 1599 {HotSpotMethod<Fields.getShort(Object, int)>}  <||@
  Comment 1599 9  <||@
  Comment 1604 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:88|DWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1605 882 CMP (x: rax|DWORD, y: stack:88|DWORD) size: DWORD  <||@
  Comment 1609 884 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B131  <||@
  Comment 1615 block B90 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1615 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1615 888 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1620 890 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1625 892 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1630 894 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1635 896 JUMP ~[] destination: B90 -> B59  <||@
  Comment 1640 block B93 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1640 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1640 914 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1645 916 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1648 918 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1653 920 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1657 922 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:325, 6, 40, 46, 24]  <||@
  Comment 1657 9  <||@
  Comment 1663 {HotSpotMethod<Fields.getChar(Object, int)>}  <||@
  Comment 1668 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1669 924 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1674 926 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1682 928 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:328, 6, 40, 46, 24]  <||@
  Comment 1682 [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 328, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1682 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1686 930 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1690 932 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1695 934 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1699 936 stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1703 938 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:336, 6, 40, 46, 24]  <||@
  Comment 1703 {HotSpotMethod<Fields.getChar(Object, int)>}  <||@
  Comment 1703 9  <||@
  Comment 1708 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:88|DWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1709 940 CMP (x: rax|DWORD, y: stack:88|DWORD) size: DWORD  <||@
  Comment 1713 942 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B131  <||@
  Comment 1719 block B94 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1719 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1719 946 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1724 948 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1729 950 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1734 952 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1739 954 JUMP ~[] destination: B94 -> B59  <||@
  Comment 1744 block B97 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1744 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1744 972 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1749 974 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1752 976 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1757 978 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1761 980 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:367, 6, 40, 46, 24]  <||@
  Comment 1761 9  <||@
  Comment 1767 {HotSpotMethod<Fields.getByte(Object, int)>}  <||@
  Comment 1772 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1773 982 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1778 984 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1786 986 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:370, 6, 40, 46, 24]  <||@
  Comment 1786 [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 370, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1786 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1790 988 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1794 990 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 992 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1803 994 stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1807 996 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:378, 6, 40, 46, 24]  <||@
  Comment 1807 {HotSpotMethod<Fields.getByte(Object, int)>}  <||@
  Comment 1807 9  <||@
  Comment 1812 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:88|DWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1813 998 CMP (x: rax|DWORD, y: stack:88|DWORD) size: DWORD  <||@
  Comment 1817 1000 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B131  <||@
  Comment 1823 block B98 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1823 1002 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1823 1004 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1828 1006 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1833 1008 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1838 1010 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1843 1012 JUMP ~[] destination: B98 -> B59  <||@
  Comment 1848 block B119 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1848 1196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1848 1198 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}  <||@
  Comment 1848 {meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}}  <||@
  Comment 1855 1200 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B145  <||@
  Comment 1861 block B120 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1861 1202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1861 1204 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1866 1206 rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 1870 1208 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}  <||@
  Comment 1870 {meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}}  <||@
  Comment 1880 1210 CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1888 1212 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B144  <||@
  Comment 1894 block B121 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1894 1214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1894 1218 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 1897 1220 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B121 -> B125 falseDestination: B121 -> B123  <||@
  Comment 1903 block B123 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1903 1226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1903 1228 rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1911 1230 CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1919 1232 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B123 -> B125 falseDestination: B123 -> B143  <||@
  Comment 1925 block B125 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1925 1238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1925 1240 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:3]  <||@
  Comment 1925 [r10:0, r13:0, stack:32, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5             |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 1925 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1929 1242 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1932 1244 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:12, 46, 24]  <||@
  Comment 1932 7  <||@
  Comment 1943 {HotSpotMethod<Reference.get()>}  <||@
  Comment 1948 [stack:32, stack:56, stack:64]at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4                 
     locals:  |-  |-  |-  |-  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1949 1246 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1954 1248 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1959 1250 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 46, 24]  <||@
  Comment 1959 7  <||@
  Comment 1975 {HotSpotMethod<Reference.get()>}  <||@
  Comment 1980 [stack:32, stack:56, stack:64]at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |-                  |-  |-  |-  |- 
     stack:   |stack:64|QWORD[.]  |   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1981 1252 CMP (x: rax|QWORD[.], y: stack:64|QWORD[.]) size: QWORD  <||@
  Comment 1986 1254 BRANCH trueDestinationProbability: 0.8150490730643403 condition: = trueDestination: B125 -> B142 falseDestination: B125 -> B127  <||@
  Comment 1992 block B127 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1992 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1992 1262 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1997 1264 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 2000 1266 BRANCH trueDestinationProbability: 0.13679245283018868 condition: = trueDestination: B127 -> B131 falseDestination: B127 -> B129  <||@
  Comment 2006 block B129 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 2006 1276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2006 1278 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2009 1280 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 20, 46, 24]  <||@
  Comment 2009 7  <||@
  Comment 2023 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2028 [stack:56, stack:64]at java.util.Objects.equals(Objects.java:59) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 2029 1282 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2031 1284 BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B129 -> B131 falseDestination: B129 -> B142  <||@
  Comment 2042 block B44 null  <||@
  Comment 2042 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2042 370 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2047 372 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2056 12  <||@
  Comment 2066 block B35 null  <||@
  Comment 2066 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2066 312 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2071 314 JUMP ~[] destination: B35 -> B142  <||@
  Comment 2071 block B142 null  <||@
  Comment 2071 1370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2071 1372 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2075 1374 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2084 12  <||@
  Comment 2094 block B138 null  <||@
  Comment 2094 1346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2094 1348 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2099 1350 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2108 12  <||@
  Comment 2118 block B13 null  <||@
  Comment 2118 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2118 118 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2123 120 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2132 12  <||@
  Comment 2142 block B9 null  <||@
  Comment 2142 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2142 86 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2145 88 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2154 12  <||@
  Comment 2164 block B18 null  <||@
  Comment 2164 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2164 150 CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 2164 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 2171 156 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2176 158 stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2181 152 BRANCH trueDestinationProbability: 0.7355351947531783 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 2187 block B19 null  <||@
  Comment 2187 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2187 160 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2192 162 NULLCHECK [r13|QWORD[.]] state [bci:3]  <||@
  Comment 2192 [r8:0, r13:0, r14:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5             |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r14|QWORD[.]  |-  |-   <||@
  Comment 2192 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2196 164 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2199 166 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2202 168 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 24]  <||@
  Comment 2202 7  <||@
  Comment 2215 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2220 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |-  |-   <||@
  Comment 2221 170 JUMP ~[] destination: B19 -> B23  <||@
  Comment 2221 block B23 null  <||@
  Comment 2221 204 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2221 206 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2223 208 BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B150  <||@
  Comment 2229 block B25 null  <||@
  Comment 2229 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2229 212 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2234 214 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2239 220 rax|DWORD[.] = MOV [rbx|QWORD[.] + 24] size: DWORD  <||@
  Comment 2242 222 CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:27]  <||@
  Comment 2242 [rax:0, rbx:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3               |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |                |   |   |   |    <||@
  Comment 2242 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2250 224 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B149  <||@
  Comment 2256 block B26 null  <||@
  Comment 2256 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2256 228 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 2260 230 r10|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2265 232 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 2268 234 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 2274 block B28 null  <||@
  Comment 2274 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2274 244 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 2274 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 2286 246 BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B148  <||@
  Comment 2292 block B29 null  <||@
  Comment 2292 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2292 250 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 2296 252 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2299 254 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2302 256 r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2307 258 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2312 260 JUMP ~[] destination: B29 -> B30  <||@
  Comment 2317 block B20 null  <||@
  Comment 2317 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2317 178 CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 2317 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 2324 180 BRANCH trueDestinationProbability: 0.003959995166108514 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22  <||@
  Comment 2326 block B22 null  <||@
  Comment 2326 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2326 192 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 2330 194 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2333 196 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2338 198 rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2341 200 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 24]  <||@
  Comment 2341 7  <||@
  Comment 2351 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 2356 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |-  |-   <||@
  Comment 2357 202 JUMP ~[] destination: B22 -> B23  <||@
  Comment 2362 block B27 null  <||@
  Comment 2362 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2362 238 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2367 240 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2376 12  <||@
  Comment 2386 block B16 null  <||@
  Comment 2386 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2386 136 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2391 138 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2400 12  <||@
  Comment 2410 block B150 null  <||@
  Comment 2410 1432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2410 1434 rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2414 1436 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2423 12  <||@
  Comment 2433 block B148 null  <||@
  Comment 2433 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2433 1418 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2438 1420 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2447 12  <||@
  Comment 2457 block B5 null  <||@
  Comment 2457 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2457 42 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652]  <||@
  Comment 2457 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652]}  <||@
  Comment 2467 44 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2470 46 r10|DWORD = MOVE input: int[-276540|0xfffffffffffbc7c4]  <||@
  Comment 2476 48 JUMP ~[] destination: B5 -> B154  <||@
  Comment 2476 block B154 null  <||@
  Comment 2476 1466 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2476 1468 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2483 1470 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2490 1472 DEOPT info [bci:3]  <||@
  Comment 2490 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2495 [rbx:0, r14:0, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |r14|QWORD[.]  |-  |-   <||@
  Comment 2496 block B31 null  <||@
  Comment 2496 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2496 270 stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2501 272 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1122723832]  <||@
  Comment 2501 {Object[d.a@1122723832]}  <||@
  Comment 2511 274 MOV [r15|QWORD + 668] y: -311307 size: DWORD  <||@
  Comment 2522 276 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2529 278 DEOPT info [bci:27]  <||@
  Comment 2529 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2534 [rbx:0]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3               |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |Object[null]  |-  |stack:48|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |                |   |   |   |    <||@
  Comment 2535 block B67 null  <||@
  Comment 2535 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2535 574 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2540 576 JUMP ~[] destination: B67 -> B68  <||@
  Comment 2540 block B68 null  <||@
  Comment 2540 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2540 580 r10|DWORD = MOVE input: int[-326939|0xfffffffffffb02e5]  <||@
  Comment 2546 588 JUMP ~[] destination: B68 -> B115  <||@
  Comment 2546 block B115 null  <||@
  Comment 2546 1168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2546 1160 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2551 1162 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2556 1164 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2561 1170 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2568 1172 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2575 1174 DEOPT info [bci:27, 6, 40, 46, 24]  <||@
  Comment 2575 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2580 [rcx:0, rbx:0, r11:0, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2             |3         |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2            
     locals:  |-  |stack:32|QWORD[.]  |rcx|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0             |1                  |2  |3               |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 2581 block B74 null  <||@
  Comment 2581 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2581 652 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2586 654 JUMP ~[] destination: B74 -> B75  <||@
  Comment 2586 block B75 null  <||@
  Comment 2586 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2586 658 r10|DWORD = MOVE input: int[-333339|0xfffffffffffae9e5]  <||@
  Comment 2592 666 JUMP ~[] destination: B75 -> B115  <||@
  Comment 2594 block B143 null  <||@
  Comment 2594 1376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2594 1378 r11|DWORD = MOVE input: int[-358435|0xfffffffffffa87dd]  <||@
  Comment 2600 1380 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2605 1382 JUMP ~[] destination: B143 -> B147  <||@
  Comment 2605 block B147 null  <||@
  Comment 2605 1408 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2605 1410 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2612 1412 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2619 1414 DEOPT info [bci:3]  <||@
  Comment 2619 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2624 [rbx:0, r10:0, r13:0]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 2625 block B45 null  <||@
  Comment 2625 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2625 376 r11|DWORD = MOVE input: int[-305691|0xfffffffffffb55e5]  <||@
  Comment 2631 378 JUMP ~[] destination: B45 -> B147  <||@
  Comment 2633 block B152 null  <||@
  Comment 2633 1446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2633 1448 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652]  <||@
  Comment 2633 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652]}  <||@
  Comment 2643 1450 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2646 1452 r10|DWORD = MOVE input: int[-276540|0xfffffffffffbc7c4]  <||@
  Comment 2652 1454 JUMP ~[] destination: B152 -> B154  <||@
  Comment 2657 block B117 null  <||@
  Comment 2657 1180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2657 1182 r11|DWORD = MOVE input: int[-313635|0xfffffffffffb36dd]  <||@
  Comment 2663 1184 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2668 1186 JUMP ~[] destination: B117 -> B147  <||@
  Comment 2670 block B144 null  <||@
  Comment 2670 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2670 1386 r11|DWORD = MOVE input: int[-357667|0xfffffffffffa8add]  <||@
  Comment 2676 1388 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2681 1390 JUMP ~[] destination: B144 -> B147  <||@
  Comment 2683 block B111 null  <||@
  Comment 2683 1132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2683 1134 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2688 1136 JUMP ~[] destination: B111 -> B112  <||@
  Comment 2688 block B112 null  <||@
  Comment 2688 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2688 1140 r10|DWORD = MOVE input: int[-351003|0xfffffffffffaa4e5]  <||@
  Comment 2694 1148 JUMP ~[] destination: B112 -> B115  <||@
  Comment 2699 block B113 null  <||@
  Comment 2699 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2699 1152 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2704 1154 JUMP ~[] destination: B113 -> B114  <||@
  Comment 2704 block B114 null  <||@
  Comment 2704 1156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2704 1158 r10|DWORD = MOVE input: int[-321051|0xfffffffffffb19e5]  <||@
  Comment 2710 1166 JUMP ~[] destination: B114 -> B115  <||@
  Comment 2715 block B146 null  <||@
  Comment 2715 1402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2715 1404 r11|DWORD = MOVE input: int[-302619|0xfffffffffffb61e5]  <||@
  Comment 2721 1406 JUMP ~[] destination: B146 -> B147  <||@
  Comment 2723 block B139 null  <||@
  Comment 2723 1352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2723 1354 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2728 1356 MOV [r15|QWORD + 668] y: -363035 size: DWORD  <||@
  Comment 2739 1358 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2746 1360 DEOPT info [bci:27]  <||@
  Comment 2746 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2751 [rbx:0, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3          |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |r11|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |           |   |   |   |    <||@
  Comment 2752 block B145 null  <||@
  Comment 2752 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2752 1394 r11|DWORD = MOVE input: int[-356915|0xfffffffffffa8dcd]  <||@
  Comment 2758 1396 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2763 1398 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2768 1400 JUMP ~[] destination: B145 -> B147  <||@
  Comment 2773 block B149 null  <||@
  Comment 2773 1422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2773 1424 r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2778 1426 MOV [r15|QWORD + 668] y: -292379 size: DWORD  <||@
  Comment 2789 1428 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2796 1430 DEOPT info [bci:27]  <||@
  Comment 2796 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2801 [rbx:0, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3          |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |r10|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |           |   |   |   |    <||@
  Comment 2802 block B151 null  <||@
  Comment 2802 1438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2802 1440 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2812 1442 r10|DWORD = MOVE input: int[-280603|0xfffffffffffbb7e5]  <||@
  Comment 2818 1444 JUMP ~[] destination: B151 -> B154  <||@
  Comment 2823 block B17 null  <||@
  Comment 2823 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2823 142 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2833 144 r10|DWORD = MOVE input: int[-284699|0xfffffffffffba7e5]  <||@
  Comment 2839 146 JUMP ~[] destination: B17 -> B154  <||@
  Comment 2844 block B118 null  <||@
  Comment 2844 1188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2844 1190 r11|DWORD = MOVE input: int[-312611|0xfffffffffffb3add]  <||@
  Comment 2850 1192 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2855 1194 JUMP ~[] destination: B118 -> B147  <||@
  Comment 2860 block B153 null  <||@
  Comment 2860 1456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2860 1458 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1669091861]  <||@
  Comment 2860 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1669091861]}  <||@
  Comment 2870 1460 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2873 1462 r10|DWORD = MOVE input: int[-276284|0xfffffffffffbc8c4]  <||@
  Comment 2879 1464 JUMP ~[] destination: B153 -> B154  <||@
  Comment 2884 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2884 4  <||@
  Comment 2890 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2890 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotOSRCompilation-6416[org.graalvm.collections.EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)@3]"
  method "HotSpotOSRCompilation-6416[org.graalvm.collections.EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)@3]"
  date 1527005117425
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1074f15e0 448b560849c1e203493bc20f856f4831ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c2450488b5e384c8b6e304c896c24404c8b7610e87a3f76ff904d85f60f840e00000041817e08bc3e01f80f85ce0a00004885db0f8432090000817b08f93c01f80f85d50900004185068b73188b14f50c000000458b560c458bda41d1e3413bd30f865e0a000048c1e603468b449e1049c1e0034d3be80f84b407000048895c2438448b4b2041ffc34585c90f85b5070000413bd30f863f0a0000428b549e1085d20f8471070000813cd508000000bc3e01f80f856c08000048c1e2034d85ed0f84cd0800004c8bd266660f1f8400000000004185028b560c458b5a0c458bc341d1e0413bd00f8682090000468b4c8610418bc948c1e1034c3be90f84e40600008b7b2085ff0f853900000041ffc0413bd00f86fc080000428b54861085d20f84a8060000813cd508000000bc3e01f80f85970600008505bdd839fd48c1e2034c8bd2eb8e81ff750300d8448944242c44895c24340f857f000000498bf5488bd148b8ffffffffffffffff0f1f8000000000e85c4b31ff9085c00f856a060000448b44242c488b5c24388b431841ffc0443b04c50c0000000f83d808000048c1e003428b74801085f60f8452060000813cf508000000bc3e01f80f8541060000850533d839fd48c1e6034c8bd64c8b6c2440488bf0e9f9feffff81ff770300d8749e44894c242848894c2420448b1cfd080000004181fb9ea003f80f850a0500004c8b6c2440418b750848bac0af0cc007000000483b14f5300000000f85cd0800004585c90f8416000000428b34cd08000000483b14f5300000000f85f3070000458b5d2c44895c241c438504dc41ba000000000f1f8400000000000f1f8000000000468b04dd10000000428b1cc50c0000008b3cdd0c000000413bfa0f8e670500004489542418428b34c514000000443b14f50c0000000f83c007000048c1e603428b549610488b34d5480000004885f60f8474000000413bfa0f868d07000048c1e3034a8b74d310418b543500428b34ce3bf20f84d700000085d20f849dfeffff85f60f8495feffff48c1e203448bc649c1e003488bf2498bd0660f1f440000e80c4c31ff9085c00f8470feffff448b54241841ffc2448b5c241c448b4c24284c8b6c2440e937ffffff81fa1a6f00d80f849c00000081fa4e6f00d80f84d400000049c1e00381fa686f00d80f8420010000448b54241841ffc281fa276f00d80f847f01000081fa346f00d80f84e701000081fa756f00d80f845302000081fa5b6f00d80f84af02000081fa416f00d80f840b03000085055bd639fd448b5c241c448b4c24284c8b6c2440e9b1feffff850541d639fd448b54241841ffc2448b5c241c448b4c24284c8b6c2440e98ffeffff3b7c24180f86dc050000448b542418448b4c24284c8b6c244048c1e3034a8b74d310418b543500423b14ce0f857bfdffff8505eed539fd41ffc2448b5c241ce94bfeffff448b542418448b4c24284c8b6c2440413bfa0f86b805000048c1e3034a8b74d310410fbe5435000fb6d285d20f95c20fb6d2420fb634ce85f6400f95c6400fb6f63bf20f851ffdffff850592d539fd41ffc2448b5c241ce9effdffff448b5424184c8b6c2440498bf0498bd5418bca666690e8044631ff90448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241848894424100f1f8000000000e8d44531ff90483b4424100f85b5fcffff448b54241841ffc2448b5c241c448b4c24284c8b6c2440e97cfdffff448954240c498bf0488b5424408b4c24186690e8944531ff90448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c2418c5fa11442408660f1f440000e8644531ff90c5f82e4424080f8a44fcffff0f853efcffff448b54240c448b5c241c448b4c24284c8b6c2440e908fdffff448954240c498bf0488b5424408b4c2418660f1f440000e81c4531ff90448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c2418c5fb11442410660f1f440000e8ec4431ff90c5f92e4424100f8accfbffff0f85c6fbffff448b54240c448b5c241c448b4c24284c8b6c2440e990fcffff448954240c498bf0488b5424408b4c2418660f1f440000e8a44431ff90448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241889442408e87c4431ff903b4424080f855efbffff448b54240c448b5c241c448b4c24284c8b6c2440e928fcffff448954240c498bf0488b5424408b4c2418660f1f440000e83c4431ff90448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241889442408e8144431ff903b4424080f85f6faffff448b54240c448b5c241c448b4c24284c8b6c2440e9c0fbffff448954240c498bf0488b5424408b4c2418660f1f440000e8d44331ff90448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241889442408e8ac4331ff903b4424080f858efaffff448b54240c448b5c241c448b4c24284c8b6c2440e958fbffff4181fbc77001f80f857b0300004c8b6c2440418b750849bbf85800c0070000004c3b1cf5300000000f85080300004585c90f8416000000428b34cd080000004c3b1cf5300000000f859d020000438504cc498bf548b8ffffffffffffffff90e8644531ff90488b742420488944242048b8ffffffffffffffff660f1f440000e8444531ff90483b4424200f844f000000488b7424204885f60f84d7f9ffff488bd048b8ffffffffffffffff0f1f4000e8144531ff9085c00f84b8f9ffffe91d000000b8ffffffff488b6c24504883c458850518d239fdc5f877c344895c24348b442434488b6c24504883c4588505fcd139fdc5f877c3b8ffffffff488b6c24504883c4588505e4d139fdc5f877c3b8ffffffff488b6c24504883c4588505ccd139fdc5f877c3418bc2488b6c24504883c4588505b6d139fdc5f877c34181f9750300d844895c243444895424300f85820000004c8b6c244041854500498bf5498bd048b8ffffffffffffffff666690e8544431ff9085c00f85b5000000448b5c2434488b5c24388b4318443b1cc50c0000000f830502000048c1e003468b5498104585d20f845800000042813cd508000000bc3e01f80f858d00000049c1e203488bf0498bd2448b5424304c8b6c2440e9ddf7ffff4181f9770300d8749f49c1e103498bf1488b542440498bc848b8ffffffffffffffffe8cc4331ff90e973ffffffb8ffffffff488b6c24504883c4588505d8d039fdc5f877c3b8ffffffff488b6c24504883c4588505c0d039fdc5f877c38b442430488b6c24504883c4588505a9d039fdc5f877c3b8ffffffff488b6c24504883c458850591d039fdc5f877c349ba98d0c0bf070000004d8bda41bac4c7fbff4589979c0200004d899fa8020000e85f5631ff90448954243049ba70d1c0bf0700000041c7879c020000f53ffbff4d8997a8020000e8385631ff90488b5c243841bae502fbff448b442418448b5c241c488b4c24204589979c0200004d89a7a8020000e80a5631ff90488b5c243841bae5e9faffebd041bbdd87faff488b5c243845899f9c0200004d89a7a8020000e8de5531ff9041bbe555fbffebe449ba98d0c0bf070000004d8bda41bac4c7fbffe94bffffff41bbdd36fbff488b5c2438ebbf41bbdd8afaff488b5c2438ebb2488b5c243841bae5a4faffe967ffffff488b5c243841bae519fbffe957ffffff41bbe561fbffeb8a448b5c243441c7879c020000e575faff4d89a7a8020000e85f5531ff9041bbcd8dfaff4c8b6c2440488b5c2438e958ffffff448b54243041c7879c020000e589fbff4d89a7a8020000e82d5531ff9049bb000000000000000041bae5b7fbffe9a5feffff49bb000000000000000041bae5a7fbffe990feffff41bbdd3afbff488b5c2438e901ffffff49ba28d1c0bf070000004d8bda41bac4c8fbffe968feffffe8f78475ff90e8d15331ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5fbbff59 slotKind: QWORD  <||@
  Comment 48 6 rbx|QWORD[.] = MOV [rsi|QWORD + 56] size: QWORD  <||@
  Comment 52 8 r13|QWORD[.] = MOV [rsi|QWORD + 48] size: QWORD  <||@
  Comment 56 10 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 61 12 r14|QWORD[.] = MOV [rsi|QWORD + 16] size: QWORD  <||@
  Comment 65 14 - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 65 {Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 71 16 TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD  <||@
  Comment 74 18 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 80 block B2 null  <||@
  Comment 80 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 80 26 CMP [r14|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 80 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 88 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B153  <||@
  Comment 94 block B4 null  <||@
  Comment 94 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 36 TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD  <||@
  Comment 97 38 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 103 block B6 null  <||@
  Comment 103 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 52 CMP [rbx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}  <||@
  Comment 103 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}}  <||@
  Comment 110 54 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B152  <||@
  Comment 116 block B7 null  <||@
  Comment 116 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 116 58 NULLCHECK [r14|QWORD[.]] state [bci:3]  <||@
  Comment 116 [rbx:0, r13:0, r14:0, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r14|QWORD[.]  |-  |-   <||@
  Comment 116 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 119 60 rsi|DWORD[.] = MOV [rbx|QWORD[.] + 24] size: DWORD  <||@
  Comment 122 62 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 122 [rbx:0, rsi:0, r13:0, r14:0, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r14|QWORD[.]  |-  |-   <||@
  Comment 122 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 129 64 r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 133 66 r11|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 139 68 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 142 70 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B151  <||@
  Comment 148 block B8 null  <||@
  Comment 148 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 74 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 152 76 r8|DWORD[.] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 157 78 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 161 80 CMP (x: r13|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 164 82 BRANCH trueDestinationProbability: 0.08493593479678752 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 170 block B10 null  <||@
  Comment 170 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 170 92 stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 175 94 r9|DWORD[.] = MOV [rbx|QWORD[.] + 32] size: DWORD  <||@
  Comment 179 96 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 182 98 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 185 100 BRANCH trueDestinationProbability: 0.9609648093772144 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B18  <||@
  Comment 191 block B11 null  <||@
  Comment 191 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 104 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 194 106 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B17  <||@
  Comment 200 block B12 null  <||@
  Comment 200 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 110 rdx|DWORD[.] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 205 112 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 207 114 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 213 block B14 null  <||@
  Comment 213 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 124 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 213 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 224 126 BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 230 block B15 null  <||@
  Comment 230 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 230 130 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 234 132 JUMP ~[] destination: B15 -> B30  <||@
  Comment 234 block B30 null  <||@
  Comment 234 262 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 234 264 TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 237 266 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 243 block B32 null  <||@
  Comment 243 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 243 282 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 246 284 JUMP ~[] destination: B32 -> B33  <||@
  Comment 246 block B33 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 246 286 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 256 288 NULLCHECK [r10|QWORD[.]] state [bci:3]  <||@
  Comment 256 [rbx:0, rsi:0, r10:0, r13:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 256 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 259 290 rdx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:3]  <||@
  Comment 259 [rbx:0, rsi:0, r10:0, r13:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 259 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 262 292 r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 266 294 r8|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 272 296 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 275 298 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B146  <||@
  Comment 281 block B34 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 281 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 281 302 r9|DWORD[.] = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 286 304 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 293 306 CMP (x: r13|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 296 308 BRANCH trueDestinationProbability: 0.08493593479678752 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 302 block B36 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 302 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 302 318 rdi|DWORD[.] = MOV [rbx|QWORD[.] + 32] size: DWORD  <||@
  Comment 305 320 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 307 322 BRANCH trueDestinationProbability: 0.9609648093772144 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B46  <||@
  Comment 313 block B37 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 313 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 326 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 316 328 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 319 330 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B45  <||@
  Comment 325 block B38 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 325 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 325 334 rdx|DWORD[.] = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 330 336 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 332 338 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B44 falseDestination: B38 -> B40  <||@
  Comment 338 block B40 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 338 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 338 346 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 338 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 349 348 BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44  <||@
  Comment 355 block B41 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 355 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 355 352 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:3]  <||@
  Comment 355 [rdx:0, rbx:0, rsi:0, r10:0, r13:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 355 {infopoint: SAFEPOINT}  <||@
  Comment 355 11  <||@
  Comment 361 354 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 365 356 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 368 358 JUMP ~[] destination: B41 -> B33  <||@
  Comment 370 block B46 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 370 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 382 CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 370 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 376 388 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 381 390 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 386 384 BRANCH trueDestinationProbability: 0.7355351947531783 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B50  <||@
  Comment 392 block B47 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 392 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 392 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 395 394 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 398 396 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 24]  <||@
  Comment 398 7  <||@
  Comment 415 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 420 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 421 398 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 423 400 BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B47 -> B131 falseDestination: B47 -> B142  <||@
  Comment 429 block B131 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 429 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 1288 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 434 1290 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 439 1296 rax|DWORD[.] = MOV [rbx|QWORD[.] + 24] size: DWORD  <||@
  Comment 442 1298 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 445 1300 CMP (x: r8|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:27]  <||@
  Comment 445 [rax:0, rbx:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3               |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |                |   |   |   |    <||@
  Comment 445 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 453 1302 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B131 -> B132 falseDestination: B131 -> B139  <||@
  Comment 459 block B132 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 459 1304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 1306 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 463 1308 rsi|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 468 1310 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 470 1312 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B132 -> B138 falseDestination: B132 -> B134  <||@
  Comment 476 block B134 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 476 1318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 476 1320 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 476 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 487 1322 BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B138  <||@
  Comment 493 block B135 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 493 1324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 1326 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27]  <||@
  Comment 493 [rax:0, rbx:0, rsi:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3               |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |                |   |   |   |    <||@
  Comment 493 {infopoint: SAFEPOINT}  <||@
  Comment 493 11  <||@
  Comment 499 1328 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 503 1330 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 506 1332 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 511 1334 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 514 1336 JUMP ~[] destination: B135 -> B33  <||@
  Comment 519 block B50 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 519 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 519 420 CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 519 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 525 422 BRANCH trueDestinationProbability: 0.003959995166108514 condition: = trueDestination: B50 -> B131 falseDestination: B50 -> B52  <||@
  Comment 527 block B52 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 527 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 527 434 stack:56|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 532 436 stack:64|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 537 438 r11|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 545 440 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}  <||@
  Comment 545 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}}  <||@
  Comment 552 442 BRANCH trueDestinationProbability: 0.9987323537885335 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B119  <||@
  Comment 558 block B53 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 558 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 558 446 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 563 448 rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 567 450 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 567 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 577 452 CMP (x: rdx|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 585 454 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B118  <||@
  Comment 591 block B54 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 591 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 591 458 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 594 460 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B58 falseDestination: B54 -> B56  <||@
  Comment 600 block B56 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 600 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 600 468 rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 608 470 CMP (x: rdx|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 616 472 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B58 falseDestination: B56 -> B117  <||@
  Comment 622 block B58 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 622 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 622 480 r11|DWORD[.] = MOV [r13|QWORD[.] + 44] size: DWORD  <||@
  Comment 626 482 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 631 484 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:3]  <||@
  Comment 631 [r9:0, r10:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5             |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 631 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 635 486 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 641 488 JUMP ~[] destination: B58 -> B59  <||@
  Comment 641 block B59 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 641 490 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 656 492 r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 664 494 rbx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 664 [r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |r13|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |r13|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 664 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 672 496 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 672 [rbx:0, r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |r13|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |r13|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 672 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 679 498 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 682 500 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B142  <||@
  Comment 688 block B60 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 688 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 504 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 693 506 rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 701 508 CMP (x: r10|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 701 [rbx:0, rsi:0, r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |r13|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |r13|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 701 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 709 510 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B113  <||@
  Comment 715 block B61 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 715 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 715 514 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 719 516 rdx|DWORD[.] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 724 518 rsi|QWORD = MOV [rdx|DWORD[.] * 8 + 72] size: QWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 724 [rdx:0, rbx:0, r8:0, r9:0, r11:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |r13|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |r13|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 724 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 732 520 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 735 522 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B101  <||@
  Comment 741 block B101 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 741 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 741 1036 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 744 1038 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B111  <||@
  Comment 750 block B102 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 750 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 750 1042 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 754 1044 rsi|QWORD = MOV [rbx|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 759 1046 rdx|DWORD[.] = MOV [r13|QWORD[.] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 764 1048 rsi|DWORD[.] = MOV [rsi|QWORD + r9|DWORD[.] * 8] size: DWORD  <||@
  Comment 768 1050 CMP (x: rsi|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 770 1052 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B104  <||@
  Comment 776 block B104 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 776 1068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 776 1070 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 778 1072 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B104 -> B131 falseDestination: B104 -> B106  <||@
  Comment 784 block B106 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 784 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 784 1084 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 786 1086 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B106 -> B131 falseDestination: B106 -> B108  <||@
  Comment 792 block B108 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 792 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 792 1098 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 796 1100 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 803 1102 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 806 1104 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 809 1106 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepEquals0(Object, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:472, 6, 40, 46, 24]  <||@
  Comment 809 8  <||@
  Comment 815 {HotSpotMethod<NodeClass.deepEquals0(Object, Object)>}  <||@
  Comment 820 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 821 1108 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 823 1110 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B108 -> B131 falseDestination: B108 -> B110  <||@
  Comment 829 block B110 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 829 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 829 1122 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 837 1124 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 842 1126 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 847 1128 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 852 1130 JUMP ~[] destination: B110 -> B59  <||@
  Comment 857 block B62 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 857 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 857 526 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int]  <||@
  Comment 857 {NarrowOop[Class:int]}  <||@
  Comment 863 528 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B69  <||@
  Comment 869 block B69 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 869 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 592 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean]  <||@
  Comment 869 {NarrowOop[Class:boolean]}  <||@
  Comment 875 594 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B76  <||@
  Comment 881 block B76 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 881 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 670 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 885 672 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long]  <||@
  Comment 885 {NarrowOop[Class:long]}  <||@
  Comment 891 674 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B80  <||@
  Comment 897 block B80 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 897 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 897 732 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 905 734 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float]  <||@
  Comment 905 {NarrowOop[Class:float]}  <||@
  Comment 911 736 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84  <||@
  Comment 917 block B84 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 917 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 917 792 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double]  <||@
  Comment 917 {NarrowOop[Class:double]}  <||@
  Comment 923 794 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B88  <||@
  Comment 929 block B88 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 929 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 929 850 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short]  <||@
  Comment 929 {NarrowOop[Class:short]}  <||@
  Comment 935 852 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B92  <||@
  Comment 941 block B92 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 941 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 941 908 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char]  <||@
  Comment 941 {NarrowOop[Class:char]}  <||@
  Comment 947 910 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B96  <||@
  Comment 953 block B96 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 953 964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 953 966 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte]  <||@
  Comment 953 {NarrowOop[Class:byte]}  <||@
  Comment 959 968 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B100  <||@
  Comment 965 block B100 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 965 1022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 965 1024 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 965 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 965 {infopoint: SAFEPOINT}  <||@
  Comment 965 11  <||@
  Comment 971 1026 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 976 1028 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 981 1030 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 986 1032 JUMP ~[] destination: B100 -> B59  <||@
  Comment 991 block B103 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 991 1054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 991 1056 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 991 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 991 {infopoint: SAFEPOINT}  <||@
  Comment 991 11  <||@
  Comment 997 1058 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 1005 1060 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1010 1062 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1015 1064 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 1066 JUMP ~[] destination: B103 -> B59  <||@
  Comment 1025 block B63 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1025 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1025 532 CMP (x: rdi|DWORD, y: stack:72|DWORD) size: DWORD  <||@
  Comment 1029 534 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B67  <||@
  Comment 1035 block B64 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1035 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1035 538 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1040 540 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1045 542 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1050 544 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1054 546 rsi|QWORD = MOV [rbx|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1059 548 rdx|DWORD = MOV [r13|QWORD[.] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 1064 550 CMP (x: rdx|DWORD, y: [rsi|QWORD + r9|DWORD[.] * 8]) size: DWORD  <||@
  Comment 1068 552 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B131  <||@
  Comment 1074 block B65 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1074 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1074 556 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 1074 [r9:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |r13|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |r13|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1074 {infopoint: SAFEPOINT}  <||@
  Comment 1074 11  <||@
  Comment 1080 558 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1083 560 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1088 562 JUMP ~[] destination: B65 -> B59  <||@
  Comment 1093 block B70 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1093 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1093 598 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1098 600 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1103 602 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1108 604 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1111 606 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B70 -> B71 falseDestination: B70 -> B74  <||@
  Comment 1117 block B71 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1117 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1117 610 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1121 612 rsi|QWORD = MOV [rbx|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1126 614 rdx|DWORD = MOVSXB [r13|QWORD[.] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 1132 616 rdx|DWORD = MOVZXB rdx|DWORD size: DWORD  <||@
  Comment 1135 618 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1137 620 rdx|DWORD = SETCC condition: !=  <||@
  Comment 1143 622 rsi|DWORD = MOVZXB [rsi|QWORD + r9|DWORD[.] * 8] size: DWORD  <||@
  Comment 1148 624 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1150 626 rsi|DWORD = SETCC condition: !=  <||@
  Comment 1158 628 CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1160 630 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B131  <||@
  Comment 1166 block B72 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1166 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1166 634 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 1166 [r9:0, r13:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |r13|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |r13|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1166 {infopoint: SAFEPOINT}  <||@
  Comment 1166 11  <||@
  Comment 1172 636 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1175 638 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1180 640 JUMP ~[] destination: B72 -> B59  <||@
  Comment 1185 block B77 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1185 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1185 678 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1190 680 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1195 682 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1198 684 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1201 686 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1204 688 rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getLong(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:154, 6, 40, 46, 24]  <||@
  Comment 1204 9  <||@
  Comment 1207 {HotSpotMethod<Fields.getLong(Object, int)>}  <||@
  Comment 1212 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1213 690 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1218 692 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1226 694 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:157, 6, 40, 46, 24]  <||@
  Comment 1226 [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 157, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|QWORD     |-                  |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1226 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1230 696 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1234 698 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1239 700 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1243 702 stack:80|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1248 704 rax|QWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getLong(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:165, 6, 40, 46, 24]  <||@
  Comment 1248 9  <||@
  Comment 1255 {HotSpotMethod<Fields.getLong(Object, int)>}  <||@
  Comment 1260 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 165, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:80|QWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1261 706 CMP (x: rax|QWORD, y: stack:80|QWORD) size: QWORD  <||@
  Comment 1266 708 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B131  <||@
  Comment 1272 block B78 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1272 710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 712 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 1280 714 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1285 716 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1290 718 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1295 720 JUMP ~[] destination: B78 -> B59  <||@
  Comment 1300 block B81 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1300 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1300 740 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1305 742 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1308 744 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1313 746 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1317 748 xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:197, 6, 40, 46, 24]  <||@
  Comment 1317 9  <||@
  Comment 1319 {HotSpotMethod<Fields.getFloat(Object, int)>}  <||@
  Comment 1324 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1325 750 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1330 752 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1338 754 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:200, 6, 40, 46, 24]  <||@
  Comment 1338 [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 200, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |xmm0|SINGLE   |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1338 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1342 756 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1346 758 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1351 760 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1355 762 stack:88|SINGLE = VMOVE xmm0|SINGLE  <||@
  Comment 1361 764 xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:208, 6, 40, 46, 24]  <||@
  Comment 1361 9  <||@
  Comment 1367 {HotSpotMethod<Fields.getFloat(Object, int)>}  <||@
  Comment 1372 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5                |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:88|SINGLE  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1373 766 VUCOMISS (x: xmm0|SINGLE, y: stack:88|SINGLE)  <||@
  Comment 1379 768 FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B131 unorderedIsTrue: false  <||@
  Comment 1391 block B82 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1391 770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1391 772 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1396 774 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1401 776 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1406 778 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1411 780 JUMP ~[] destination: B82 -> B59  <||@
  Comment 1416 block B85 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1416 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1416 798 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1421 800 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1424 802 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1429 804 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1433 806 xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:240, 6, 40, 46, 24]  <||@
  Comment 1433 9  <||@
  Comment 1439 {HotSpotMethod<Fields.getDouble(Object, int)>}  <||@
  Comment 1444 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1445 808 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1450 810 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1458 812 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:243, 6, 40, 46, 24]  <||@
  Comment 1458 [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 243, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |xmm0|DOUBLE   |-                  |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1458 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1462 814 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1466 816 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1471 818 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1475 820 stack:80|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 1481 822 xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:251, 6, 40, 46, 24]  <||@
  Comment 1481 9  <||@
  Comment 1487 {HotSpotMethod<Fields.getDouble(Object, int)>}  <||@
  Comment 1492 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5                |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:80|DOUBLE  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1493 824 VUCOMISD (x: xmm0|DOUBLE, y: stack:80|DOUBLE)  <||@
  Comment 1499 826 FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B131 unorderedIsTrue: false  <||@
  Comment 1511 block B86 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1511 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 830 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1516 832 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1521 834 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1526 836 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1531 838 JUMP ~[] destination: B86 -> B59  <||@
  Comment 1536 block B89 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1536 854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1536 856 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1541 858 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1544 860 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1549 862 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1553 864 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:283, 6, 40, 46, 24]  <||@
  Comment 1553 9  <||@
  Comment 1559 {HotSpotMethod<Fields.getShort(Object, int)>}  <||@
  Comment 1564 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1565 866 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1570 868 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1578 870 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:286, 6, 40, 46, 24]  <||@
  Comment 1578 [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 286, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1578 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1582 872 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1586 874 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1591 876 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1595 878 stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1599 880 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:294, 6, 40, 46, 24]  <||@
  Comment 1599 {HotSpotMethod<Fields.getShort(Object, int)>}  <||@
  Comment 1599 9  <||@
  Comment 1604 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:88|DWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1605 882 CMP (x: rax|DWORD, y: stack:88|DWORD) size: DWORD  <||@
  Comment 1609 884 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B131  <||@
  Comment 1615 block B90 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1615 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1615 888 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1620 890 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1625 892 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1630 894 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1635 896 JUMP ~[] destination: B90 -> B59  <||@
  Comment 1640 block B93 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1640 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1640 914 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1645 916 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1648 918 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1653 920 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1657 922 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:325, 6, 40, 46, 24]  <||@
  Comment 1657 9  <||@
  Comment 1663 {HotSpotMethod<Fields.getChar(Object, int)>}  <||@
  Comment 1668 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1669 924 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1674 926 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1682 928 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:328, 6, 40, 46, 24]  <||@
  Comment 1682 [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 328, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1682 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1686 930 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1690 932 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1695 934 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1699 936 stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1703 938 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:336, 6, 40, 46, 24]  <||@
  Comment 1703 {HotSpotMethod<Fields.getChar(Object, int)>}  <||@
  Comment 1703 9  <||@
  Comment 1708 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:88|DWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1709 940 CMP (x: rax|DWORD, y: stack:88|DWORD) size: DWORD  <||@
  Comment 1713 942 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B131  <||@
  Comment 1719 block B94 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1719 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1719 946 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1724 948 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1729 950 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1734 952 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1739 954 JUMP ~[] destination: B94 -> B59  <||@
  Comment 1744 block B97 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1744 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1744 972 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1749 974 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1752 976 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1757 978 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1761 980 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:367, 6, 40, 46, 24]  <||@
  Comment 1761 9  <||@
  Comment 1767 {HotSpotMethod<Fields.getByte(Object, int)>}  <||@
  Comment 1772 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1773 982 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1778 984 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1786 986 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:370, 6, 40, 46, 24]  <||@
  Comment 1786 [rsi:0, r11:0, stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 370, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1786 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1790 988 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 1794 990 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 992 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1803 994 stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1807 996 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:378, 6, 40, 46, 24]  <||@
  Comment 1807 {HotSpotMethod<Fields.getByte(Object, int)>}  <||@
  Comment 1807 9  <||@
  Comment 1812 [stack:28, stack:32, stack:40, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:32|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:88|DWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1813 998 CMP (x: rax|DWORD, y: stack:88|DWORD) size: DWORD  <||@
  Comment 1817 1000 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B131  <||@
  Comment 1823 block B98 loop 1 depth 2 outer 0 header:314|LoopBegin  <||@
  Comment 1823 1002 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1823 1004 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1828 1006 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1833 1008 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1838 1010 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1843 1012 JUMP ~[] destination: B98 -> B59  <||@
  Comment 1848 block B119 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1848 1196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1848 1198 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}  <||@
  Comment 1848 {meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}}  <||@
  Comment 1855 1200 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B145  <||@
  Comment 1861 block B120 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1861 1202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1861 1204 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1866 1206 rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 1870 1208 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}  <||@
  Comment 1870 {meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}}  <||@
  Comment 1880 1210 CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1888 1212 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B144  <||@
  Comment 1894 block B121 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1894 1214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1894 1218 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 1897 1220 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B121 -> B125 falseDestination: B121 -> B123  <||@
  Comment 1903 block B123 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1903 1226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1903 1228 rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1911 1230 CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1919 1232 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B123 -> B125 falseDestination: B123 -> B143  <||@
  Comment 1925 block B125 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1925 1238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1925 1240 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:3]  <||@
  Comment 1925 [r10:0, r13:0, stack:32, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5             |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 1925 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1929 1242 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1932 1244 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:12, 46, 24]  <||@
  Comment 1932 7  <||@
  Comment 1943 {HotSpotMethod<Reference.get()>}  <||@
  Comment 1948 [stack:32, stack:56, stack:64]at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4                 
     locals:  |-  |-  |-  |-  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1949 1246 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1954 1248 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1959 1250 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 46, 24]  <||@
  Comment 1959 7  <||@
  Comment 1975 {HotSpotMethod<Reference.get()>}  <||@
  Comment 1980 [stack:32, stack:56, stack:64]at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |-                  |-  |-  |-  |- 
     stack:   |stack:64|QWORD[.]  |   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1981 1252 CMP (x: rax|QWORD[.], y: stack:64|QWORD[.]) size: QWORD  <||@
  Comment 1986 1254 BRANCH trueDestinationProbability: 0.8150490730643403 condition: = trueDestination: B125 -> B142 falseDestination: B125 -> B127  <||@
  Comment 1992 block B127 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1992 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1992 1262 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1997 1264 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 2000 1266 BRANCH trueDestinationProbability: 0.13679245283018868 condition: = trueDestination: B127 -> B131 falseDestination: B127 -> B129  <||@
  Comment 2006 block B129 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 2006 1276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2006 1278 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2009 1280 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 20, 46, 24]  <||@
  Comment 2009 7  <||@
  Comment 2023 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2028 [stack:56, stack:64]at java.util.Objects.equals(Objects.java:59) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 2029 1282 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2031 1284 BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B129 -> B131 falseDestination: B129 -> B142  <||@
  Comment 2042 block B44 null  <||@
  Comment 2042 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2042 370 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2047 372 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2056 12  <||@
  Comment 2066 block B35 null  <||@
  Comment 2066 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2066 312 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2071 314 JUMP ~[] destination: B35 -> B142  <||@
  Comment 2071 block B142 null  <||@
  Comment 2071 1370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2071 1372 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2075 1374 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2084 12  <||@
  Comment 2094 block B138 null  <||@
  Comment 2094 1346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2094 1348 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2099 1350 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2108 12  <||@
  Comment 2118 block B13 null  <||@
  Comment 2118 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2118 118 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2123 120 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2132 12  <||@
  Comment 2142 block B9 null  <||@
  Comment 2142 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2142 86 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2145 88 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2154 12  <||@
  Comment 2164 block B18 null  <||@
  Comment 2164 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2164 150 CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 2164 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 2171 156 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2176 158 stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2181 152 BRANCH trueDestinationProbability: 0.7355351947531783 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 2187 block B19 null  <||@
  Comment 2187 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2187 160 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2192 162 NULLCHECK [r13|QWORD[.]] state [bci:3]  <||@
  Comment 2192 [r8:0, r13:0, r14:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5             |6  |7 
     locals:  |stack:40|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r14|QWORD[.]  |-  |-   <||@
  Comment 2192 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2196 164 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2199 166 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2202 168 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 24]  <||@
  Comment 2202 7  <||@
  Comment 2215 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2220 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |-  |-   <||@
  Comment 2221 170 JUMP ~[] destination: B19 -> B23  <||@
  Comment 2221 block B23 null  <||@
  Comment 2221 204 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2221 206 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2223 208 BRANCH trueDestinationProbability: 0.9941860553050733 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B150  <||@
  Comment 2229 block B25 null  <||@
  Comment 2229 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2229 212 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2234 214 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2239 220 rax|DWORD[.] = MOV [rbx|QWORD[.] + 24] size: DWORD  <||@
  Comment 2242 222 CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:27]  <||@
  Comment 2242 [rax:0, rbx:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3               |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |                |   |   |   |    <||@
  Comment 2242 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2250 224 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B149  <||@
  Comment 2256 block B26 null  <||@
  Comment 2256 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2256 228 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 2260 230 r10|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2265 232 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 2268 234 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 2274 block B28 null  <||@
  Comment 2274 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2274 244 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 2274 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 2286 246 BRANCH trueDestinationProbability: 0.9958011670017366 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B148  <||@
  Comment 2292 block B29 null  <||@
  Comment 2292 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2292 250 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 2296 252 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2299 254 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2302 256 r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2307 258 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2312 260 JUMP ~[] destination: B29 -> B30  <||@
  Comment 2317 block B20 null  <||@
  Comment 2317 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2317 178 CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 2317 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 2324 180 BRANCH trueDestinationProbability: 0.003959995166108514 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22  <||@
  Comment 2326 block B22 null  <||@
  Comment 2326 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2326 192 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@9dc255b encoding: base: 0 shift: 3  <||@
  Comment 2330 194 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2333 196 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2338 198 rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2341 200 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 24]  <||@
  Comment 2341 7  <||@
  Comment 2351 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 2356 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |-  |-   <||@
  Comment 2357 202 JUMP ~[] destination: B22 -> B23  <||@
  Comment 2362 block B27 null  <||@
  Comment 2362 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2362 238 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2367 240 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2376 12  <||@
  Comment 2386 block B16 null  <||@
  Comment 2386 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2386 136 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2391 138 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2400 12  <||@
  Comment 2410 block B150 null  <||@
  Comment 2410 1432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2410 1434 rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2414 1436 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2423 12  <||@
  Comment 2433 block B148 null  <||@
  Comment 2433 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2433 1418 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2438 1420 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2447 12  <||@
  Comment 2457 block B5 null  <||@
  Comment 2457 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2457 42 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652]  <||@
  Comment 2457 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652]}  <||@
  Comment 2467 44 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2470 46 r10|DWORD = MOVE input: int[-276540|0xfffffffffffbc7c4]  <||@
  Comment 2476 48 JUMP ~[] destination: B5 -> B154  <||@
  Comment 2476 block B154 null  <||@
  Comment 2476 1466 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2476 1468 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2483 1470 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2490 1472 DEOPT info [bci:3]  <||@
  Comment 2490 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2495 [rbx:0, r14:0, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |r14|QWORD[.]  |-  |-   <||@
  Comment 2496 block B31 null  <||@
  Comment 2496 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2496 270 stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2501 272 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1122723832]  <||@
  Comment 2501 {Object[d.a@1122723832]}  <||@
  Comment 2511 274 MOV [r15|QWORD + 668] y: -311307 size: DWORD  <||@
  Comment 2522 276 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2529 278 DEOPT info [bci:27]  <||@
  Comment 2529 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2534 [rbx:0]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3               |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |Object[null]  |-  |stack:48|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |                |   |   |   |    <||@
  Comment 2535 block B67 null  <||@
  Comment 2535 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2535 574 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2540 576 JUMP ~[] destination: B67 -> B68  <||@
  Comment 2540 block B68 null  <||@
  Comment 2540 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2540 580 r10|DWORD = MOVE input: int[-326939|0xfffffffffffb02e5]  <||@
  Comment 2546 588 JUMP ~[] destination: B68 -> B115  <||@
  Comment 2546 block B115 null  <||@
  Comment 2546 1168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2546 1160 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2551 1162 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2556 1164 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2561 1170 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2568 1172 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2575 1174 DEOPT info [bci:27, 6, 40, 46, 24]  <||@
  Comment 2575 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2580 [rcx:0, rbx:0, r11:0, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2             |3         |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:32|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2            
     locals:  |-  |stack:32|QWORD[.]  |rcx|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0             |1                  |2  |3               |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 2581 block B74 null  <||@
  Comment 2581 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2581 652 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2586 654 JUMP ~[] destination: B74 -> B75  <||@
  Comment 2586 block B75 null  <||@
  Comment 2586 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2586 658 r10|DWORD = MOVE input: int[-333339|0xfffffffffffae9e5]  <||@
  Comment 2592 666 JUMP ~[] destination: B75 -> B115  <||@
  Comment 2594 block B143 null  <||@
  Comment 2594 1376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2594 1378 r11|DWORD = MOVE input: int[-358435|0xfffffffffffa87dd]  <||@
  Comment 2600 1380 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2605 1382 JUMP ~[] destination: B143 -> B147  <||@
  Comment 2605 block B147 null  <||@
  Comment 2605 1408 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2605 1410 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2612 1412 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2619 1414 DEOPT info [bci:3]  <||@
  Comment 2619 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2624 [rbx:0, r10:0, r13:0]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rbx|QWORD[.]  |r13|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 2625 block B45 null  <||@
  Comment 2625 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2625 376 r11|DWORD = MOVE input: int[-305691|0xfffffffffffb55e5]  <||@
  Comment 2631 378 JUMP ~[] destination: B45 -> B147  <||@
  Comment 2633 block B152 null  <||@
  Comment 2633 1446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2633 1448 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652]  <||@
  Comment 2633 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1405389652]}  <||@
  Comment 2643 1450 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2646 1452 r10|DWORD = MOVE input: int[-276540|0xfffffffffffbc7c4]  <||@
  Comment 2652 1454 JUMP ~[] destination: B152 -> B154  <||@
  Comment 2657 block B117 null  <||@
  Comment 2657 1180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2657 1182 r11|DWORD = MOVE input: int[-313635|0xfffffffffffb36dd]  <||@
  Comment 2663 1184 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2668 1186 JUMP ~[] destination: B117 -> B147  <||@
  Comment 2670 block B144 null  <||@
  Comment 2670 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2670 1386 r11|DWORD = MOVE input: int[-357667|0xfffffffffffa8add]  <||@
  Comment 2676 1388 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2681 1390 JUMP ~[] destination: B144 -> B147  <||@
  Comment 2683 block B111 null  <||@
  Comment 2683 1132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2683 1134 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2688 1136 JUMP ~[] destination: B111 -> B112  <||@
  Comment 2688 block B112 null  <||@
  Comment 2688 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2688 1140 r10|DWORD = MOVE input: int[-351003|0xfffffffffffaa4e5]  <||@
  Comment 2694 1148 JUMP ~[] destination: B112 -> B115  <||@
  Comment 2699 block B113 null  <||@
  Comment 2699 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2699 1152 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2704 1154 JUMP ~[] destination: B113 -> B114  <||@
  Comment 2704 block B114 null  <||@
  Comment 2704 1156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2704 1158 r10|DWORD = MOVE input: int[-321051|0xfffffffffffb19e5]  <||@
  Comment 2710 1166 JUMP ~[] destination: B114 -> B115  <||@
  Comment 2715 block B146 null  <||@
  Comment 2715 1402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2715 1404 r11|DWORD = MOVE input: int[-302619|0xfffffffffffb61e5]  <||@
  Comment 2721 1406 JUMP ~[] destination: B146 -> B147  <||@
  Comment 2723 block B139 null  <||@
  Comment 2723 1352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2723 1354 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2728 1356 MOV [r15|QWORD + 668] y: -363035 size: DWORD  <||@
  Comment 2739 1358 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2746 1360 DEOPT info [bci:27]  <||@
  Comment 2746 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2751 [rbx:0, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3          |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |r11|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |           |   |   |   |    <||@
  Comment 2752 block B145 null  <||@
  Comment 2752 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2752 1394 r11|DWORD = MOVE input: int[-356915|0xfffffffffffa8dcd]  <||@
  Comment 2758 1396 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2763 1398 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2768 1400 JUMP ~[] destination: B145 -> B147  <||@
  Comment 2773 block B149 null  <||@
  Comment 2773 1422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2773 1424 r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2778 1426 MOV [r15|QWORD + 668] y: -292379 size: DWORD  <||@
  Comment 2789 1428 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2796 1430 DEOPT info [bci:27]  <||@
  Comment 2796 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2801 [rbx:0, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3          |4  |5  |6  |7 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-  |r10|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |           |   |   |   |    <||@
  Comment 2802 block B151 null  <||@
  Comment 2802 1438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2802 1440 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2812 1442 r10|DWORD = MOVE input: int[-280603|0xfffffffffffbb7e5]  <||@
  Comment 2818 1444 JUMP ~[] destination: B151 -> B154  <||@
  Comment 2823 block B17 null  <||@
  Comment 2823 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2823 142 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2833 144 r10|DWORD = MOVE input: int[-284699|0xfffffffffffba7e5]  <||@
  Comment 2839 146 JUMP ~[] destination: B17 -> B154  <||@
  Comment 2844 block B118 null  <||@
  Comment 2844 1188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2844 1190 r11|DWORD = MOVE input: int[-312611|0xfffffffffffb3add]  <||@
  Comment 2850 1192 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2855 1194 JUMP ~[] destination: B118 -> B147  <||@
  Comment 2860 block B153 null  <||@
  Comment 2860 1456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2860 1458 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1669091861]  <||@
  Comment 2860 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1669091861]}  <||@
  Comment 2870 1460 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2873 1462 r10|DWORD = MOVE input: int[-276284|0xfffffffffffbc8c4]  <||@
  Comment 2879 1464 JUMP ~[] destination: B153 -> B154  <||@
  Comment 2884 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2884 4  <||@
  Comment 2890 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2890 5  <||@
  HexCodeFile>>> <|@
end_nmethod
