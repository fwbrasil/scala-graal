begin_compilation
  name " HotSpotCompilation-9338[java.util.zip.ZipFile$ZipFileInputStream.read()]"
  method "HotSpotCompilation-9338[java.util.zip.ZipFile$ZipFileInputStream.read()]"
  date 1527005202694
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a453 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a453  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/zip/ZipFile$ZipFileInputStream;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v152 v464 ?18 v465 v466 ?39 ?102 ?43 ?61 v469 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a453 a456 a459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.this$0
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: n Ljava/util/zip/ZipFile;
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
=== Succesors ===
next: v454 
=== Usages ===
a107 v478 v472 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v464 #next: v454  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 748
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a453 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v472 
=== Succesors ===
next: j309 
=== Usages ===
v473 
=== Predecessor ===
a453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v472 #next: j309  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a453 
=== Succesors ===
=== Usages ===
j309 j434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j309 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:230) [bci: 12]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v478 
=== Succesors ===
next: j217 
=== Usages ===
j219 j223 j239 i247 j256 j273 v302 v477 
=== Predecessor ===
v454 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v478 #next: j217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j217 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode.beginLockScope(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:232) [bci: 18]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j218 
=== Usages ===
v255 v475 j276 v290 v313 
=== Predecessor ===
j309 >@ <|@
instruction <@BeginLockScope|@org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j218  <|@  <|@
f <@~|@floating>@ <|@
tid a107 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
op: Uncompress
stamp: a Ljava/util/zip/ZipFile;
=== Inputs ===
value: a453 
=== Succesors ===
=== Usages ===
v290 ?18 ?18 j413 ?61 ?39 ?39 ?43 ?43 ?102 ?102 v421 j232 v409 v281 v255 j218 v227 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:234) [bci: 24]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a107 
=== Succesors ===
next: j310 
=== Usages ===
v476 
=== Predecessor ===
j217 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a107 #next: j310  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v454 
=== Succesors ===
=== Usages ===
j310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:314) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
=== Succesors ===
next: j221 
=== Usages ===
j222 j256 
=== Predecessor ===
j218 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v473 #next: j221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j221 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:315) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
j222 j240 
=== Predecessor ===
j310 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j221 
y: j310 
=== Succesors ===
=== Usages ===
j223 i247 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j221 y: j310  <|@  <|@
f <@~|@floating>@ <|@
tid j223 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 42]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j222 
y: j309 
=== Succesors ===
=== Usages ===
v294 v296 v298 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j222 y: j309  <|@  <|@
f <@~|@floating>@ <|@
tid j293 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: -121
stableDimension: 0
stamp: i64 [-121] ⇊ffffffffffffff87 ⇈ffffffffffffff87
stampKind: i64
value: long[-121|0xffffffffffffff87]
=== Inputs ===
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
x: j223 
y: j293 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j223 y: j293  <|@  <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<byte>
hasIdentity: true
length: 1
objectId: 0
stamp: a!# [B
=== Inputs ===
=== Succesors ===
=== Usages ===
?18 ?73 ?90 ?95 ?43 ?39 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 749
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a89 
=== Succesors ===
=== Usages ===
?18 ?61 ?39 ?43 ?102 ?203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a89  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 v85 ?18 ?39 ?43 v243 v248 v269 v416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:748) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 ?18 v166 v371 a347 ?61 ?203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?102 ?18 ?43 ?39 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
values: - 
=== Succesors ===
=== Usages ===
?18 ?84 ?39 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a89 values: -  <|@  <|@
tid ?18 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read(byte[], int, int)>
duringCall: false
localsSize: 10
locksSize: 1
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 720
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 a89 i5 i3 a107 - - - - - a107 
monitorIds: v16 
virtualObjectMappings: ?90 
=== Succesors ===
=== Usages ===
v290 v210 i242 i247 v255 j256 i268 j276 v290 v311 v312 v313 v255 v495 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 a89 i5 i3 a107 - - - - - a107 monitorIds: v16 virtualObjectMappings: ?90  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:722) [bci: 22]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 v63 i268 v440 v263 v396 v386 v312 v401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j72 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:728) [bci: 42]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 j273 v372 j491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 109]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 v424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j291 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j219 v296 j378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 136]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 5
stableDimension: 0
stamp: i64 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i64
value: long[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 v379 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 97]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
j221 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v225 #falseSuccessor: v224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:322) [bci: 100]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:324) [bci: 120]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
object: a107 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@FastAcquireBiasedLock|@org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode>@ object: a107 #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 125]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid j219 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j309 
y: j291 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j309 y: j291  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 142]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j219 
y: j295 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j219 y: j295  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v228 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v228 #trueSuccessor: v230 #falseSuccessor: v229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B12" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 151]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j232 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 152]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a107 
=== Succesors ===
next: v235 
=== Usages ===
v474 
=== Predecessor ===
v230 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a107 #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j232 
index: - 
=== Succesors ===
=== Usages ===
i242 i247 j256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j232 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 172]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
x: j223 
y: j291 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j223 y: j291  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 178]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
j232 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v234 #falseSuccessor: v233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 181]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid j297 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 192]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 768
stableDimension: 0
stamp: i64 [768] ⇊0000000000000300 ⇈0000000000000300
stampKind: i64
value: long[768|0x300]
=== Inputs ===
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 196]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
x: j223 
y: j297 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j223 y: j297  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 202]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v237 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v237 #falseSuccessor: v236  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 205]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i242 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i242  <|@  <|@
f <@~|@floating>@ <|@
tid j299 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 895
stableDimension: 0
stamp: i64 [895] ⇊000000000000037f ⇈000000000000037f
stampKind: i64
value: long[895|0x37f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64 [0 - 895] ⇈000000000000037f
=== Inputs ===
x: j309 
y: j299 
=== Succesors ===
=== Usages ===
j240 i242 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j309 y: j299  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:358) [bci: 235]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j221 
y: j239 
=== Succesors ===
=== Usages ===
i242 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j221 y: j239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i242 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1 a89 i5 i3 a107 - - - - - 
locks: a107 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 276]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
expectedValue: j239 
newValue: j240 
stateAfter: ?18 
=== Succesors ===
next: v246 
=== Usages ===
v243 
=== Predecessor ===
v237 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v474 expectedValue: j239 newValue: j240 stateAfter: ?18 #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i242 
y: i5 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i242 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v243 
=== Succesors ===
trueSuccessor: v244 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
i242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v243 #trueSuccessor: v244 #falseSuccessor: v245  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:370) [bci: 308]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:363) [bci: 287]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:379) [bci: 330]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i247 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i247 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1 a89 i5 i3 a107 - - - - - 
locks: a107 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 365]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
expectedValue: j309 
newValue: j222 
stateAfter: ?18 
=== Succesors ===
next: v251 
=== Usages ===
v248 
=== Predecessor ===
v236 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v474 expectedValue: j309 newValue: j222 stateAfter: ?18 #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i247 
y: i5 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i247 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
i247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v249 #falseSuccessor: v250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:390) [bci: 397]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v252 v254 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v252 v254 #next: v255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1 a89 i5 i3 a107 - - - - - 
locks: a107 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 421]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: ?18 
stateDuring: ?18 
arguments: a107 j217 
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?18 stateDuring: ?18 arguments: a107 j217 #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v255 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:383) [bci: 376]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v250 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 426]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j256 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j256 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1 a89 i5 i3 a107 - - - - - 
locks: a107 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 440]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
expectedValue: j309 
newValue: j310 
stateAfter: ?18 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v474 expectedValue: j309 newValue: j310 stateAfter: ?18 #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
j256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:419) [bci: 460]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" "B13" 
    successors "B15" "B20" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 86]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v257 v258 
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v257 v258 #next: v261  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j217 
index: - 
=== Succesors ===
=== Usages ===
v311 v312 v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j217 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 113]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
x: j309 
y: j301 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j309 y: j301  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 119]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v302 
=== Succesors ===
trueSuccessor: v259 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v302 #trueSuccessor: v259 #falseSuccessor: v260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 141]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 149]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j309 
y: j72 
=== Succesors ===
=== Usages ===
j276 v277 v311 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j309 y: j72  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1 a89 i5 i3 a107 - - - - - 
locks: a107 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:258) [bci: 176]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
value: j273 
stateAfter: ?18 
lastLocationAccess: - 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v475 value: j273 stateAfter: ?18 lastLocationAccess: - #next: v274  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:261) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j276 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j276  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j218 
index: - 
=== Succesors ===
=== Usages ===
j276 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j218 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j276 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1 a89 i5 i3 a107 - - - - - 
locks: a107 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:265) [bci: 199]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
expectedValue: j273 
newValue: j217 
stateAfter: ?18 
=== Succesors ===
next: v280 
=== Usages ===
v277 j283 
=== Predecessor ===
v274 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v476 expectedValue: j273 newValue: j217 stateAfter: ?18 #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 216]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j273 
y: j276 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j273 y: j276  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 222]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v277 
=== Succesors ===
trueSuccessor: v279 
falseSuccessor: v278 
=== Usages ===
=== Predecessor ===
j276 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v277 #trueSuccessor: v279 #falseSuccessor: v278  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:267) [bci: 225]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:269) [bci: 245]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
object: a107 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@AcquiredCASLock|@org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode>@ object: a107 #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:272) [bci: 249]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j282 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:289) [bci: 273]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
j283 
=== Predecessor ===
v278 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid j283 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 297]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j276 
y: j282 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j276 y: j282  <|@  <|@
f <@~|@floating>@ <|@
tid j304 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 305]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089] ⇊fffffffffffff007 ⇈fffffffffffff007
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 312]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
x: j283 
y: j304 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j283 y: j304  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 318]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v285 
falseSuccessor: v284 
=== Usages ===
=== Predecessor ===
j282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v285 #falseSuccessor: v284  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 321]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1 a89 i5 i3 a107 - - - - - 
locks: a107 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 335]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
value: j21 
stateAfter: ?18 
lastLocationAccess: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v475 value: j21 stateAfter: ?18 lastLocationAccess: - #next: v319  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:297) [bci: 358]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B24" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 122]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1 a89 i5 i3 a107 - - - - - 
locks: a107 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:439) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
value: j217 
stateAfter: ?18 
lastLocationAccess: - 
=== Succesors ===
next: j314 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v475 value: j217 stateAfter: ?18 lastLocationAccess: - #next: j314  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j309 
index: - 
=== Succesors ===
=== Usages ===
i268 j314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:443) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
=== Succesors ===
next: v266 
=== Usages ===
v263 
=== Predecessor ===
v313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v477 #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j314 
y: j21 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j314 y: j21  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v263 
=== Succesors ===
trueSuccessor: v265 
falseSuccessor: v264 
=== Usages ===
=== Predecessor ===
j314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v263 #trueSuccessor: v265 #falseSuccessor: v264  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j267 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 74]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: i268 
=== Usages ===
i268 
=== Predecessor ===
v265 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: i268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i268 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1 a89 i5 i3 a107 - - - - - 
locks: a107 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
expectedValue: j21 
newValue: j267 
stateAfter: ?18 
=== Succesors ===
next: v272 
=== Usages ===
v269 
=== Predecessor ===
j267 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v477 expectedValue: j21 newValue: j267 stateAfter: ?18 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i5 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i268 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
i268 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v270 #falseSuccessor: v271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:452) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v270 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:448) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:456) [bci: 132]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 137]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v287 v289 v307 
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v287 v289 v307 #next: v290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1 a89 i5 i3 a107 - - - - - 
locks: a107 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 383]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: ?18 
stateDuring: ?18 
arguments: a107 j217 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?18 stateDuring: ?18 arguments: a107 j217 #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" "B18" "B25" "B1" "B7" "B11" "B10" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v317 v318 v319 v320 v321 v322 v323 v324 
=== Succesors ===
next: j455 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v317 v318 v319 v320 v321 v322 v323 v324 #next: j455  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j455 v143 j462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j455 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.rem
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 9]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
=== Succesors ===
next: v174 
=== Usages ===
v22 v30 i34 ?39 ?43 ?102 j493 
=== Predecessor ===
v316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v465 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:722) [bci: 24]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j455 
y: j21 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j455 y: j21  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:722) [bci: 24]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v173 
falseSuccessor: v171 
=== Usages ===
=== Predecessor ===
j455 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v173 #falseSuccessor: v171  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:722) [bci: 24]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid a207 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30483
stableDimension: 0
stamp: i32 [-30483] ⇊00000000ffff88ed ⇈00000000ffff88ed
stampKind: i32
value: int[-30483|0xffffffffffff88ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?18 
actionAndReason: i206 
speculation: a207 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?18 actionAndReason: i206 speculation: a207  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:722) [bci: 24]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a456 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a456 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.this$0
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 54]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: n Ljava/util/zip/ZipFile;
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
=== Succesors ===
next: v495 
=== Usages ===
?84 v495 v467 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v464 #next: v495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?18 
object: a456 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
a456 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?18 object: a456 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:728) [bci: 46]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j455 
y: j72 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j455 y: j72  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:728) [bci: 46]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.010099855567909044
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v32 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v31 #falseSuccessor: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4576975792119886208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:729) [bci: 49]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:729) [bci: 51]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
resultBits: 32
stamp: i32
=== Inputs ===
value: j455 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j455  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
v31 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607091447388473146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
v32 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v36 
values: i3 i34 
=== Succesors ===
=== Usages ===
?39 ?43 v140 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: i3 i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v35 v37 
=== Succesors ===
next: j457 
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v35 v37 #next: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j457 v142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.pos
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:721) [bci: 15]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
=== Succesors ===
next: v127 
=== Usages ===
?39 ?43 v140 ?102 j491 
=== Predecessor ===
v36 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v466 #next: v127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 1]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i458 
=== Usages ===
=== Predecessor ===
j457 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i458  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
displacement: 25
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a456 
=== Succesors ===
=== Usages ===
i458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile.closeRequested
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 1]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v467 
=== Succesors ===
next: v128 
=== Usages ===
i126 
=== Predecessor ===
v127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v467 #next: v128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 1]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a459 
=== Usages ===
=== Predecessor ===
i458 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.this$0
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 61]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: n Ljava/util/zip/ZipFile;
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
=== Succesors ===
next: v494 
=== Usages ===
v468 v494 
=== Predecessor ===
v128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v464 #next: v494  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read(byte[], int, int)>
duringCall: false
localsSize: 10
locksSize: 1
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 733
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 a89 i5 i38 a107 j455 - j457 - - a107 
monitorIds: v16 
virtualObjectMappings: ?90 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 a89 i5 i38 a107 j455 - j457 - - a107 monitorIds: v16 virtualObjectMappings: ?90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?39 
object: a459 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
a459 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?39 object: a459 #next: v186  <|@  <|@
tid ?43 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read(byte[], int, int)>
duringCall: true
localsSize: 10
locksSize: 1
nodeSourcePosition: at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 733
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 a89 i5 i38 a107 j455 - j457 - - a107 
monitorIds: v16 
=== Succesors ===
=== Usages ===
?88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 a89 i5 i38 a107 j455 - j457 - - a107 monitorIds: v16  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ZipFile.access$1300(ZipFile)>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 60
stackSize: 0
=== Inputs ===
outerFrameState: ?43 
values: - 
=== Succesors ===
=== Usages ===
?84 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?43 values: -  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 1]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i458 
=== Succesors ===
=== Usages ===
v85 ?84 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i458  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ZipFile.ensureOpenOrZipException()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 1]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 695
stackSize: 1
=== Inputs ===
outerFrameState: ?88 
values: a456 i126 
virtualObjectMappings: ?90 
=== Succesors ===
=== Usages ===
a347 v184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?88 values: a456 i126 virtualObjectMappings: ?90  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i5 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i126 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v183 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v183 #falseSuccessor: v185  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j334 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j354 
=== Usages ===
v479 v480 
=== Predecessor ===
v183 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j354  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j354 v356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j354 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v479 
=== Succesors ===
next: j355 
=== Usages ===
j447 j360 v490 
=== Predecessor ===
j334 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v479 #next: j355  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v480 
=== Succesors ===
next: v342 
=== Usages ===
v339 
=== Predecessor ===
j354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v480 #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:721) [bci: 15]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j354 
y: j116 
=== Succesors ===
=== Usages ===
v339 v356 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j354 y: j116  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j355 
y: j447 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j355 y: j447  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
j355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v340 #falseSuccessor: v341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a347 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a347  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a347 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?84 
arguments: v332 i345 i3 
=== Succesors ===
next: j348 
=== Usages ===
j348 
=== Predecessor ===
v340 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?84 arguments: v332 i345 i3 #next: j348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a347 
=== Succesors ===
next: v361 
=== Usages ===
j360 
=== Predecessor ===
a347 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a347 #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
j348 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v479 
value: j447 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v479 value: j447 stateAfter: - lastLocationAccess: - #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j354 
index: - 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j354 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v490 
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v490 #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j360 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v358 
values: j354 j348 
=== Succesors ===
=== Usages ===
v483 v471 a193 v481 v482 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v358 values: j354 j348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v359 v361 
=== Succesors ===
next: a193 
=== Usages ===
j360 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v359 v361 #next: a193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a193 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j360 
=== Succesors ===
next: v371 
=== Usages ===
a199 
=== Predecessor ===
v358 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j360 #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j360 
index: - 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j360 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v481 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
a193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v481 value: i3 stateAfter: - lastLocationAccess: - #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j360 
index: - 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j360 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v482 
value: j72 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v482 value: j72 stateAfter: - lastLocationAccess: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j360 
index: - 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j360 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v483 
value: v451 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v483 value: v451 stateAfter: - lastLocationAccess: - #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j360 
index: - 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j360 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v471 
value: i201 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a199 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v471 value: i201 stateAfter: - lastLocationAccess: - #next: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a193 
=== Succesors ===
next: v200 
=== Usages ===
v140 ?95 v470 
=== Predecessor ===
v198 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a193 #next: v200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j460 
=== Usages ===
=== Predecessor ===
a199 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j460  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a459 
=== Succesors ===
=== Usages ===
j460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j460 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile.jzfile
nodeSourcePosition: at java.util.zip.ZipFile.access$400(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 64]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v468 
=== Succesors ===
next: j461 
=== Usages ===
v140 
=== Predecessor ===
v200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v468 #next: j461  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.jzentry
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 68]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v469 
=== Succesors ===
next: i99 
=== Usages ===
v140 
=== Predecessor ===
j460 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v469 #next: i99  <|@  <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 10]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@afba57e
stamp: void
targetMethod: HotSpotMethod<ZipFile.read(long, long, long, byte[], int, int)>
=== Inputs ===
arguments: j460 j461 j457 a199 i5 i38 
=== Succesors ===
=== Usages ===
i99 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: j460 j461 j457 a199 i5 i38  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
materializedValue: a199 
=== Succesors ===
=== Usages ===
?102 ?203 ?61 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a89 materializedValue: a199  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read(byte[], int, int)>
duringCall: true
localsSize: 10
locksSize: 1
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 734
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 - - - a107 j455 - j457 - - a107 
monitorIds: v16 
virtualObjectMappings: ?95 
=== Succesors ===
=== Usages ===
?100 ?202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 - - - a107 j455 - j457 - - a107 monitorIds: v16 virtualObjectMappings: ?95  <|@  <|@
tid ?202 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<ZipFile.access$1400(long, long, long, byte[], int, int)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 60
stackSize: 0
=== Inputs ===
outerFrameState: ?102 
values: - - - - - - - - - 
=== Succesors ===
=== Usages ===
i99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i99 <|@
d <@d|@=== Debug Properties ===
bci: 10
nodeSourcePosition: at java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 10]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
polymorphic: false
stamp: i32
targetMethod: Direct#ZipFile.read
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v140 
stateDuring: ?202 
=== Succesors ===
next: v190 
=== Usages ===
?100 v166 
=== Predecessor ===
j461 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v140 stateDuring: ?202 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i99 
y: i3 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i99 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:736) [bci: 81]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
i99 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v187 #falseSuccessor: v189  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:736) [bci: 81]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:737) [bci: 89]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j457 
y: j72 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j72  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ZipFile$ZipFileInputStream.pos
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:737) [bci: 90]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
value: j491 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v466 value: j491 stateAfter: - lastLocationAccess: - #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:738) [bci: 98]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:738) [bci: 98]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j455 
y: j492 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j455 y: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ZipFile$ZipFileInputStream.rem
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:738) [bci: 99]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
value: j493 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j434 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v465 value: j493 stateAfter: - lastLocationAccess: - #next: j434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:483) [bci: 17]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v478 
=== Succesors ===
next: v382 
=== Usages ===
j378 v424 v486 v487 v488 v489 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v478 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 50]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j434 
y: j291 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j434 y: j291  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 65]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j378 
y: j295 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j378 y: j295  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 71]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
j434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v381 #falseSuccessor: v380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v442  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 101]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j384 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j384 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.CurrentLockNode.currentLock(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 102]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j435 
=== Usages ===
v484 v409 i415 v421 
=== Predecessor ===
v380 >@ <|@
instruction <@CurrentLock|@org.graalvm.compiler.hotspot.nodes.CurrentLockNode>@ #next: j435  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j384 
index: - 
=== Succesors ===
=== Usages ===
j435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:504) [bci: 118]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v484 
=== Succesors ===
next: v389 
=== Usages ===
v386 i415 
=== Predecessor ===
j384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v484 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 140]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j435 
y: j21 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j435 y: j21  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 146]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v388 
falseSuccessor: v387 
=== Usages ===
=== Predecessor ===
j435 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v388 #falseSuccessor: v387  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585925428558828666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:509) [bci: 149]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4588807732320345782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 170]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 24]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
x: j434 
y: j301 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j434 y: j301  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 105
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read(byte[], int, int)>
duringCall: false
localsSize: 10
locksSize: 0
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 740
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 - - i3 a107 - - - - - 
virtualObjectMappings: ?95 
=== Succesors ===
=== Usages ===
v440 v409 i415 v421 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 - - i3 a107 - - - - - virtualObjectMappings: ?95  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v424 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v391 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v424 #trueSuccessor: v390 #falseSuccessor: v391  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4588721263207500268
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:578) [bci: 253]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j413 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:518) [bci: 193]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a107 
=== Succesors ===
next: i415 
=== Usages ===
v485 
=== Predecessor ===
v390 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a107 #next: i415  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j413 
index: - 
=== Succesors ===
=== Usages ===
i415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i415 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 105]
locals: a1 - - i3 a107 - - - - - 
locks: 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 216]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v485 
expectedValue: j384 
newValue: j435 
stateAfter: ?61 
=== Succesors ===
next: v419 
=== Usages ===
v416 
=== Predecessor ===
j413 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v485 expectedValue: j384 newValue: j435 stateAfter: ?61 #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i415 
y: i5 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i415 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v416 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
i415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v416 #trueSuccessor: v417 #falseSuccessor: v418  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4543890717545916256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:524) [bci: 248]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 105]
locals: a1 - - i3 a107 - - - - - 
locks: 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:526) [bci: 272]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: ?61 
stateDuring: - 
arguments: a107 j384 
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?61 stateDuring: - arguments: a107 j384 #next: v422  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4588712702765328562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:520) [bci: 227]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v420  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:550) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j436 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j436  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j434 
index: - 
=== Succesors ===
=== Usages ===
j436 v440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:552) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
=== Succesors ===
next: j437 
=== Usages ===
j394 
=== Predecessor ===
v391 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v486 #next: j437  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
displacement: 38
scale: Times1
stamp: void*
=== Inputs ===
base: j434 
index: - 
=== Succesors ===
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_recursions
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v487 
=== Succesors ===
next: j393 
=== Usages ===
j395 
=== Predecessor ===
j436 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v487 #next: j393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j393 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:555) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
j394 
=== Predecessor ===
j437 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid j394 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 104]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j393 
y: j436 
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j393 y: j436  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 109]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j394 
y: j437 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j394 y: j437  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 113]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j395 
y: j21 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j395 y: j21  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v396 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
j393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v396 #trueSuccessor: v398 #falseSuccessor: v397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:558) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j438 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j438  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
displacement: 54
scale: Times1
stamp: void*
=== Inputs ===
base: j434 
index: - 
=== Succesors ===
=== Usages ===
j438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_cxq
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:559) [bci: 137]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v488 
=== Succesors ===
next: j439 
=== Usages ===
j400 
=== Predecessor ===
v398 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v488 #next: j439  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
displacement: 62
scale: Times1
stamp: void*
=== Inputs ===
base: j434 
index: - 
=== Succesors ===
=== Usages ===
j439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j439 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_EntryList
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:561) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v489 
=== Succesors ===
next: v407 
=== Usages ===
j400 
=== Predecessor ===
j438 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v489 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 175]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j438 
y: j439 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j438 y: j439  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 179]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j400 
y: j21 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j400 y: j21  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 185]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
j439 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v405 #falseSuccessor: v406  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 188]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 190]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v440 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 105]
locals: a1 - - i3 a107 - - - - - 
locks: 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:567) [bci: 200]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
value: j21 
stateAfter: ?61 
lastLocationAccess: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v486 value: j21 stateAfter: ?61 lastLocationAccess: - #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v404  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4528697575604282463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4544454092639142389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v402 v404 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v402 v404 #next: v409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 105]
locals: a1 - - i3 a107 - - - - - 
locks: 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:575) [bci: 248]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: ?61 
stateDuring: - 
arguments: a107 j384 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?61 stateDuring: - arguments: a107 j384 #next: v432  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 184]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B46" "B43" "B42" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v410 v412 v420 v422 v432 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v410 v412 v420 v422 v432 #next: v423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v443  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v423 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v442 v443 
=== Succesors ===
next: j462 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v442 v443 #next: j462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.rem
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:741) [bci: 117]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
=== Succesors ===
next: v66 
=== Usages ===
v63 
=== Predecessor ===
v441 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v465 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:741) [bci: 122]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j462 
y: j21 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j462 y: j21  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:741) [bci: 122]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.03378013300083127
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
j462 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v64 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4585029051256436656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:742) [bci: 125]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:742) [bci: 126]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@337712fa
stamp: void
targetMethod: HotSpotMethod<ZipFile$ZipFileInputStream.close()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 126
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read(byte[], int, int)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 742
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: - - - i3 - - - - - - 
virtualObjectMappings: ?95 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: - - - i3 - - - - - - virtualObjectMappings: ?95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
bci: 126
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:742) [bci: 126]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
polymorphic: false
stamp: void
targetMethod: Direct#ZipFile$ZipFileInputStream.close
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v152 
stateDuring: ?203 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v152 stateDuring: ?203 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v68 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4606878154411227269
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:744) [bci: 129]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v65 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v77 v78 
=== Succesors ===
next: i463 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v77 v78 #next: i463  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a199 
index: - 
=== Succesors ===
=== Usages ===
i463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:750) [bci: 17]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v470 
=== Succesors ===
next: v14 
=== Usages ===
i154 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v470 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:750) [bci: 21]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i463 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i463  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:750) [bci: 22]
stamp: void
=== Inputs ===
result: i154 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i463 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i154 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:736) [bci: 81]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<ZipFile.access$1400(long, long, long, byte[], int, int)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 10]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 60
stackSize: 1
=== Inputs ===
outerFrameState: ?102 
values: - - - - - - - - - i99 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: - - - - - - - - - i99  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 141
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:736) [bci: 81]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?100 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 129
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?84 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?84  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a453 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a453  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/zip/ZipFile$ZipFileInputStream;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v152 v464 ?18 v465 v466 ?39 ?102 ?43 ?61 v469 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
result [v0|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a453 a456 a459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a453 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.this$0
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: n Ljava/util/zip/ZipFile;
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
=== Succesors ===
next: v454 
=== Usages ===
a107 v478 v472 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v464 #next: v454  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 748
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
result [v1|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a453 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v472 
=== Succesors ===
next: j309 
=== Usages ===
v473 
=== Predecessor ===
a453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v472 #next: j309  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
result [v1|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a453 
=== Succesors ===
=== Usages ===
j309 j434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j309 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:230) [bci: 12]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v478 
=== Succesors ===
next: j217 
=== Usages ===
j219 j223 j239 i247 j256 j273 v302 v477 
=== Predecessor ===
v454 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v478 #next: j217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j217 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode.beginLockScope(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:232) [bci: 18]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j218 
=== Usages ===
v255 v475 j276 v290 v313 
=== Predecessor ===
j309 >@ <|@
instruction <@BeginLockScope|@org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j218  <|@  <|@
f <@~|@floating>@ <|@
tid a107 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
op: Uncompress
stamp: a Ljava/util/zip/ZipFile;
=== Inputs ===
value: a453 
=== Succesors ===
=== Usages ===
v290 ?18 ?18 j413 ?61 ?39 ?39 ?43 ?43 ?102 ?102 v421 j232 v409 v281 v255 j218 v227 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j218 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:234) [bci: 24]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a107 
=== Succesors ===
next: j310 
=== Usages ===
v476 
=== Predecessor ===
j217 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a107 #next: j310  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
result [v2|DWORD * 8 + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v454 
=== Succesors ===
=== Usages ===
j310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j310 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:314) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
=== Succesors ===
next: j221 
=== Usages ===
j222 j256 
=== Predecessor ===
j218 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v473 #next: j221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j221 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:315) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
j222 j240 
=== Predecessor ===
j310 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j221 
y: j310 
=== Succesors ===
=== Usages ===
j223 i247 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j221 y: j310  <|@  <|@
f <@~|@floating>@ <|@
tid j223 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 42]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j222 
y: j309 
=== Succesors ===
=== Usages ===
v294 v296 v298 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j222 y: j309  <|@  <|@
f <@~|@floating>@ <|@
tid j293 <|@
result long[-121|0xffffffffffffff87] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: -121
stableDimension: 0
stamp: i64 [-121] ⇊ffffffffffffff87 ⇈ffffffffffffff87
stampKind: i64
value: long[-121|0xffffffffffffff87]
=== Inputs ===
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
x: j223 
y: j293 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j223 y: j293  <|@  <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<byte>
hasIdentity: true
length: 1
objectId: 0
stamp: a!# [B
=== Inputs ===
=== Succesors ===
=== Usages ===
?18 ?73 ?90 ?95 ?43 ?39 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 749
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a89 
=== Succesors ===
=== Usages ===
?18 ?61 ?39 ?43 ?102 ?203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a89  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 v85 ?18 ?39 ?43 v243 v248 v269 v416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:748) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 ?18 v166 v371 a347 ?61 ?203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?102 ?18 ?43 ?39 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
values: - 
=== Succesors ===
=== Usages ===
?18 ?84 ?39 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a89 values: -  <|@  <|@
tid ?18 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read(byte[], int, int)>
duringCall: false
localsSize: 10
locksSize: 1
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 720
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 a89 i5 i3 a107 - - - - - a107 
monitorIds: v16 
virtualObjectMappings: ?90 
=== Succesors ===
=== Usages ===
v290 v210 i242 i247 v255 j256 i268 j276 v290 v311 v312 v313 v255 v495 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 a89 i5 i3 a107 - - - - - a107 monitorIds: v16 virtualObjectMappings: ?90  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:722) [bci: 22]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 v63 i268 v440 v263 v396 v386 v312 v401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j72 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:728) [bci: 42]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 j273 v372 j491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 109]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 v424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j291 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j219 v296 j378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j295 <|@
result long[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 136]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 5
stableDimension: 0
stamp: i64 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i64
value: long[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 v379 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 97]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
j221 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v225 #falseSuccessor: v224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@cf194ea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:748) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [v1|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@70b76cbe encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v2|DWORD * 8 + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = OR (x: r15|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = XOR (x: v7|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v8|QWORD y: -121 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:322) [bci: 100]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:324) [bci: 120]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
object: a107 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@FastAcquireBiasedLock|@org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode>@ object: a107 #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 125]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid j219 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j309 
y: j291 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j309 y: j291  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 142]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j219 
y: j295 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j219 y: j295  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v228 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v228 #trueSuccessor: v230 #falseSuccessor: v229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND v3|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B12" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 151]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j232 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j232 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 152]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a107 
=== Succesors ===
next: v235 
=== Usages ===
v474 
=== Predecessor ===
v230 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a107 #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
result [v5|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j232 
index: - 
=== Succesors ===
=== Usages ===
i242 i247 j256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j232 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 172]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
x: j223 
y: j291 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j223 y: j291  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 178]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
j232 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v234 #falseSuccessor: v233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v8|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 181]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid j297 <|@
result long[768|0x300] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 192]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 768
stableDimension: 0
stamp: i64 [768] ⇊0000000000000300 ⇈0000000000000300
stampKind: i64
value: long[768|0x300]
=== Inputs ===
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 196]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
x: j223 
y: j297 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j223 y: j297  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 202]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v237 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v237 #falseSuccessor: v236  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v8|QWORD y: 768 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 205]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i242 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i242  <|@  <|@
f <@~|@floating>@ <|@
tid j299 <|@
result long[895|0x37f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 895
stableDimension: 0
stamp: i64 [895] ⇊000000000000037f ⇈000000000000037f
stampKind: i64
value: long[895|0x37f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j239 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64 [0 - 895] ⇈000000000000037f
=== Inputs ===
x: j309 
y: j299 
=== Succesors ===
=== Usages ===
j240 i242 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j309 y: j299  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:358) [bci: 235]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j221 
y: j239 
=== Succesors ===
=== Usages ===
i242 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j221 y: j239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i242 <|@
result INTERIOR_MATCH <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1: v0|QWORD[.] a89 i5: int[0|0x0] i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: a107: v5|QWORD[.] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 276]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
expectedValue: j239 
newValue: j240 
stateAfter: ?18 
=== Succesors ===
next: v246 
=== Usages ===
v243 
=== Predecessor ===
v237 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v474 expectedValue: j239 newValue: j240 stateAfter: ?18 #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i242 
y: i5 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i242 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v243 
=== Succesors ===
trueSuccessor: v244 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
i242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v243 #trueSuccessor: v244 #falseSuccessor: v245  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND v3|QWORD y: 895 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = OR (x: r15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD[.]], cmpValue: rax|QWORD, newValue: v11|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:370) [bci: 308]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:363) [bci: 287]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:379) [bci: 330]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i247 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i247 <|@
result INTERIOR_MATCH <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1: v0|QWORD[.] a89 i5: int[0|0x0] i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: a107: v5|QWORD[.] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 365]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
expectedValue: j309 
newValue: j222 
stateAfter: ?18 
=== Succesors ===
next: v251 
=== Usages ===
v248 
=== Predecessor ===
v236 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v474 expectedValue: j309 newValue: j222 stateAfter: ?18 #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i247 
y: i5 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i247 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
i247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v249 #falseSuccessor: v250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD[.]], cmpValue: rax|QWORD, newValue: v7|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:390) [bci: 397]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v252 v254 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v252 v254 #next: v255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1: v0|QWORD[.] a89 i5: int[0|0x0] i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: a107: v5|QWORD[.] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 421]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: ?18 
stateDuring: ?18 
arguments: a107 j217 
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?18 stateDuring: ?18 arguments: a107 j217 #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v255 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] v5|QWORD[.] - - - - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:383) [bci: 376]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v250 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 426]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j256 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j256 <|@
result v12|QWORD <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1: v0|QWORD[.] a89 i5: int[0|0x0] i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: a107: v5|QWORD[.] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 440]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
expectedValue: j309 
newValue: j310 
stateAfter: ?18 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v474 expectedValue: j309 newValue: j310 stateAfter: ?18 #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
j256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:419) [bci: 460]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" "B13" 
    successors "B15" "B20" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 86]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v257 v258 
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v257 v258 #next: v261  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
result [v4|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j217 
index: - 
=== Succesors ===
=== Usages ===
v311 v312 v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j217 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 113]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
x: j309 
y: j301 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j309 y: j301  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 119]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v302 
=== Succesors ===
trueSuccessor: v259 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v302 #trueSuccessor: v259 #falseSuccessor: v260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v3|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 141]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 149]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j309 
y: j72 
=== Succesors ===
=== Usages ===
j276 v277 v311 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j309 y: j72  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1: v0|QWORD[.] a89 i5: int[0|0x0] i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: a107: v5|QWORD[.] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:258) [bci: 176]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
value: j273 
stateAfter: ?18 
lastLocationAccess: - 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v475 value: j273 stateAfter: ?18 lastLocationAccess: - #next: v274  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:261) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j276 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j276  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
result [v5|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j218 
index: - 
=== Succesors ===
=== Usages ===
j276 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j218 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j276 <|@
result v14|QWORD <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1: v0|QWORD[.] a89 i5: int[0|0x0] i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: a107: v5|QWORD[.] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:265) [bci: 199]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
expectedValue: j273 
newValue: j217 
stateAfter: ?18 
=== Succesors ===
next: v280 
=== Usages ===
v277 j283 
=== Predecessor ===
v274 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v476 expectedValue: j273 newValue: j217 stateAfter: ?18 #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 216]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j273 
y: j276 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j273 y: j276  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 222]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v277 
=== Succesors ===
trueSuccessor: v279 
falseSuccessor: v278 
=== Usages ===
=== Predecessor ===
j276 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v277 #trueSuccessor: v279 #falseSuccessor: v278  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = OR v3|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD[.]], cmpValue: rax|QWORD, newValue: v4|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:267) [bci: 225]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:269) [bci: 245]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
object: a107 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@AcquiredCASLock|@org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode>@ object: a107 #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:272) [bci: 249]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j282 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j282 <|@
result rsp|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:289) [bci: 273]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
j283 
=== Predecessor ===
v278 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid j283 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 297]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j276 
y: j282 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j276 y: j282  <|@  <|@
f <@~|@floating>@ <|@
tid j304 <|@
result long[-4089|0xfffffffffffff007] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 305]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089] ⇊fffffffffffff007 ⇈fffffffffffff007
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 312]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
x: j283 
y: j304 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j283 y: j304  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 318]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v285 
falseSuccessor: v284 
=== Usages ===
=== Predecessor ===
j282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v285 #falseSuccessor: v284  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = SUB (x: v14|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v15|QWORD y: -4089 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 321]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1: v0|QWORD[.] a89 i5: int[0|0x0] i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: a107: v5|QWORD[.] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 335]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
value: j21 
stateAfter: ?18 
lastLocationAccess: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v475 value: j21 stateAfter: ?18 lastLocationAccess: - #next: v319  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:297) [bci: 358]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B24" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 122]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1: v0|QWORD[.] a89 i5: int[0|0x0] i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: a107: v5|QWORD[.] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:439) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
value: j217 
stateAfter: ?18 
lastLocationAccess: - 
=== Succesors ===
next: j314 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v475 value: j217 stateAfter: ?18 lastLocationAccess: - #next: j314  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
result [v3|QWORD + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j309 
index: - 
=== Succesors ===
=== Usages ===
i268 j314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j314 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:443) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
=== Succesors ===
next: v266 
=== Usages ===
v263 
=== Predecessor ===
v313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v477 #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j314 
y: j21 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j314 y: j21  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v263 
=== Succesors ===
trueSuccessor: v265 
falseSuccessor: v264 
=== Usages ===
=== Predecessor ===
j314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v263 #trueSuccessor: v265 #falseSuccessor: v264  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD], y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v3|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j267 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j267 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 74]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: i268 
=== Usages ===
i268 
=== Predecessor ===
v265 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: i268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i268 <|@
result INTERIOR_MATCH <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1: v0|QWORD[.] a89 i5: int[0|0x0] i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: a107: v5|QWORD[.] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
expectedValue: j21 
newValue: j267 
stateAfter: ?18 
=== Succesors ===
next: v272 
=== Usages ===
v269 
=== Predecessor ===
j267 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v477 expectedValue: j21 newValue: j267 stateAfter: ?18 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i5 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i268 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
i268 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v270 #falseSuccessor: v271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v3|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:452) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v270 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:448) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:456) [bci: 132]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 137]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v287 v289 v307 
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v287 v289 v307 #next: v290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: a1: v0|QWORD[.] a89 i5: int[0|0x0] i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: a107: v5|QWORD[.] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 383]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: ?18 
stateDuring: ?18 
arguments: a107 j217 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?18 stateDuring: ?18 arguments: a107 j217 #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] v5|QWORD[.] - - - - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" "B18" "B25" "B1" "B7" "B11" "B10" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:719) [bci: 7]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v317 v318 v319 v320 v321 v322 v323 v324 
=== Succesors ===
next: j455 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v317 v318 v319 v320 v321 v322 v323 v324 #next: j455  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j455 v143 j462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j455 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.rem
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 9]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
=== Succesors ===
next: v174 
=== Usages ===
v22 v30 i34 ?39 ?43 ?102 j493 
=== Predecessor ===
v316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v465 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:722) [bci: 24]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j455 
y: j21 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j455 y: j21  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:722) [bci: 24]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v173 
falseSuccessor: v171 
=== Usages ===
=== Predecessor ===
j455 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v173 #falseSuccessor: v171  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [v0|QWORD[.] + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:722) [bci: 24]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid a207 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result int[-30483|0xffffffffffff88ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30483
stableDimension: 0
stamp: i32 [-30483] ⇊00000000ffff88ed ⇈00000000ffff88ed
stampKind: i32
value: int[-30483|0xffffffffffff88ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?18 
actionAndReason: i206 
speculation: a207 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?18 actionAndReason: i206 speculation: a207  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -30483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] v5|QWORD[.] - - - - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:8, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:722) [bci: 24]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a456 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a456 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.this$0
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 54]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: n Ljava/util/zip/ZipFile;
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
=== Succesors ===
next: v495 
=== Usages ===
?84 v495 v467 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v464 #next: v495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?18 
object: a456 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
a456 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?18 object: a456 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:728) [bci: 46]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j455 
y: j72 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j455 y: j72  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:728) [bci: 46]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.010099855567909044
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v32 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v31 #falseSuccessor: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] v5|QWORD[.] - - - - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:8, 8] <|@ <|@
      nr   -1  <|@ instruction CMP v16|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010099855567909044 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4576975792119886208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:729) [bci: 49]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:729) [bci: 51]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
resultBits: 32
stamp: i32
=== Inputs ===
value: j455 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j455  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
v31 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV v16|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607091447388473146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
v32 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i38 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v36 
values: i3 i34 
=== Succesors ===
=== Usages ===
?39 ?43 v140 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: i3 i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v35 v37 
=== Succesors ===
next: j457 
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v35 v37 #next: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j457 v142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j457 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.pos
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:721) [bci: 15]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
=== Succesors ===
next: v127 
=== Usages ===
?39 ?43 v140 ?102 j491 
=== Predecessor ===
v36 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v466 #next: v127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 1]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i458 
=== Usages ===
=== Predecessor ===
j457 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i458  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
result [v17|DWORD[.] * 8 + 25] <|@
d <@d|@=== Debug Properties ===
displacement: 25
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a456 
=== Succesors ===
=== Usages ===
i458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i458 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile.closeRequested
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 1]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v467 
=== Succesors ===
next: v128 
=== Usages ===
i126 
=== Predecessor ===
v127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v467 #next: v128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 1]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a459 
=== Usages ===
=== Predecessor ===
i458 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a459 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.this$0
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 61]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: n Ljava/util/zip/ZipFile;
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
=== Succesors ===
next: v494 
=== Usages ===
v468 v494 
=== Predecessor ===
v128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v464 #next: v494  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read(byte[], int, int)>
duringCall: false
localsSize: 10
locksSize: 1
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 733
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 a89 i5 i38 a107 j455 - j457 - - a107 
monitorIds: v16 
virtualObjectMappings: ?90 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 a89 i5 i38 a107 j455 - j457 - - a107 monitorIds: v16 virtualObjectMappings: ?90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?39 
object: a459 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
a459 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?39 object: a459 #next: v186  <|@  <|@
tid ?43 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read(byte[], int, int)>
duringCall: true
localsSize: 10
locksSize: 1
nodeSourcePosition: at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 733
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 a89 i5 i38 a107 j455 - j457 - - a107 
monitorIds: v16 
=== Succesors ===
=== Usages ===
?88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 a89 i5 i38 a107 j455 - j457 - - a107 monitorIds: v16  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ZipFile.access$1300(ZipFile)>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 60
stackSize: 0
=== Inputs ===
outerFrameState: ?43 
values: - 
=== Succesors ===
=== Usages ===
?84 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?43 values: -  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 1]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i458 
=== Succesors ===
=== Usages ===
v85 ?84 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i458  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ZipFile.ensureOpenOrZipException()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 1]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 695
stackSize: 1
=== Inputs ===
outerFrameState: ?88 
values: a456 i126 
virtualObjectMappings: ?90 
=== Succesors ===
=== Usages ===
a347 v184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?88 values: a456 i126 virtualObjectMappings: ?90  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i5 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i126 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v183 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v183 #falseSuccessor: v185  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVSXB [v17|DWORD[.] * 8 + 25] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] v19|DWORD v5|QWORD[.] v16|QWORD - v20|QWORD - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v22|DWORD[.] * 8] state [bci:53, 8] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j334 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j334 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j354 
=== Usages ===
v479 v480 
=== Predecessor ===
v183 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j354  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j354 v356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j354 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v479 
=== Succesors ===
next: j355 
=== Usages ===
j447 j360 v490 
=== Predecessor ===
j334 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v479 #next: j355  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j355 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v480 
=== Succesors ===
next: v342 
=== Usages ===
v339 
=== Predecessor ===
j354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v480 #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:721) [bci: 15]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j354 
y: j116 
=== Succesors ===
=== Usages ===
v339 v356 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j354 y: j116  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j355 
y: j447 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j355 y: j447  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
j355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v340 #falseSuccessor: v341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a347 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a347  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a347 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?84 
arguments: v332 i345 i3 
=== Succesors ===
next: j348 
=== Usages ===
j348 
=== Predecessor ===
v340 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?84 arguments: v332 i345 i3 #next: j348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j348 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a347 
=== Succesors ===
next: v361 
=== Usages ===
j360 
=== Predecessor ===
a347 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a347 #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
j348 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
stack: v23|DWORD 
locals: v17|DWORD[.] 
java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
locals: - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] v19|DWORD v5|QWORD[.] v16|QWORD - v20|QWORD - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 57, 8] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v479 
value: j447 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v479 value: j447 stateAfter: - lastLocationAccess: - #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
result [v24|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j354 
index: - 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j354 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v490 
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v490 #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v24|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j360 <|@
result v28|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v358 
values: j354 j348 
=== Succesors ===
=== Usages ===
v483 v471 a193 v481 v482 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v358 values: j354 j348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v359 v361 
=== Succesors ===
next: a193 
=== Usages ===
j360 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v359 v361 #next: a193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a193 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j360 
=== Succesors ===
next: v371 
=== Usages ===
a199 
=== Predecessor ===
v358 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j360 #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
result [v28|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j360 
index: - 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j360 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v481 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
a193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v481 value: i3 stateAfter: - lastLocationAccess: - #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
result [v28|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j360 
index: - 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j360 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v482 
value: j72 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v482 value: j72 stateAfter: - lastLocationAccess: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
result [v28|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j360 
index: - 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j360 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v483 
value: v451 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v483 value: v451 stateAfter: - lastLocationAccess: - #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
result [v28|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j360 
index: - 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j360 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v471 
value: i201 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a199 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v471 value: i201 stateAfter: - lastLocationAccess: - #next: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a193 
=== Succesors ===
next: v200 
=== Usages ===
v140 ?95 v470 
=== Predecessor ===
v198 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a193 #next: v200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j460 
=== Usages ===
=== Predecessor ===
a199 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j460  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
result [v22|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a459 
=== Succesors ===
=== Usages ===
j460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j460 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile.jzfile
nodeSourcePosition: at java.util.zip.ZipFile.access$400(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 64]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v468 
=== Succesors ===
next: j461 
=== Usages ===
v140 
=== Predecessor ===
v200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v468 #next: j461  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j461 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.jzentry
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 68]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v469 
=== Succesors ===
next: i99 
=== Usages ===
v140 
=== Predecessor ===
j460 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v469 #next: i99  <|@  <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 10]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@afba57e
stamp: void
targetMethod: HotSpotMethod<ZipFile.read(long, long, long, byte[], int, int)>
=== Inputs ===
arguments: j460 j461 j457 a199 i5 i38 
=== Succesors ===
=== Usages ===
i99 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: j460 j461 j457 a199 i5 i38  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
materializedValue: a199 
=== Succesors ===
=== Usages ===
?102 ?203 ?61 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a89 materializedValue: a199  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read(byte[], int, int)>
duringCall: true
localsSize: 10
locksSize: 1
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 734
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 - - - a107 j455 - j457 - - a107 
monitorIds: v16 
virtualObjectMappings: ?95 
=== Succesors ===
=== Usages ===
?100 ?202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 - - - a107 j455 - j457 - - a107 monitorIds: v16 virtualObjectMappings: ?95  <|@  <|@
tid ?202 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<ZipFile.access$1400(long, long, long, byte[], int, int)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 60
stackSize: 0
=== Inputs ===
outerFrameState: ?102 
values: - - - - - - - - - 
=== Succesors ===
=== Usages ===
i99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i99 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 10
nodeSourcePosition: at java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 10]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
polymorphic: false
stamp: i32
targetMethod: Direct#ZipFile.read
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v140 
stateDuring: ?202 
=== Succesors ===
next: v190 
=== Usages ===
?100 v166 
=== Predecessor ===
j461 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v140 stateDuring: ?202 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i99 
y: i3 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i99 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:736) [bci: 81]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
i99 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v187 #falseSuccessor: v189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE v28|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v28|QWORD[*] + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v28|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v28|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v28|QWORD[*] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [v22|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 10]
locals: - - - - - - - - - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
locals: v0|QWORD[.] - - - v5|QWORD[.] v16|QWORD - v20|QWORD - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - v29|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD] [] callTarget: HotSpotMethod<ZipFile.read(long, long, long, byte[], int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:10, 76, 8] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v32|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:736) [bci: 81]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:737) [bci: 89]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j457 
y: j72 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j72  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ZipFile$ZipFileInputStream.pos
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:737) [bci: 90]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
value: j491 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v466 value: j491 stateAfter: - lastLocationAccess: - #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:738) [bci: 98]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:738) [bci: 98]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j455 
y: j492 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j455 y: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ZipFile$ZipFileInputStream.rem
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:738) [bci: 99]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
value: j493 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j434 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v465 value: j493 stateAfter: - lastLocationAccess: - #next: j434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j434 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:483) [bci: 17]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v478 
=== Succesors ===
next: v382 
=== Usages ===
j378 v424 v486 v487 v488 v489 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v478 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 50]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j434 
y: j291 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j434 y: j291  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 65]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j378 
y: j295 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j378 y: j295  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 71]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
j434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v381 #falseSuccessor: v380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = INC v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [v1|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = AND v35|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v36|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v442  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 101]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j384 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j384 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.CurrentLockNode.currentLock(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 102]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j435 
=== Usages ===
v484 v409 i415 v421 
=== Predecessor ===
v380 >@ <|@
instruction <@CurrentLock|@org.graalvm.compiler.hotspot.nodes.CurrentLockNode>@ #next: j435  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
result [v37|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j384 
index: - 
=== Succesors ===
=== Usages ===
j435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j435 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:504) [bci: 118]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v484 
=== Succesors ===
next: v389 
=== Usages ===
v386 i415 
=== Predecessor ===
j384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v484 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 140]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j435 
y: j21 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j435 y: j21  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 146]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v388 
falseSuccessor: v387 
=== Usages ===
=== Predecessor ===
j435 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v388 #falseSuccessor: v387  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v37|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585925428558828666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:509) [bci: 149]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4588807732320345782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 170]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 24]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
x: j434 
y: j301 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j434 y: j301  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 105
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read(byte[], int, int)>
duringCall: false
localsSize: 10
locksSize: 0
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 740
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 - - i3 a107 - - - - - 
virtualObjectMappings: ?95 
=== Succesors ===
=== Usages ===
v440 v409 i415 v421 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 - - i3 a107 - - - - - virtualObjectMappings: ?95  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v424 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v391 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v424 #trueSuccessor: v390 #falseSuccessor: v391  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v35|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4588721263207500268
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:578) [bci: 253]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j413 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j413 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:518) [bci: 193]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a107 
=== Succesors ===
next: i415 
=== Usages ===
v485 
=== Predecessor ===
v390 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a107 #next: i415  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
result [v5|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j413 
index: - 
=== Succesors ===
=== Usages ===
i415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i415 <|@
result INTERIOR_MATCH <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 105]
locals: a1: v0|QWORD[.] - - i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 216]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v485 
expectedValue: j384 
newValue: j435 
stateAfter: ?61 
=== Succesors ===
next: v419 
=== Usages ===
v416 
=== Predecessor ===
j413 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v485 expectedValue: j384 newValue: j435 stateAfter: ?61 #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i415 
y: i5 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i415 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v416 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
i415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v416 #trueSuccessor: v417 #falseSuccessor: v418  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD[.]], cmpValue: rax|QWORD, newValue: v38|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4543890717545916256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:524) [bci: 248]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 105]
locals: a1: v0|QWORD[.] - - i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:526) [bci: 272]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: ?61 
stateDuring: - 
arguments: a107 j384 
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?61 stateDuring: - arguments: a107 j384 #next: v422  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4588712702765328562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:520) [bci: 227]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v420  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:550) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j436 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j436  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
result [v35|QWORD + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j434 
index: - 
=== Succesors ===
=== Usages ===
j436 v440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:552) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
=== Succesors ===
next: j437 
=== Usages ===
j394 
=== Predecessor ===
v391 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v486 #next: j437  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
result [v35|QWORD + 38] <|@
d <@d|@=== Debug Properties ===
displacement: 38
scale: Times1
stamp: void*
=== Inputs ===
base: j434 
index: - 
=== Succesors ===
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j437 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_recursions
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v487 
=== Succesors ===
next: j393 
=== Usages ===
j395 
=== Predecessor ===
j436 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v487 #next: j393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j393 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:555) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
j394 
=== Predecessor ===
j437 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid j394 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 104]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j393 
y: j436 
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j393 y: j436  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 109]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j394 
y: j437 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j394 y: j437  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 113]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j395 
y: j21 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j395 y: j21  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v396 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
j393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v396 #trueSuccessor: v398 #falseSuccessor: v397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [v35|QWORD + 22] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [v35|QWORD + 38] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = XOR (x: r15|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = OR (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:558) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j438 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j438  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
result [v35|QWORD + 54] <|@
d <@d|@=== Debug Properties ===
displacement: 54
scale: Times1
stamp: void*
=== Inputs ===
base: j434 
index: - 
=== Succesors ===
=== Usages ===
j438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j438 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_cxq
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:559) [bci: 137]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v488 
=== Succesors ===
next: j439 
=== Usages ===
j400 
=== Predecessor ===
v398 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v488 #next: j439  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
result [v35|QWORD + 62] <|@
d <@d|@=== Debug Properties ===
displacement: 62
scale: Times1
stamp: void*
=== Inputs ===
base: j434 
index: - 
=== Succesors ===
=== Usages ===
j439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j439 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_EntryList
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:561) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v489 
=== Succesors ===
next: v407 
=== Usages ===
j400 
=== Predecessor ===
j438 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v489 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 175]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: i64
=== Inputs ===
x: j438 
y: j439 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j438 y: j439  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 179]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j400 
y: j21 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j400 y: j21  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 185]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
j439 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v405 #falseSuccessor: v406  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v35|QWORD + 54] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = OR (x: v43|QWORD, ~y: [v35|QWORD + 62]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 188]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 190]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v440 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 105]
locals: a1: v0|QWORD[.] - - i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:567) [bci: 200]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
value: j21 
stateAfter: ?61 
lastLocationAccess: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v486 value: j21 stateAfter: ?61 lastLocationAccess: - #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v404  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4528697575604282463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4544454092639142389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v402 v404 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v402 v404 #next: v409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 105]
locals: a1: v0|QWORD[.] - - i3: int[1|0x1] a107: v5|QWORD[.] - - - - - 
locks: 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - a89 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:575) [bci: 248]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: ?61 
stateDuring: - 
arguments: a107 j384 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?61 stateDuring: - arguments: a107 j384 #next: v432  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 184]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B46" "B43" "B42" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v410 v412 v420 v422 v432 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v410 v412 v420 v422 v432 #next: v423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v443  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v423 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:740) [bci: 104]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v442 v443 
=== Succesors ===
next: j462 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v442 v443 #next: j462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j462 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipFile$ZipFileInputStream.rem
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:741) [bci: 117]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
=== Succesors ===
next: v66 
=== Usages ===
v63 
=== Predecessor ===
v441 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v465 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:741) [bci: 122]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j462 
y: j21 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j462 y: j21  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:741) [bci: 122]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
trueSuccessorProbability: 0.03378013300083127
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
j462 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v64 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.03378013300083127 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4585029051256436656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:742) [bci: 125]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:742) [bci: 126]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@337712fa
stamp: void
targetMethod: HotSpotMethod<ZipFile$ZipFileInputStream.close()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 126
code: ResolvedJavaMethodBytecode<ZipFile$ZipFileInputStream.read(byte[], int, int)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 742
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: - - - i3 - - - - - - 
virtualObjectMappings: ?95 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: - - - i3 - - - - - - virtualObjectMappings: ?95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
bci: 126
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:742) [bci: 126]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
polymorphic: false
stamp: void
targetMethod: Direct#ZipFile$ZipFileInputStream.close
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v152 
stateDuring: ?203 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v152 stateDuring: ?203 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v68 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:742) [bci: 126]
locals: - - - int[1|0x1] - - - - - - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - v29|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ZipFile$ZipFileInputStream.close()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4606878154411227269
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:744) [bci: 129]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v65 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v77 v78 
=== Succesors ===
next: i463 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v77 v78 #next: i463  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
result [v29|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a199 
index: - 
=== Succesors ===
=== Usages ===
i463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i463 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:750) [bci: 17]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v470 
=== Succesors ===
next: v14 
=== Usages ===
i154 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v470 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:750) [bci: 21]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i463 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i463  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:750) [bci: 22]
stamp: void
=== Inputs ===
result: i154 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i463 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i154 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB [v29|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:736) [bci: 81]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<ZipFile.access$1400(long, long, long, byte[], int, int)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 10]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
rethrowException: false
sourceFile: ZipFile.java
sourceLine: 60
stackSize: 1
=== Inputs ===
outerFrameState: ?102 
values: - - - - - - - - - i99 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: - - - - - - - - - i99  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 141
nodeSourcePosition: at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:736) [bci: 81]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?100 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -36115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 13]
stack: v32|DWORD 
locals: - - - - - - - - - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
locals: v0|QWORD[.] - - - v5|QWORD[.] v16|QWORD - v20|QWORD - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - v29|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:13, 76, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 129
nodeSourcePosition: at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?84 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?84  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -33043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
stack: v23|DWORD 
locals: v17|DWORD[.] 
java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
locals: - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] v19|DWORD v5|QWORD[.] v16|QWORD - v20|QWORD - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:4, 1, 57, 8] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@cf194ea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:748) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [v1|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@70b76cbe encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v2|DWORD * 8 + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = OR (x: r15|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = XOR (x: v7|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v8|QWORD y: -121 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" "B18" "B25" "B1" "B7" "B11" "B10" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [v0|QWORD[.] + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] v5|QWORD[.] - - - - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:8, 8] <|@ <|@
      nr   -1  <|@ instruction CMP v16|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010099855567909044 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607091447388473146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVSXB [v17|DWORD[.] * 8 + 25] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] v19|DWORD v5|QWORD[.] v16|QWORD - v20|QWORD - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v22|DWORD[.] * 8] state [bci:53, 8] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v24|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE v28|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v28|QWORD[*] + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v28|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v28|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v28|QWORD[*] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [v22|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 10]
locals: - - - - - - - - - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
locals: v0|QWORD[.] - - - v5|QWORD[.] v16|QWORD - v20|QWORD - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - v29|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD] [] callTarget: HotSpotMethod<ZipFile.read(long, long, long, byte[], int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:10, 76, 8] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v32|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = INC v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [v1|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = AND v35|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v36|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.03378013300083127 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4606878154411227269
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB [v29|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v37|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4588807732320345782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v35|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4588721263207500268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD[.]], cmpValue: rax|QWORD, newValue: v38|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4588712702765328562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B46" "B43" "B42" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585925428558828666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4585029051256436656
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:742) [bci: 126]
locals: - - - int[1|0x1] - - - - - - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - v29|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ZipFile$ZipFileInputStream.close()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4576975792119886208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV v16|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND v3|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" "B13" 
    successors "B15" "B20" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v3|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = OR v3|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD[.]], cmpValue: rax|QWORD, newValue: v4|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
stack: v23|DWORD 
locals: v17|DWORD[.] 
java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
locals: - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] v19|DWORD v5|QWORD[.] v16|QWORD - v20|QWORD - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 57, 8] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B12" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v8|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v8|QWORD y: 768 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND v3|QWORD y: 895 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = OR (x: r15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD[.]], cmpValue: rax|QWORD, newValue: v11|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [v35|QWORD + 22] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [v35|QWORD + 38] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = XOR (x: r15|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = OR (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v35|QWORD + 54] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = OR (x: v43|QWORD, ~y: [v35|QWORD + 62]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B24" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD], y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v3|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v3|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = SUB (x: v14|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v15|QWORD y: -4089 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD[.]], cmpValue: rax|QWORD, newValue: v7|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4543890717545916256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4544454092639142389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] v5|QWORD[.] - - - - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4528697575604282463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] v5|QWORD[.] - - - - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -30483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] v5|QWORD[.] - - - - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:8, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -33043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
stack: v23|DWORD 
locals: v17|DWORD[.] 
java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
locals: - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
locals: v0|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] v19|DWORD v5|QWORD[.] v16|QWORD - v20|QWORD - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:4, 1, 57, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -36115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 13]
stack: v32|DWORD 
locals: - - - - - - - - - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
locals: v0|QWORD[.] - - - v5|QWORD[.] v16|QWORD - v20|QWORD - - 
locks: monitor[v5|QWORD[.], vstack:0|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - v29|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:13, 76, 8] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      byte
     3: astore_1      
     4: aload_0       
     5: aload_1       
     6: iconst_0      
     7: iconst_1      
     8: invokevirtual #13         // read:(byte[], int, int)int
    11: iconst_1      
    12: if_icmpne     23
    15: aload_1       
    16: iconst_0      
    17: baload        
    18: sipush        255
    21: iand          
    22: ireturn       
    23: iconst_m1     
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@cf194ea slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   10  <|@ instruction stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:748) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr   18  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@70b76cbe encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r9|QWORD = MOV [rdx|DWORD * 8 + 168] size: QWORD <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = OR (x: r15|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction rdi|QWORD = XOR (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction TEST rdi|QWORD y: -121 size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B1 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" "B18" "B25" "B1" "B7" "B11" "B10" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction r11|QWORD = MOV [rsi|QWORD[.] + 32] size: QWORD <|@ <|@
      nr  244  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r13:0, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: rsi|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] rbx|QWORD[.] - - - - - 
locks: monitor[rbx|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:8, 8] <|@ <|@
      nr  264  <|@ instruction CMP r11|QWORD y: 1 size: QWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.010099855567909044 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607091447388473146
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|DWORD = MOVSXB [r13|DWORD[.] * 8 + 25] size: DWORD <|@ <|@
      nr  290  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  292  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r13:0, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
locals: rsi|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] r14|DWORD rbx|QWORD[.] r11|QWORD - rax|QWORD - - 
locks: monitor[rbx|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:53, 8] <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVZXB rdx|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  306  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  350  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction stack:88|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rdx|QWORD[*] + 12] y: 1 size: DWORD <|@ <|@
      nr  368  <|@ instruction MOV [rdx|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  370  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  372  <|@ instruction MOVB (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  374  <|@ instruction rdx|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rcx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction r8|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  388  <|@ instruction rdi|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 10]
locals: - - - - - - - - - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
locals: stack:40|QWORD[.] - - - stack:88|QWORD[.] stack:56|QWORD - stack:72|QWORD - - 
locks: monitor[stack:88|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - stack:96|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD] [] callTarget: HotSpotMethod<ZipFile.read(long, long, long, byte[], int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:10, 76, 8] <|@ <|@
      nr  394  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = INC stack:72|QWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r11|QWORD = DEC stack:56|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction r10|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction rax|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr  416  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr  418  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction CMP [rsi|QWORD[.] + 32] y: 0 size: QWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.03378013300083127 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4606878154411227269
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction rbp|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVZXB [rbp|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r11|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr  428  <|@ instruction r8|QWORD = MOV [r11|QWORD] size: QWORD <|@ <|@
      nr  430  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4588807732320345782
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction TEST r10|QWORD y: 2 size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4588721263207500268
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rax|QWORD = CAS (address: [rbx|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD <|@ <|@
      nr  452  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4588712702765328562
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B43 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B46" "B43" "B42" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585925428558828666
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4585029051256436656
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:742) [bci: 126]
locals: - - - int[1|0x1] - - - - - - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - stack:96|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ZipFile$ZipFileInputStream.close()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126, 8] <|@ <|@
      nr  540  <|@ instruction rbp|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4576975792119886208
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r14|DWORD = MOV stack:56|QWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|QWORD = AND r11|QWORD y: 7 size: QWORD <|@ <|@
      nr   38  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" "B13" 
    successors "B15" "B20" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction TEST r11|QWORD y: 2 size: QWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r11|QWORD = OR r11|QWORD y: 1 size: QWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [r8|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rax|QWORD = CAS (address: [rbx|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD <|@ <|@
      nr  154  <|@ instruction CMP (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction stack:64|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction stack:76|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: [r13:0, stack:20, stack:32, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
stack: stack:60|DWORD 
locals: stack:76|DWORD[.] 
java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
locals: - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
locals: stack:40|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] r14|DWORD r13|QWORD[.] stack:56|QWORD - stack:72|QWORD - - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 57, 8] <|@ <|@
      nr  334  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction stack:88|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B12" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TEST rdi|QWORD y: 7 size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction TEST rdi|QWORD y: 768 size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|QWORD = AND r11|QWORD y: 895 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = OR (x: r15|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction r13|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rax|QWORD = MOV [r10|QWORD + 22] size: QWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD <|@ <|@
      nr  480  <|@ instruction rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|QWORD = MOV [r10|QWORD + 54] size: QWORD <|@ <|@
      nr  492  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD <|@ <|@
      nr  494  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr  126  <|@ instruction rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B24" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [r8|QWORD], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction CMP [r11|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  202  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction TEST rax|QWORD y: -4089 size: QWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction MOV (x: [r8|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4543890717545916256
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  464  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4544454092639142389
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ st <@st|@reference-map: [r13:0, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: stack:40|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] r13|QWORD[.] - - - - - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8, 8] <|@ <|@
      nr  232  <|@ instruction rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4528697575604282463
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [r13:0, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: stack:40|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] r13|QWORD[.] - - - - - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8, 8] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B10 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction MOV [r15|QWORD + 668] y: -30483 size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: rsi|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] r13|QWORD[.] - - - - - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:8, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r10|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction MOV [r15|QWORD + 668] y: -33043 size: DWORD <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  578  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:56]
live-base-pointers: []
java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
stack: r9|DWORD 
locals: r10|DWORD[.] 
java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
locals: - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
locals: stack:40|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] r14|DWORD r13|QWORD[.] r11|QWORD - rax|QWORD - - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:4, 1, 57, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rbp|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r13|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction MOV [r15|QWORD + 668] y: -36115 size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [rbp:0, r13:0, stack:56]
live-base-pointers: []
java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 13]
stack: rax|DWORD 
locals: - - - - - - - - - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
locals: stack:40|QWORD[.] - - - r13|QWORD[.] stack:56|QWORD - stack:72|QWORD - - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - rbp|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:13, 76, 8] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      byte
     3: astore_1      
     4: aload_0       
     5: aload_1       
     6: iconst_0      
     7: iconst_1      
     8: invokevirtual #13         // read:(byte[], int, int)int
    11: iconst_1      
    12: if_icmpne     23
    15: aload_1       
    16: iconst_0      
    17: baload        
    18: sipush        255
    21: iand          
    22: ireturn       
    23: iconst_m1     
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B26" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@cf194ea slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   10  <|@ instruction stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:748) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr   18  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@70b76cbe encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r9|QWORD = MOV [rdx|DWORD * 8 + 168] size: QWORD <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = OR (x: r15|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction rdi|QWORD = XOR (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction TEST rdi|QWORD y: -121 size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B26 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B15" "B18" "B25" "B0" "B7" "B11" "B10" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction r11|QWORD = MOV [rsi|QWORD[.] + 32] size: QWORD <|@ <|@
      nr  244  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r13:0, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: rsi|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] rbx|QWORD[.] - - - - - 
locks: monitor[rbx|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:8, 8] <|@ <|@
      nr  264  <|@ instruction CMP r11|QWORD y: 1 size: QWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.010099855567909044 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607091447388473146
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|DWORD = MOVSXB [r13|DWORD[.] * 8 + 25] size: DWORD <|@ <|@
      nr  290  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  292  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r13:0, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53]
locals: rsi|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] r14|DWORD rbx|QWORD[.] r11|QWORD - rax|QWORD - - 
locks: monitor[rbx|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:53, 8] <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVZXB rdx|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  306  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  350  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction stack:88|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rdx|QWORD[*] + 12] y: 1 size: DWORD <|@ <|@
      nr  368  <|@ instruction MOV [rdx|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  370  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  372  <|@ instruction MOVB (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  374  <|@ instruction rdx|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rcx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction r8|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  388  <|@ instruction rdi|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 10]
locals: - - - - - - - - - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
locals: stack:40|QWORD[.] - - - stack:88|QWORD[.] stack:56|QWORD - stack:72|QWORD - - 
locks: monitor[stack:88|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - stack:96|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD] [] callTarget: HotSpotMethod<ZipFile.read(long, long, long, byte[], int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:10, 76, 8] <|@ <|@
      nr  394  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B51" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = INC stack:72|QWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r11|QWORD = DEC stack:56|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction r10|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction rax|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr  416  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr  418  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B36 -> B51 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B46" "B41" "B42" "B49" 
    successors "B52" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction CMP [rsi|QWORD[.] + 32] y: 0 size: QWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.03378013300083127 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B51" "B52" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction rbp|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVZXB [rbp|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" "B40" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r11|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr  428  <|@ instruction r8|QWORD = MOV [r11|QWORD] size: QWORD <|@ <|@
      nr  430  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B38 -> B51 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4588807732320345782
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction TEST r10|QWORD y: 2 size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B51" 
    xhandlers
    flags 
    probability 4588721263207500268
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rax|QWORD = CAS (address: [rbx|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD <|@ <|@
      nr  452  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4585029051256436656
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:742) [bci: 126]
locals: - - - int[1|0x1] - - - - - - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - stack:96|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ZipFile$ZipFileInputStream.close()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126, 8] <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4576975792119886208
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r14|DWORD = MOV stack:56|QWORD size: DWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B14" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|QWORD = AND r11|QWORD y: 7 size: QWORD <|@ <|@
      nr   38  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" "B2" 
    successors "B15" "B20" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction TEST r11|QWORD y: 2 size: QWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" "B17" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r11|QWORD = OR r11|QWORD y: 1 size: QWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [r8|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rax|QWORD = CAS (address: [rbx|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD <|@ <|@
      nr  154  <|@ instruction CMP (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B26 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction stack:64|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction stack:76|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: [r13:0, stack:20, stack:32, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
stack: stack:60|DWORD 
locals: stack:76|DWORD[.] 
java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
locals: - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
locals: stack:40|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] r14|DWORD r13|QWORD[.] stack:56|QWORD - stack:72|QWORD - - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 57, 8] <|@ <|@
      nr  334  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction stack:88|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B12" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TEST rdi|QWORD y: 7 size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction TEST rdi|QWORD y: 768 size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B7" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|QWORD = AND r11|QWORD y: 895 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = OR (x: r15|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B5 -> B10 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B49" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction r13|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rax|QWORD = MOV [r10|QWORD + 22] size: QWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD <|@ <|@
      nr  480  <|@ instruction rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|QWORD = MOV [r10|QWORD + 54] size: QWORD <|@ <|@
      nr  492  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD <|@ <|@
      nr  494  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [r8|QWORD], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction CMP [r11|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" "B23" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  202  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B21 -> B25 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B25" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction TEST rax|QWORD y: -4089 size: QWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction MOV (x: [r8|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  178  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B8 -> B10 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543890717545916256
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  464  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B42 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4544454092639142389
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ st <@st|@reference-map: [r13:0, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: stack:40|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] r13|QWORD[.] - - - - - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8, 8] <|@ <|@
      nr  232  <|@ instruction rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [r13:0, stack:52, stack:56]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: stack:40|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] r13|QWORD[.] - - - - - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8, 8] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B10 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction MOV [r15|QWORD + 668] y: -30483 size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8]
locals: rsi|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] int[1|0x1] r13|QWORD[.] - - - - - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:8, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r10|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction MOV [r15|QWORD + 668] y: -33043 size: DWORD <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  578  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:56]
live-base-pointers: []
java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4]
stack: r9|DWORD 
locals: r10|DWORD[.] 
java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1]
locals: - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57]
locals: stack:40|QWORD[.] vobject:byte[]:0{0=int[0|0x0]} int[0|0x0] r14|DWORD r13|QWORD[.] r11|QWORD - rax|QWORD - - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - vobject:byte[]:0{0=int[0|0x0]} 
vobject:byte[]:0{0=int[0|0x0]} [B int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:4, 1, 57, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rbp|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r13|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction MOV [r15|QWORD + 668] y: -36115 size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [rbp:0, r13:0, stack:56]
live-base-pointers: []
java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 13]
stack: rax|DWORD 
locals: - - - - - - - - - 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76]
locals: stack:40|QWORD[.] - - - r13|QWORD[.] stack:56|QWORD - stack:72|QWORD - - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8]
locals: - rbp|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:13, 76, 8] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      byte
     3: astore_1      
     4: aload_0       
     5: aload_1       
     6: iconst_0      
     7: iconst_1      
     8: invokevirtual #13         // read:(byte[], int, int)int
    11: iconst_1      
    12: if_icmpne     23
    15: aload_1       
    16: iconst_0      
    17: baload        
    18: sipush        255
    21: iand          
    22: ireturn       
    23: iconst_m1     
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504889742438448b56304489542434428b14d5080000004e8b1cd5000000004c8d442440418bda48c1e3034c8b0cd5a8000000498bcf490bc9488bf94933fb48f7c787ffffff0f856b0100004c8b5e204d85db0f846a030000448b6e30438504ec4983fb010f8c3d01000041be01000000488b4618420fbe14ed19000000448b4630438504c4440fb6ca4585c90f854b030000498b5760488d4a18493b4f700f874d01000049894f600f1882d80000004c895c242848895c2408488bea48892c24c7420c0100000048c70201000000c74208addeadde448862104a8b14c510000000488b4e10488bf2488bd1488bc84c8bc541b900000000418bfe4889442418e8000000009083f8010f85ed020000448b542434488b742438488b44241848ffc0488946184c8b5c242849ffcb4c895e204e8b14d500000000498bc24883e0074883f8050f852600000048837e20000f8449000000488b2c240fb64510488b6c24504883c458850500000000c5f877c34c8d5c24404d8b034d85c074cd49f7c2020000000f8505010000488b5c2408498bc3f04c0fb10374b1e9ba0100006690e80000000090ebad4c895c2428448b742428e9bafeffff498bc34883e0074883f8050f847f00000049f7c3020000000f850d0100004983cb014d8918498bc3f04c0fb103493bc30f845ffeffffe92301000044894c24244489442420488944241844896c24144c895c242848baaddeaddeaddeadde488bf2ba02000000b9010000004c8bebe80000000090488bd0448b442420488b4424184c896c2408488b742438e973feffff4c8beb48f7c7070000000f857300000048f7c7000300000f85d60000004981e37f030000498bf7490bf3498bc3f0490fb175000f8525010000448b542434488b742438e9bdfdffff4c8b6c2408498b4216498b72264933c7480bc64885c00f85c6000000498b4236490b423e4885c00f85b50000004d896216488b742438e980feffff498bc3f04d0fb14d00448b542434488b742438e9e6feffff4c8beb4d890049837b16000f859400000048c7c000000000f04d0fb17b160f8581000000448b542434488b742438e937fdffff4c8beb482bc448f7c007f0ffff0f855f0000004d8920448b542434488b742438e912fdffff498bc3f0490fb14d000f855c000000448b542434488b742438e9f4fcffff4c8beb498bf5498bd3e80000000090488b742438e9d9fdffff498bf5498bd3e80000000090488b742438e9c3fdffff498bf5498bd0e80000000090498bdd448b542434488b742438e9a7fcffff498bf5498bd0e80000000090498bdd448b542434488b742438e989fcffff4c8beb41c7879c020000ed88ffff4d89a7a8020000e80000000090458bd54c8beb41c7879c020000ed7effff4d89a7a8020000e80000000090488b2c244c8b6c240841c7879c020000ed72ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@cf194ea slotKind: QWORD  <||@
  Comment 48 6 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 48] size: DWORD  <||@
  Comment 57 10 stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 62 12 rdx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 62 [rsi:0, r10:0, stack:52, stack:56]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:748) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 70 14 r11|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD  <||@
  Comment 78 16 r8|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 83 18 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@70b76cbe encoding: base: 0 shift: 3  <||@
  Comment 90 20 r9|QWORD = MOV [rdx|DWORD * 8 + 168] size: QWORD  <||@
  Comment 98 22 rcx|QWORD = OR (x: r15|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 104 24 rdi|QWORD = XOR (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 110 26 TEST rdi|QWORD y: -121 size: QWORD  <||@
  Comment 117 28 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B26 falseDestination: B0 -> B2  <||@
  Comment 123 block B26 null  <||@
  Comment 123 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 242 r11|QWORD = MOV [rsi|QWORD[.] + 32] size: QWORD  <||@
  Comment 127 244 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 130 246 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 136 block B28 null  <||@
  Comment 136 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 260 r13|DWORD[.] = MOV [rsi|QWORD[.] + 48] size: DWORD  <||@
  Comment 140 262 NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:8, 8]  <||@
  Comment 140 [rbx:0, rsi:0, r13:0, stack:52, stack:56]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1                               |2           |3           |4             |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]                           |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |int[1|0x1]  |rbx|QWORD[.]  |-  |-  |-  |-  |- 
     locks:   |monitor[rbx|QWORD[.], stack:32|QWORD]  |                                |            |            |              |   |   |   |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 140 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 144 264 CMP r11|QWORD y: 1 size: QWORD  <||@
  Comment 148 266 BRANCH trueDestinationProbability: 0.010099855567909044 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 154 block B30 null  <||@
  Comment 154 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 280 r14|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 160 282 JUMP ~[] destination: B30 -> B31  <||@
  Comment 160 block B31 null  <||@
  Comment 160 284 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 160 286 rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD  <||@
  Comment 164 288 rdx|DWORD = MOVSXB [r13|DWORD[.] * 8 + 25] size: DWORD  <||@
  Comment 173 290 r8|DWORD[.] = MOV [rsi|QWORD[.] + 48] size: DWORD  <||@
  Comment 177 292 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:53, 8]  <||@
  Comment 177 [rbx:0, rsi:0, r8:0, r13:0, stack:52, stack:56]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53, duringCall: false, rethrow: false]
              |0                                      |1                               |2           |3          |4             |5          |6  |7          |8  |9 
     locals:  |rsi|QWORD[.]                           |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |r14|DWORD  |rbx|QWORD[.]  |r11|QWORD  |-  |rax|QWORD  |-  |- 
     locks:   |monitor[rbx|QWORD[.], stack:32|QWORD]  |                                |            |           |              |           |   |           |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 177 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 181 294 r9|DWORD = MOVZXB rdx|DWORD size: DWORD  <||@
  Comment 185 296 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 188 298 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B56  <||@
  Comment 194 block B32 null  <||@
  Comment 194 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 194 302 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 198 304 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 202 306 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 206 308 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 212 block B34 null  <||@
  Comment 212 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 212 348 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 216 350 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 223 352 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 223 354 stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 228 356 stack:88|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 233 358 JUMP ~[] destination: B34 -> B35  <||@
  Comment 233 block B35 null  <||@
  Comment 233 360 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 233 362 rbp|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 236 364 stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 240 366 MOV [rdx|QWORD[*] + 12] y: 1 size: DWORD  <||@
  Comment 247 368 MOV [rdx|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 254 370 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 254 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 261 372 MOVB (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 265 374 rdx|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 273 376 rcx|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 277 378 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 280 380 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 283 382 rcx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 286 384 r8|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 289 386 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 295 388 rdi|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 298 390 stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 303 392 rax|DWORD = CALL_DIRECT [rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD] [] callTarget: HotSpotMethod<ZipFile.read(long, long, long, byte[], int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:10, 76, 8]  <||@
  Comment 303 {HotSpotMethod<ZipFile.read(long, long, long, byte[], int, int)>}  <||@
  Comment 303 8  <||@
  Comment 308 [stack:0, stack:8, stack:52, stack:56]at java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |- 
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5               |6  |7               |8  |9 
     locals:  |stack:40|QWORD[.]                           |-  |-  |-  |stack:88|QWORD[.]  |stack:56|QWORD  |-  |stack:72|QWORD  |-  |- 
     locks:   |monitor[stack:88|QWORD[.], stack:32|QWORD]  |   |   |   |                   |                |   |                |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:96|QWORD[.]   <||@
  Comment 309 394 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 312 396 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B55  <||@
  Comment 318 block B36 null  <||@
  Comment 318 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 400 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 323 402 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 328 404 rax|QWORD = INC stack:72|QWORD size: QWORD  <||@
  Comment 336 406 MOV (x: [rsi|QWORD[.] + 24], y: rax|QWORD) size: QWORD  <||@
  Comment 340 408 r11|QWORD = DEC stack:56|QWORD size: QWORD  <||@
  Comment 348 410 MOV (x: [rsi|QWORD[.] + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 352 412 r10|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD  <||@
  Comment 360 414 rax|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 367 416 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 371 418 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B36 -> B51 falseDestination: B36 -> B38  <||@
  Comment 377 block B51 null  <||@
  Comment 377 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 377 532 CMP [rsi|QWORD[.] + 32] y: 0 size: QWORD  <||@
  Comment 382 534 BRANCH trueDestinationProbability: 0.03378013300083127 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B54  <||@
  Comment 388 block B54 null  <||@
  Comment 388 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 546 rbp|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 392 552 rax|DWORD = MOVZXB [rbp|QWORD[.] + 16] size: DWORD  <||@
  Comment 396 554 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 405 12  <||@
  Comment 415 block B38 null  <||@
  Comment 415 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 426 r11|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 420 428 r8|QWORD = MOV [r11|QWORD] size: QWORD  <||@
  Comment 423 430 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 426 432 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B38 -> B51 falseDestination: B38 -> B40  <||@
  Comment 428 block B40 null  <||@
  Comment 428 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 428 440 TEST r10|QWORD y: 2 size: QWORD  <||@
  Comment 435 442 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44  <||@
  Comment 441 block B41 null  <||@
  Comment 441 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 446 rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 446 448 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 449 450 rax|QWORD = CAS (address: [rbx|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD  <||@
  Comment 454 452 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B51  <||@
  Comment 461 block B52 null  <||@
  Comment 461 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 538 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ZipFile$ZipFileInputStream.close()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126, 8]  <||@
  Comment 461 9  <||@
  Comment 463 {HotSpotMethod<ZipFile$ZipFileInputStream.close()>}  <||@
  Comment 468 [stack:0]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:742) [bci: 126, duringCall: true, rethrow: false]
              |0  |1  |2  |3           |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |int[1|0x1]  |-  |-  |-  |-  |-  |- 
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:96|QWORD[.]   <||@
  Comment 469 542 JUMP ~[] destination: B52 -> B54  <||@
  Comment 471 block B29 null  <||@
  Comment 471 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 471 270 stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 476 272 r14|DWORD = MOV stack:56|QWORD size: DWORD  <||@
  Comment 481 276 JUMP ~[] destination: B29 -> B31  <||@
  Comment 486 block B2 null  <||@
  Comment 486 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 486 36 rax|QWORD = AND r11|QWORD y: 7 size: QWORD  <||@
  Comment 493 38 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 497 40 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B14  <||@
  Comment 503 block B14 null  <||@
  Comment 503 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 503 140 TEST r11|QWORD y: 2 size: QWORD  <||@
  Comment 510 142 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B20  <||@
  Comment 516 block B15 null  <||@
  Comment 516 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 516 146 r11|QWORD = OR r11|QWORD y: 1 size: QWORD  <||@
  Comment 520 148 MOV (x: [r8|QWORD], y: r11|QWORD) size: QWORD  <||@
  Comment 523 150 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 526 152 rax|QWORD = CAS (address: [rbx|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD  <||@
  Comment 531 154 CMP (x: rax|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 534 156 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B26 falseDestination: B15 -> B17  <||@
  Comment 545 block B33 null  <||@
  Comment 545 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 545 312 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 550 314 stack:64|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 555 316 stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 560 318 stack:76|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 565 320 stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 570 322 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 570 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 580 324 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 583 326 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 588 328 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 593 330 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 596 332 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 57, 8]  <||@
  Comment 596 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 601 [r13:0, stack:20, stack:32, stack:52, stack:56]at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:76|DWORD[.] 
     stack:   |stack:60|DWORD    
  at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57, duringCall: true, rethrow: false]
              |0                                      |1                               |2           |3          |4             |5               |6  |7               |8  |9 
     locals:  |stack:40|QWORD[.]                      |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |r14|DWORD  |r13|QWORD[.]  |stack:56|QWORD  |-  |stack:72|QWORD  |-  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                                |            |           |              |                |   |                |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 602 334 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 605 336 r8|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 610 338 rax|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 615 340 stack:88|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 620 342 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 625 344 JUMP ~[] destination: B33 -> B35  <||@
  Comment 630 block B3 null  <||@
  Comment 630 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 44 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 633 46 TEST rdi|QWORD y: 7 size: QWORD  <||@
  Comment 640 48 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B12  <||@
  Comment 646 block B4 null  <||@
  Comment 646 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 646 52 TEST rdi|QWORD y: 768 size: QWORD  <||@
  Comment 653 54 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 659 block B5 null  <||@
  Comment 659 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 659 58 r11|QWORD = AND r11|QWORD y: 895 size: QWORD  <||@
  Comment 666 60 rsi|QWORD = OR (x: r15|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 672 62 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 675 64 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 681 66 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B5 -> B10 falseDestination: B5 -> B7  <||@
  Comment 687 block B7 null  <||@
  Comment 687 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 687 76 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 692 78 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 697 80 JUMP ~[] destination: B7 -> B26  <||@
  Comment 702 block B44 null  <||@
  Comment 702 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 474 r13|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 707 476 rax|QWORD = MOV [r10|QWORD + 22] size: QWORD  <||@
  Comment 711 478 rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD  <||@
  Comment 715 480 rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 718 482 rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 721 484 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 724 486 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B49  <||@
  Comment 730 block B45 null  <||@
  Comment 730 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 730 490 rax|QWORD = MOV [r10|QWORD + 54] size: QWORD  <||@
  Comment 734 492 rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD  <||@
  Comment 738 494 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 741 496 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49  <||@
  Comment 747 block B46 null  <||@
  Comment 747 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 747 500 MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 751 502 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 756 504 JUMP ~[] destination: B46 -> B51  <||@
  Comment 761 block B12 null  <||@
  Comment 761 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 761 122 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 764 124 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD  <||@
  Comment 770 128 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 775 130 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 780 132 JUMP ~[] destination: B12 -> B14  <||@
  Comment 785 block B20 null  <||@
  Comment 785 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 190 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 788 192 MOV (x: [r8|QWORD], y: r8|QWORD) size: QWORD  <||@
  Comment 791 194 CMP [r11|QWORD + 22] y: 0 size: QWORD  <||@
  Comment 796 196 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B25  <||@
  Comment 802 block B21 null  <||@
  Comment 802 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 802 200 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 809 202 rax|QWORD = CAS (address: [r11|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 815 204 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B21 -> B25 falseDestination: B21 -> B23  <||@
  Comment 821 block B23 null  <||@
  Comment 821 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 821 214 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 826 216 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 831 218 JUMP ~[] destination: B23 -> B26  <||@
  Comment 836 block B17 null  <||@
  Comment 836 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 836 164 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 839 166 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 842 168 TEST rax|QWORD y: -4089 size: QWORD  <||@
  Comment 849 170 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B25  <||@
  Comment 855 block B18 null  <||@
  Comment 855 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 855 174 MOV (x: [r8|QWORD], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 858 178 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 863 180 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 868 182 JUMP ~[] destination: B18 -> B26  <||@
  Comment 873 block B8 null  <||@
  Comment 873 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 84 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 876 86 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD  <||@
  Comment 882 88 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B8 -> B10 falseDestination: B8 -> B11  <||@
  Comment 888 block B11 null  <||@
  Comment 888 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 888 114 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 893 116 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 898 118 JUMP ~[] destination: B11 -> B26  <||@
  Comment 903 block B42 null  <||@
  Comment 903 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 456 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 906 458 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 909 460 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 912 462 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 912 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 918 464 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 923 466 JUMP ~[] destination: B42 -> B51  <||@
  Comment 928 block B49 null  <||@
  Comment 928 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 928 516 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 931 518 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 934 520 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 934 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 940 522 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 945 524 JUMP ~[] destination: B49 -> B51  <||@
  Comment 950 block B25 null  <||@
  Comment 950 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 950 226 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 953 228 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 956 230 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8, 8]  <||@
  Comment 956 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 961 [r13:0, stack:52, stack:56]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1                               |2           |3           |4             |5  |6  |7  |8  |9 
     locals:  |stack:40|QWORD[.]                      |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |int[1|0x1]  |r13|QWORD[.]  |-  |-  |-  |-  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                                |            |            |              |   |   |   |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 962 232 rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 965 234 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 970 236 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 975 238 JUMP ~[] destination: B25 -> B26  <||@
  Comment 980 block B10 null  <||@
  Comment 980 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 980 96 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 983 98 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 986 100 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8, 8]  <||@
  Comment 986 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 991 [r13:0, stack:52, stack:56]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1                               |2           |3           |4             |5  |6  |7  |8  |9 
     locals:  |stack:40|QWORD[.]                      |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |int[1|0x1]  |r13|QWORD[.]  |-  |-  |-  |-  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                                |            |            |              |   |   |   |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 992 102 rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 995 104 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1000 106 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1005 108 JUMP ~[] destination: B10 -> B26  <||@
  Comment 1010 block B27 null  <||@
  Comment 1010 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 250 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1013 252 MOV [r15|QWORD + 668] y: -30483 size: DWORD  <||@
  Comment 1024 254 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1031 256 DEOPT info [bci:8, 8]  <||@
  Comment 1031 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1036 [rsi:0, r13:0]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1                               |2           |3           |4             |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]                           |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |int[1|0x1]  |r13|QWORD[.]  |-  |-  |-  |-  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                                |            |            |              |   |   |   |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 1037 block B56 null  <||@
  Comment 1037 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1037 570 r10|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1040 572 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1043 574 MOV [r15|QWORD + 668] y: -33043 size: DWORD  <||@
  Comment 1054 576 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1061 578 DEOPT info [bci:4, 1, 57, 8]  <||@
  Comment 1061 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1066 [r10:0, r13:0, stack:56]at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|DWORD[.] 
     stack:   |r9|DWORD     
  at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57, duringCall: true, rethrow: false]
              |0                                      |1                               |2           |3          |4             |5          |6  |7          |8  |9 
     locals:  |stack:40|QWORD[.]                      |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |r14|DWORD  |r13|QWORD[.]  |r11|QWORD  |-  |rax|QWORD  |-  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                                |            |           |              |           |   |           |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 1067 block B55 null  <||@
  Comment 1067 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1067 558 rbp|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1071 560 r13|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1076 562 MOV [r15|QWORD + 668] y: -36115 size: DWORD  <||@
  Comment 1087 564 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1094 566 DEOPT info [bci:13, 76, 8]  <||@
  Comment 1094 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1099 [rbp:0, r13:0, stack:56]at java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 13, duringCall: false, rethrow: false]
              |0          |1  |2  |3  |4  |5  |6  |7  |8 
     locals:  |-          |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD  |   |   |   |   |   |   |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5               |6  |7               |8  |9 
     locals:  |stack:40|QWORD[.]                      |-  |-  |-  |r13|QWORD[.]  |stack:56|QWORD  |-  |stack:72|QWORD  |-  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |                |   |                |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.]   <||@
  Comment 1100 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1100 4  <||@
  Comment 1106 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1106 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9338[java.util.zip.ZipFile$ZipFileInputStream.read()]"
  method "HotSpotCompilation-9338[java.util.zip.ZipFile$ZipFileInputStream.read()]"
  date 1527005203004
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1068d93a0 448b560849c1e203493bc20f85afcaf2ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504889742438448b56304489542434428b14d5080000004e8b1cd5000000004c8d442440418bda48c1e3034c8b0cd5a8000000498bcf490bc9488bf94933fb48f7c787ffffff0f856b0100004c8b5e204d85db0f846a030000448b6e30438504ec4983fb010f8c3d01000041be01000000488b4618420fbe14ed19000000448b4630438504c4440fb6ca4585c90f854b030000498b5760488d4a18493b4f700f874d01000049894f600f1882d80000004c895c242848895c2408488bea48892c24c7420c0100000048c70201000000c74208f50000f8448862104a8b14c510000000488b4e10488bf2488bd1488bc84c8bc541b900000000418bfe4889442418e84cd0f2ff9083f8010f85ed020000448b542434488b742438488b44241848ffc0488946184c8b5c242849ffcb4c895e204e8b14d500000000498bc24883e0074883f8050f852600000048837e20000f8449000000488b2c240fb64510488b6c24504883c4588505cb5afbfdc5f877c34c8d5c24404d8b034d85c074cd49f7c2020000000f8505010000488b5c2408498bc3f04c0fb10374b1e9ba0100006690e82ccbf2ff90ebad4c895c2428448b742428e9bafeffff498bc34883e0074883f8050f847f00000049f7c3020000000f850d0100004983cb014d8918498bc3f04c0fb103493bc30f845ffeffffe92301000044894c24244489442420488944241844896c24144c895c242848ba680b00c007000000488bf2ba02000000b9010000004c8bebe8e7d76b0090488bd0448b442420488b4424184c896c2408488b742438e973feffff4c8beb48f7c7070000000f857300000048f7c7000300000f85d60000004981e37f030000498bf7490bf3498bc3f0490fb175000f8525010000448b542434488b742438e9bdfdffff4c8b6c2408498b4216498b72264933c7480bc64885c00f85c6000000498b4236490b423e4885c00f85b50000004d896216488b742438e980feffff498bc3f04d0fb14d00448b542434488b742438e9e6feffff4c8beb4d890049837b16000f859400000048c7c000000000f04d0fb17b160f8581000000448b542434488b742438e937fdffff4c8beb482bc448f7c007f0ffff0f855f0000004d8920448b542434488b742438e912fdffff498bc3f0490fb14d000f855c000000448b542434488b742438e9f4fcffff4c8beb498bf5498bd3e82b4d860090488b742438e9d9fdffff498bf5498bd3e8154d860090488b742438e9c3fdffff498bf5498bd0e8ffd16b0090498bdd448b542434488b742438e9a7fcffff498bf5498bd0e8e1d16b0090498bdd448b542434488b742438e989fcffff4c8beb41c7879c020000ed88ffff4d89a7a8020000e852def2ff90458bd54c8beb41c7879c020000ed7effff4d89a7a8020000e834def2ff90488b2c244c8b6c240841c7879c020000ed72ffff4d89a7a8020000e813def2ff90e82f0e370090e809ddf2ff90f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@cf194ea slotKind: QWORD  <||@
  Comment 48 6 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 48] size: DWORD  <||@
  Comment 57 10 stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 62 12 rdx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 62 [rsi:0, r10:0, stack:52, stack:56]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:748) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 70 14 r11|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD  <||@
  Comment 78 16 r8|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 83 18 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@70b76cbe encoding: base: 0 shift: 3  <||@
  Comment 90 20 r9|QWORD = MOV [rdx|DWORD * 8 + 168] size: QWORD  <||@
  Comment 98 22 rcx|QWORD = OR (x: r15|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 104 24 rdi|QWORD = XOR (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 110 26 TEST rdi|QWORD y: -121 size: QWORD  <||@
  Comment 117 28 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B26 falseDestination: B0 -> B2  <||@
  Comment 123 block B26 null  <||@
  Comment 123 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 242 r11|QWORD = MOV [rsi|QWORD[.] + 32] size: QWORD  <||@
  Comment 127 244 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 130 246 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 136 block B28 null  <||@
  Comment 136 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 260 r13|DWORD[.] = MOV [rsi|QWORD[.] + 48] size: DWORD  <||@
  Comment 140 262 NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:8, 8]  <||@
  Comment 140 [rbx:0, rsi:0, r13:0, stack:52, stack:56]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1                               |2           |3           |4             |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]                           |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |int[1|0x1]  |rbx|QWORD[.]  |-  |-  |-  |-  |- 
     locks:   |monitor[rbx|QWORD[.], stack:32|QWORD]  |                                |            |            |              |   |   |   |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 140 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 144 264 CMP r11|QWORD y: 1 size: QWORD  <||@
  Comment 148 266 BRANCH trueDestinationProbability: 0.010099855567909044 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 154 block B30 null  <||@
  Comment 154 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 280 r14|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 160 282 JUMP ~[] destination: B30 -> B31  <||@
  Comment 160 block B31 null  <||@
  Comment 160 284 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 160 286 rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD  <||@
  Comment 164 288 rdx|DWORD = MOVSXB [r13|DWORD[.] * 8 + 25] size: DWORD  <||@
  Comment 173 290 r8|DWORD[.] = MOV [rsi|QWORD[.] + 48] size: DWORD  <||@
  Comment 177 292 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:53, 8]  <||@
  Comment 177 [rbx:0, rsi:0, r8:0, r13:0, stack:52, stack:56]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 53, duringCall: false, rethrow: false]
              |0                                      |1                               |2           |3          |4             |5          |6  |7          |8  |9 
     locals:  |rsi|QWORD[.]                           |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |r14|DWORD  |rbx|QWORD[.]  |r11|QWORD  |-  |rax|QWORD  |-  |- 
     locks:   |monitor[rbx|QWORD[.], stack:32|QWORD]  |                                |            |           |              |           |   |           |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 177 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 181 294 r9|DWORD = MOVZXB rdx|DWORD size: DWORD  <||@
  Comment 185 296 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 188 298 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B56  <||@
  Comment 194 block B32 null  <||@
  Comment 194 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 194 302 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 198 304 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 202 306 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 206 308 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 212 block B34 null  <||@
  Comment 212 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 212 348 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 216 350 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 223 352 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 223 354 stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 228 356 stack:88|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 233 358 JUMP ~[] destination: B34 -> B35  <||@
  Comment 233 block B35 null  <||@
  Comment 233 360 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 233 362 rbp|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 236 364 stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 240 366 MOV [rdx|QWORD[*] + 12] y: 1 size: DWORD  <||@
  Comment 247 368 MOV [rdx|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 254 370 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 254 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 261 372 MOVB (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 265 374 rdx|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 273 376 rcx|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 277 378 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 280 380 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 283 382 rcx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 286 384 r8|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 289 386 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 295 388 rdi|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 298 390 stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 303 392 rax|DWORD = CALL_DIRECT [rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD] [] callTarget: HotSpotMethod<ZipFile.read(long, long, long, byte[], int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:10, 76, 8]  <||@
  Comment 303 {HotSpotMethod<ZipFile.read(long, long, long, byte[], int, int)>}  <||@
  Comment 303 8  <||@
  Comment 308 [stack:0, stack:8, stack:52, stack:56]at java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |- 
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5               |6  |7               |8  |9 
     locals:  |stack:40|QWORD[.]                           |-  |-  |-  |stack:88|QWORD[.]  |stack:56|QWORD  |-  |stack:72|QWORD  |-  |- 
     locks:   |monitor[stack:88|QWORD[.], stack:32|QWORD]  |   |   |   |                   |                |   |                |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:96|QWORD[.]   <||@
  Comment 309 394 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 312 396 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B55  <||@
  Comment 318 block B36 null  <||@
  Comment 318 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 400 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 323 402 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 328 404 rax|QWORD = INC stack:72|QWORD size: QWORD  <||@
  Comment 336 406 MOV (x: [rsi|QWORD[.] + 24], y: rax|QWORD) size: QWORD  <||@
  Comment 340 408 r11|QWORD = DEC stack:56|QWORD size: QWORD  <||@
  Comment 348 410 MOV (x: [rsi|QWORD[.] + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 352 412 r10|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD  <||@
  Comment 360 414 rax|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 367 416 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 371 418 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B36 -> B51 falseDestination: B36 -> B38  <||@
  Comment 377 block B51 null  <||@
  Comment 377 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 377 532 CMP [rsi|QWORD[.] + 32] y: 0 size: QWORD  <||@
  Comment 382 534 BRANCH trueDestinationProbability: 0.03378013300083127 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B54  <||@
  Comment 388 block B54 null  <||@
  Comment 388 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 546 rbp|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 392 552 rax|DWORD = MOVZXB [rbp|QWORD[.] + 16] size: DWORD  <||@
  Comment 396 554 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 405 12  <||@
  Comment 415 block B38 null  <||@
  Comment 415 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 426 r11|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 420 428 r8|QWORD = MOV [r11|QWORD] size: QWORD  <||@
  Comment 423 430 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 426 432 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B38 -> B51 falseDestination: B38 -> B40  <||@
  Comment 428 block B40 null  <||@
  Comment 428 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 428 440 TEST r10|QWORD y: 2 size: QWORD  <||@
  Comment 435 442 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44  <||@
  Comment 441 block B41 null  <||@
  Comment 441 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 446 rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 446 448 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 449 450 rax|QWORD = CAS (address: [rbx|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD  <||@
  Comment 454 452 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B51  <||@
  Comment 461 block B52 null  <||@
  Comment 461 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 538 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ZipFile$ZipFileInputStream.close()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126, 8]  <||@
  Comment 461 9  <||@
  Comment 463 {HotSpotMethod<ZipFile$ZipFileInputStream.close()>}  <||@
  Comment 468 [stack:0]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:742) [bci: 126, duringCall: true, rethrow: false]
              |0  |1  |2  |3           |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |int[1|0x1]  |-  |-  |-  |-  |-  |- 
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:96|QWORD[.]   <||@
  Comment 469 542 JUMP ~[] destination: B52 -> B54  <||@
  Comment 471 block B29 null  <||@
  Comment 471 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 471 270 stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 476 272 r14|DWORD = MOV stack:56|QWORD size: DWORD  <||@
  Comment 481 276 JUMP ~[] destination: B29 -> B31  <||@
  Comment 486 block B2 null  <||@
  Comment 486 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 486 36 rax|QWORD = AND r11|QWORD y: 7 size: QWORD  <||@
  Comment 493 38 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 497 40 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B14  <||@
  Comment 503 block B14 null  <||@
  Comment 503 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 503 140 TEST r11|QWORD y: 2 size: QWORD  <||@
  Comment 510 142 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B20  <||@
  Comment 516 block B15 null  <||@
  Comment 516 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 516 146 r11|QWORD = OR r11|QWORD y: 1 size: QWORD  <||@
  Comment 520 148 MOV (x: [r8|QWORD], y: r11|QWORD) size: QWORD  <||@
  Comment 523 150 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 526 152 rax|QWORD = CAS (address: [rbx|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD  <||@
  Comment 531 154 CMP (x: rax|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 534 156 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B26 falseDestination: B15 -> B17  <||@
  Comment 545 block B33 null  <||@
  Comment 545 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 545 312 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 550 314 stack:64|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 555 316 stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 560 318 stack:76|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 565 320 stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 570 322 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 570 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 580 324 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 583 326 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 588 328 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 593 330 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 596 332 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 57, 8]  <||@
  Comment 596 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 601 [r13:0, stack:20, stack:32, stack:52, stack:56]at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:76|DWORD[.] 
     stack:   |stack:60|DWORD    
  at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57, duringCall: true, rethrow: false]
              |0                                      |1                               |2           |3          |4             |5               |6  |7               |8  |9 
     locals:  |stack:40|QWORD[.]                      |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |r14|DWORD  |r13|QWORD[.]  |stack:56|QWORD  |-  |stack:72|QWORD  |-  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                                |            |           |              |                |   |                |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 602 334 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 605 336 r8|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 610 338 rax|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 615 340 stack:88|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 620 342 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 625 344 JUMP ~[] destination: B33 -> B35  <||@
  Comment 630 block B3 null  <||@
  Comment 630 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 44 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 633 46 TEST rdi|QWORD y: 7 size: QWORD  <||@
  Comment 640 48 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B12  <||@
  Comment 646 block B4 null  <||@
  Comment 646 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 646 52 TEST rdi|QWORD y: 768 size: QWORD  <||@
  Comment 653 54 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 659 block B5 null  <||@
  Comment 659 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 659 58 r11|QWORD = AND r11|QWORD y: 895 size: QWORD  <||@
  Comment 666 60 rsi|QWORD = OR (x: r15|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 672 62 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 675 64 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 681 66 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B5 -> B10 falseDestination: B5 -> B7  <||@
  Comment 687 block B7 null  <||@
  Comment 687 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 687 76 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 692 78 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 697 80 JUMP ~[] destination: B7 -> B26  <||@
  Comment 702 block B44 null  <||@
  Comment 702 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 474 r13|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 707 476 rax|QWORD = MOV [r10|QWORD + 22] size: QWORD  <||@
  Comment 711 478 rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD  <||@
  Comment 715 480 rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 718 482 rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 721 484 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 724 486 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B49  <||@
  Comment 730 block B45 null  <||@
  Comment 730 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 730 490 rax|QWORD = MOV [r10|QWORD + 54] size: QWORD  <||@
  Comment 734 492 rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD  <||@
  Comment 738 494 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 741 496 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49  <||@
  Comment 747 block B46 null  <||@
  Comment 747 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 747 500 MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 751 502 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 756 504 JUMP ~[] destination: B46 -> B51  <||@
  Comment 761 block B12 null  <||@
  Comment 761 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 761 122 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 764 124 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD  <||@
  Comment 770 128 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 775 130 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 780 132 JUMP ~[] destination: B12 -> B14  <||@
  Comment 785 block B20 null  <||@
  Comment 785 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 190 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 788 192 MOV (x: [r8|QWORD], y: r8|QWORD) size: QWORD  <||@
  Comment 791 194 CMP [r11|QWORD + 22] y: 0 size: QWORD  <||@
  Comment 796 196 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B25  <||@
  Comment 802 block B21 null  <||@
  Comment 802 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 802 200 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 809 202 rax|QWORD = CAS (address: [r11|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 815 204 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B21 -> B25 falseDestination: B21 -> B23  <||@
  Comment 821 block B23 null  <||@
  Comment 821 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 821 214 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 826 216 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 831 218 JUMP ~[] destination: B23 -> B26  <||@
  Comment 836 block B17 null  <||@
  Comment 836 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 836 164 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 839 166 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 842 168 TEST rax|QWORD y: -4089 size: QWORD  <||@
  Comment 849 170 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B25  <||@
  Comment 855 block B18 null  <||@
  Comment 855 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 855 174 MOV (x: [r8|QWORD], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 858 178 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 863 180 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 868 182 JUMP ~[] destination: B18 -> B26  <||@
  Comment 873 block B8 null  <||@
  Comment 873 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 84 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 876 86 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD  <||@
  Comment 882 88 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B8 -> B10 falseDestination: B8 -> B11  <||@
  Comment 888 block B11 null  <||@
  Comment 888 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 888 114 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 893 116 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 898 118 JUMP ~[] destination: B11 -> B26  <||@
  Comment 903 block B42 null  <||@
  Comment 903 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 456 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 906 458 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 909 460 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 912 462 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 912 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 918 464 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 923 466 JUMP ~[] destination: B42 -> B51  <||@
  Comment 928 block B49 null  <||@
  Comment 928 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 928 516 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 931 518 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 934 520 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 934 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 940 522 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 945 524 JUMP ~[] destination: B49 -> B51  <||@
  Comment 950 block B25 null  <||@
  Comment 950 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 950 226 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 953 228 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 956 230 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8, 8]  <||@
  Comment 956 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 961 [r13:0, stack:52, stack:56]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1                               |2           |3           |4             |5  |6  |7  |8  |9 
     locals:  |stack:40|QWORD[.]                      |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |int[1|0x1]  |r13|QWORD[.]  |-  |-  |-  |-  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                                |            |            |              |   |   |   |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 962 232 rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 965 234 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 970 236 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 975 238 JUMP ~[] destination: B25 -> B26  <||@
  Comment 980 block B10 null  <||@
  Comment 980 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 980 96 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 983 98 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 986 100 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8, 8]  <||@
  Comment 986 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 991 [r13:0, stack:52, stack:56]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1                               |2           |3           |4             |5  |6  |7  |8  |9 
     locals:  |stack:40|QWORD[.]                      |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |int[1|0x1]  |r13|QWORD[.]  |-  |-  |-  |-  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                                |            |            |              |   |   |   |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 992 102 rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 995 104 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1000 106 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1005 108 JUMP ~[] destination: B10 -> B26  <||@
  Comment 1010 block B27 null  <||@
  Comment 1010 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 250 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1013 252 MOV [r15|QWORD + 668] y: -30483 size: DWORD  <||@
  Comment 1024 254 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1031 256 DEOPT info [bci:8, 8]  <||@
  Comment 1031 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1036 [rsi:0, r13:0]at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:720) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1                               |2           |3           |4             |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]                           |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |int[1|0x1]  |r13|QWORD[.]  |-  |-  |-  |-  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                                |            |            |              |   |   |   |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 1037 block B56 null  <||@
  Comment 1037 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1037 570 r10|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1040 572 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1043 574 MOV [r15|QWORD + 668] y: -33043 size: DWORD  <||@
  Comment 1054 576 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1061 578 DEOPT info [bci:4, 1, 57, 8]  <||@
  Comment 1061 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1066 [r10:0, r13:0, stack:56]at java.util.zip.ZipFile.ensureOpenOrZipException(ZipFile.java:695) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|DWORD[.] 
     stack:   |r9|DWORD     
  at java.util.zip.ZipFile.access$1300(ZipFile.java:60) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:733) [bci: 57, duringCall: true, rethrow: false]
              |0                                      |1                               |2           |3          |4             |5          |6  |7          |8  |9 
     locals:  |stack:40|QWORD[.]                      |vobject:byte[]:0{0=int[0|0x0]}  |int[0|0x0]  |r14|DWORD  |r13|QWORD[.]  |r11|QWORD  |-  |rax|QWORD  |-  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                                |            |           |              |           |   |           |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1                              
     locals:  |-  |vobject:byte[]:0{0=int[0|0x0]}   <||@
  Comment 1067 block B55 null  <||@
  Comment 1067 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1067 558 rbp|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1071 560 r13|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1076 562 MOV [r15|QWORD + 668] y: -36115 size: DWORD  <||@
  Comment 1087 564 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1094 566 DEOPT info [bci:13, 76, 8]  <||@
  Comment 1094 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1099 [rbp:0, r13:0, stack:56]at java.util.zip.ZipFile.access$1400(ZipFile.java:60) [bci: 13, duringCall: false, rethrow: false]
              |0          |1  |2  |3  |4  |5  |6  |7  |8 
     locals:  |-          |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD  |   |   |   |   |   |   |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734) [bci: 76, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5               |6  |7               |8  |9 
     locals:  |stack:40|QWORD[.]                      |-  |-  |-  |r13|QWORD[.]  |stack:56|QWORD  |-  |stack:72|QWORD  |-  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |                |   |                |   |  
  at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749) [bci: 8, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.]   <||@
  Comment 1100 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1100 4  <||@
  Comment 1106 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1106 5  <||@
  HexCodeFile>>> <|@
end_nmethod
