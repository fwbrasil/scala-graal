begin_compilation
  name " HotSpotCompilation-8423[java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap, TreeMap$Entry)]"
  method "HotSpotCompilation-8423[java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap, TreeMap$Entry)]"
  date 1527005185582
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i56 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i56  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/TreeMap$PrivateEntryIterator;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v58 v61 v60 v62 j46 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/util/TreeMap$Entry;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a33 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<TreeMap$PrivateEntryIterator.<init>(TreeMap, TreeMap$Entry)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: TreeMap.java
sourceLine: 1196
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a57 a3 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a57 a3  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/TreeMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 a17 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TreeMap.modCount
nodeSourcePosition: at java.util.TreeMap.access$100(TreeMap.java:111) [bci: 1]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1197) [bci: 11]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v59 
=== Succesors ===
next: v20 
=== Usages ===
v28 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v59 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a17 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
op: Compress
stamp: n# Ljava/util/TreeMap;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: TreeMap$PrivateEntryIterator.this$0
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v58 
value: a17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j46 
=== Usages ===
=== Predecessor ===
i56 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v58 value: a17 stateAfter: - lastLocationAccess: - #next: j46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v52 
=== Usages ===
j48 
=== Predecessor ===
v20 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j46 
y: i47 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j46 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid j51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j48 
index: j51 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j48 index: j51  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v63 
value: i53 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
j46 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v63 value: i53 stateAfter: - lastLocationAccess: - #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TreeMap$PrivateEntryIterator.expectedModCount
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1197) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v60 
value: i56 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v60 value: i56 stateAfter: - lastLocationAccess: - #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1198) [bci: 19]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: TreeMap$PrivateEntryIterator.lastReturned
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1198) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v61 
value: a38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v61 value: a38 stateAfter: - lastLocationAccess: - #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a33 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1199) [bci: 24]
op: Compress
stamp: n# Ljava/util/TreeMap$Entry;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: TreeMap$PrivateEntryIterator.next
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1199) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v62 
value: a33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v62 value: a33 stateAfter: - lastLocationAccess: - #next: v37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1200) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1200) [bci: 27]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i56 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i56  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/TreeMap$PrivateEntryIterator;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v58 v61 v60 v62 j46 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/util/TreeMap$Entry;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a33 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<TreeMap$PrivateEntryIterator.<init>(TreeMap, TreeMap$Entry)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: TreeMap.java
sourceLine: 1196
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a57 a3 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a57 a3  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/TreeMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 a17 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i56 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TreeMap.modCount
nodeSourcePosition: at java.util.TreeMap.access$100(TreeMap.java:111) [bci: 1]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1197) [bci: 11]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v59 
=== Succesors ===
next: v20 
=== Usages ===
v28 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v59 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a17 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
op: Compress
stamp: n# Ljava/util/TreeMap;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: TreeMap$PrivateEntryIterator.this$0
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v58 
value: a17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j46 
=== Usages ===
=== Predecessor ===
i56 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v58 value: a17 stateAfter: - lastLocationAccess: - #next: j46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j46 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v52 
=== Usages ===
j48 
=== Predecessor ===
v20 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
result v5|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j46 
y: i47 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j46 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid j51 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
result [v5|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j48 
index: j51 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j48 index: j51  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v63 
value: i53 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
j46 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v63 value: i53 stateAfter: - lastLocationAccess: - #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TreeMap$PrivateEntryIterator.expectedModCount
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1197) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v60 
value: i56 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v60 value: i56 stateAfter: - lastLocationAccess: - #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a38 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1198) [bci: 19]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: TreeMap$PrivateEntryIterator.lastReturned
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1198) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v61 
value: a38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v61 value: a38 stateAfter: - lastLocationAccess: - #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a33 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1199) [bci: 24]
op: Compress
stamp: n# Ljava/util/TreeMap$Entry;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: TreeMap$PrivateEntryIterator.next
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1199) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v62 
value: a33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v62 value: a33 stateAfter: - lastLocationAccess: - #next: v37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1200) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1200) [bci: 27]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@252c6adb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@92d29f9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v5|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@92d29f9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v7|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@252c6adb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@92d29f9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v5|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@92d29f9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v7|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.TreeMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: invokestatic  #2          // java.util.TreeMap.access$100:(java.util.TreeMap)int
    14: putfield      #3          // expectedModCount:int
    17: aload_0       
    18: aconst_null   
    19: putfield      #4          // lastReturned:java.util.TreeMap$Entry
    22: aload_0       
    23: aload_2       
    24: putfield      #5          // next:java.util.TreeMap$Entry
    27: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@252c6adb slotKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@92d29f9 encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   18  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   20  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   22  <|@ instruction MOVB (x: [r11|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   24  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@92d29f9 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   32  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.TreeMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: invokestatic  #2          // java.util.TreeMap.access$100:(java.util.TreeMap)int
    14: putfield      #3          // expectedModCount:int
    17: aload_0       
    18: aconst_null   
    19: putfield      #4          // lastReturned:java.util.TreeMap$Entry
    22: aload_0       
    23: aload_2       
    24: putfield      #5          // next:java.util.TreeMap$Entry
    27: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@252c6adb slotKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@92d29f9 encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   18  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   20  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   22  <|@ instruction MOVB (x: [r11|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   24  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@92d29f9 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   32  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.TreeMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: invokestatic  #2          // java.util.TreeMap.access$100:(java.util.TreeMap)int
    14: putfield      #3          // expectedModCount:int
    17: aload_0       
    18: aconst_null   
    19: putfield      #4          // lastReturned:java.util.TreeMap$Entry
    22: aload_0       
    23: aload_2       
    24: putfield      #5          // next:java.util.TreeMap$Entry
    27: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b521848c1ea038956184c8bde49c1eb0949b800e01b1701000000478824034489560c4489661448c1e903894e10488b6c24104883c418850500000000c5f877c3e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@252c6adb slotKind: QWORD  <||@
  Comment 48 12 r10|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 48 [rcx:0, rdx:0, rsi:0]at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|QWORD[.]   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 14 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@92d29f9 encoding: base: 0 shift: 3  <||@
  Comment 56 16 MOV (x: [rsi|QWORD[.] + 24], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 59 18 r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 66 20 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 76 22 MOVB (x: [r11|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 80 24 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 84 26 MOV (x: [rsi|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 88 28 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@92d29f9 encoding: base: 0 shift: 3  <||@
  Comment 92 30 MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 95 32 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 104 12  <||@
  Comment 114 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 114 4  <||@
  Comment 120 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 120 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8423[java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap, TreeMap$Entry)]"
  method "HotSpotCompilation-8423[java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap, TreeMap$Entry)]"
  date 1527005185607
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106b86760 448b560849c1e203493bc20f85eff6c7ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b521848c1ea038956184c8bde49c1eb0949b800e01b1701000000478824034489560c4489661448c1e903894e10488b6c24104883c41885053888d0fdc5f877c3e8493e0c0090e8230dc8ff90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@252c6adb slotKind: QWORD  <||@
  Comment 48 12 r10|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 48 [rcx:0, rdx:0, rsi:0]at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1196) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|QWORD[.]   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 14 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@92d29f9 encoding: base: 0 shift: 3  <||@
  Comment 56 16 MOV (x: [rsi|QWORD[.] + 24], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 59 18 r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 66 20 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 76 22 MOVB (x: [r11|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 80 24 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 84 26 MOV (x: [rsi|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 88 28 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@92d29f9 encoding: base: 0 shift: 3  <||@
  Comment 92 30 MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 95 32 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 104 12  <||@
  Comment 114 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 114 4  <||@
  Comment 120 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 120 5  <||@
  HexCodeFile>>> <|@
end_nmethod
