begin_compilation
  name " HotSpotCompilation-9805[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)]"
  method "HotSpotCompilation-9805[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)]"
  date 1527005222144
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a428 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a428  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?27 v434 v431 ?119 ?65 v435 v433 ?82 ?137 ?216 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a428 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 47]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
=== Succesors ===
next: i429 
=== Usages ===
v437 a278 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v431 #next: i429  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i16 i222 i221 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 j14 j15 j412 v230 j415 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v7 v432 j13 i16 v267 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 368
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 - - - - 
=== Succesors ===
=== Usages ===
v423 j14 j15 i429 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a428 
=== Succesors ===
=== Usages ===
i429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i429 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v437 
=== Succesors ===
next: v10 
=== Usages ===
v341 i31 v310 i162 i242 
=== Predecessor ===
a428 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v437 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 52]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 i76 i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 52]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i429 
y: i30 
=== Succesors ===
=== Usages ===
i62 i117 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i429 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid a278 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 47]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a428 
=== Succesors ===
=== Usages ===
v436 v438 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a428  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v305 v336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v302 v335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v300 v334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 143]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 i88 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i169 i173 j177 j181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i188 i193 j374 j203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:375) [bci: 36]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j18 i236 j182 i155 i170 i174 j178 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:382) [bci: 60]
rawvalue: 2147483648
stableDimension: 0
stamp: i64 [2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i64
value: long[2147483648|0x80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 v230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 v105 v66 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 2]
stamp: void
trueSuccessorProbability: 0.998972806401038
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
i429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607173166662598363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:382) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3 
y: j34 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3 y: j34  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:382) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9981619634555087
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v231 
falseSuccessor: v232 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v231 #falseSuccessor: v232  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607156628106971325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:383) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B17" 
    xhandlers
    flags 
    probability 4566110563379985479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:404) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v232 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B26" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 10]
rawvalue: 27
stableDimension: 0
stamp: i32 [27] ⇊000000000000001b ⇈000000000000001b
stampKind: i32
value: int[27|0x1b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i266 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i4 y: i266  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v385 
falseSuccessor: v387 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v385 #falseSuccessor: v387  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B25" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j430 
=== Usages ===
j430 
=== Predecessor ===
v388 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j430  <|@  <|@
f <@~|@floating>@ <|@
tid a11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 5]
rawvalue: long[27]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [J
stampKind: a -
value: Object[long[27]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a11 
index: i4 
=== Succesors ===
=== Usages ===
j430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 10]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v385 
address: v432 
=== Succesors ===
next: j14 
=== Usages ===
j13 
=== Predecessor ===
v385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v385 address: v432 #next: j14  <|@  <|@
f <@~|@floating>@ <|@
tid j13 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 13]
stamp: i64
=== Inputs ===
x: j430 
y: i4 
=== Succesors ===
=== Usages ===
j14 j15 j18 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j430 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j14 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:372) [bci: 19]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775807]
type: SIGNED
=== Inputs ===
stateBefore: ?5 
x: j3 
y: j13 
=== Succesors ===
next: v392 
=== Usages ===
v20 
=== Predecessor ===
j430 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?5 x: j3 y: j13 #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid j18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:375) [bci: 37]
stamp: i64 [-4611686018427387904 - 4611686018427387903]
=== Inputs ===
x: j13 
y: i17 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j13 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:375) [bci: 39]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j14 
y: j18 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j14 y: j18  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:375) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v389 
falseSuccessor: v391 
=== Usages ===
=== Predecessor ===
j14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v389 #falseSuccessor: v391  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B16" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:375) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: j15 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j15 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:373) [bci: 25]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?5 
x: j3 
y: j13 
=== Succesors ===
next: v38 
=== Usages ===
v35 j415 j412 
=== Predecessor ===
v389 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?5 x: j3 y: j13 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:382) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j15 
y: j34 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j15 y: j34  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:374) [bci: 30]
stamp: i32
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
i222 i221 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:382) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9981619634555087
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v36 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
j15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v36 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4562371210304947271
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:383) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
v36 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B2" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j415 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v211 
values: j15 j3 
=== Succesors ===
=== Usages ===
i40 ?27 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v211 values: j15 j3  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v211 
values: i16 i2 
=== Succesors ===
=== Usages ===
?27 i61 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v211 values: i16 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v212 v213 
=== Succesors ===
next: v396 
=== Usages ===
j415 i221 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v212 v213 #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:386) [bci: 85]
resultBits: 32
stamp: i32
=== Inputs ===
value: j415 
=== Succesors ===
=== Usages ===
i172 i190 i207 v206 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j415  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1717986919
stableDimension: 0
stamp: i32 [1717986919] ⇊0000000066666667 ⇈0000000066666667
stampKind: i32
value: int[1717986919|0x66666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
i207 i208 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i40 
y: i185 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i40 y: i185  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i207 
y: i187 
=== Succesors ===
=== Usages ===
i191 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i207 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i190 i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i40 
y: i189 
=== Succesors ===
=== Usages ===
i191 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i40 y: i189  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-536870912 - 536870912]
=== Inputs ===
x: i188 
y: i190 
=== Succesors ===
=== Usages ===
i64 i169 i170 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i188 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i191 
y: i168 
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i191 y: i168  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i191 
y: i17 
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i191 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i169 
y: i170 
=== Succesors ===
=== Usages ===
i172 v206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:389) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i40 
y: i171 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i40 y: i171  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:389) [bci: 104]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v206 
=== Succesors ===
trueSuccessor: v395 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v206 #trueSuccessor: v395 #falseSuccessor: v393  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:389) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v394  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 380
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i221 j415 - - - - - - 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i221 j415 - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 284
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:389) [bci: 104]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:389) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i40 
y: i171 
=== Succesors ===
=== Usages ===
i63 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i171  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B12" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607250588758697467
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v60 
values: i221 i236 
=== Succesors ===
=== Usages ===
?65 i236 ?82 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v60 values: i221 i236  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v60 
values: i31 i76 
=== Succesors ===
=== Usages ===
?65 i242 i76 v436 v302 v310 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v60 values: i31 i76  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-9 - 9]
valueDescription: i32
=== Inputs ===
merge: v60 
values: i172 i176 
=== Succesors ===
=== Usages ===
?65 ?82 i88 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v60 values: i172 i176  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-214748364 - 214748364]
valueDescription: i32
=== Inputs ===
merge: v60 
values: i191 i195 
=== Succesors ===
=== Usages ===
?65 v66 ?82 i176 i194 i208 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v60 values: i191 i195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0170060658578857
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 127]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v59 
=== Succesors ===
next: v401 
=== Usages ===
i61 i62 i63 i64 v68 v86 v400 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v59 #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i429 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i62 y: i429  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v397 #falseSuccessor: v400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607250588758697467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
v318 v298 
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:419) [bci: 281]
stamp: i32
=== Inputs ===
x: i61 
y: i17 
=== Succesors ===
=== Usages ===
v300 i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i61 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:400) [bci: 178]
stamp: i32 [39 - 57] ⇊0000000000000020 ⇈000000000000003f
=== Inputs ===
x: i63 
y: i77 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i63 y: i77  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
resultBits: 16
stamp: i16 [39 - 57] ⇊0000000000000020 ⇈000000000000003f
=== Inputs ===
value: i88 
=== Succesors ===
=== Usages ===
v318 v298 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a278 
index: i62 
=== Succesors ===
=== Usages ===
v318 v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a278 index: i62  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i64 
y: i6 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i64 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 129]
stamp: void
trueSuccessorProbability: 0.9832783043987645
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v68 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:400) [bci: 168]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v60 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v60 #next: v298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:400) [bci: 180]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v397 
address: v436 
value: i317 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v397 address: v436 value: i317 stateAfter: - lastLocationAccess: - #next: v300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:419) [bci: 282]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v433 
value: i236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v433 value: i236 stateAfter: - lastLocationAccess: - #next: v302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:420) [bci: 288]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v434 
value: i62 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v434 value: i62 stateAfter: - lastLocationAccess: - #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid i242 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:421) [bci: 299]
stamp: i32
=== Inputs ===
x: i429 
y: i62 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i429 y: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:421) [bci: 300]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v435 
value: i242 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v435 value: i242 stateAfter: - lastLocationAccess: - #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:422) [bci: 303]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580549876728547056
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 132]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v397 
address: v436 
value: i317 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v397 address: v436 value: i317 stateAfter: - lastLocationAccess: - #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 138]
stamp: i32
=== Inputs ===
x: i62 
y: i30 
=== Succesors ===
=== Usages ===
?82 i62 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i62 y: i30  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 148
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 396
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i61 - - - i76 i63 i64 - 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i61 - - - i76 i63 i64 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?82 
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?82 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32 [-85899346 - 85899345]
=== Inputs ===
x: i64 
y: i185 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i64 y: i185  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-21474837 - 21474836]
=== Inputs ===
x: i208 
y: i187 
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i208 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i64 
y: i189 
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i64 y: i189  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-21474837 - 21474837]
=== Inputs ===
x: i193 
y: i194 
=== Succesors ===
=== Usages ===
i64 i173 i174 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i194  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i195 
y: i168 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i195 y: i168  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i195 
y: i17 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i195 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i173 
y: i174 
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i173 y: i174  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i64 
y: i175 
=== Succesors ===
=== Usages ===
i63 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i64 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 127]
stamp: void
=== Inputs ===
loopBegin: v60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v60 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v60 #next: v398  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 127
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 394
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i61 - - - i62 i63 i64 - 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i61 - - - i62 i63 i64 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 375
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?65 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 4521522746032054803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:404) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B3" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v214 
values: j15 j3 
=== Succesors ===
=== Usages ===
j209 ?216 j180 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v214 values: j15 j3  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v214 
values: i16 i2 
=== Succesors ===
=== Usages ===
i115 ?216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v214 values: i16 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v215 v217 
=== Succesors ===
next: v405 
=== Usages ===
j412 i222 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v215 v217 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid j196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 7378697629483820647
stableDimension: 0
stamp: i64 [7378697629483820647] ⇊6666666666666667 ⇈6666666666666667
stampKind: i64
value: long[7378697629483820647|0x6666666666666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
j209 j210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j209 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i64
=== Inputs ===
x: j412 
y: j196 
=== Succesors ===
=== Usages ===
j374 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: j412 y: j196  <|@  <|@
f <@~|@floating>@ <|@
tid j374 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i64 [0 - 4611686018427387903] ⇈3fffffffffffffff
=== Inputs ===
x: j209 
y: i187 
=== Succesors ===
=== Usages ===
j178 j116 j177 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j209 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j374 
y: i168 
=== Succesors ===
=== Usages ===
j179 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j374 y: i168  <|@  <|@
f <@~|@floating>@ <|@
tid j178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i64 [0 - 9223372036854775806] ⇈7ffffffffffffffe
=== Inputs ===
x: j374 
y: i17 
=== Succesors ===
=== Usages ===
j179 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j374 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j177 
y: j178 
=== Succesors ===
=== Usages ===
j180 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j177 y: j178  <|@  <|@
f <@~|@floating>@ <|@
tid j180 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64
=== Inputs ===
x: j412 
y: j179 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j412 y: j179  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:404) [bci: 189]
resultBits: 32
stamp: i32
=== Inputs ===
value: j180 
=== Succesors ===
=== Usages ===
i118 v105 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j180  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:406) [bci: 200]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i96 
y: i6 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i96 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:406) [bci: 200]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v404 #falseSuccessor: v402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:406) [bci: 200]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
tid ?216 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 380
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i222 j412 - - - - - - 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i222 j412 - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 319
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:406) [bci: 200]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?216 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:406) [bci: 200]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j120 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 224]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 223]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B23" 
    successors "B21" "B24" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4580955001054417216
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i222 i155 
=== Succesors ===
=== Usages ===
?119 i155 ?137 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i222 i155  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-1 - 922337203685477580]
valueDescription: i64
=== Inputs ===
merge: v114 
values: j374 j205 
=== Succesors ===
=== Usages ===
?119 j204 v122 ?137 j184 j210 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: j374 j205  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i31 i132 
=== Succesors ===
=== Usages ===
?119 i162 i132 v438 v335 v341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i31 i132  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-9 - 9]
valueDescription: i32
=== Inputs ===
merge: v114 
values: i96 i140 
=== Succesors ===
=== Usages ===
?119 i144 ?137 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i96 i140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 10.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 223]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v113 
=== Succesors ===
next: v410 
=== Usages ===
i115 j116 i117 i118 v124 v142 v409 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v113 #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i117 
y: i429 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i117 y: i429  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v406 
falseSuccessor: v409 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v406 #falseSuccessor: v409  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580955001054417216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
v349 v333 
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:419) [bci: 281]
stamp: i32
=== Inputs ===
x: i115 
y: i17 
=== Succesors ===
=== Usages ===
v334 i115 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i115 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:417) [bci: 275]
stamp: i32 [39 - 57] ⇊0000000000000020 ⇈000000000000003f
=== Inputs ===
x: i118 
y: i77 
=== Succesors ===
=== Usages ===
i348 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i118 y: i77  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
resultBits: 16
stamp: i16 [39 - 57] ⇊0000000000000020 ⇈000000000000003f
=== Inputs ===
value: i144 
=== Succesors ===
=== Usages ===
v349 v333 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i144  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a278 
index: i117 
=== Succesors ===
=== Usages ===
v349 v333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a278 index: i117  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 226]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j116 
y: j120 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j116 y: j120  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 226]
stamp: void
trueSuccessorProbability: 0.1
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v124 #falseSuccessor: v129  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:417) [bci: 265]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v114 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v114 #next: v333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:417) [bci: 277]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v406 
address: v438 
value: i348 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v406 address: v438 value: i348 stateAfter: - lastLocationAccess: - #next: v334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:419) [bci: 282]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v433 
value: i155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v433 value: i155 stateAfter: - lastLocationAccess: - #next: v335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:420) [bci: 288]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v434 
value: i117 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v434 value: i117 stateAfter: - lastLocationAccess: - #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:421) [bci: 299]
stamp: i32
=== Inputs ===
x: i429 
y: i117 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i429 y: i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:421) [bci: 300]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v435 
value: i162 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v435 value: i162 stateAfter: - lastLocationAccess: - #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:422) [bci: 303]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580425223089817888
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 229]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v406 
address: v438 
value: i348 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v406 address: v438 value: i348 stateAfter: - lastLocationAccess: - #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 235]
stamp: i32
=== Inputs ===
x: i117 
y: i30 
=== Succesors ===
=== Usages ===
?137 i117 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i117 y: i30  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 245
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 413
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i115 j116 - - i132 i118 - - 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i115 j116 - - i132 i118 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?137 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid j210 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i64 [-1 - 368934881474191032]
=== Inputs ===
x: j116 
y: j196 
=== Succesors ===
=== Usages ===
j203 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: j116 y: j196  <|@  <|@
f <@~|@floating>@ <|@
tid j203 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i64 [-1 - 92233720368547758]
=== Inputs ===
x: j210 
y: i187 
=== Succesors ===
=== Usages ===
j205 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j210 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid j204 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i64 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: j116 
y: i199 
=== Succesors ===
=== Usages ===
j205 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j116 y: i199  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 92233720368547759]
=== Inputs ===
x: j203 
y: j204 
=== Succesors ===
=== Usages ===
j116 j181 j182 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j203 y: j204  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j205 
y: i168 
=== Succesors ===
=== Usages ===
j183 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j205 y: i168  <|@  <|@
f <@~|@floating>@ <|@
tid j182 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j205 
y: i17 
=== Succesors ===
=== Usages ===
j183 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j205 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid j183 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j181 
y: j182 
=== Succesors ===
=== Usages ===
j184 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j181 y: j182  <|@  <|@
f <@~|@floating>@ <|@
tid j184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64
=== Inputs ===
x: j116 
y: j183 
=== Succesors ===
=== Usages ===
i140 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j116 y: j183  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:414) [bci: 253]
resultBits: 32
stamp: i32
=== Inputs ===
value: j184 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j184  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 223]
stamp: void
=== Inputs ===
loopBegin: v114 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v114 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v114 #next: v407  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 223
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 411
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i115 j116 - - i117 i118 - - 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i115 j116 - - i117 i118 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 376
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?119 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:375) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -70675
stableDimension: 0
stamp: i32 [-70675] ⇊00000000fffeebed ⇈00000000fffeebed
stampKind: i32
value: int[-70675|0xfffffffffffeebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid i425 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -68635
stableDimension: 0
stamp: i32 [-68635] ⇊00000000fffef3e5 ⇈00000000fffef3e5
stampKind: i32
value: int[-68635|0xfffffffffffef3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i421 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-93451 - -68635] ⇊00000000fffe82e5 ⇈00000000fffefbfd
valueDescription: i32
=== Inputs ===
merge: v417 
values: i425 i427 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v417 values: i425 i427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v424 v426 
=== Succesors ===
next: v423 
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v424 v426 #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid a420 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i421 
speculation: a420 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i421 speculation: a420  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a428 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a428  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?27 v434 v431 ?119 ?65 v435 v433 ?82 ?137 ?216 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a428 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 47]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
=== Succesors ===
next: i429 
=== Usages ===
v437 a278 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v431 #next: i429  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i16 i222 i221 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 j14 j15 j412 v230 j415 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v7 v432 j13 i16 v267 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 368
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 - - - - 
=== Succesors ===
=== Usages ===
v423 j14 j15 i429 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a428 
=== Succesors ===
=== Usages ===
i429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i429 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v437 
=== Succesors ===
next: v10 
=== Usages ===
v341 i31 v310 i162 i242 
=== Predecessor ===
a428 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v437 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 52]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 i76 i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 52]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i429 
y: i30 
=== Succesors ===
=== Usages ===
i62 i117 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i429 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid a278 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 47]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a428 
=== Succesors ===
=== Usages ===
v436 v438 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a428  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v305 v336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v302 v335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v300 v334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result int[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 143]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 i88 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i169 i173 j177 j181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i188 i193 j374 j203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:375) [bci: 36]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j18 i236 j182 i155 i170 i174 j178 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j34 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:382) [bci: 60]
rawvalue: 2147483648
stableDimension: 0
stamp: i64 [2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i64
value: long[2147483648|0x80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 v230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 v105 v66 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 2]
stamp: void
trueSuccessorProbability: 0.998972806401038
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
i429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3df530d5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32a6d45f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[2147483648|0x80000000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.998972806401038 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607173166662598363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:382) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3 
y: j34 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3 y: j34  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:382) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9981619634555087
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v231 
falseSuccessor: v232 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v231 #falseSuccessor: v232  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9981619634555087 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607156628106971325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:383) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|QWORD, v1|DWORD] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B17" 
    xhandlers
    flags 
    probability 4566110563379985479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:404) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v232 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|QWORD, v1|DWORD] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B26" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
result int[27|0x1b] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 10]
rawvalue: 27
stableDimension: 0
stamp: i32 [27] ⇊000000000000001b ⇈000000000000001b
stampKind: i32
value: int[27|0x1b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i266 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i4 y: i266  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v385 
falseSuccessor: v387 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v385 #falseSuccessor: v387  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B25" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j430 
=== Usages ===
j430 
=== Predecessor ===
v388 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j430  <|@  <|@
f <@~|@floating>@ <|@
tid a11 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 5]
rawvalue: long[27]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [J
stampKind: a -
value: Object[long[27]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
result [v9|QWORD[.] + v3|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a11 
index: i4 
=== Succesors ===
=== Usages ===
j430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j430 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 10]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v385 
address: v432 
=== Succesors ===
next: j14 
=== Usages ===
j13 
=== Predecessor ===
v385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v385 address: v432 #next: j14  <|@  <|@
f <@~|@floating>@ <|@
tid j13 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 13]
stamp: i64
=== Inputs ===
x: j430 
y: i4 
=== Succesors ===
=== Usages ===
j14 j15 j18 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j430 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j14 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:372) [bci: 19]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775807]
type: SIGNED
=== Inputs ===
stateBefore: ?5 
x: j3 
y: j13 
=== Succesors ===
next: v392 
=== Usages ===
v20 
=== Predecessor ===
j430 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?5 x: j3 y: j13 #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid j18 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:375) [bci: 37]
stamp: i64 [-4611686018427387904 - 4611686018427387903]
=== Inputs ===
x: j13 
y: i17 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j13 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:375) [bci: 39]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j14 
y: j18 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j14 y: j18  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:375) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v389 
falseSuccessor: v391 
=== Usages ===
=== Predecessor ===
j14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v389 #falseSuccessor: v391  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v9|QWORD[.] + v3|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = SHL (x: v10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v11|QWORD) size: QWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SAR v11|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B16" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:375) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: j15 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j15 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:373) [bci: 25]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?5 
x: j3 
y: j13 
=== Succesors ===
next: v38 
=== Usages ===
v35 j415 j412 
=== Predecessor ===
v389 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?5 x: j3 y: j13 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:382) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j15 
y: j34 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j15 y: j34  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:374) [bci: 30]
stamp: i32
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
i222 i221 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:382) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9981619634555087
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v36 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
j15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v36 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9981619634555087 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4562371210304947271
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:383) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
v36 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD, v15|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B2" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j415 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v211 
values: j15 j3 
=== Succesors ===
=== Usages ===
i40 ?27 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v211 values: j15 j3  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v211 
values: i16 i2 
=== Succesors ===
=== Usages ===
?27 i61 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v211 values: i16 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v212 v213 
=== Succesors ===
next: v396 
=== Usages ===
j415 i221 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v212 v213 #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:386) [bci: 85]
resultBits: 32
stamp: i32
=== Inputs ===
value: j415 
=== Succesors ===
=== Usages ===
i172 i190 i207 v206 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j415  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result int[1717986919|0x66666667] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1717986919
stableDimension: 0
stamp: i32 [1717986919] ⇊0000000066666667 ⇈0000000066666667
stampKind: i32
value: int[1717986919|0x66666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
i207 i208 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i40 
y: i185 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i40 y: i185  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i207 
y: i187 
=== Succesors ===
=== Usages ===
i191 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i207 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i190 i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i40 
y: i189 
=== Succesors ===
=== Usages ===
i191 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i40 y: i189  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-536870912 - 536870912]
=== Inputs ===
x: i188 
y: i190 
=== Succesors ===
=== Usages ===
i64 i169 i170 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i188 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i191 
y: i168 
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i191 y: i168  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i191 
y: i17 
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i191 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i169 
y: i170 
=== Succesors ===
=== Usages ===
i172 v206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:389) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i40 
y: i171 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i40 y: i171  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:389) [bci: 104]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v206 
=== Succesors ===
trueSuccessor: v395 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v206 #trueSuccessor: v395 #falseSuccessor: v393  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|QWORD, v17|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV v16|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SAR v20|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHR v18|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v21|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SHL v23|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHL v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v24|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:389) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v394  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 380
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i221 j415 - - - - - - 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i221 j415 - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 284
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:389) [bci: 104]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -72723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46]
locals: v0|QWORD[.] v17|DWORD v16|QWORD - - - - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:389) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i40 
y: i171 
=== Succesors ===
=== Usages ===
i63 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i171  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v18|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, v6|DWORD, v27|DWORD, v23|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B12" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607250588758697467
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i61 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v60 
values: i221 i236 
=== Succesors ===
=== Usages ===
?65 i236 ?82 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v60 values: i221 i236  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v60 
values: i31 i76 
=== Succesors ===
=== Usages ===
?65 i242 i76 v436 v302 v310 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v60 values: i31 i76  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-9 - 9]
valueDescription: i32
=== Inputs ===
merge: v60 
values: i172 i176 
=== Succesors ===
=== Usages ===
?65 ?82 i88 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v60 values: i172 i176  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-214748364 - 214748364]
valueDescription: i32
=== Inputs ===
merge: v60 
values: i191 i195 
=== Succesors ===
=== Usages ===
?65 v66 ?82 i176 i194 i208 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v60 values: i191 i195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0170060658578857
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 127]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v59 
=== Succesors ===
next: v401 
=== Usages ===
i61 i62 i63 i64 v68 v86 v400 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v59 #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i429 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i62 y: i429  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v397 #falseSuccessor: v400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD, v31|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607250588758697467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
v318 v298 
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:419) [bci: 281]
stamp: i32
=== Inputs ===
x: i61 
y: i17 
=== Succesors ===
=== Usages ===
v300 i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i61 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:400) [bci: 178]
stamp: i32 [39 - 57] ⇊0000000000000020 ⇈000000000000003f
=== Inputs ===
x: i63 
y: i77 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i63 y: i77  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
resultBits: 16
stamp: i16 [39 - 57] ⇊0000000000000020 ⇈000000000000003f
=== Inputs ===
value: i88 
=== Succesors ===
=== Usages ===
v318 v298 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
result [v7|QWORD[.] + v29|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a278 
index: i62 
=== Succesors ===
=== Usages ===
v318 v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a278 index: i62  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i64 
y: i6 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i64 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 129]
stamp: void
trueSuccessorProbability: 0.9832783043987645
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v68 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = LEA [v30|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9832783043987645 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:400) [bci: 168]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v60 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v60 #next: v298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:400) [bci: 180]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v397 
address: v436 
value: i317 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v397 address: v436 value: i317 stateAfter: - lastLocationAccess: - #next: v300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:419) [bci: 282]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v433 
value: i236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v433 value: i236 stateAfter: - lastLocationAccess: - #next: v302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:420) [bci: 288]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v434 
value: i62 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v434 value: i62 stateAfter: - lastLocationAccess: - #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid i242 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:421) [bci: 299]
stamp: i32
=== Inputs ===
x: i429 
y: i62 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i429 y: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:421) [bci: 300]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v435 
value: i242 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v435 value: i242 stateAfter: - lastLocationAccess: - #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:422) [bci: 303]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v29|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SUB (x: v5|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580549876728547056
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 132]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v397 
address: v436 
value: i317 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v397 address: v436 value: i317 stateAfter: - lastLocationAccess: - #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 138]
stamp: i32
=== Inputs ===
x: i62 
y: i30 
=== Succesors ===
=== Usages ===
?82 i62 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i62 y: i30  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 148
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 396
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i61 - - - i76 i63 i64 - 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i61 - - - i76 i63 i64 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?82 
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?82 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32 [-85899346 - 85899345]
=== Inputs ===
x: i64 
y: i185 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i64 y: i185  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-21474837 - 21474836]
=== Inputs ===
x: i208 
y: i187 
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i208 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i64 
y: i189 
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i64 y: i189  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-21474837 - 21474837]
=== Inputs ===
x: i193 
y: i194 
=== Succesors ===
=== Usages ===
i64 i173 i174 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i194  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i195 
y: i168 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i195 y: i168  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i195 
y: i17 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i195 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i173 
y: i174 
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i173 y: i174  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i64 
y: i175 
=== Succesors ===
=== Usages ===
i63 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i64 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 127]
stamp: void
=== Inputs ===
loopBegin: v60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v29|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:396) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - - - v35|DWORD v30|DWORD v31|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SAR v37|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SHR v31|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = ADD (x: v38|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SHL v40|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SHL v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = ADD (x: v41|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = SUB (x: v31|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v35|DWORD, v44|DWORD, v40|DWORD] destination: B14 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v60 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v60 #next: v398  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 127
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 394
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i61 - - - i62 i63 i64 - 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i61 - - - i62 i63 i64 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 375
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:395) [bci: 147]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?65 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -96027 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 127]
locals: v0|QWORD[.] v28|DWORD - - - v29|DWORD v30|DWORD v31|DWORD - 
>@ <|@ instruction DEOPT info [bci:127] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 4521522746032054803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:404) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD, v15|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B3" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j412 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v214 
values: j15 j3 
=== Succesors ===
=== Usages ===
j209 ?216 j180 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v214 values: j15 j3  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v214 
values: i16 i2 
=== Succesors ===
=== Usages ===
i115 ?216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v214 values: i16 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v215 v217 
=== Succesors ===
next: v405 
=== Usages ===
j412 i222 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v215 v217 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid j196 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 7378697629483820647
stableDimension: 0
stamp: i64 [7378697629483820647] ⇊6666666666666667 ⇈6666666666666667
stampKind: i64
value: long[7378697629483820647|0x6666666666666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
j209 j210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j209 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i64
=== Inputs ===
x: j412 
y: j196 
=== Succesors ===
=== Usages ===
j374 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: j412 y: j196  <|@  <|@
f <@~|@floating>@ <|@
tid j374 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i64 [0 - 4611686018427387903] ⇈3fffffffffffffff
=== Inputs ===
x: j209 
y: i187 
=== Succesors ===
=== Usages ===
j178 j116 j177 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j209 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j374 
y: i168 
=== Succesors ===
=== Usages ===
j179 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j374 y: i168  <|@  <|@
f <@~|@floating>@ <|@
tid j178 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i64 [0 - 9223372036854775806] ⇈7ffffffffffffffe
=== Inputs ===
x: j374 
y: i17 
=== Succesors ===
=== Usages ===
j179 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j374 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j177 
y: j178 
=== Succesors ===
=== Usages ===
j180 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j177 y: j178  <|@  <|@
f <@~|@floating>@ <|@
tid j180 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64
=== Inputs ===
x: j412 
y: j179 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j412 y: j179  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:404) [bci: 189]
resultBits: 32
stamp: i32
=== Inputs ===
value: j180 
=== Succesors ===
=== Usages ===
i118 v105 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j180  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:406) [bci: 200]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i96 
y: i6 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i96 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:406) [bci: 200]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v404 #falseSuccessor: v402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD, v46|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = SHR v48|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = SHL v49|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SHL v49|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = ADD (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = SUB (x: v45|QWORD, ~y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOV v53|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:406) [bci: 200]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
tid ?216 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 380
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i222 j412 - - - - - - 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i222 j412 - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 319
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:406) [bci: 200]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?216 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -81683 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46]
locals: v0|QWORD[.] v46|DWORD v45|QWORD - - - - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:406) [bci: 200]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j120 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 224]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 223]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD, v49|QWORD, v6|DWORD, v54|DWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B23" 
    successors "B21" "B24" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4580955001054417216
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i115 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i222 i155 
=== Succesors ===
=== Usages ===
?119 i155 ?137 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i222 i155  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-1 - 922337203685477580]
valueDescription: i64
=== Inputs ===
merge: v114 
values: j374 j205 
=== Succesors ===
=== Usages ===
?119 j204 v122 ?137 j184 j210 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: j374 j205  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i31 i132 
=== Succesors ===
=== Usages ===
?119 i162 i132 v438 v335 v341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i31 i132  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-9 - 9]
valueDescription: i32
=== Inputs ===
merge: v114 
values: i96 i140 
=== Succesors ===
=== Usages ===
?119 i144 ?137 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i96 i140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 10.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 223]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v113 
=== Succesors ===
next: v410 
=== Usages ===
i115 j116 i117 i118 v124 v142 v409 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v113 #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i117 
y: i429 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i117 y: i429  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v406 
falseSuccessor: v409 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v406 #falseSuccessor: v409  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD, v56|QWORD, v57|DWORD, v58|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580955001054417216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
v349 v333 
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:419) [bci: 281]
stamp: i32
=== Inputs ===
x: i115 
y: i17 
=== Succesors ===
=== Usages ===
v334 i115 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i115 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:417) [bci: 275]
stamp: i32 [39 - 57] ⇊0000000000000020 ⇈000000000000003f
=== Inputs ===
x: i118 
y: i77 
=== Succesors ===
=== Usages ===
i348 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i118 y: i77  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
resultBits: 16
stamp: i16 [39 - 57] ⇊0000000000000020 ⇈000000000000003f
=== Inputs ===
value: i144 
=== Succesors ===
=== Usages ===
v349 v333 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i144  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
result [v7|QWORD[.] + v57|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a278 
index: i117 
=== Succesors ===
=== Usages ===
v349 v333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a278 index: i117  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 226]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j116 
y: j120 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j116 y: j120  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 226]
stamp: void
trueSuccessorProbability: 0.1
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v124 #falseSuccessor: v129  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = LEA [v58|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:417) [bci: 265]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v114 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v114 #next: v333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:417) [bci: 277]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v406 
address: v438 
value: i348 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v406 address: v438 value: i348 stateAfter: - lastLocationAccess: - #next: v334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:419) [bci: 282]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v433 
value: i155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v433 value: i155 stateAfter: - lastLocationAccess: - #next: v335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:420) [bci: 288]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v434 
value: i117 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v434 value: i117 stateAfter: - lastLocationAccess: - #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:421) [bci: 299]
stamp: i32
=== Inputs ===
x: i429 
y: i117 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i429 y: i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:421) [bci: 300]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v435 
value: i162 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v435 value: i162 stateAfter: - lastLocationAccess: - #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:422) [bci: 303]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v57|DWORD * 2 + 16], y: v60|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v5|DWORD, ~y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580425223089817888
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 229]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v406 
address: v438 
value: i348 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v406 address: v438 value: i348 stateAfter: - lastLocationAccess: - #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 235]
stamp: i32
=== Inputs ===
x: i117 
y: i30 
=== Succesors ===
=== Usages ===
?137 i117 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i117 y: i30  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 245
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 413
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i115 j116 - - i132 i118 - - 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i115 j116 - - i132 i118 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?137 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid j210 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i64 [-1 - 368934881474191032]
=== Inputs ===
x: j116 
y: j196 
=== Succesors ===
=== Usages ===
j203 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: j116 y: j196  <|@  <|@
f <@~|@floating>@ <|@
tid j203 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i64 [-1 - 92233720368547758]
=== Inputs ===
x: j210 
y: i187 
=== Succesors ===
=== Usages ===
j205 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j210 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid j204 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i64 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: j116 
y: i199 
=== Succesors ===
=== Usages ===
j205 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j116 y: i199  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 92233720368547759]
=== Inputs ===
x: j203 
y: j204 
=== Succesors ===
=== Usages ===
j116 j181 j182 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j203 y: j204  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j205 
y: i168 
=== Succesors ===
=== Usages ===
j183 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j205 y: i168  <|@  <|@
f <@~|@floating>@ <|@
tid j182 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j205 
y: i17 
=== Succesors ===
=== Usages ===
j183 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j205 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid j183 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j181 
y: j182 
=== Succesors ===
=== Usages ===
j184 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j181 y: j182  <|@  <|@
f <@~|@floating>@ <|@
tid j184 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64
=== Inputs ===
x: j116 
y: j183 
=== Succesors ===
=== Usages ===
i140 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j116 y: j183  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:414) [bci: 253]
resultBits: 32
stamp: i32
=== Inputs ===
value: j184 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j184  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 223]
stamp: void
=== Inputs ===
loopBegin: v114 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v57|DWORD * 2 + 16], y: v60|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = DEC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:413) [bci: 245]
locals: v0|QWORD[.] v55|DWORD v56|QWORD - - v62|DWORD v58|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:245] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = SAR v63|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SHR v56|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = ADD (x: v64|QWORD, y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SHL v66|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHL v66|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = ADD (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = SUB (x: v56|QWORD, ~y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV v70|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|DWORD, v66|QWORD, v62|DWORD, v71|DWORD] destination: B23 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v114 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v114 #next: v407  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 223
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 411
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i115 j116 - - i117 i118 - - 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i115 j116 - - i117 i118 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 376
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:412) [bci: 244]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?119 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -96283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 223]
locals: v0|QWORD[.] v55|DWORD v56|QWORD - - v57|DWORD v58|DWORD - - 
>@ <|@ instruction DEOPT info [bci:223] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:375) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
result int[-70675|0xfffffffffffeebed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -70675
stableDimension: 0
stamp: i32 [-70675] ⇊00000000fffeebed ⇈00000000fffeebed
stampKind: i32
value: int[-70675|0xfffffffffffeebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-70675|0xfffffffffffeebed]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:371) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid i425 <|@
result int[-68635|0xfffffffffffef3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -68635
stableDimension: 0
stamp: i32 [-68635] ⇊00000000fffef3e5 ⇈00000000fffef3e5
stampKind: i32
value: int[-68635|0xfffffffffffef3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-68635|0xfffffffffffef3e5]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i421 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-93451 - -68635] ⇊00000000fffe82e5 ⇈00000000fffefbfd
valueDescription: i32
=== Inputs ===
merge: v417 
values: i425 i427 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v417 values: i425 i427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v424 v426 
=== Succesors ===
next: v423 
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v424 v426 #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid a420 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i421 
speculation: a420 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i421 speculation: a420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3df530d5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32a6d45f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[2147483648|0x80000000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.998972806401038 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607173166662598363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9981619634555087 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607156628106971325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|QWORD, v1|DWORD] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B2" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|QWORD, v17|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV v16|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SAR v20|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHR v18|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v21|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SHL v23|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHL v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v24|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v18|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, v6|DWORD, v27|DWORD, v23|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607250588758697467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = LEA [v30|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9832783043987645 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580549876728547056
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v29|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:396) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - - - v35|DWORD v30|DWORD v31|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SAR v37|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SHR v31|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = ADD (x: v38|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SHL v40|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SHL v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = ADD (x: v41|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = SUB (x: v31|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v35|DWORD, v44|DWORD, v40|DWORD] destination: B14 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B12" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607250588758697467
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD, v31|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v29|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SUB (x: v5|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B17" 
    xhandlers
    flags 
    probability 4566110563379985479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|QWORD, v1|DWORD] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B3" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD, v46|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = SHR v48|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = SHL v49|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SHL v49|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = ADD (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = SUB (x: v45|QWORD, ~y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOV v53|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD, v49|QWORD, v6|DWORD, v54|DWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580955001054417216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = LEA [v58|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580425223089817888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v57|DWORD * 2 + 16], y: v60|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = DEC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:413) [bci: 245]
locals: v0|QWORD[.] v55|DWORD v56|QWORD - - v62|DWORD v58|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:245] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = SAR v63|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SHR v56|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = ADD (x: v64|QWORD, y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SHL v66|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHL v66|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = ADD (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = SUB (x: v56|QWORD, ~y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV v70|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|DWORD, v66|QWORD, v62|DWORD, v71|DWORD] destination: B23 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B23" 
    successors "B21" "B24" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4580955001054417216
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD, v56|QWORD, v57|DWORD, v58|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v57|DWORD * 2 + 16], y: v60|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v5|DWORD, ~y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B26" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B25" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v9|QWORD[.] + v3|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = SHL (x: v10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v11|QWORD) size: QWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SAR v11|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B16" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9981619634555087 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4562371210304947271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD, v15|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 4521522746032054803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD, v15|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -72723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46]
locals: v0|QWORD[.] v17|DWORD v16|QWORD - - - - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-70675|0xfffffffffffeebed]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -96283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 223]
locals: v0|QWORD[.] v55|DWORD v56|QWORD - - v57|DWORD v58|DWORD - - 
>@ <|@ instruction DEOPT info [bci:223] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-68635|0xfffffffffffef3e5]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -96027 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 127]
locals: v0|QWORD[.] v28|DWORD - - - v29|DWORD v30|DWORD v31|DWORD - 
>@ <|@ instruction DEOPT info [bci:127] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -81683 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46]
locals: v0|QWORD[.] v46|DWORD v45|QWORD - - - - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: ifeq          46
     5: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
     8: iload         4
    10: laload        
    11: iload         4
    13: lshl          
    14: lstore        5
    16: lload_2       
    17: lload         5
    19: lrem          
    20: lstore        7
    22: lload_2       
    23: lload         5
    25: ldiv          
    26: lstore_2      
    27: iload_1       
    28: iload         4
    30: iadd          
    31: istore_1      
    32: lload         7
    34: lload         5
    36: iconst_1      
    37: lshr          
    38: lcmp          
    39: iflt          46
    42: lload_2       
    43: lconst_1      
    44: ladd          
    45: lstore_2      
    46: aload_0       
    47: getfield      #6          // digits:char[]
    50: arraylength   
    51: iconst_1      
    52: isub          
    53: istore        5
    55: lload_2       
    56: ldc2_w        #26         // 2147483647
    59: lcmp          
    60: ifgt          184
    63: getstatic     #15         // $assertionsDisabled:boolean
    66: ifne          84
    69: lload_2       
    70: lconst_0      
    71: lcmp          
    72: ifgt          84
    75: new           #21         // java.lang.AssertionError
    78: dup           
    79: lload_2       
    80: invokespecial #19         // java.lang.AssertionError.<init>:(long)void
    83: athrow        
    84: lload_2       
    85: l2i           
    86: istore        7
    88: iload         7
    90: bipush        10
    92: irem          
    93: istore        6
    95: iload         7
    97: bipush        10
    99: idiv          
   100: istore        7
   102: iload         6
   104: ifne          127
   107: iinc          
   110: iload         7
   112: bipush        10
   114: irem          
   115: istore        6
   117: iload         7
   119: bipush        10
   121: idiv          
   122: istore        7
   124: goto          102
   127: iload         7
   129: ifeq          168
   132: aload_0       
   133: getfield      #6          // digits:char[]
   136: iload         5
   138: iinc          
   141: iload         6
   143: bipush        48
   145: iadd          
   146: i2c           
   147: castore       
   148: iinc          
   151: iload         7
   153: bipush        10
   155: irem          
   156: istore        6
   158: iload         7
   160: bipush        10
   162: idiv          
   163: istore        7
   165: goto          127
   168: aload_0       
   169: getfield      #6          // digits:char[]
   172: iload         5
   174: iload         6
   176: bipush        48
   178: iadd          
   179: i2c           
   180: castore       
   181: goto          278
   184: lload_2       
   185: ldc2_w        #29         // 10
   188: lrem          
   189: l2i           
   190: istore        6
   192: lload_2       
   193: ldc2_w        #29         // 10
   196: ldiv          
   197: lstore_2      
   198: iload         6
   200: ifne          223
   203: iinc          
   206: lload_2       
   207: ldc2_w        #29         // 10
   210: lrem          
   211: l2i           
   212: istore        6
   214: lload_2       
   215: ldc2_w        #29         // 10
   218: ldiv          
   219: lstore_2      
   220: goto          198
   223: lload_2       
   224: lconst_0      
   225: lcmp          
   226: ifeq          265
   229: aload_0       
   230: getfield      #6          // digits:char[]
   233: iload         5
   235: iinc          
   238: iload         6
   240: bipush        48
   242: iadd          
   243: i2c           
   244: castore       
   245: iinc          
   248: lload_2       
   249: ldc2_w        #29         // 10
   252: lrem          
   253: l2i           
   254: istore        6
   256: lload_2       
   257: ldc2_w        #29         // 10
   260: ldiv          
   261: lstore_2      
   262: goto          223
   265: aload_0       
   266: getfield      #6          // digits:char[]
   269: iload         5
   271: iload         6
   273: bipush        48
   275: iadd          
   276: i2c           
   277: castore       
   278: aload_0       
   279: iload_1       
   280: iconst_1      
   281: iadd          
   282: putfield      #8          // decExponent:int
   285: aload_0       
   286: iload         5
   288: putfield      #9          // firstDigitIndex:int
   291: aload_0       
   292: aload_0       
   293: getfield      #6          // digits:char[]
   296: arraylength   
   297: iload         5
   299: isub          
   300: putfield      #10         // nDigits:int
   303: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3df530d5 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32a6d45f encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rbp|QWORD = MOVE input: long[2147483648|0x80000000] <|@ <|@
      nr   24  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.998972806401038 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607173166662598363
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMP (x: rbp|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.9981619634555087 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607156628106971325
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B2" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = MOV r11|QWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   46  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SHR rcx|DWORD y: 31 size: DWORD <|@ <|@
      nr   54  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr   58  <|@ instruction r8|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607250588758697467
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|DWORD = LEA [r8|DWORD + 48] size: DWORD <|@ <|@
      nr   84  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.9832783043987645 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580549876728547056
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|DWORD * 2 + 16], y: rdx|DWORD) size: WORD <|@ <|@
      nr   92  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rsi:0, rdi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:396) [bci: 148]
locals: rsi|QWORD[.] r10|DWORD - - - r11|DWORD r8|DWORD rcx|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:148] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr  100  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr  106  <|@ instruction rax|DWORD = SHR rcx|DWORD y: 31 size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B14 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B12" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607250588758697467
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|DWORD * 2 + 16], y: rdx|DWORD) size: WORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B17" 
    xhandlers
    flags 
    probability 4566110563379985479
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B3" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  142  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = SHR rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  150  <|@ instruction rax|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  152  <|@ instruction r8|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  154  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction r8|QWORD = SUB (x: r11|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOV r8|QWORD size: DWORD <|@ <|@
      nr  160  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580955001054417216
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  176  <|@ instruction rbp|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  178  <|@ instruction rdx|DWORD = LEA [rbx|DWORD + 48] size: DWORD <|@ <|@
      nr  180  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.1 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580425223089817888
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdi|QWORD[.] + r8|DWORD * 2 + 16], y: rdx|DWORD) size: WORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  190  <|@ st <@st|@reference-map: [rsi:0, rdi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:413) [bci: 245]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - - r8|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:245] <|@ <|@
      nr  192  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|QWORD = SAR rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD = SHR r11|QWORD y: 63 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction rax|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|DWORD = MOV r11|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B23 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B23" 
    successors "B21" "B24" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4580955001054417216
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  170  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [rdi|QWORD[.] + r8|DWORD * 2 + 16], y: rdx|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B26" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction CMP r8|DWORD y: 27 size: DWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B25" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr  240  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r13|QWORD = SHL (x: rax|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [rsi:0, rdi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - r8|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:0] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = SAR r13|QWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMP (x: r13|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B16" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rbp|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.9981619634555087 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4562371210304947271
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 4521522746032054803
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction MOV [r15|QWORD + 668] y: -72723 size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - - - - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction MOV [r15|QWORD + 668] y: -96283 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 223]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - - r8|DWORD rbx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:223] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-68635|0xfffffffffffef3e5] // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction MOV [r15|QWORD + 668] y: -96027 size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  316  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 127]
locals: rsi|QWORD[.] r10|DWORD - - - r11|DWORD r8|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:127] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOV [r15|QWORD + 668] y: -81683 size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - - - - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: ifeq          46
     5: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
     8: iload         4
    10: laload        
    11: iload         4
    13: lshl          
    14: lstore        5
    16: lload_2       
    17: lload         5
    19: lrem          
    20: lstore        7
    22: lload_2       
    23: lload         5
    25: ldiv          
    26: lstore_2      
    27: iload_1       
    28: iload         4
    30: iadd          
    31: istore_1      
    32: lload         7
    34: lload         5
    36: iconst_1      
    37: lshr          
    38: lcmp          
    39: iflt          46
    42: lload_2       
    43: lconst_1      
    44: ladd          
    45: lstore_2      
    46: aload_0       
    47: getfield      #6          // digits:char[]
    50: arraylength   
    51: iconst_1      
    52: isub          
    53: istore        5
    55: lload_2       
    56: ldc2_w        #26         // 2147483647
    59: lcmp          
    60: ifgt          184
    63: getstatic     #15         // $assertionsDisabled:boolean
    66: ifne          84
    69: lload_2       
    70: lconst_0      
    71: lcmp          
    72: ifgt          84
    75: new           #21         // java.lang.AssertionError
    78: dup           
    79: lload_2       
    80: invokespecial #19         // java.lang.AssertionError.<init>:(long)void
    83: athrow        
    84: lload_2       
    85: l2i           
    86: istore        7
    88: iload         7
    90: bipush        10
    92: irem          
    93: istore        6
    95: iload         7
    97: bipush        10
    99: idiv          
   100: istore        7
   102: iload         6
   104: ifne          127
   107: iinc          
   110: iload         7
   112: bipush        10
   114: irem          
   115: istore        6
   117: iload         7
   119: bipush        10
   121: idiv          
   122: istore        7
   124: goto          102
   127: iload         7
   129: ifeq          168
   132: aload_0       
   133: getfield      #6          // digits:char[]
   136: iload         5
   138: iinc          
   141: iload         6
   143: bipush        48
   145: iadd          
   146: i2c           
   147: castore       
   148: iinc          
   151: iload         7
   153: bipush        10
   155: irem          
   156: istore        6
   158: iload         7
   160: bipush        10
   162: idiv          
   163: istore        7
   165: goto          127
   168: aload_0       
   169: getfield      #6          // digits:char[]
   172: iload         5
   174: iload         6
   176: bipush        48
   178: iadd          
   179: i2c           
   180: castore       
   181: goto          278
   184: lload_2       
   185: ldc2_w        #29         // 10
   188: lrem          
   189: l2i           
   190: istore        6
   192: lload_2       
   193: ldc2_w        #29         // 10
   196: ldiv          
   197: lstore_2      
   198: iload         6
   200: ifne          223
   203: iinc          
   206: lload_2       
   207: ldc2_w        #29         // 10
   210: lrem          
   211: l2i           
   212: istore        6
   214: lload_2       
   215: ldc2_w        #29         // 10
   218: ldiv          
   219: lstore_2      
   220: goto          198
   223: lload_2       
   224: lconst_0      
   225: lcmp          
   226: ifeq          265
   229: aload_0       
   230: getfield      #6          // digits:char[]
   233: iload         5
   235: iinc          
   238: iload         6
   240: bipush        48
   242: iadd          
   243: i2c           
   244: castore       
   245: iinc          
   248: lload_2       
   249: ldc2_w        #29         // 10
   252: lrem          
   253: l2i           
   254: istore        6
   256: lload_2       
   257: ldc2_w        #29         // 10
   260: ldiv          
   261: lstore_2      
   262: goto          223
   265: aload_0       
   266: getfield      #6          // digits:char[]
   269: iload         5
   271: iload         6
   273: bipush        48
   275: iadd          
   276: i2c           
   277: castore       
   278: aload_0       
   279: iload_1       
   280: iconst_1      
   281: iadd          
   282: putfield      #8          // decExponent:int
   285: aload_0       
   286: iload         5
   288: putfield      #9          // firstDigitIndex:int
   291: aload_0       
   292: aload_0       
   293: getfield      #6          // digits:char[]
   296: arraylength   
   297: iload         5
   299: isub          
   300: putfield      #10         // nDigits:int
   303: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3df530d5 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32a6d45f encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rbp|QWORD = MOVE input: long[2147483648|0x80000000] <|@ <|@
      nr   24  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.998972806401038 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4607173166662598363
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMP (x: rbp|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.9981619634555087 condition: > trueDestination: B1 -> B8 falseDestination: B1 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = MOV r11|QWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   46  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SHR rcx|DWORD y: 31 size: DWORD <|@ <|@
      nr   54  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr   58  <|@ instruction r8|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607250588758697467
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|DWORD = LEA [r8|DWORD + 48] size: DWORD <|@ <|@
      nr   84  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.9832783043987645 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580549876728547056
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|DWORD * 2 + 16], y: rdx|DWORD) size: WORD <|@ <|@
      nr   92  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rsi:0, rdi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:396) [bci: 148]
locals: rsi|QWORD[.] r10|DWORD - - - r11|DWORD r8|DWORD rcx|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:148] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr  100  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr  106  <|@ instruction rax|DWORD = SHR rcx|DWORD y: 31 size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B14 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B12" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607250588758697467
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4607165863238623679
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|DWORD * 2 + 16], y: rdx|DWORD) size: WORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  142  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = SHR rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  150  <|@ instruction rax|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  152  <|@ instruction r8|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  154  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction r8|QWORD = SUB (x: r11|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOV r8|QWORD size: DWORD <|@ <|@
      nr  160  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580955001054417216
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  176  <|@ instruction rbp|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  178  <|@ instruction rdx|DWORD = LEA [rbx|DWORD + 48] size: DWORD <|@ <|@
      nr  180  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.1 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580425223089817888
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdi|QWORD[.] + r8|DWORD * 2 + 16], y: rdx|DWORD) size: WORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  190  <|@ st <@st|@reference-map: [rsi:0, rdi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:413) [bci: 245]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - - r8|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:245] <|@ <|@
      nr  192  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|QWORD = SAR rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD = SHR r11|QWORD y: 63 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction rax|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|DWORD = MOV r11|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B23 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B23" 
    successors "B21" "B24" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4580955001054417216
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  170  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4566119270332531200
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [rdi|QWORD[.] + r8|DWORD * 2 + 16], y: rdx|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B26" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction CMP r8|DWORD y: 27 size: DWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B25" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr  240  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction r13|QWORD = SHL (x: rax|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [rsi:0, rdi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - r8|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:0] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = SAR r13|QWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMP (x: r13|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4562379917257492992
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rbp|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.9981619634555087 condition: > trueDestination: B6 -> B8 falseDestination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction MOV [r15|QWORD + 668] y: -72723 size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - - - - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction MOV [r15|QWORD + 668] y: -96283 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 223]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - - r8|DWORD rbx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:223] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-68635|0xfffffffffffef3e5] // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction MOV [r15|QWORD + 668] y: -96027 size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  316  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 127]
locals: rsi|QWORD[.] r10|DWORD - - - r11|DWORD r8|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:127] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOV [r15|QWORD + 668] y: -81683 size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46]
locals: rsi|QWORD[.] r10|DWORD r11|QWORD - - - - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: ifeq          46
     5: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
     8: iload         4
    10: laload        
    11: iload         4
    13: lshl          
    14: lstore        5
    16: lload_2       
    17: lload         5
    19: lrem          
    20: lstore        7
    22: lload_2       
    23: lload         5
    25: ldiv          
    26: lstore_2      
    27: iload_1       
    28: iload         4
    30: iadd          
    31: istore_1      
    32: lload         7
    34: lload         5
    36: iconst_1      
    37: lshr          
    38: lcmp          
    39: iflt          46
    42: lload_2       
    43: lconst_1      
    44: ladd          
    45: lstore_2      
    46: aload_0       
    47: getfield      #6          // digits:char[]
    50: arraylength   
    51: iconst_1      
    52: isub          
    53: istore        5
    55: lload_2       
    56: ldc2_w        #26         // 2147483647
    59: lcmp          
    60: ifgt          184
    63: getstatic     #15         // $assertionsDisabled:boolean
    66: ifne          84
    69: lload_2       
    70: lconst_0      
    71: lcmp          
    72: ifgt          84
    75: new           #21         // java.lang.AssertionError
    78: dup           
    79: lload_2       
    80: invokespecial #19         // java.lang.AssertionError.<init>:(long)void
    83: athrow        
    84: lload_2       
    85: l2i           
    86: istore        7
    88: iload         7
    90: bipush        10
    92: irem          
    93: istore        6
    95: iload         7
    97: bipush        10
    99: idiv          
   100: istore        7
   102: iload         6
   104: ifne          127
   107: iinc          
   110: iload         7
   112: bipush        10
   114: irem          
   115: istore        6
   117: iload         7
   119: bipush        10
   121: idiv          
   122: istore        7
   124: goto          102
   127: iload         7
   129: ifeq          168
   132: aload_0       
   133: getfield      #6          // digits:char[]
   136: iload         5
   138: iinc          
   141: iload         6
   143: bipush        48
   145: iadd          
   146: i2c           
   147: castore       
   148: iinc          
   151: iload         7
   153: bipush        10
   155: irem          
   156: istore        6
   158: iload         7
   160: bipush        10
   162: idiv          
   163: istore        7
   165: goto          127
   168: aload_0       
   169: getfield      #6          // digits:char[]
   172: iload         5
   174: iload         6
   176: bipush        48
   178: iadd          
   179: i2c           
   180: castore       
   181: goto          278
   184: lload_2       
   185: ldc2_w        #29         // 10
   188: lrem          
   189: l2i           
   190: istore        6
   192: lload_2       
   193: ldc2_w        #29         // 10
   196: ldiv          
   197: lstore_2      
   198: iload         6
   200: ifne          223
   203: iinc          
   206: lload_2       
   207: ldc2_w        #29         // 10
   210: lrem          
   211: l2i           
   212: istore        6
   214: lload_2       
   215: ldc2_w        #29         // 10
   218: ldiv          
   219: lstore_2      
   220: goto          198
   223: lload_2       
   224: lconst_0      
   225: lcmp          
   226: ifeq          265
   229: aload_0       
   230: getfield      #6          // digits:char[]
   233: iload         5
   235: iinc          
   238: iload         6
   240: bipush        48
   242: iadd          
   243: i2c           
   244: castore       
   245: iinc          
   248: lload_2       
   249: ldc2_w        #29         // 10
   252: lrem          
   253: l2i           
   254: istore        6
   256: lload_2       
   257: ldc2_w        #29         // 10
   260: ldiv          
   261: lstore_2      
   262: goto          223
   265: aload_0       
   266: getfield      #6          // digits:char[]
   269: iload         5
   271: iload         6
   273: bipush        48
   275: iadd          
   276: i2c           
   277: castore       
   278: aload_0       
   279: iload_1       
   280: iconst_1      
   281: iadd          
   282: putfield      #8          // decExponent:int
   285: aload_0       
   286: iload         5
   288: putfield      #9          // firstDigitIndex:int
   291: aload_0       
   292: aload_0       
   293: getfield      #6          // digits:char[]
   296: arraylength   
   297: iload         5
   299: isub          
   300: putfield      #10         // nDigits:int
   303: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448bd24c8bd98b461c448b0cc50c000000418bd9ffcb8bf848c1e703bd000000804585c00f8587010000493beb0f8eb9000000418bcb8bc1ba67666666f7eac1fa028bc1c1e81f03d08bc2c1e003448bc241d1e04103c03bc10f849c0100002bc8448bc1448bdbe94d0000000f1f4000418bdaffc3418d503085c90f8444000000664289545f1041ffcb8505000000008bc1ba67666666f7eac1fa028bc1c1e81f03d08bc2c1e003448bd241d1e24103c22bc8448bc1448bd38bca453bcb77b0e988010000664289545f10895e0c44895e10452bcb44894e14488b6c24104883c418850500000000c5f877c348b96766666666666666498bc348f7e948c1ea02488bc248c1e0034c8bc249d1e04903c04d8bc34c2bc0418bc085c00f8444010000448bc34c8bda8bd8e9520000006690418beaffc58d53304d85db0f844900000066428954471041ffc8850500000000498bc348f7e948c1fa02498bc348c1e83f4803d0488bc248c1e0034c8bd249d1e24903c24c2bd8418bdb4c8bda448bd5453bc877abe9a3000000664289544710896e0c44894610452bc844894e14488b6c24104883c418850500000000c5f877c34183f81b0f838a00000048b9addeaddeaddeadde4a8b44c110418bc84c8be849d3e5498bc3489949f7fd49d1fd4c3bea0f8e2c0000004503d0483be84c8bd80f8f3dfeffffe9f1feffff41c7879c020000ede3feff4d89a7a8020000e8000000009041b9edebfeff45898f9c0200004d89a7a8020000e8000000009041c7879c020000e587feff4d89a7a8020000e8000000009041b9e5f3feffebcc41c7879c020000e588feff4d89a7a8020000e8000000009041c7879c020000edc0feff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3df530d5 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 51 10 r11|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 54 14 rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 57 16 r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 57 [rax:0, rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 18 rbx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 70 20 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32a6d45f encoding: base: 0 shift: 3  <||@
  Comment 76 22 rbp|QWORD = MOVE input: long[2147483648|0x80000000]  <||@
  Comment 81 24 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 84 26 BRANCH trueDestinationProbability: 0.998972806401038 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 90 block B1 null  <||@
  Comment 90 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 30 CMP (x: rbp|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 93 32 BRANCH trueDestinationProbability: 0.9981619634555087 condition: > trueDestination: B1 -> B8 falseDestination: B1 -> B17  <||@
  Comment 99 block B8 null  <||@
  Comment 99 38 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 99 40 rcx|DWORD = MOV r11|QWORD size: DWORD  <||@
  Comment 102 42 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 104 44 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 109 46 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 111 50 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 114 52 rax|DWORD = SHR rcx|DWORD y: 31 size: DWORD  <||@
  Comment 119 54 rdx|DWORD = ADD (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 121 56 rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 126 58 r8|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 132 60 rax|DWORD = ADD (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 135 62 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 137 64 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 143 block B10 null  <||@
  Comment 143 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 143 68 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 145 -1 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 148 -1 r11|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 151 70 JUMP ~[] destination: B10 -> B11  <||@
  Comment 156 block B12 loop 0 depth 1 header:60|LoopBegin  <||@
  Comment 156 78 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 80 rbx|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 165 82 rdx|DWORD = LEA [r8|DWORD + 48] size: DWORD  <||@
  Comment 169 84 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 171 86 BRANCH trueDestinationProbability: 0.9832783043987645 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 177 block B14 loop 0 depth 1 header:60|LoopBegin  <||@
  Comment 177 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 90 MOV (x: [rdi|QWORD[.] + r11|DWORD * 2 + 16], y: rdx|DWORD) size: WORD  <||@
  Comment 183 92 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 186 94 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:148]  <||@
  Comment 186 [rsi:0, rdi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:396) [bci: 148, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4  |5          |6         |7          |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-  |-  |-  |r11|DWORD  |r8|DWORD  |rcx|DWORD  |-   <||@
  Comment 186 {infopoint: SAFEPOINT}  <||@
  Comment 186 11  <||@
  Comment 192 96 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 194 98 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 199 100 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 201 104 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 204 106 rax|DWORD = SHR rcx|DWORD y: 31 size: DWORD  <||@
  Comment 209 108 rdx|DWORD = ADD (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 211 110 rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 216 112 r10|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 222 114 rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 225 116 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 227 -1 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 230 -1 r10|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 233 118 JUMP ~[] destination: B14 -> B11  <||@
  Comment 233 block B11 loop 0 depth 1 header:60|LoopBegin  <||@
  Comment 233 72 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 233 -1 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 235 74 CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 238 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B15  <||@
  Comment 245 block B13 null  <||@
  Comment 245 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 122 MOV (x: [rdi|QWORD[.] + r11|DWORD * 2 + 16], y: rdx|DWORD) size: WORD  <||@
  Comment 251 124 MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 254 126 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 258 128 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 261 130 MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD  <||@
  Comment 265 132 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 274 12  <||@
  Comment 284 block B17 null  <||@
  Comment 284 138 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 284 140 rcx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667]  <||@
  Comment 294 142 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 297 144 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 300 148 rdx|QWORD = SHR rdx|QWORD y: 2 size: QWORD  <||@
  Comment 304 150 rax|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 311 152 r8|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 317 154 rax|QWORD = ADD (x: rax|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 320 156 r8|QWORD = SUB (x: r11|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 326 158 rax|DWORD = MOV r8|QWORD size: DWORD  <||@
  Comment 329 160 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 331 162 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 337 block B19 null  <||@
  Comment 337 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 337 -1 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 340 -1 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 343 -1 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 345 166 JUMP ~[] destination: B19 -> B20  <||@
  Comment 350 block B21 loop 1 depth 1 header:114|LoopBegin  <||@
  Comment 350 174 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 352 176 rbp|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 357 178 rdx|DWORD = LEA [rbx|DWORD + 48] size: DWORD  <||@
  Comment 360 180 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 363 182 BRANCH trueDestinationProbability: 0.1 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 369 block B23 loop 1 depth 1 header:114|LoopBegin  <||@
  Comment 369 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 369 186 MOV (x: [rdi|QWORD[.] + r8|DWORD * 2 + 16], y: rdx|DWORD) size: WORD  <||@
  Comment 375 188 r8|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 378 190 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:245]  <||@
  Comment 378 [rsi:0, rdi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:413) [bci: 245, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4  |5         |6          |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |-  |r8|DWORD  |rbx|DWORD  |-  |-   <||@
  Comment 378 {infopoint: SAFEPOINT}  <||@
  Comment 378 11  <||@
  Comment 384 192 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 387 194 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 390 198 rdx|QWORD = SAR rdx|QWORD y: 2 size: QWORD  <||@
  Comment 394 200 rax|QWORD = SHR r11|QWORD y: 63 size: QWORD  <||@
  Comment 401 202 rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 404 204 rax|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 411 206 r10|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 417 208 rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 420 210 r11|QWORD = SUB (x: r11|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 423 212 rbx|DWORD = MOV r11|QWORD size: DWORD  <||@
  Comment 426 -1 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 429 -1 r10|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 432 214 JUMP ~[] destination: B23 -> B20  <||@
  Comment 432 block B20 loop 1 depth 1 header:114|LoopBegin  <||@
  Comment 432 168 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 432 170 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 435 172 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B24  <||@
  Comment 442 block B22 null  <||@
  Comment 442 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 442 218 MOV (x: [rdi|QWORD[.] + r8|DWORD * 2 + 16], y: rdx|DWORD) size: WORD  <||@
  Comment 448 220 MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 451 222 MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 455 224 r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 458 226 MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD  <||@
  Comment 462 228 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 471 12  <||@
  Comment 481 block B4 null  <||@
  Comment 481 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 481 232 CMP r8|DWORD y: 27 size: DWORD  <||@
  Comment 485 234 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B26  <||@
  Comment 491 block B5 null  <||@
  Comment 491 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 238 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 491 {Object[long[27]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 501 240 rax|QWORD = MOV [rcx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 506 242 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 509 244 r13|QWORD = SHL (x: rax|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 515 246 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 518 248 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 520 250 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:0]  <||@
  Comment 520 [rsi:0, rdi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 520 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 523 256 r13|QWORD = SAR r13|QWORD size: QWORD  <||@
  Comment 526 258 CMP (x: r13|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 529 260 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B25  <||@
  Comment 535 block B6 null  <||@
  Comment 535 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 535 264 r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 538 266 CMP (x: rbp|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 541 -1 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 544 268 BRANCH trueDestinationProbability: 0.9981619634555087 condition: > trueDestination: B6 -> B8 falseDestination: B6 -> B17  <||@
  Comment 555 block B9 null  <||@
  Comment 555 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 555 280 MOV [r15|QWORD + 668] y: -72723 size: DWORD  <||@
  Comment 566 282 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 573 284 DEOPT info [bci:46]  <||@
  Comment 573 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 578 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |-  |-  |-  |-  |-   <||@
  Comment 579 block B25 null  <||@
  Comment 579 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 579 -1 r9|DWORD = MOVE input: int[-70675|0xfffffffffffeebed]  <||@
  Comment 585 288 JUMP ~[] destination: B25 -> B27  <||@
  Comment 585 block B27 null  <||@
  Comment 585 302 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 585 304 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 592 306 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 599 308 DEOPT info [bci:0]  <||@
  Comment 599 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 604 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 605 block B24 null  <||@
  Comment 605 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 605 292 MOV [r15|QWORD + 668] y: -96283 size: DWORD  <||@
  Comment 616 294 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 623 296 DEOPT info [bci:223]  <||@
  Comment 623 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 628 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 223, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4  |5         |6          |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |-  |r8|DWORD  |rbx|DWORD  |-  |-   <||@
  Comment 629 block B26 null  <||@
  Comment 629 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 629 -1 r9|DWORD = MOVE input: int[-68635|0xfffffffffffef3e5]  <||@
  Comment 635 300 JUMP ~[] destination: B26 -> B27  <||@
  Comment 637 block B15 null  <||@
  Comment 637 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 637 312 MOV [r15|QWORD + 668] y: -96027 size: DWORD  <||@
  Comment 648 314 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 655 316 DEOPT info [bci:127]  <||@
  Comment 655 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 660 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 127, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4  |5          |6         |7          |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-  |-  |-  |r11|DWORD  |r8|DWORD  |rcx|DWORD  |-   <||@
  Comment 661 block B18 null  <||@
  Comment 661 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 661 320 MOV [r15|QWORD + 668] y: -81683 size: DWORD  <||@
  Comment 672 322 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 679 324 DEOPT info [bci:46]  <||@
  Comment 679 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 684 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |-  |-  |-  |-  |-   <||@
  Comment 685 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 685 4  <||@
  Comment 691 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 691 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9805[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)]"
  method "HotSpotCompilation-9805[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)]"
  date 1527005222307
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c1f4c0 448b560849c1e203493bc20f858f69befe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448bd24c8bd98b461c448b0cc50c000000418bd9ffcb8bf848c1e703bd000000804585c00f8587010000493beb0f8eb9000000418bcb8bc1ba67666666f7eac1fa028bc1c1e81f03d08bc2c1e003448bc241d1e04103c03bc10f849c0100002bc8448bc1448bdbe94d0000000f1f4000418bdaffc3418d503085c90f8444000000664289545f1041ffcb850586fac6fc8bc1ba67666666f7eac1fa028bc1c1e81f03d08bc2c1e003448bd241d1e24103c22bc8448bc1448bd38bca453bcb77b0e988010000664289545f10895e0c44895e10452bcb44894e14488b6c24104883c41885052efac6fcc5f877c348b96766666666666666498bc348f7e948c1ea02488bc248c1e0034c8bc249d1e04903c04d8bc34c2bc0418bc085c00f8444010000448bc34c8bda8bd8e9520000006690418beaffc58d53304d85db0f844900000066428954471041ffc88505c6f9c6fc498bc348f7e948c1fa02498bc348c1e83f4803d0488bc248c1e0034c8bd249d1e24903c24c2bd8418bdb4c8bda448bd5453bc877abe9a3000000664289544710896e0c44894610452bc844894e14488b6c24104883c418850569f9c6fcc5f877c34183f81b0f838a00000048b9f83652c0060000004a8b44c110418bc84c8be849d3e5498bc3489949f7fd49d1fd4c3bea0f8e2c0000004503d0483be84c8bd80f8f3dfeffffe9f1feffff41c7879c020000ede3feff4d89a7a8020000e8fc7ebefe9041b9edebfeff45898f9c0200004d89a7a8020000e8e27ebefe9041c7879c020000e587feff4d89a7a8020000e8ca7ebefe9041b9e5f3feffebcc41c7879c020000e588feff4d89a7a8020000e8aa7ebefe9041c7879c020000edc0feff4d89a7a8020000e8927ebefe90e8aeae02ff90e8887dbefe90f4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3df530d5 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 51 10 r11|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 54 14 rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 57 16 r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 57 [rax:0, rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 18 rbx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 70 20 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32a6d45f encoding: base: 0 shift: 3  <||@
  Comment 76 22 rbp|QWORD = MOVE input: long[2147483648|0x80000000]  <||@
  Comment 81 24 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 84 26 BRANCH trueDestinationProbability: 0.998972806401038 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 90 block B1 null  <||@
  Comment 90 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 30 CMP (x: rbp|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 93 32 BRANCH trueDestinationProbability: 0.9981619634555087 condition: > trueDestination: B1 -> B8 falseDestination: B1 -> B17  <||@
  Comment 99 block B8 null  <||@
  Comment 99 38 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 99 40 rcx|DWORD = MOV r11|QWORD size: DWORD  <||@
  Comment 102 42 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 104 44 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 109 46 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 111 50 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 114 52 rax|DWORD = SHR rcx|DWORD y: 31 size: DWORD  <||@
  Comment 119 54 rdx|DWORD = ADD (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 121 56 rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 126 58 r8|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 132 60 rax|DWORD = ADD (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 135 62 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 137 64 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 143 block B10 null  <||@
  Comment 143 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 143 68 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 145 -1 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 148 -1 r11|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 151 70 JUMP ~[] destination: B10 -> B11  <||@
  Comment 156 block B12 loop 0 depth 1 header:60|LoopBegin  <||@
  Comment 156 78 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 80 rbx|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 165 82 rdx|DWORD = LEA [r8|DWORD + 48] size: DWORD  <||@
  Comment 169 84 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 171 86 BRANCH trueDestinationProbability: 0.9832783043987645 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 177 block B14 loop 0 depth 1 header:60|LoopBegin  <||@
  Comment 177 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 90 MOV (x: [rdi|QWORD[.] + r11|DWORD * 2 + 16], y: rdx|DWORD) size: WORD  <||@
  Comment 183 92 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 186 94 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:148]  <||@
  Comment 186 [rsi:0, rdi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:396) [bci: 148, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4  |5          |6         |7          |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-  |-  |-  |r11|DWORD  |r8|DWORD  |rcx|DWORD  |-   <||@
  Comment 186 {infopoint: SAFEPOINT}  <||@
  Comment 186 11  <||@
  Comment 192 96 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 194 98 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 199 100 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 201 104 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 204 106 rax|DWORD = SHR rcx|DWORD y: 31 size: DWORD  <||@
  Comment 209 108 rdx|DWORD = ADD (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 211 110 rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 216 112 r10|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 222 114 rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 225 116 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 227 -1 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 230 -1 r10|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 233 118 JUMP ~[] destination: B14 -> B11  <||@
  Comment 233 block B11 loop 0 depth 1 header:60|LoopBegin  <||@
  Comment 233 72 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 233 -1 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 235 74 CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 238 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B15  <||@
  Comment 245 block B13 null  <||@
  Comment 245 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 122 MOV (x: [rdi|QWORD[.] + r11|DWORD * 2 + 16], y: rdx|DWORD) size: WORD  <||@
  Comment 251 124 MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 254 126 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 258 128 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 261 130 MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD  <||@
  Comment 265 132 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 274 12  <||@
  Comment 284 block B17 null  <||@
  Comment 284 138 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 284 140 rcx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667]  <||@
  Comment 294 142 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 297 144 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 300 148 rdx|QWORD = SHR rdx|QWORD y: 2 size: QWORD  <||@
  Comment 304 150 rax|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 311 152 r8|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 317 154 rax|QWORD = ADD (x: rax|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 320 156 r8|QWORD = SUB (x: r11|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 326 158 rax|DWORD = MOV r8|QWORD size: DWORD  <||@
  Comment 329 160 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 331 162 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 337 block B19 null  <||@
  Comment 337 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 337 -1 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 340 -1 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 343 -1 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 345 166 JUMP ~[] destination: B19 -> B20  <||@
  Comment 350 block B21 loop 1 depth 1 header:114|LoopBegin  <||@
  Comment 350 174 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 352 176 rbp|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 357 178 rdx|DWORD = LEA [rbx|DWORD + 48] size: DWORD  <||@
  Comment 360 180 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 363 182 BRANCH trueDestinationProbability: 0.1 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 369 block B23 loop 1 depth 1 header:114|LoopBegin  <||@
  Comment 369 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 369 186 MOV (x: [rdi|QWORD[.] + r8|DWORD * 2 + 16], y: rdx|DWORD) size: WORD  <||@
  Comment 375 188 r8|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 378 190 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:245]  <||@
  Comment 378 [rsi:0, rdi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:413) [bci: 245, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4  |5         |6          |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |-  |r8|DWORD  |rbx|DWORD  |-  |-   <||@
  Comment 378 {infopoint: SAFEPOINT}  <||@
  Comment 378 11  <||@
  Comment 384 192 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 387 194 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 390 198 rdx|QWORD = SAR rdx|QWORD y: 2 size: QWORD  <||@
  Comment 394 200 rax|QWORD = SHR r11|QWORD y: 63 size: QWORD  <||@
  Comment 401 202 rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 404 204 rax|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 411 206 r10|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 417 208 rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 420 210 r11|QWORD = SUB (x: r11|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 423 212 rbx|DWORD = MOV r11|QWORD size: DWORD  <||@
  Comment 426 -1 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 429 -1 r10|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 432 214 JUMP ~[] destination: B23 -> B20  <||@
  Comment 432 block B20 loop 1 depth 1 header:114|LoopBegin  <||@
  Comment 432 168 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 432 170 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 435 172 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B24  <||@
  Comment 442 block B22 null  <||@
  Comment 442 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 442 218 MOV (x: [rdi|QWORD[.] + r8|DWORD * 2 + 16], y: rdx|DWORD) size: WORD  <||@
  Comment 448 220 MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 451 222 MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 455 224 r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 458 226 MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD  <||@
  Comment 462 228 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 471 12  <||@
  Comment 481 block B4 null  <||@
  Comment 481 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 481 232 CMP r8|DWORD y: 27 size: DWORD  <||@
  Comment 485 234 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B26  <||@
  Comment 491 block B5 null  <||@
  Comment 491 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 238 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 491 {Object[long[27]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 501 240 rax|QWORD = MOV [rcx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 506 242 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 509 244 r13|QWORD = SHL (x: rax|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 515 246 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 518 248 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 520 250 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:0]  <||@
  Comment 520 [rsi:0, rdi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 520 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 523 256 r13|QWORD = SAR r13|QWORD size: QWORD  <||@
  Comment 526 258 CMP (x: r13|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 529 260 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B25  <||@
  Comment 535 block B6 null  <||@
  Comment 535 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 535 264 r10|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 538 266 CMP (x: rbp|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 541 -1 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 544 268 BRANCH trueDestinationProbability: 0.9981619634555087 condition: > trueDestination: B6 -> B8 falseDestination: B6 -> B17  <||@
  Comment 555 block B9 null  <||@
  Comment 555 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 555 280 MOV [r15|QWORD + 668] y: -72723 size: DWORD  <||@
  Comment 566 282 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 573 284 DEOPT info [bci:46]  <||@
  Comment 573 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 578 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |-  |-  |-  |-  |-   <||@
  Comment 579 block B25 null  <||@
  Comment 579 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 579 -1 r9|DWORD = MOVE input: int[-70675|0xfffffffffffeebed]  <||@
  Comment 585 288 JUMP ~[] destination: B25 -> B27  <||@
  Comment 585 block B27 null  <||@
  Comment 585 302 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 585 304 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 592 306 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 599 308 DEOPT info [bci:0]  <||@
  Comment 599 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 604 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:368) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 605 block B24 null  <||@
  Comment 605 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 605 292 MOV [r15|QWORD + 668] y: -96283 size: DWORD  <||@
  Comment 616 294 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 623 296 DEOPT info [bci:223]  <||@
  Comment 623 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 628 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:411) [bci: 223, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4  |5         |6          |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |-  |r8|DWORD  |rbx|DWORD  |-  |-   <||@
  Comment 629 block B26 null  <||@
  Comment 629 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 629 -1 r9|DWORD = MOVE input: int[-68635|0xfffffffffffef3e5]  <||@
  Comment 635 300 JUMP ~[] destination: B26 -> B27  <||@
  Comment 637 block B15 null  <||@
  Comment 637 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 637 312 MOV [r15|QWORD + 668] y: -96027 size: DWORD  <||@
  Comment 648 314 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 655 316 DEOPT info [bci:127]  <||@
  Comment 655 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 660 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:394) [bci: 127, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4  |5          |6         |7          |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-  |-  |-  |r11|DWORD  |r8|DWORD  |rcx|DWORD  |-   <||@
  Comment 661 block B18 null  <||@
  Comment 661 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 661 320 MOV [r15|QWORD + 668] y: -81683 size: DWORD  <||@
  Comment 672 322 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 679 324 DEOPT info [bci:46]  <||@
  Comment 679 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 684 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(FloatingDecimal.java:380) [bci: 46, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |r11|QWORD  |-  |-  |-  |-  |-  |-   <||@
  Comment 685 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 685 4  <||@
  Comment 691 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 691 5  <||@
  HexCodeFile>>> <|@
end_nmethod
