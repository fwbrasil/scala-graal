begin_compilation
  name " HotSpotCompilation-9396[java.lang.StringBuffer.toString()]"
  method "HotSpotCompilation-9396[java.lang.StringBuffer.toString()]"
  date 1527005208456
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j242 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j242  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/StringBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v430 v222 ?5 ?5 v767 v768 v769 v799 ?16 ?16 j150 v159 j164 v187 v213 j329 v418 j422 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j443 j242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:230) [bci: 12]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
=== Succesors ===
next: j149 
=== Usages ===
j151 j155 j171 i179 j188 j205 v234 v777 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v799 #next: j149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j149 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode.beginLockScope(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:232) [bci: 18]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j150 
=== Usages ===
v187 v775 j208 v222 v246 
=== Predecessor ===
j242 >@ <|@
instruction <@BeginLockScope|@org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:234) [bci: 24]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j243 
=== Usages ===
v776 
=== Predecessor ===
j149 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: j243  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: v33 
index: - 
=== Succesors ===
=== Usages ===
j243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v33 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:314) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v773 
=== Succesors ===
next: j153 
=== Usages ===
j154 j188 
=== Predecessor ===
j150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v773 #next: j153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j153 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:315) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
j154 j172 
=== Predecessor ===
j243 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid j154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
=== Inputs ===
x: j153 
y: j243 
=== Succesors ===
=== Usages ===
j155 i179 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j153 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid j155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 42]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
=== Inputs ===
x: j154 
y: j242 
=== Succesors ===
=== Usages ===
v226 v228 v230 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j154 y: j242  <|@  <|@
f <@~|@floating>@ <|@
tid j225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: -121
stableDimension: 0
stamp: i64 [-121] ⇊ffffffffffffff87 ⇈ffffffffffffff87
stampKind: i64
value: long[-121|0xffffffffffffff87]
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
x: j155 
y: j225 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j155 y: j225  <|@  <|@
f <@~|@floating>@ <|@
tid j68 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 i200 j698 v195 j704 v449 v245 v656 j646 j638 v395 v405 v410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j236 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 149]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j205 v317 v479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 109]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v234 v433 j628 j691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 v386 v175 v180 v201 a290 v425 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v3 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?16 ?5 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuffer.toString()>
duringCall: false
localsSize: 1
locksSize: 1
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 668
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a1 
monitorIds: v3 
=== Succesors ===
=== Usages ===
v222 v143 a290 i174 i179 v187 j188 i200 j208 v222 v244 v245 v246 v187 v819 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 monitorIds: v3  <|@  <|@
f <@~|@floating>@ <|@
tid j223 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j151 v228 j387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 136]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: 5
stableDimension: 0
stamp: i64 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i64
value: long[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 v388 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 97]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
j153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v157 #falseSuccessor: v156  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:322) [bci: 100]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:324) [bci: 120]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
object: a1 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@FastAcquireBiasedLock|@org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode>@ object: a1 #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 125]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j242 
y: j223 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j242 y: j223  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 142]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j151 
y: j227 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j151 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v160 
=== Succesors ===
trueSuccessor: v162 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v160 #trueSuccessor: v162 #falseSuccessor: v161  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B12" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 151]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j164 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 152]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v167 
=== Usages ===
v774 
=== Predecessor ===
v162 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j164 
index: - 
=== Succesors ===
=== Usages ===
i174 i179 j188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j164 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 172]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
x: j155 
y: j223 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j155 y: j223  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 178]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v228 
=== Succesors ===
trueSuccessor: v166 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
j164 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v228 #trueSuccessor: v166 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 181]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid j229 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 192]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: 768
stableDimension: 0
stamp: i64 [768] ⇊0000000000000300 ⇈0000000000000300
stampKind: i64
value: long[768|0x300]
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 196]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
x: j155 
y: j229 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j155 y: j229  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 202]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v168 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v169 #falseSuccessor: v168  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 205]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: i174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i174  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: 895
stableDimension: 0
stamp: i64 [895] ⇊000000000000037f ⇈000000000000037f
stampKind: i64
value: long[895|0x37f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j171 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64 [0 - 895] ⇈000000000000037f
=== Inputs ===
x: j242 
y: j231 
=== Succesors ===
=== Usages ===
j172 i174 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j242 y: j231  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:358) [bci: 235]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
=== Inputs ===
x: j153 
y: j171 
=== Succesors ===
=== Usages ===
i174 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j153 y: j171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i174 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1 
locks: a1 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 276]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
expectedValue: j171 
newValue: j172 
stateAfter: ?5 
=== Succesors ===
next: v178 
=== Usages ===
v175 
=== Predecessor ===
v169 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v774 expectedValue: j171 newValue: j172 stateAfter: ?5 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i174 
y: i11 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i174 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
i174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v176 #falseSuccessor: v177  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:370) [bci: 308]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
v176 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:363) [bci: 287]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:379) [bci: 330]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: i179 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i179 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1 
locks: a1 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 365]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
expectedValue: j242 
newValue: j154 
stateAfter: ?5 
=== Succesors ===
next: v183 
=== Usages ===
v180 
=== Predecessor ===
v168 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v774 expectedValue: j242 newValue: j154 stateAfter: ?5 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i179 
y: i11 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i179 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v182 
=== Usages ===
=== Predecessor ===
i179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v181 #falseSuccessor: v182  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:390) [bci: 397]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v184 v186 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v184 v186 #next: v187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1 
locks: a1 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 421]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: ?5 
stateDuring: ?5 
arguments: a1 j149 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?5 stateDuring: ?5 arguments: a1 j149 #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:383) [bci: 376]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 426]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j188 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j188 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1 
locks: a1 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 440]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
expectedValue: j242 
newValue: j243 
stateAfter: ?5 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v774 expectedValue: j242 newValue: j243 stateAfter: ?5 #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
j188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:419) [bci: 460]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" "B13" 
    successors "B15" "B20" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 86]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v189 v190 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v189 v190 #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j149 
index: - 
=== Succesors ===
=== Usages ===
v244 v245 v246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j149 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 113]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
x: j242 
y: j233 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j242 y: j233  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 119]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v191 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v191 #falseSuccessor: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 141]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 149]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j242 
y: j236 
=== Succesors ===
=== Usages ===
j208 v209 v244 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j242 y: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1 
locks: a1 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:258) [bci: 176]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v775 
value: j205 
stateAfter: ?5 
lastLocationAccess: - 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v775 value: j205 stateAfter: ?5 lastLocationAccess: - #next: v206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:261) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j208 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j208  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j150 
index: - 
=== Succesors ===
=== Usages ===
j208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j150 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j208 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1 
locks: a1 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:265) [bci: 199]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v776 
expectedValue: j205 
newValue: j149 
stateAfter: ?5 
=== Succesors ===
next: v212 
=== Usages ===
v209 j215 
=== Predecessor ===
v206 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v776 expectedValue: j205 newValue: j149 stateAfter: ?5 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 216]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j205 
y: j208 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j205 y: j208  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 222]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v210 
=== Usages ===
=== Predecessor ===
j208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v211 #falseSuccessor: v210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:267) [bci: 225]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:269) [bci: 245]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
object: a1 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@AcquiredCASLock|@org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode>@ object: a1 #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v213 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:272) [bci: 249]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j214 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:289) [bci: 273]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
j215 
=== Predecessor ===
v210 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid j215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 297]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
=== Inputs ===
x: j208 
y: j214 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j208 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 305]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089] ⇊fffffffffffff007 ⇈fffffffffffff007
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 312]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
x: j215 
y: j237 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j215 y: j237  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 318]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
j214 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 321]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1 
locks: a1 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 335]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v775 
value: j68 
stateAfter: ?5 
lastLocationAccess: - 
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v775 value: j68 stateAfter: ?5 lastLocationAccess: - #next: v252  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:297) [bci: 358]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v221  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v216 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B24" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 122]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1 
locks: a1 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:439) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v775 
value: j149 
stateAfter: ?5 
lastLocationAccess: - 
=== Succesors ===
next: j247 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v775 value: j149 stateAfter: ?5 lastLocationAccess: - #next: j247  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
i200 j247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:443) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
=== Succesors ===
next: v198 
=== Usages ===
v195 
=== Predecessor ===
v246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v777 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j247 
y: j68 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j247 y: j68  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v197 
falseSuccessor: v196 
=== Usages ===
=== Predecessor ===
j247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v197 #falseSuccessor: v196  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j199 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j199 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 74]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: i200 
=== Usages ===
i200 
=== Predecessor ===
v197 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: i200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i200 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1 
locks: a1 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
expectedValue: j68 
newValue: j199 
stateAfter: ?5 
=== Succesors ===
next: v204 
=== Usages ===
v201 
=== Predecessor ===
j199 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v777 expectedValue: j68 newValue: j199 stateAfter: ?5 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i200 
y: i11 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i200 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v202 
falseSuccessor: v203 
=== Usages ===
=== Predecessor ===
i200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v202 #falseSuccessor: v203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:452) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:448) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v250  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:456) [bci: 132]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 137]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v219 v221 v240 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v219 v221 v240 #next: v222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1 
locks: a1 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 383]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: ?5 
stateDuring: ?5 
arguments: a1 j149 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?5 stateDuring: ?5 arguments: a1 j149 #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" "B18" "B25" "B1" "B7" "B11" "B10" 
    successors "B27" "B93" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v250 v251 v252 v253 v254 v255 v256 v257 
=== Succesors ===
next: a758 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v250 v251 v252 v253 v254 v255 v256 v257 #next: a758  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a758 v53 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a758 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StringBuffer.toStringCache
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 1]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v767 
=== Succesors ===
next: v62 
=== Usages ===
v54 
=== Predecessor ===
v249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v767 #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 4]
stamp: void
=== Inputs ===
value: a758 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a758  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
a758 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v59 #falseSuccessor: v61  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a759 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a759  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a759 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 9]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v768 
=== Succesors ===
next: v819 
=== Usages ===
v771 v819 v770 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v768 #next: v819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a759 
=== Succesors ===
next: i760 
=== Usages ===
=== Predecessor ===
a759 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a759 #next: i760  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i760 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i760 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v769 
=== Succesors ===
next: v87 
=== Usages ===
j468 v81 v95 i118 a290 v316 i266 v275 
=== Predecessor ===
v819 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v769 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i760 
y: i11 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i760 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
i760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v86 #falseSuccessor: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23905
stableDimension: 0
stamp: i32 [-23905] ⇊00000000ffffa29f ⇈00000000ffffa29f
stampKind: i32
value: int[-23905|0xffffffffffffa29f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: j269 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j269  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j269 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j313 
=== Usages ===
v778 v779 
=== Predecessor ===
v82 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j313  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j269 
index: - 
=== Succesors ===
=== Usages ===
j313 v315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j269 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v778 
=== Succesors ===
next: j314 
=== Usages ===
j273 v780 v781 a289 v786 v782 v783 v784 v785 
=== Predecessor ===
j269 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v778 #next: j314  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j269 
index: - 
=== Succesors ===
=== Usages ===
j314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j269 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v779 
=== Succesors ===
next: v278 
=== Usages ===
v279 
=== Predecessor ===
j313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v779 #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i760 
y: i274 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i760 y: i274  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i266 a355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v275 
=== Succesors ===
trueSuccessor: v277 
falseSuccessor: v276 
=== Usages ===
=== Predecessor ===
j314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v275 #trueSuccessor: v277 #falseSuccessor: v276  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i760 
y: i265 
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i760 y: i265  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i266 
y: i297 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i266 y: i297  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i298 
y: i267 
=== Succesors ===
=== Usages ===
j272 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i298 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid j272 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i268 
=== Succesors ===
=== Usages ===
j273 v782 v783 v784 v785 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i268  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: i64
=== Inputs ===
x: j272 
y: j313 
=== Succesors ===
=== Usages ===
v279 v315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j272 y: j313  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j314 
y: j273 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j314 y: j273  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v284 #falseSuccessor: v283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v778 
value: j273 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v778 value: j273 stateAfter: - lastLocationAccess: - #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j272 
index: j313 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: j313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
address: v782 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v782 #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j272 
index: j313 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: j313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
address: v783 
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v783 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j272 
index: j313 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: j313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
address: v784 
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v784 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j272 
index: j313 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: j313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
address: v785 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v785 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v780 
value: i760 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v780 value: i760 stateAfter: - lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v781 
value: j236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v781 value: j236 stateAfter: - lastLocationAccess: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v786 
value: v456 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v786 value: v456 stateAfter: - lastLocationAccess: - #next: v288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a289 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j313 
=== Succesors ===
next: v291 
=== Usages ===
a294 
=== Predecessor ===
v288 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j313 #next: v291  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
a289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v280 v282 
=== Succesors ===
next: a290 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v280 v282 #next: a290  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a290 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a290 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v264 i760 i11 
=== Succesors ===
next: v293 
=== Usages ===
a294 
=== Predecessor ===
v281 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v264 i760 i11 #next: v293  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
a290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v292 
values: a289 a290 
=== Succesors ===
=== Usages ===
v803 a123 v772 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v292 values: a289 a290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v291 v293 
=== Succesors ===
next: v609 
=== Usages ===
a294 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v291 v293 #next: v609  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i761 
=== Usages ===
j610 j612 
=== Predecessor ===
v292 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i761  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a759 
=== Succesors ===
=== Usages ===
i761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i761 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v770 
=== Succesors ===
next: v482 
=== Usages ===
i118 v95 
=== Predecessor ===
v609 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v770 #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i761 
y: i760 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i761 y: i760  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v95 
trueValue: i761 
falseValue: i760 
=== Succesors ===
=== Usages ===
j469 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v95 trueValue: i761 falseValue: i760  <|@  <|@
f <@~|@floating>@ <|@
tid j469 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i118 
=== Succesors ===
=== Usages ===
j673 v803 j473 v479 v606 j655 j661 j665 j669 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i118  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j469 
y: j236 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j469 y: j236  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j673 j724 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j668 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j669 j721 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j636 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j637 j697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j664 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j665 j718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j319 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j703 j645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j660 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j661 j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 9]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j709 j653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j654 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j655 j710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v479 
=== Succesors ===
trueSuccessor: v480 
falseSuccessor: v481 
=== Usages ===
=== Predecessor ===
i761 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v479 #trueSuccessor: v480 #falseSuccessor: v481  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v499  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
v480 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid j655 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j469 
y: j654 
=== Succesors ===
=== Usages ===
v656 v658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j654  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j655 
y: j68 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j655 y: j68  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a294 
index: - 
=== Succesors ===
=== Usages ===
j612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a294 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v609 
address: v772 
=== Succesors ===
=== Usages ===
v804 v806 v808 v810 v812 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v609 address: v772  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a759 
=== Succesors ===
=== Usages ===
j610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a759  <|@  <|@
f <@~|@floating>@ <|@
tid j610 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v609 
address: v771 
=== Succesors ===
=== Usages ===
v805 v807 v809 v811 v813 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v609 address: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v656 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v656 #trueSuccessor: v483 #falseSuccessor: v484  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
v483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v484 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B92" 
    successors "B41" "B92" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j646 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v487 
values: j68 j653 
=== Succesors ===
=== Usages ===
v813 j653 v812 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v487 values: j68 j653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v486 
=== Succesors ===
next: v762 
=== Usages ===
v762 v491 v492 j646 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v486 #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j610 
index: j646 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j610 index: j646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v487 
address: v813 
=== Succesors ===
next: v742 
=== Usages ===
v742 
=== Predecessor ===
v487 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v487 address: v813 #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j612 
index: j646 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j612 index: j646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v812 
value: v762 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v812 value: v762 stateAfter: - lastLocationAccess: - #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid j653 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j646 
y: j40 
=== Succesors ===
=== Usages ===
j638 j646 v658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j646 y: j40  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j655 
y: j653 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j655 y: j653  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v658 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v493 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v658 #trueSuccessor: v491 #falseSuccessor: v493  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v487 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v487 #next: v497  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
v491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j638 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v496 
values: j68 j653 
=== Succesors ===
=== Usages ===
v811 j645 j629 v662 v810 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v496 values: j68 j653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v495 v497 
=== Succesors ===
next: v519 
=== Usages ===
j638 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v495 v497 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid j661 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j469 
y: j660 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j660  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j661 
y: j638 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j661 y: j638  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v518 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v518 #falseSuccessor: v517  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v763 
=== Usages ===
v763 
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j610 
index: j638 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j610 index: j638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v517 
address: v811 
=== Succesors ===
next: v740 
=== Usages ===
v740 
=== Predecessor ===
v517 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v517 address: v811 #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j612 
index: j638 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j612 index: j638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v810 
value: v763 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v810 value: v763 stateAfter: - lastLocationAccess: - #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j638 
y: j319 
=== Succesors ===
=== Usages ===
j629 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j638 y: j319  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j629 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v507 
values: j645 j638 
=== Succesors ===
=== Usages ===
v809 j637 j621 v666 v808 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v507 values: j645 j638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v506 v522 
=== Succesors ===
next: v525 
=== Usages ===
j629 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v506 v522 #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid j665 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j469 
y: j664 
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j664  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j665 
y: j629 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j665 y: j629  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v666 
=== Succesors ===
trueSuccessor: v524 
falseSuccessor: v523 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v666 #trueSuccessor: v524 #falseSuccessor: v523  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
v524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
v764 
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j610 
index: j629 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j610 index: j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v523 
address: v809 
=== Succesors ===
next: v738 
=== Usages ===
v738 
=== Predecessor ===
v523 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v523 address: v809 #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j612 
index: j629 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j612 index: j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v808 
value: v764 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v808 value: v764 stateAfter: - lastLocationAccess: - #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid j637 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j629 
y: j636 
=== Succesors ===
=== Usages ===
j621 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j629 y: j636  <|@  <|@
f <@*|@fixed>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
v738 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j621 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v511 
values: j637 j629 
=== Succesors ===
=== Usages ===
v807 j628 j613 v670 v806 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v511 values: j637 j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v510 v528 
=== Succesors ===
next: v531 
=== Usages ===
j621 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v510 v528 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j669 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j469 
y: j668 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j668  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j669 
y: j621 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j669 y: j621  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v670 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v670 #trueSuccessor: v530 #falseSuccessor: v529  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v765 
=== Usages ===
v765 
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j610 
index: j621 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j610 index: j621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v529 
address: v807 
=== Succesors ===
next: v736 
=== Usages ===
v736 
=== Predecessor ===
v529 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v529 address: v807 #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j612 
index: j621 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j612 index: j621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v806 
value: v765 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v806 value: v765 stateAfter: - lastLocationAccess: - #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid j628 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j621 
y: j233 
=== Succesors ===
=== Usages ===
j613 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j621 y: j233  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v736 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j613 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v514 
values: j628 j621 
=== Succesors ===
=== Usages ===
v805 v674 v804 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v514 values: j628 j621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v513 v534 
=== Succesors ===
next: v537 
=== Usages ===
j613 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v513 v534 #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid j673 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j469 
y: j672 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j672  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j673 
y: j613 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j673 y: j613  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v674 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v674 #trueSuccessor: v536 #falseSuccessor: v535  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i766 
=== Usages ===
i766 
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i766  <|@  <|@
f <@~|@floating>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j610 
index: j613 
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j610 index: j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i766 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v535 
address: v805 
=== Succesors ===
next: v734 
=== Usages ===
v734 
=== Predecessor ===
v535 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v535 address: v805 #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j612 
index: j613 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j612 index: j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v804 
value: i766 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
i766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v804 value: i766 stateAfter: - lastLocationAccess: - #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B36" "B53" "B52" 
    successors "B55" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v499 v516 v540 
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v499 v516 v540 #next: v677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v547 
=== Usages ===
j679 
=== Predecessor ===
v500 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i760 
=== Succesors ===
=== Usages ===
j473 v606 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i760  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j469 
y: j468 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j469 y: j468  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v606 
=== Succesors ===
trueSuccessor: v546 
falseSuccessor: v545 
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v606 #trueSuccessor: v546 #falseSuccessor: v545  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a294 
index: j469 
=== Succesors ===
=== Usages ===
j679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a294 index: j469  <|@  <|@
f <@~|@floating>@ <|@
tid j679 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v677 
address: v803 
=== Succesors ===
=== Usages ===
v814 v815 v816 v817 v818 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v677 address: v803  <|@  <|@
f <@~|@floating>@ <|@
tid j473 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j468 
y: j469 
=== Succesors ===
=== Usages ===
j724 j710 j715 j718 j721 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j468 y: j469  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j473 
y: j654 
=== Succesors ===
=== Usages ===
v711 v713 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j473 y: j654  <|@  <|@
f <@~|@floating>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j710 
y: j68 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j710 y: j68  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v711 
=== Succesors ===
trueSuccessor: v548 
falseSuccessor: v549 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v711 #trueSuccessor: v548 #falseSuccessor: v549  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
v549 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B72" 
    successors "B59" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j704 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v552 
values: j68 j709 
=== Succesors ===
=== Usages ===
v818 j709 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v552 values: j68 j709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v551 
=== Succesors ===
next: v752 
=== Usages ===
j704 v555 v556 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v551 #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j679 
index: j704 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v818 
value: v753 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v818 value: v753 stateAfter: - lastLocationAccess: - #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid j709 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j704 
y: j40 
=== Succesors ===
=== Usages ===
j698 j704 v713 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j704 y: j40  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j710 
y: j709 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j710 y: j709  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v713 
=== Succesors ===
trueSuccessor: v555 
falseSuccessor: v557 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v713 #trueSuccessor: v555 #falseSuccessor: v557  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v552 
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v552 #next: v561  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j698 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v560 
values: j68 j709 
=== Succesors ===
=== Usages ===
v817 j703 j692 v716 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v560 values: j68 j709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v559 v561 
=== Succesors ===
next: v582 
=== Usages ===
j698 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v559 v561 #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid j715 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j473 
y: j660 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j473 y: j660  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j715 
y: j698 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j715 y: j698  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v716 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v716 #trueSuccessor: v581 #falseSuccessor: v580  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j679 
index: j698 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j698  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v817 
value: v757 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v817 value: v757 stateAfter: - lastLocationAccess: - #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid j703 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j698 
y: j319 
=== Succesors ===
=== Usages ===
j692 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j698 y: j319  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
v751 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j692 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v571 
values: j703 j698 
=== Succesors ===
=== Usages ===
v816 j697 j686 v719 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v571 values: j703 j698  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v570 v585 
=== Succesors ===
next: v588 
=== Usages ===
j692 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v570 v585 #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid j718 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j473 
y: j664 
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j473 y: j664  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j718 
y: j692 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j718 y: j692  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v719 
=== Succesors ===
trueSuccessor: v587 
falseSuccessor: v586 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v719 #trueSuccessor: v587 #falseSuccessor: v586  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v591  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v587 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j679 
index: j692 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j692  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v816 
value: v756 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v816 value: v756 stateAfter: - lastLocationAccess: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid j697 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j692 
y: j636 
=== Succesors ===
=== Usages ===
j686 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j692 y: j636  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v749 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j686 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v574 
values: j697 j692 
=== Succesors ===
=== Usages ===
v815 j691 j680 v722 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v574 values: j697 j692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v573 v591 
=== Succesors ===
next: v594 
=== Usages ===
j686 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v573 v591 #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid j721 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j473 
y: j668 
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j473 y: j668  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j721 
y: j686 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j721 y: j686  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v722 
=== Succesors ===
trueSuccessor: v593 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v722 #trueSuccessor: v593 #falseSuccessor: v592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
v593 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j679 
index: j686 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j686  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v815 
value: v755 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v815 value: v755 stateAfter: - lastLocationAccess: - #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid j691 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j686 
y: j233 
=== Succesors ===
=== Usages ===
j680 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j686 y: j233  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
v747 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j680 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v577 
values: j691 j686 
=== Succesors ===
=== Usages ===
v814 v725 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v577 values: j691 j686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v576 v597 
=== Succesors ===
next: v600 
=== Usages ===
j680 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v576 v597 #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid j724 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j473 
y: j672 
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j473 y: j672  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j724 
y: j680 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j724 y: j680  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v725 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v598 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v725 #trueSuccessor: v599 #falseSuccessor: v598  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v603  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j679 
index: j680 
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j680  <|@  <|@
f <@~|@floating>@ <|@
tid i754 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v814 
value: i754 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v814 value: i754 stateAfter: - lastLocationAccess: - #next: v579  <|@  <|@
f <@*|@fixed>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v745 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v552 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v552  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B74" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B71" "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v563 v579 v603 
=== Succesors ===
next: a123 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v563 v579 v603 #next: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a294 
=== Succesors ===
next: v53 
=== Usages ===
a52 
=== Predecessor ===
v564 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a294 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid a52 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
op: Compress
stamp: n! -
=== Inputs ===
value: a123 
=== Succesors ===
=== Usages ===
v53 v384 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: StringBuffer.toStringCache
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v767 
value: a52 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j329 
=== Usages ===
=== Predecessor ===
a123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v767 value: a52 stateAfter: - lastLocationAccess: - #next: j329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v335 
=== Usages ===
j331 
=== Predecessor ===
v53 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j331 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j329 
y: i330 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j329 y: i330  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j331 
index: j334 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j331 index: j334  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v787 
value: i336 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j342 
=== Usages ===
=== Predecessor ===
j329 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v787 value: i336 stateAfter: - lastLocationAccess: - #next: j342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j342 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j359 
=== Usages ===
v788 v789 
=== Predecessor ===
v335 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j359  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j342 
index: - 
=== Succesors ===
=== Usages ===
j359 v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j342 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v788 
=== Succesors ===
next: j360 
=== Usages ===
j458 j365 v800 
=== Predecessor ===
j342 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v788 #next: j360  <|@  <|@
f <@~|@floating>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j342 
index: - 
=== Succesors ===
=== Usages ===
j360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j342 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v789 
=== Succesors ===
next: v350 
=== Usages ===
v347 
=== Predecessor ===
j359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v789 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid j457 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j359 
y: j457 
=== Succesors ===
=== Usages ===
v347 v361 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j359 y: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j360 
y: j458 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j360 y: j458  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v348 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
j360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v348 #falseSuccessor: v349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a355 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a355  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<StringBuffer.toString()>
duringCall: false
localsSize: 1
locksSize: 1
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 671
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a1 
monitorIds: v3 
=== Succesors ===
=== Usages ===
a355 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 monitorIds: v3  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i353 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a355 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?16 
arguments: v340 i353 i265 
=== Succesors ===
next: j356 
=== Usages ===
j356 
=== Predecessor ===
v348 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?16 arguments: v340 i353 i265 #next: j356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j356 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a355 
=== Succesors ===
next: v366 
=== Usages ===
j365 
=== Predecessor ===
a355 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a355 #next: v366  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
j356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v788 
value: j458 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v788 value: j458 stateAfter: - lastLocationAccess: - #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j359 
index: - 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j359 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v800 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v800 #next: v364  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
v358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v363 
values: j359 j356 
=== Succesors ===
=== Usages ===
v792 v791 a70 v801 v802 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v363 values: j359 j356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v364 v366 
=== Succesors ===
next: a70 
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v364 v366 #next: a70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j365 
=== Succesors ===
next: j376 
=== Usages ===
a75 
=== Predecessor ===
v363 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j365 #next: j376  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j372 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v371 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j372 
index: - 
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j372 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v790 
=== Succesors ===
next: v377 
=== Usages ===
v377 
=== Predecessor ===
a70 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v790 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v791 
value: j376 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
j376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v791 value: j376 stateAfter: - lastLocationAccess: - #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v792 
value: v462 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v792 value: v462 stateAfter: - lastLocationAccess: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
value: a52 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v801 value: a52 stateAfter: - lastLocationAccess: - #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v802 
value: i11 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a75 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v802 value: i11 stateAfter: - lastLocationAccess: - #next: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a70 
=== Succesors ===
next: v76 
=== Usages ===
v466 ?32 v465 
=== Predecessor ===
v386 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a70 #next: v76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j443 
=== Usages ===
=== Predecessor ===
a75 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:483) [bci: 17]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
=== Succesors ===
next: v391 
=== Usages ===
j387 v433 v795 v796 v797 v798 
=== Predecessor ===
v76 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v799 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid j387 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 50]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j443 
y: j223 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j443 y: j223  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 65]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j387 
y: j227 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j387 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 71]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v388 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v389 
=== Usages ===
=== Predecessor ===
j443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v388 #trueSuccessor: v390 #falseSuccessor: v389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v465  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
result: a75 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a75 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 101]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: j393 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j393 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.CurrentLockNode.currentLock(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 102]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j444 
=== Usages ===
v793 v418 i424 v430 
=== Predecessor ===
v389 >@ <|@
instruction <@CurrentLock|@org.graalvm.compiler.hotspot.nodes.CurrentLockNode>@ #next: j444  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j393 
index: - 
=== Succesors ===
=== Usages ===
j444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j393 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:504) [bci: 118]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v793 
=== Succesors ===
next: v398 
=== Usages ===
v395 i424 
=== Predecessor ===
j393 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v793 #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 140]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j444 
y: j68 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j444 y: j68  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 146]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v395 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
j444 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v395 #trueSuccessor: v397 #falseSuccessor: v396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B91" 
    xhandlers
    flags 
    probability 4585925428558828666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:509) [bci: 149]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B85" 
    xhandlers
    flags 
    probability 4588807732320345782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 170]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 24]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
x: j443 
y: j233 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j443 y: j233  <|@  <|@
tid a29 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?32 ?25 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a29 
materializedValue: a75 
=== Succesors ===
=== Usages ===
?25 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a29 materializedValue: a75  <|@  <|@
tid ?25 <|@
d <@d|@=== Debug Properties ===
bci: AFTER_BCI
code: ResolvedJavaMethodBytecode<StringBuffer.toString()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
rethrowException: false
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a29 
virtualObjectMappings: ?32 
=== Succesors ===
=== Usages ===
v449 v418 i424 v430 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a29 virtualObjectMappings: ?32  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v433 
=== Succesors ===
trueSuccessor: v399 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v433 #trueSuccessor: v399 #falseSuccessor: v400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4588721263207500268
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:578) [bci: 253]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: j422 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:518) [bci: 193]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: i424 
=== Usages ===
v794 
=== Predecessor ===
v399 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: i424  <|@  <|@
f <@~|@floating>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j422 
index: - 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i424 <|@
st <@st|@java.lang.StringBuffer.toString() [bci: -3]
stack: a29 
locals: - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 216]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v794 
expectedValue: j393 
newValue: j444 
stateAfter: ?25 
=== Succesors ===
next: v428 
=== Usages ===
v425 
=== Predecessor ===
j422 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v794 expectedValue: j393 newValue: j444 stateAfter: ?25 #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i11 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i424 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
i424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v426 #falseSuccessor: v427  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B91" 
    xhandlers
    flags 
    probability 4543890717545916256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:524) [bci: 248]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v430 <|@
st <@st|@java.lang.StringBuffer.toString() [bci: -3]
stack: a29 
locals: - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:526) [bci: 272]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: ?25 
stateDuring: - 
arguments: a1 j393 
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?25 stateDuring: - arguments: a1 j393 #next: v431  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B91" 
    xhandlers
    flags 
    probability 4588712702765328562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:520) [bci: 227]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:550) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: j445 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j443 
index: - 
=== Succesors ===
=== Usages ===
j445 v449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j443 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:552) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v795 
=== Succesors ===
next: j446 
=== Usages ===
j403 
=== Predecessor ===
v400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v795 #next: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
displacement: 38
scale: Times1
stamp: void*
=== Inputs ===
base: j443 
index: - 
=== Succesors ===
=== Usages ===
j446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j443 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_recursions
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v796 
=== Succesors ===
next: j402 
=== Usages ===
j404 
=== Predecessor ===
j445 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v796 #next: j402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j402 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:555) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
j403 
=== Predecessor ===
j446 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid j403 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 104]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: i64
=== Inputs ===
x: j402 
y: j445 
=== Succesors ===
=== Usages ===
j404 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j402 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid j404 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 109]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: i64
=== Inputs ===
x: j403 
y: j446 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j403 y: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 113]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j404 
y: j68 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j404 y: j68  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v405 
=== Succesors ===
trueSuccessor: v407 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
j402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v405 #trueSuccessor: v407 #falseSuccessor: v406  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:558) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: j447 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j447  <|@  <|@
f <@~|@floating>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
displacement: 54
scale: Times1
stamp: void*
=== Inputs ===
base: j443 
index: - 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j443 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_cxq
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:559) [bci: 137]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v797 
=== Succesors ===
next: j448 
=== Usages ===
j409 
=== Predecessor ===
v407 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v797 #next: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
displacement: 62
scale: Times1
stamp: void*
=== Inputs ===
base: j443 
index: - 
=== Succesors ===
=== Usages ===
j448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j443 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_EntryList
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:561) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v798 
=== Succesors ===
next: v416 
=== Usages ===
j409 
=== Predecessor ===
j447 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v798 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 175]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: i64
=== Inputs ===
x: j447 
y: j448 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j447 y: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 179]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j409 
y: j68 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j409 y: j68  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 185]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v410 
=== Succesors ===
trueSuccessor: v414 
falseSuccessor: v415 
=== Usages ===
=== Predecessor ===
j448 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v410 #trueSuccessor: v414 #falseSuccessor: v415  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 188]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 190]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
st <@st|@java.lang.StringBuffer.toString() [bci: -3]
stack: a29 
locals: - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:567) [bci: 200]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v795 
value: j68 
stateAfter: ?25 
lastLocationAccess: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v795 value: j68 stateAfter: ?25 lastLocationAccess: - #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    probability 4528697575604282463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4544454092639142389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v411 v413 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v411 v413 #next: v418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
st <@st|@java.lang.StringBuffer.toString() [bci: -3]
stack: a29 
locals: - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:575) [bci: 248]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: ?25 
stateDuring: - 
arguments: a1 j393 
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?25 stateDuring: - arguments: a1 j393 #next: v441  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 184]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B80" "B87" "B84" "B83" "B90" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v419 v421 v429 v431 v441 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v419 v421 v429 v431 v441 #next: v432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v466  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
result: a75 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a75 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v487 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v487  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -10003
stableDimension: 0
stamp: i32 [-10003] ⇊00000000ffffd8ed ⇈00000000ffffd8ed
stampKind: i32
value: int[-10003|0xffffffffffffd8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B28" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-23905 - -10003] ⇊00000000ffff8085
valueDescription: i32
=== Inputs ===
merge: v137 
values: i145 i147 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v137 values: i145 i147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v144 v146 
=== Succesors ===
next: v143 
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v144 v146 #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid a140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i141 
speculation: a140 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i141 speculation: a140  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j242 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j242  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/StringBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v430 v222 ?5 ?5 v767 v768 v769 v799 ?16 ?16 j150 v159 j164 v187 v213 j329 v418 j422 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
result [v0|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j443 j242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j242 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:230) [bci: 12]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
=== Succesors ===
next: j149 
=== Usages ===
j151 j155 j171 i179 j188 j205 v234 v777 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v799 #next: j149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j149 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode.beginLockScope(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:232) [bci: 18]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j150 
=== Usages ===
v187 v775 j208 v222 v246 
=== Predecessor ===
j242 >@ <|@
instruction <@BeginLockScope|@org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j150 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:234) [bci: 24]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j243 
=== Usages ===
v776 
=== Predecessor ===
j149 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: j243  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
result [v3|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: v33 
index: - 
=== Succesors ===
=== Usages ===
j243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v33 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j243 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:314) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v773 
=== Succesors ===
next: j153 
=== Usages ===
j154 j188 
=== Predecessor ===
j150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v773 #next: j153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j153 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:315) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
j154 j172 
=== Predecessor ===
j243 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid j154 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
=== Inputs ===
x: j153 
y: j243 
=== Succesors ===
=== Usages ===
j155 i179 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j153 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid j155 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 42]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
=== Inputs ===
x: j154 
y: j242 
=== Succesors ===
=== Usages ===
v226 v228 v230 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j154 y: j242  <|@  <|@
f <@~|@floating>@ <|@
tid j225 <|@
result long[-121|0xffffffffffffff87] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: -121
stableDimension: 0
stamp: i64 [-121] ⇊ffffffffffffff87 ⇈ffffffffffffff87
stampKind: i64
value: long[-121|0xffffffffffffff87]
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
x: j155 
y: j225 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j155 y: j225  <|@  <|@
f <@~|@floating>@ <|@
tid j68 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 i200 j698 v195 j704 v449 v245 v656 j646 j638 v395 v405 v410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j236 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 149]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j205 v317 v479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 109]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v234 v433 j628 j691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 v386 v175 v180 v201 a290 v425 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v3 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?16 ?5 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuffer.toString()>
duringCall: false
localsSize: 1
locksSize: 1
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 668
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a1 
monitorIds: v3 
=== Succesors ===
=== Usages ===
v222 v143 a290 i174 i179 v187 j188 i200 j208 v222 v244 v245 v246 v187 v819 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 monitorIds: v3  <|@  <|@
f <@~|@floating>@ <|@
tid j223 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j151 v228 j387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j227 <|@
result long[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 136]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: 5
stableDimension: 0
stamp: i64 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i64
value: long[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 v388 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 97]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
j153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v157 #falseSuccessor: v156  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@272ec84a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: r15|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = XOR (x: v5|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v6|QWORD y: -121 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:322) [bci: 100]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:324) [bci: 120]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
object: a1 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@FastAcquireBiasedLock|@org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode>@ object: a1 #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 125]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j242 
y: j223 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j242 y: j223  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 142]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j151 
y: j227 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j151 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v160 
=== Succesors ===
trueSuccessor: v162 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v160 #trueSuccessor: v162 #falseSuccessor: v161  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = AND v1|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B12" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 151]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j164 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j164 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 152]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v167 
=== Usages ===
v774 
=== Predecessor ===
v162 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
result [v0|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j164 
index: - 
=== Succesors ===
=== Usages ===
i174 i179 j188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j164 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 172]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
x: j155 
y: j223 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j155 y: j223  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 178]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v228 
=== Succesors ===
trueSuccessor: v166 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
j164 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v228 #trueSuccessor: v166 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v6|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 181]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid j229 <|@
result long[768|0x300] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 192]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: 768
stableDimension: 0
stamp: i64 [768] ⇊0000000000000300 ⇈0000000000000300
stampKind: i64
value: long[768|0x300]
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 196]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
x: j155 
y: j229 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j155 y: j229  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 202]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v168 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v169 #falseSuccessor: v168  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v6|QWORD y: 768 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 205]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: i174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i174  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
result long[895|0x37f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: 895
stableDimension: 0
stamp: i64 [895] ⇊000000000000037f ⇈000000000000037f
stampKind: i64
value: long[895|0x37f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j171 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64 [0 - 895] ⇈000000000000037f
=== Inputs ===
x: j242 
y: j231 
=== Succesors ===
=== Usages ===
j172 i174 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j242 y: j231  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:358) [bci: 235]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
=== Inputs ===
x: j153 
y: j171 
=== Succesors ===
=== Usages ===
i174 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j153 y: j171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i174 <|@
result INTERIOR_MATCH <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1: v0|QWORD[.] 
locks: a1: v0|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 276]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
expectedValue: j171 
newValue: j172 
stateAfter: ?5 
=== Succesors ===
next: v178 
=== Usages ===
v175 
=== Predecessor ===
v169 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v774 expectedValue: j171 newValue: j172 stateAfter: ?5 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i174 
y: i11 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i174 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
i174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v176 #falseSuccessor: v177  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND v1|QWORD y: 895 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = OR (x: r15|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:370) [bci: 308]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
v176 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:363) [bci: 287]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:379) [bci: 330]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: i179 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i179 <|@
result INTERIOR_MATCH <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1: v0|QWORD[.] 
locks: a1: v0|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 365]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
expectedValue: j242 
newValue: j154 
stateAfter: ?5 
=== Succesors ===
next: v183 
=== Usages ===
v180 
=== Predecessor ===
v168 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v774 expectedValue: j242 newValue: j154 stateAfter: ?5 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i179 
y: i11 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i179 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v182 
=== Usages ===
=== Predecessor ===
i179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v181 #falseSuccessor: v182  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v5|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:390) [bci: 397]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v184 v186 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v184 v186 #next: v187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1: v0|QWORD[.] 
locks: a1: v0|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 421]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: ?5 
stateDuring: ?5 
arguments: a1 j149 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?5 stateDuring: ?5 arguments: a1 j149 #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: v0|QWORD[.] 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:383) [bci: 376]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 426]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j188 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j188 <|@
result v10|QWORD <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1: v0|QWORD[.] 
locks: a1: v0|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 440]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
expectedValue: j242 
newValue: j243 
stateAfter: ?5 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v774 expectedValue: j242 newValue: j243 stateAfter: ?5 #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
j188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v4|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:419) [bci: 460]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" "B13" 
    successors "B15" "B20" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 86]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v189 v190 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v189 v190 #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
result [v2|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j149 
index: - 
=== Succesors ===
=== Usages ===
v244 v245 v246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j149 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 113]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
x: j242 
y: j233 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j242 y: j233  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 119]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v191 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v191 #falseSuccessor: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v1|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 141]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 149]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j242 
y: j236 
=== Succesors ===
=== Usages ===
j208 v209 v244 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j242 y: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1: v0|QWORD[.] 
locks: a1: v0|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:258) [bci: 176]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v775 
value: j205 
stateAfter: ?5 
lastLocationAccess: - 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v775 value: j205 stateAfter: ?5 lastLocationAccess: - #next: v206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:261) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j208 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j208  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
result [v0|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j150 
index: - 
=== Succesors ===
=== Usages ===
j208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j150 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j208 <|@
result v12|QWORD <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1: v0|QWORD[.] 
locks: a1: v0|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:265) [bci: 199]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v776 
expectedValue: j205 
newValue: j149 
stateAfter: ?5 
=== Succesors ===
next: v212 
=== Usages ===
v209 j215 
=== Predecessor ===
v206 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v776 expectedValue: j205 newValue: j149 stateAfter: ?5 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 216]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j205 
y: j208 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j205 y: j208  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 222]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v210 
=== Usages ===
=== Predecessor ===
j208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v211 #falseSuccessor: v210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = OR v1|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v2|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:267) [bci: 225]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:269) [bci: 245]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
object: a1 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@AcquiredCASLock|@org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode>@ object: a1 #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v213 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:272) [bci: 249]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j214 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j214 <|@
result rsp|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:289) [bci: 273]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
j215 
=== Predecessor ===
v210 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid j215 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 297]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: i64
=== Inputs ===
x: j208 
y: j214 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j208 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
result long[-4089|0xfffffffffffff007] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 305]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089] ⇊fffffffffffff007 ⇈fffffffffffff007
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 312]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
x: j215 
y: j237 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j215 y: j237  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 318]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
j214 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SUB (x: v12|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v13|QWORD y: -4089 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 321]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1: v0|QWORD[.] 
locks: a1: v0|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 335]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v775 
value: j68 
stateAfter: ?5 
lastLocationAccess: - 
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v775 value: j68 stateAfter: ?5 lastLocationAccess: - #next: v252  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:297) [bci: 358]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v221  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v216 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B24" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 122]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1: v0|QWORD[.] 
locks: a1: v0|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:439) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v775 
value: j149 
stateAfter: ?5 
lastLocationAccess: - 
=== Succesors ===
next: j247 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v775 value: j149 stateAfter: ?5 lastLocationAccess: - #next: j247  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
result [v1|QWORD + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
i200 j247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j247 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:443) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
=== Succesors ===
next: v198 
=== Usages ===
v195 
=== Predecessor ===
v246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v777 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j247 
y: j68 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j247 y: j68  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v197 
falseSuccessor: v196 
=== Usages ===
=== Predecessor ===
j247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v197 #falseSuccessor: v196  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j199 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j199 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 74]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: i200 
=== Usages ===
i200 
=== Predecessor ===
v197 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: i200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i200 <|@
result INTERIOR_MATCH <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1: v0|QWORD[.] 
locks: a1: v0|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
expectedValue: j68 
newValue: j199 
stateAfter: ?5 
=== Succesors ===
next: v204 
=== Usages ===
v201 
=== Predecessor ===
j199 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v777 expectedValue: j68 newValue: j199 stateAfter: ?5 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i200 
y: i11 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i200 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v202 
falseSuccessor: v203 
=== Usages ===
=== Predecessor ===
i200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v202 #falseSuccessor: v203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:452) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:448) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v250  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:456) [bci: 132]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 137]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v219 v221 v240 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v219 v221 v240 #next: v222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: a1: v0|QWORD[.] 
locks: a1: v0|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 383]
at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: ?5 
stateDuring: ?5 
arguments: a1 j149 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?5 stateDuring: ?5 arguments: a1 j149 #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: v0|QWORD[.] 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" "B18" "B25" "B1" "B7" "B11" "B10" 
    successors "B27" "B93" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v250 v251 v252 v253 v254 v255 v256 v257 
=== Succesors ===
next: a758 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v250 v251 v252 v253 v254 v255 v256 v257 #next: a758  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a758 v53 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a758 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StringBuffer.toStringCache
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 1]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v767 
=== Succesors ===
next: v62 
=== Usages ===
v54 
=== Predecessor ===
v249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v767 #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 4]
stamp: void
=== Inputs ===
value: a758 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a758  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
a758 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v59 #falseSuccessor: v61  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a759 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a759  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a759 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 9]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v768 
=== Succesors ===
next: v819 
=== Usages ===
v771 v819 v770 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v768 #next: v819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a759 
=== Succesors ===
next: i760 
=== Usages ===
=== Predecessor ===
a759 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a759 #next: i760  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i760 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i760 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v769 
=== Succesors ===
next: v87 
=== Usages ===
j468 v81 v95 i118 a290 v316 i266 v275 
=== Predecessor ===
v819 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v769 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i760 
y: i11 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i760 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
i760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v86 #falseSuccessor: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: v0|QWORD[.] 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v15|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
result int[-23905|0xffffffffffffa29f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23905
stableDimension: 0
stamp: i32 [-23905] ⇊00000000ffffa29f ⇈00000000ffffa29f
stampKind: i32
value: int[-23905|0xffffffffffffa29f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23905|0xffffffffffffa29f]] destination: B28 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: j269 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j269  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j269 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j313 
=== Usages ===
v778 v779 
=== Predecessor ===
v82 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j313  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j269 
index: - 
=== Succesors ===
=== Usages ===
j313 v315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j269 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j313 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v778 
=== Succesors ===
next: j314 
=== Usages ===
j273 v780 v781 a289 v786 v782 v783 v784 v785 
=== Predecessor ===
j269 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v778 #next: j314  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j269 
index: - 
=== Succesors ===
=== Usages ===
j314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j269 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j314 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v779 
=== Succesors ===
next: v278 
=== Usages ===
v279 
=== Predecessor ===
j313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v779 #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i760 
y: i274 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i760 y: i274  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i266 a355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v275 
=== Succesors ===
trueSuccessor: v277 
falseSuccessor: v276 
=== Usages ===
=== Predecessor ===
j314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v275 #trueSuccessor: v277 #falseSuccessor: v276  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i760 
y: i265 
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i760 y: i265  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i266 
y: i297 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i266 y: i297  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i298 
y: i267 
=== Succesors ===
=== Usages ===
j272 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i298 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid j272 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i268 
=== Succesors ===
=== Usages ===
j273 v782 v783 v784 v785 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i268  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: i64
=== Inputs ===
x: j272 
y: j313 
=== Succesors ===
=== Usages ===
v279 v315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j272 y: j313  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j314 
y: j273 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j314 y: j273  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v284 #falseSuccessor: v283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA [v19|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = AND v20|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = ADD (x: v22|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v778 
value: j273 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v778 value: j273 stateAfter: - lastLocationAccess: - #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
result [v22|QWORD + v17|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j272 
index: j313 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: j313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
address: v782 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v782 #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
result [v22|QWORD + v17|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j272 
index: j313 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: j313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
address: v783 
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v783 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
result [v22|QWORD + v17|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j272 
index: j313 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: j313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
address: v784 
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v784 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
result [v22|QWORD + v17|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j272 
index: j313 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: j313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
address: v785 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v785 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
result [v17|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v780 
value: i760 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v780 value: i760 stateAfter: - lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
result [v17|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v781 
value: j236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v781 value: j236 stateAfter: - lastLocationAccess: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
result [v17|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v786 
value: v456 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v786 value: v456 stateAfter: - lastLocationAccess: - #next: v288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a289 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a289 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j313 
=== Succesors ===
next: v291 
=== Usages ===
a294 
=== Predecessor ===
v288 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j313 #next: v291  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
a289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v22|QWORD + v17|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v22|QWORD + v17|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v22|QWORD + v17|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v22|QWORD + v17|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v280 v282 
=== Succesors ===
next: a290 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v280 v282 #next: a290  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a290 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a290 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v264 i760 i11 
=== Succesors ===
next: v293 
=== Usages ===
a294 
=== Predecessor ===
v281 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v264 i760 i11 #next: v293  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
a290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: v0|QWORD[.] 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a294 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v292 
values: a289 a290 
=== Succesors ===
=== Usages ===
v803 a123 v772 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v292 values: a289 a290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v291 v293 
=== Succesors ===
next: v609 
=== Usages ===
a294 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v291 v293 #next: v609  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i761 
=== Usages ===
j610 j612 
=== Predecessor ===
v292 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i761  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a759 
=== Succesors ===
=== Usages ===
i761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i761 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v770 
=== Succesors ===
next: v482 
=== Usages ===
i118 v95 
=== Predecessor ===
v609 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v770 #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i761 
y: i760 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i761 y: i760  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v95 
trueValue: i761 
falseValue: i760 
=== Succesors ===
=== Usages ===
j469 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v95 trueValue: i761 falseValue: i760  <|@  <|@
f <@~|@floating>@ <|@
tid j469 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i118 
=== Succesors ===
=== Usages ===
j673 v803 j473 v479 v606 j655 j661 j665 j669 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i118  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j469 
y: j236 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j469 y: j236  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j673 j724 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j668 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j669 j721 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j636 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j637 j697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j664 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j665 j718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j319 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j703 j645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j660 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j661 j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j40 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 9]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j709 j653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j654 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j655 j710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v479 
=== Succesors ===
trueSuccessor: v480 
falseSuccessor: v481 
=== Usages ===
=== Predecessor ===
i761 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v479 #trueSuccessor: v480 #falseSuccessor: v481  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = CMOVE (falseValue: v16|DWORD, ~trueValue: v28|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v30|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v499  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
v480 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid j655 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j469 
y: j654 
=== Succesors ===
=== Usages ===
v656 v658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j654  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j655 
y: j68 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j655 y: j68  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
result [v27|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a294 
index: - 
=== Succesors ===
=== Usages ===
j612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a294 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v609 
address: v772 
=== Succesors ===
=== Usages ===
v804 v806 v808 v810 v812 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v609 address: v772  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
result [v15|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a759 
=== Succesors ===
=== Usages ===
j610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a759  <|@  <|@
f <@~|@floating>@ <|@
tid j610 <|@
result v33|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v609 
address: v771 
=== Succesors ===
=== Usages ===
v805 v807 v809 v811 v813 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v609 address: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v656 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v656 #trueSuccessor: v483 #falseSuccessor: v484  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v30|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = LEA [v27|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = LEA [v15|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
v483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v484 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B92" 
    successors "B41" "B92" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j646 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v487 
values: j68 j653 
=== Succesors ===
=== Usages ===
v813 j653 v812 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v487 values: j68 j653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v486 
=== Succesors ===
next: v762 
=== Usages ===
v762 v491 v492 j646 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v486 #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v813 <|@
result [v33|QWORD[*] + v34|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j610 
index: j646 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j610 index: j646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
result v35|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v487 
address: v813 
=== Succesors ===
next: v742 
=== Usages ===
v742 
=== Predecessor ===
v487 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v487 address: v813 #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
result [v32|QWORD[.] + v34|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j612 
index: j646 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j612 index: j646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v812 
value: v762 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v812 value: v762 stateAfter: - lastLocationAccess: - #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid j653 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j646 
y: j40 
=== Succesors ===
=== Usages ===
j638 j646 v658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j646 y: j40  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j655 
y: j653 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j655 y: j653  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v658 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v493 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v658 #trueSuccessor: v491 #falseSuccessor: v493  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|V256_WORD = H [v33|QWORD[*] + v34|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v34|QWORD * 2], input: v35|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v34|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v487 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v487 #next: v497  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
v491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j638 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v496 
values: j68 j653 
=== Succesors ===
=== Usages ===
v811 j645 j629 v662 v810 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v496 values: j68 j653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v495 v497 
=== Succesors ===
next: v519 
=== Usages ===
j638 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v495 v497 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid j661 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j469 
y: j660 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j660  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j661 
y: j638 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j661 y: j638  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v518 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v518 #falseSuccessor: v517  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v763 
=== Usages ===
v763 
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v811 <|@
result [v33|QWORD[*] + v37|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j610 
index: j638 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j610 index: j638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
result v39|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v517 
address: v811 
=== Succesors ===
next: v740 
=== Usages ===
v740 
=== Predecessor ===
v517 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v517 address: v811 #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
result [v32|QWORD[.] + v37|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j612 
index: j638 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j612 index: j638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v810 
value: v763 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v810 value: v763 stateAfter: - lastLocationAccess: - #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j638 
y: j319 
=== Succesors ===
=== Usages ===
j629 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j638 y: j319  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V128_WORD = H [v33|QWORD[*] + v37|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v37|QWORD * 2], input: v39|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j629 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v507 
values: j645 j638 
=== Succesors ===
=== Usages ===
v809 j637 j621 v666 v808 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v507 values: j645 j638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v506 v522 
=== Succesors ===
next: v525 
=== Usages ===
j629 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v506 v522 #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid j665 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j469 
y: j664 
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j664  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j665 
y: j629 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j665 y: j629  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v666 
=== Succesors ===
trueSuccessor: v524 
falseSuccessor: v523 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v666 #trueSuccessor: v524 #falseSuccessor: v523  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v30|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
v524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
v764 
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
result [v33|QWORD[*] + v41|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j610 
index: j629 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j610 index: j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v764 <|@
result v43|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v523 
address: v809 
=== Succesors ===
next: v738 
=== Usages ===
v738 
=== Predecessor ===
v523 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v523 address: v809 #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
result [v32|QWORD[.] + v41|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j612 
index: j629 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j612 index: j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v808 
value: v764 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v808 value: v764 stateAfter: - lastLocationAccess: - #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid j637 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j629 
y: j636 
=== Succesors ===
=== Usages ===
j621 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j629 y: j636  <|@  <|@
f <@*|@fixed>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
v738 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V64_WORD = H [v33|QWORD[*] + v41|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v41|QWORD * 2], input: v43|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j621 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v511 
values: j637 j629 
=== Succesors ===
=== Usages ===
v807 j628 j613 v670 v806 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v511 values: j637 j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v510 v528 
=== Succesors ===
next: v531 
=== Usages ===
j621 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v510 v528 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j669 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j469 
y: j668 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j668  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j669 
y: j621 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j669 y: j621  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v670 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v670 #trueSuccessor: v530 #falseSuccessor: v529  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v30|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v765 
=== Usages ===
v765 
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
result [v33|QWORD[*] + v45|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j610 
index: j621 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j610 index: j621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
result v47|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v529 
address: v807 
=== Succesors ===
next: v736 
=== Usages ===
v736 
=== Predecessor ===
v529 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v529 address: v807 #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v806 <|@
result [v32|QWORD[.] + v45|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j612 
index: j621 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j612 index: j621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v806 
value: v765 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v806 value: v765 stateAfter: - lastLocationAccess: - #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid j628 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j621 
y: j233 
=== Succesors ===
=== Usages ===
j613 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j621 y: j233  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v736 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V32_WORD = H [v33|QWORD[*] + v45|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v45|QWORD * 2], input: v47|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j613 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v514 
values: j628 j621 
=== Succesors ===
=== Usages ===
v805 v674 v804 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v514 values: j628 j621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v513 v534 
=== Succesors ===
next: v537 
=== Usages ===
j613 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v513 v534 #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid j673 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j469 
y: j672 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j672  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j673 
y: j613 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j673 y: j613  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v674 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v674 #trueSuccessor: v536 #falseSuccessor: v535  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = DEC v30|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i766 
=== Usages ===
i766 
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i766  <|@  <|@
f <@~|@floating>@ <|@
tid v805 <|@
result [v33|QWORD[*] + v49|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j610 
index: j613 
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j610 index: j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i766 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v535 
address: v805 
=== Succesors ===
next: v734 
=== Usages ===
v734 
=== Predecessor ===
v535 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v535 address: v805 #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
result [v32|QWORD[.] + v49|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j612 
index: j613 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j612 index: j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v804 
value: i766 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
i766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v804 value: i766 stateAfter: - lastLocationAccess: - #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVSX [v33|QWORD[*] + v49|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD[.] + v49|QWORD * 2], y: v51|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B36" "B53" "B52" 
    successors "B55" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v499 v516 v540 
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v499 v516 v540 #next: v677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v547 
=== Usages ===
j679 
=== Predecessor ===
v500 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid j468 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i760 
=== Succesors ===
=== Usages ===
j473 v606 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i760  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j469 
y: j468 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j469 y: j468  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v606 
=== Succesors ===
trueSuccessor: v546 
falseSuccessor: v545 
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v606 #trueSuccessor: v546 #falseSuccessor: v545  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid v803 <|@
result [v27|QWORD[.] + v30|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a294 
index: j469 
=== Succesors ===
=== Usages ===
j679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a294 index: j469  <|@  <|@
f <@~|@floating>@ <|@
tid j679 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v677 
address: v803 
=== Succesors ===
=== Usages ===
v814 v815 v816 v817 v818 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v677 address: v803  <|@  <|@
f <@~|@floating>@ <|@
tid j473 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j468 
y: j469 
=== Succesors ===
=== Usages ===
j724 j710 j715 j718 j721 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j468 y: j469  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j473 
y: j654 
=== Succesors ===
=== Usages ===
v711 v713 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j473 y: j654  <|@  <|@
f <@~|@floating>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j710 
y: j68 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j710 y: j68  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v711 
=== Succesors ===
trueSuccessor: v548 
falseSuccessor: v549 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v711 #trueSuccessor: v548 #falseSuccessor: v549  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = LEA [v27|QWORD[.] + v30|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = SUB (x: v52|QWORD, ~y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v54|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
result v56|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
v549 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B72" 
    successors "B59" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j704 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v552 
values: j68 j709 
=== Succesors ===
=== Usages ===
v818 j709 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v552 values: j68 j709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v551 
=== Succesors ===
next: v752 
=== Usages ===
j704 v555 v556 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v551 #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
result [v53|QWORD[.] + v57|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j679 
index: j704 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v818 
value: v753 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v818 value: v753 stateAfter: - lastLocationAccess: - #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid j709 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j704 
y: j40 
=== Succesors ===
=== Usages ===
j698 j704 v713 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j704 y: j40  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j710 
y: j709 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j710 y: j709  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v713 
=== Succesors ===
trueSuccessor: v555 
falseSuccessor: v557 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v713 #trueSuccessor: v555 #falseSuccessor: v557  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v57|QWORD * 2], input: v56|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v57|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v552 
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v552 #next: v561  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j698 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v560 
values: j68 j709 
=== Succesors ===
=== Usages ===
v817 j703 j692 v716 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v560 values: j68 j709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v559 v561 
=== Succesors ===
next: v582 
=== Usages ===
j698 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v559 v561 #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid j715 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j473 
y: j660 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j473 y: j660  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j715 
y: j698 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j715 y: j698  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v716 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v716 #trueSuccessor: v581 #falseSuccessor: v580  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v54|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
result [v53|QWORD[.] + v59|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j679 
index: j698 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j698  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
result v61|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v817 
value: v757 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v817 value: v757 stateAfter: - lastLocationAccess: - #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid j703 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j698 
y: j319 
=== Succesors ===
=== Usages ===
j692 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j698 y: j319  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
v751 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v59|QWORD * 2], input: v61|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j692 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v571 
values: j703 j698 
=== Succesors ===
=== Usages ===
v816 j697 j686 v719 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v571 values: j703 j698  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v570 v585 
=== Succesors ===
next: v588 
=== Usages ===
j692 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v570 v585 #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid j718 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j473 
y: j664 
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j473 y: j664  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j718 
y: j692 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j718 y: j692  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v719 
=== Succesors ===
trueSuccessor: v587 
falseSuccessor: v586 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v719 #trueSuccessor: v587 #falseSuccessor: v586  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v54|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v591  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v587 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
result [v53|QWORD[.] + v63|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j679 
index: j692 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j692  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
result v65|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v816 
value: v756 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v816 value: v756 stateAfter: - lastLocationAccess: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid j697 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j692 
y: j636 
=== Succesors ===
=== Usages ===
j686 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j692 y: j636  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v749 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v63|QWORD * 2], input: v65|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j686 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v574 
values: j697 j692 
=== Succesors ===
=== Usages ===
v815 j691 j680 v722 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v574 values: j697 j692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v573 v591 
=== Succesors ===
next: v594 
=== Usages ===
j686 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v573 v591 #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid j721 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j473 
y: j668 
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j473 y: j668  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j721 
y: j686 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j721 y: j686  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v722 
=== Succesors ===
trueSuccessor: v593 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v722 #trueSuccessor: v593 #falseSuccessor: v592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v54|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
v593 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid v815 <|@
result [v53|QWORD[.] + v67|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j679 
index: j686 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j686  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
result v69|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v815 
value: v755 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v815 value: v755 stateAfter: - lastLocationAccess: - #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid j691 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j686 
y: j233 
=== Succesors ===
=== Usages ===
j680 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j686 y: j233  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
v747 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v67|QWORD * 2], input: v69|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j680 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v577 
values: j691 j686 
=== Succesors ===
=== Usages ===
v814 v725 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v577 values: j691 j686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v576 v597 
=== Succesors ===
next: v600 
=== Usages ===
j680 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v576 v597 #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid j724 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j473 
y: j672 
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j473 y: j672  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j724 
y: j680 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j724 y: j680  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v725 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v598 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v725 #trueSuccessor: v599 #falseSuccessor: v598  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v603  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
result [v53|QWORD[.] + v71|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j679 
index: j680 
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j680  <|@  <|@
f <@~|@floating>@ <|@
tid i754 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v814 
value: i754 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v814 value: i754 stateAfter: - lastLocationAccess: - #next: v579  <|@  <|@
f <@*|@fixed>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v745 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v71|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v552 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v552  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B72 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B74" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B71" "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v563 v579 v603 
=== Succesors ===
next: a123 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v563 v579 v603 #next: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a123 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a294 
=== Succesors ===
next: v53 
=== Usages ===
a52 
=== Predecessor ===
v564 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a294 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid a52 <|@
result v73|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
op: Compress
stamp: n! -
=== Inputs ===
value: a123 
=== Succesors ===
=== Usages ===
v53 v384 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: StringBuffer.toStringCache
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v767 
value: a52 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j329 
=== Usages ===
=== Predecessor ===
a123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v767 value: a52 stateAfter: - lastLocationAccess: - #next: j329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j329 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v335 
=== Usages ===
j331 
=== Predecessor ===
v53 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j331 <|@
result v74|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j329 
y: i330 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j329 y: i330  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
result [v74|QWORD[*] + v75|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j331 
index: j334 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j331 index: j334  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v787 
value: i336 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j342 
=== Usages ===
=== Predecessor ===
j329 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v787 value: i336 stateAfter: - lastLocationAccess: - #next: j342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j342 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j359 
=== Usages ===
v788 v789 
=== Predecessor ===
v335 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j359  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j342 
index: - 
=== Succesors ===
=== Usages ===
j359 v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j342 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j359 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v788 
=== Succesors ===
next: j360 
=== Usages ===
j458 j365 v800 
=== Predecessor ===
j342 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v788 #next: j360  <|@  <|@
f <@~|@floating>@ <|@
tid v789 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j342 
index: - 
=== Succesors ===
=== Usages ===
j360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j342 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j360 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v789 
=== Succesors ===
next: v350 
=== Usages ===
v347 
=== Predecessor ===
j359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v789 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid j457 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j359 
y: j457 
=== Succesors ===
=== Usages ===
v347 v361 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j359 y: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j360 
y: j458 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j360 y: j458  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v348 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
j360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v348 #falseSuccessor: v349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[.] = COMPRESSPOINTER (input: v27|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@70ac0422 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v74|QWORD[*] + v75|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v76|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a355 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a355  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<StringBuffer.toString()>
duringCall: false
localsSize: 1
locksSize: 1
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 20]
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 671
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a1 
monitorIds: v3 
=== Succesors ===
=== Usages ===
a355 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 monitorIds: v3  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i353 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a355 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?16 
arguments: v340 i353 i265 
=== Succesors ===
next: j356 
=== Usages ===
j356 
=== Predecessor ===
v348 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?16 arguments: v340 i353 i265 #next: j356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j356 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a355 
=== Succesors ===
next: v366 
=== Usages ===
j365 
=== Predecessor ===
a355 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a355 #next: v366  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
j356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v78|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 23]
locals: v0|QWORD[.] 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v788 
value: j458 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v788 value: j458 stateAfter: - lastLocationAccess: - #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
result [v76|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j359 
index: - 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j359 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v800 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v800 #next: v364  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
v358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v76|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j365 <|@
result v80|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v363 
values: j359 j356 
=== Succesors ===
=== Usages ===
v792 v791 a70 v801 v802 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v363 values: j359 j356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v364 v366 
=== Succesors ===
next: a70 
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v364 v366 #next: a70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j365 
=== Succesors ===
next: j376 
=== Usages ===
a75 
=== Predecessor ===
v363 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j365 #next: j376  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j372 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v371 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
result [v82|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j372 
index: - 
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j372 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v790 
=== Succesors ===
next: v377 
=== Usages ===
v377 
=== Predecessor ===
a70 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v790 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
result [v80|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v791 
value: j376 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
j376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v791 value: j376 stateAfter: - lastLocationAccess: - #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v792 <|@
result [v80|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v792 
value: v462 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v792 value: v462 stateAfter: - lastLocationAccess: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
result [v80|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
value: a52 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v801 value: a52 stateAfter: - lastLocationAccess: - #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
result [v80|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v802 
value: i11 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a75 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v802 value: i11 stateAfter: - lastLocationAccess: - #next: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a70 
=== Succesors ===
next: v76 
=== Usages ===
v466 ?32 v465 
=== Predecessor ===
v386 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a70 #next: v76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j443 
=== Usages ===
=== Predecessor ===
a75 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j443 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:483) [bci: 17]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
=== Succesors ===
next: v391 
=== Usages ===
j387 v433 v795 v796 v797 v798 
=== Predecessor ===
v76 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v799 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid j387 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 50]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j443 
y: j223 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j443 y: j223  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 65]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j387 
y: j227 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j387 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 71]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v388 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v389 
=== Usages ===
=== Predecessor ===
j443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v388 #trueSuccessor: v390 #falseSuccessor: v389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [v82|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*]], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v80|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 12], y: v73|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = AND v84|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v85|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v465  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
result: a75 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a75 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 101]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: j393 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j393 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.CurrentLockNode.currentLock(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 102]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j444 
=== Usages ===
v793 v418 i424 v430 
=== Predecessor ===
v389 >@ <|@
instruction <@CurrentLock|@org.graalvm.compiler.hotspot.nodes.CurrentLockNode>@ #next: j444  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
result [v86|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j393 
index: - 
=== Succesors ===
=== Usages ===
j444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j393 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j444 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:504) [bci: 118]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v793 
=== Succesors ===
next: v398 
=== Usages ===
v395 i424 
=== Predecessor ===
j393 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v793 #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 140]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j444 
y: j68 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j444 y: j68  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 146]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v395 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
j444 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v395 #trueSuccessor: v397 #falseSuccessor: v396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [v86|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v87|QWORD, y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B91" 
    xhandlers
    flags 
    probability 4585925428558828666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:509) [bci: 149]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B85" 
    xhandlers
    flags 
    probability 4588807732320345782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 170]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 24]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
x: j443 
y: j233 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j443 y: j233  <|@  <|@
tid a29 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?32 ?25 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a29 
materializedValue: a75 
=== Succesors ===
=== Usages ===
?25 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a29 materializedValue: a75  <|@  <|@
tid ?25 <|@
d <@d|@=== Debug Properties ===
bci: AFTER_BCI
code: ResolvedJavaMethodBytecode<StringBuffer.toString()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
rethrowException: false
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a29 
virtualObjectMappings: ?32 
=== Succesors ===
=== Usages ===
v449 v418 i424 v430 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a29 virtualObjectMappings: ?32  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v433 
=== Succesors ===
trueSuccessor: v399 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v433 #trueSuccessor: v399 #falseSuccessor: v400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v84|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4588721263207500268
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:578) [bci: 253]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: j422 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j422 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:518) [bci: 193]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: i424 
=== Usages ===
v794 
=== Predecessor ===
v399 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: i424  <|@  <|@
f <@~|@floating>@ <|@
tid v794 <|@
result [v0|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j422 
index: - 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i424 <|@
result INTERIOR_MATCH <|@
st <@st|@java.lang.StringBuffer.toString() [bci: -3]
stack: a29 
locals: - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 216]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v794 
expectedValue: j393 
newValue: j444 
stateAfter: ?25 
=== Succesors ===
next: v428 
=== Usages ===
v425 
=== Predecessor ===
j422 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v794 expectedValue: j393 newValue: j444 stateAfter: ?25 #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i11 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i424 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
i424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v426 #falseSuccessor: v427  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v87|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B91" 
    xhandlers
    flags 
    probability 4543890717545916256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:524) [bci: 248]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v430 <|@
st <@st|@java.lang.StringBuffer.toString() [bci: -3]
stack: a29 
locals: - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:526) [bci: 272]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: ?25 
stateDuring: - 
arguments: a1 j393 
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?25 stateDuring: - arguments: a1 j393 #next: v431  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B91" 
    xhandlers
    flags 
    probability 4588712702765328562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:520) [bci: 227]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:550) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: j445 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v795 <|@
result [v84|QWORD + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j443 
index: - 
=== Succesors ===
=== Usages ===
j445 v449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j443 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:552) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v795 
=== Succesors ===
next: j446 
=== Usages ===
j403 
=== Predecessor ===
v400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v795 #next: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v796 <|@
result [v84|QWORD + 38] <|@
d <@d|@=== Debug Properties ===
displacement: 38
scale: Times1
stamp: void*
=== Inputs ===
base: j443 
index: - 
=== Succesors ===
=== Usages ===
j446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j443 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_recursions
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v796 
=== Succesors ===
next: j402 
=== Usages ===
j404 
=== Predecessor ===
j445 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v796 #next: j402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j402 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:555) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
j403 
=== Predecessor ===
j446 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid j403 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 104]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: i64
=== Inputs ===
x: j402 
y: j445 
=== Succesors ===
=== Usages ===
j404 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j402 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid j404 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 109]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: i64
=== Inputs ===
x: j403 
y: j446 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j403 y: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 113]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j404 
y: j68 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j404 y: j68  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v405 
=== Succesors ===
trueSuccessor: v407 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
j402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v405 #trueSuccessor: v407 #falseSuccessor: v406  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOV [v84|QWORD + 22] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [v84|QWORD + 38] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = XOR (x: r15|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = OR (x: v90|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v91|QWORD, y: v91|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:558) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: j447 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j447  <|@  <|@
f <@~|@floating>@ <|@
tid v797 <|@
result [v84|QWORD + 54] <|@
d <@d|@=== Debug Properties ===
displacement: 54
scale: Times1
stamp: void*
=== Inputs ===
base: j443 
index: - 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j443 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j447 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_cxq
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:559) [bci: 137]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v797 
=== Succesors ===
next: j448 
=== Usages ===
j409 
=== Predecessor ===
v407 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v797 #next: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
result [v84|QWORD + 62] <|@
d <@d|@=== Debug Properties ===
displacement: 62
scale: Times1
stamp: void*
=== Inputs ===
base: j443 
index: - 
=== Succesors ===
=== Usages ===
j448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j443 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j448 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_EntryList
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:561) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v798 
=== Succesors ===
next: v416 
=== Usages ===
j409 
=== Predecessor ===
j447 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v798 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 175]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: i64
=== Inputs ===
x: j447 
y: j448 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j447 y: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 179]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j409 
y: j68 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j409 y: j68  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 185]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v410 
=== Succesors ===
trueSuccessor: v414 
falseSuccessor: v415 
=== Usages ===
=== Predecessor ===
j448 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v410 #trueSuccessor: v414 #falseSuccessor: v415  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = MOV [v84|QWORD + 54] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = OR (x: v92|QWORD, ~y: [v84|QWORD + 62]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 188]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 190]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
st <@st|@java.lang.StringBuffer.toString() [bci: -3]
stack: a29 
locals: - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:567) [bci: 200]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v795 
value: j68 
stateAfter: ?25 
lastLocationAccess: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v795 value: j68 stateAfter: ?25 lastLocationAccess: - #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    probability 4528697575604282463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4544454092639142389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v411 v413 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v411 v413 #next: v418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
st <@st|@java.lang.StringBuffer.toString() [bci: -3]
stack: a29 
locals: - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:575) [bci: 248]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: ?25 
stateDuring: - 
arguments: a1 j393 
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?25 stateDuring: - arguments: a1 j393 #next: v441  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 184]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B80" "B87" "B84" "B83" "B90" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v419 v421 v429 v431 v441 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v419 v421 v429 v431 v441 #next: v432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v466  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 35]
stamp: void
=== Inputs ===
result: a75 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a75 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v487 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v487  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B92 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result int[-10003|0xffffffffffffd8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -10003
stableDimension: 0
stamp: i32 [-10003] ⇊00000000ffffd8ed ⇈00000000ffffd8ed
stampKind: i32
value: int[-10003|0xffffffffffffd8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-10003|0xffffffffffffd8ed]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B28" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i141 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-23905 - -10003] ⇊00000000ffff8085
valueDescription: i32
=== Inputs ===
merge: v137 
values: i145 i147 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v137 values: i145 i147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v144 v146 
=== Succesors ===
next: v143 
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v144 v146 #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid a140 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i141 
speculation: a140 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i141 speculation: a140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: v0|QWORD[.] 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@272ec84a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: r15|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = XOR (x: v5|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v6|QWORD y: -121 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" "B18" "B25" "B1" "B7" "B11" "B10" 
    successors "B27" "B93" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: v0|QWORD[.] 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v15|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA [v19|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = AND v20|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = ADD (x: v22|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v22|QWORD + v17|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v22|QWORD + v17|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v22|QWORD + v17|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v22|QWORD + v17|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = CMOVE (falseValue: v16|DWORD, ~trueValue: v28|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v30|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v30|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = LEA [v27|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = LEA [v15|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V128_WORD = H [v33|QWORD[*] + v37|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v37|QWORD * 2], input: v39|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v30|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V64_WORD = H [v33|QWORD[*] + v41|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v41|QWORD * 2], input: v43|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v30|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V32_WORD = H [v33|QWORD[*] + v45|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v45|QWORD * 2], input: v47|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = DEC v30|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVSX [v33|QWORD[*] + v49|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD[.] + v49|QWORD * 2], y: v51|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B36" "B53" "B52" 
    successors "B55" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B74" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B71" "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[.] = COMPRESSPOINTER (input: v27|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@70ac0422 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v74|QWORD[*] + v75|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v76|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v76|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [v82|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*]], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v80|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 12], y: v73|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = AND v84|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v85|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = LEA [v27|QWORD[.] + v30|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = SUB (x: v52|QWORD, ~y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v54|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v54|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v59|QWORD * 2], input: v61|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v54|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v63|QWORD * 2], input: v65|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v54|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v67|QWORD * 2], input: v69|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v71|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B92 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B92" 
    successors "B41" "B92" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|V256_WORD = H [v33|QWORD[*] + v34|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v34|QWORD * 2], input: v35|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v34|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B72 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B72" 
    successors "B59" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v57|QWORD * 2], input: v56|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v57|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: v0|QWORD[.] 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [v86|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v87|QWORD, y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B85" 
    xhandlers
    flags 
    probability 4588807732320345782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v84|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4588721263207500268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v87|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B91" 
    xhandlers
    flags 
    probability 4588712702765328562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B80" "B87" "B84" "B83" "B90" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B91" 
    xhandlers
    flags 
    probability 4585925428558828666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v78|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 23]
locals: v0|QWORD[.] 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = AND v1|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" "B13" 
    successors "B15" "B20" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v1|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = OR v1|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v2|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B12" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v6|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v6|QWORD y: 768 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND v1|QWORD y: 895 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = OR (x: r15|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOV [v84|QWORD + 22] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [v84|QWORD + 38] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = XOR (x: r15|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = OR (x: v90|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v91|QWORD, y: v91|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = MOV [v84|QWORD + 54] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = OR (x: v92|QWORD, ~y: [v84|QWORD + 62]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v4|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B24" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SUB (x: v12|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v13|QWORD y: -4089 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v5|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B91" 
    xhandlers
    flags 
    probability 4543890717545916256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4544454092639142389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: v0|QWORD[.] 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    probability 4528697575604282463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: v0|QWORD[.] 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23905|0xffffffffffffa29f]] destination: B28 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B28" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: v0|QWORD[.] 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-10003|0xffffffffffffd8ed]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #10         // toStringCache:char[]
     4: ifnonnull     23
     7: aload_0       
     8: aload_0       
     9: getfield      #7          // java.lang.AbstractStringBuilder.value:char[]
    12: iconst_0      
    13: aload_0       
    14: getfield      #6          // java.lang.AbstractStringBuilder.count:int
    17: invokestatic  #54         // java.util.Arrays.copyOfRange:(char[], int, int)char[]
    20: putfield      #10         // toStringCache:char[]
    23: new           #57         // java.lang.String
    26: dup           
    27: aload_0       
    28: getfield      #10         // toStringCache:char[]
    31: iconst_1      
    32: invokespecial #55         // java.lang.String.<init>:(char[], boolean)void
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@272ec84a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD = MOV [r13|QWORD[.]] size: QWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   14  <|@ instruction r8|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr   16  <|@ instruction r9|QWORD = OR (x: r15|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction rcx|QWORD = XOR (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction TEST rcx|QWORD y: -121 size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" "B18" "B25" "B1" "B7" "B11" "B10" 
    successors "B27" "B93" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  210  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: r13|QWORD[.] 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  222  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  240  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  248  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  254  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction CMP (x: r13|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  322  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  376  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  388  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  390  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  392  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  400  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  412  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  416  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  424  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  436  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rdx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  448  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVSX [r10|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV (x: [rcx|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B36" "B53" "B52" 
    successors "B55" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  468  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B74" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B71" "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@70ac0422 encoding: base: 0 shift: 3 <|@ <|@
      nr  620  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  624  <|@ instruction rsi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  626  <|@ instruction MOVB (x: [rax|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  628  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  632  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  656  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr  668  <|@ instruction MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  672  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  674  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = MOV [r13|QWORD[.]] size: QWORD <|@ <|@
      nr  678  <|@ instruction rax|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr  680  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B36 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  480  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  528  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  530  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  532  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  540  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  552  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  554  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  556  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  564  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  576  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  586  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  588  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  602  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B92 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B92" 
    successors "B41" "B92" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  360  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  362  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  494  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B72 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B72" 
    successors "B59" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  500  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  502  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  504  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  304  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [r14:0, stack:8]
live-base-pointers: []
java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: stack:40|QWORD[.] 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction r11|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD = MOV [r11|QWORD] size: QWORD <|@ <|@
      nr  696  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B85" 
    xhandlers
    flags 
    probability 4588807732320345782
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction TEST r10|QWORD y: 2 size: QWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4588721263207500268
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B91" 
    xhandlers
    flags 
    probability 4588712702765328562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B84 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B80" "B87" "B84" "B83" "B90" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B91" 
    xhandlers
    flags 
    probability 4585925428558828666
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B80 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  642  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  644  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 23]
locals: r13|QWORD[.] 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:23] <|@ <|@
      nr  646  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rax|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr   32  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" "B13" 
    successors "B15" "B20" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction TEST r10|QWORD y: 2 size: QWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r10|QWORD = OR r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [r11|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: r11|QWORD) accessKind: QWORD <|@ <|@
      nr  132  <|@ instruction CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B12" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction TEST rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TEST rcx|QWORD y: 768 size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r10|QWORD = AND r10|QWORD y: 895 size: QWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = OR (x: r15|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rax|QWORD = MOV [r10|QWORD + 22] size: QWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD <|@ <|@
      nr  742  <|@ instruction rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  744  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction rax|QWORD = MOV [r10|QWORD + 54] size: QWORD <|@ <|@
      nr  754  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD <|@ <|@
      nr  756  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD <|@ <|@
      nr  108  <|@ instruction r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B24" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [r11|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction CMP [r10|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction TEST rax|QWORD y: -4089 size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction MOV (x: [r11|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  154  <|@ instruction r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B91" 
    xhandlers
    flags 
    probability 4543890717545916256
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B83 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4544454092639142389
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: rbp|QWORD[.] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  202  <|@ instruction r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    probability 4528697575604282463
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: rbp|QWORD[.] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   92  <|@ instruction r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction r10|DWORD = MOVE input: int[-23905|0xffffffffffffa29f] <|@ <|@
      nr  230  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B28 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B28" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: rbp|QWORD[.] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-10003|0xffffffffffffd8ed] <|@ <|@
      nr  798  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #10         // toStringCache:char[]
     4: ifnonnull     23
     7: aload_0       
     8: aload_0       
     9: getfield      #7          // java.lang.AbstractStringBuilder.value:char[]
    12: iconst_0      
    13: aload_0       
    14: getfield      #6          // java.lang.AbstractStringBuilder.count:int
    17: invokestatic  #54         // java.util.Arrays.copyOfRange:(char[], int, int)char[]
    20: putfield      #10         // toStringCache:char[]
    23: new           #57         // java.lang.String
    26: dup           
    27: aload_0       
    28: getfield      #10         // toStringCache:char[]
    31: iconst_1      
    32: invokespecial #55         // java.lang.String.<init>:(char[], boolean)void
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B26" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@272ec84a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD = MOV [r13|QWORD[.]] size: QWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   14  <|@ instruction r8|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr   16  <|@ instruction r9|QWORD = OR (x: r15|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction rcx|QWORD = XOR (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction TEST rcx|QWORD y: -121 size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B26 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B15" "B18" "B25" "B0" "B7" "B11" "B10" 
    successors "B27" "B93" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  210  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: r13|QWORD[.] 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  222  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  240  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  248  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  254  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B34 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B54" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction CMP (x: r13|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  322  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B54 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" "B40" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B42 falseDestination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B45" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  376  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  388  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  390  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  392  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B42" 
    successors "B48" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  400  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B48 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  412  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  416  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B45" 
    successors "B51" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  424  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B51 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  436  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B48" 
    successors "B54" "B53" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rdx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  448  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B54 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVSX [r10|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV (x: [rcx|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B35" "B53" "B51" 
    successors "B55" "B74" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  468  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B54" "B71" "B69" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@70ac0422 encoding: base: 0 shift: 3 <|@ <|@
      nr  620  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  624  <|@ instruction rsi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  626  <|@ instruction MOVB (x: [rax|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  628  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  632  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  656  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr  668  <|@ instruction MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  672  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  674  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = MOV [r13|QWORD[.]] size: QWORD <|@ <|@
      nr  678  <|@ instruction rax|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr  680  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  480  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B63" "B62" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B63 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  528  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  530  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  532  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" 
    successors "B66" "B65" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  540  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B66 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  552  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  554  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  556  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B63" 
    successors "B69" "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  564  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B69 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  576  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B66" 
    successors "B74" "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  586  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  588  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B74 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B42" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  358  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  360  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  362  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B42 falseDestination: B40 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  494  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B58" 
    successors "B60" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  500  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  502  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  504  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B60 falseDestination: B58 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  304  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [r14:0, stack:8]
live-base-pointers: []
java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: stack:40|QWORD[.] 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B91" "B81" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction r11|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD = MOV [r11|QWORD] size: QWORD <|@ <|@
      nr  696  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B79 -> B91 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B85" 
    xhandlers
    flags 
    probability 4588807732320345782
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction TEST r10|QWORD y: 2 size: QWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B91" 
    xhandlers
    flags 
    probability 4588721263207500268
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B82 -> B83 falseDestination: B82 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B79" "B87" "B82" "B83" "B90" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  642  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  644  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 23]
locals: r13|QWORD[.] 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:23] <|@ <|@
      nr  646  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B14" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rax|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr   32  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" "B2" 
    successors "B15" "B20" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction TEST r10|QWORD y: 2 size: QWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" "B17" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r10|QWORD = OR r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [r11|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: r11|QWORD) accessKind: QWORD <|@ <|@
      nr  132  <|@ instruction CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B26 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B12" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction TEST rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TEST rcx|QWORD y: 768 size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B7" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r10|QWORD = AND r10|QWORD y: 895 size: QWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = OR (x: r15|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B5 -> B10 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B86" "B90" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rax|QWORD = MOV [r10|QWORD + 22] size: QWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD <|@ <|@
      nr  742  <|@ instruction rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  744  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B90" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction rax|QWORD = MOV [r10|QWORD + 54] size: QWORD <|@ <|@
      nr  754  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD <|@ <|@
      nr  756  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [r11|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction CMP [r10|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" "B23" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B21 -> B25 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B25" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction TEST rax|QWORD y: -4089 size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction MOV (x: [r11|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B8 -> B10 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B91" 
    xhandlers
    flags 
    probability 4543890717545916256
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B83 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" 
    successors "B91" 
    xhandlers
    flags 
    probability 4544454092639142389
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: rbp|QWORD[.] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  202  <|@ instruction r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: rbp|QWORD[.] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   92  <|@ instruction r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction r10|DWORD = MOVE input: int[-23905|0xffffffffffffa29f] <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B28 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B28" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  798  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0]
locals: rbp|QWORD[.] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-10003|0xffffffffffffd8ed] <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #10         // toStringCache:char[]
     4: ifnonnull     23
     7: aload_0       
     8: aload_0       
     9: getfield      #7          // java.lang.AbstractStringBuilder.value:char[]
    12: iconst_0      
    13: aload_0       
    14: getfield      #6          // java.lang.AbstractStringBuilder.count:int
    17: invokestatic  #54         // java.util.Arrays.copyOfRange:(char[], int, int)char[]
    20: putfield      #10         // toStringCache:char[]
    23: new           #57         // java.lang.String
    26: dup           
    27: aload_0       
    28: getfield      #10         // toStringCache:char[]
    31: iconst_1      
    32: invokespecial #55         // java.lang.String.<init>:(char[], boolean)void
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee4d8b55004c8d5c241048beaddeaddeaddeadde4c8b86a80000004d8bcf4d0bc8498bc94933ca48f7c187ffffff0f8545030000418b751485f60f85b7040000458b7510438504f4458b550c4585d20f8c85040000498b7760498b57704181faffffff000f8388020000418bcad1e18d491783e1f84863c94c8bd94c03de4c3bda0f876b0200004d895f600f188431c00000000f188431000100000f188431400100000f188431800100004489560c48c70601000000c74608addeadde488bc64c896c2408458bea428b34f50c000000443bee458bd5440f4fd64963f24883fe010f8c99000000488d56f0488d48104e8d14f5100000004885d249c7c3000000000f8da7010000488d56f84c3bda0f8f13000000c4817a6f045ac4a17a7f0459498d53084c8bda488d56fc4c3bda0f8f13000000c481f96e045ac4a1f97e0459498d53044c8bda488d56fe4c3bda0f8f13000000c481796e045ac4a1797e0459498d53024c8bda488bd648ffca4c3bda0f8f0a000000430fbf145a66428914594963d5483bd60f8f930000004c8b6c24084c8bf049c1ee0345897514498bc548c1e80948be00e01b170100000044882430498b4760488d7018493b77700f8797010000498977600f1880d8000000488bd848beaddeaddeaddeadde488bb6a8000000488930c74008addeadde4489700c448960104d8b5500498bc24883e0074883f8050f850e010000488bc3488b6c24204883c428850500000000c5f877c3488d4c7010482bd6488d72f04885f60f8d9400000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8febfeffff6646892451e9e1feffff666690c4817e6f045ac4a17e7f04594d8d5b104c3bda7eebe93ffeffffc5f9efc049c7c2000000006666660f1f840000000000c4a17e7f04514d8d52104c3bd67ef1e949ffffff4c896c240848beaddeaddeaddeadde418bd2b900000000458beae80000000090e9b1fdffff4c8d5c2410498b334885f60f841c00000049f7c2020000000f85be000000498bc3f0490fb175000f8549010000488bc3488b6c24204883c428850500000000c5f877c348beaddeaddeaddeaddeba02000000b901000000e80000000090e955feffff498bc24883e0074883f8050f842b00000049f7c2020000000f859e0000004983ca014d8913498bc2f04d0fb15d00493bc20f8484fcffffe9a9000000498bed48f7c1070000000f856200000048f7c1000300000f85a70000004981e27f030000498bf7490bf2498bc2f0480fb175000f85d8000000e941fcffff498bed498b4216498b72264933c7480bc64885c00f8594000000498b4236490b423e4885c00f85830000004d896216e91dffffff498bc2f04c0fb14500e955ffffff498bed4d891b49837a16000f856c00000048c7c000000000f04d0fb17a160f8559000000e9d6fbffff498bed482bc448f7c007f0ffff0f85410000004d8923e9bbfbffff498bc2f04c0fb14d000f853e000000e9a7fbffff498bed488bf5498bd3e80000000090e9a3feffff488bf5498bd3e80000000090e992feffff488bf5498bd3e800000000904c8bede96efbffff488bf5498bd3e800000000904c8bede95afbffff41ba9fa2ffff498bed4589979c0200004d89a7a8020000e8000000009041baedd8ffffebe1e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@272ec84a slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r10|QWORD = MOV [r13|QWORD[.]] size: QWORD  <||@
  Comment 55 10 r11|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 60 12 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}  <||@
  Comment 60 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}}  <||@
  Comment 70 14 r8|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 77 16 r9|QWORD = OR (x: r15|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 83 18 rcx|QWORD = XOR (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 89 20 TEST rcx|QWORD y: -121 size: QWORD  <||@
  Comment 96 22 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B26 falseDestination: B0 -> B2  <||@
  Comment 102 block B26 null  <||@
  Comment 102 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 102 208 rsi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 106 210 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 108 212 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B93  <||@
  Comment 114 block B27 null  <||@
  Comment 114 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 216 r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 118 218 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0]  <||@
  Comment 118 [r13:0, r14:0]at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0, duringCall: false, rethrow: false]
              |0                                     
     locals:  |r13|QWORD[.]                          
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]   <||@
  Comment 118 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 122 220 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 126 222 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 129 224 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 135 block B29 null  <||@
  Comment 135 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 236 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 139 238 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 143 240 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 150 242 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B34  <||@
  Comment 156 block B30 null  <||@
  Comment 156 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 246 rcx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 161 248 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 164 250 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 167 252 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 170 254 r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 176 256 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 179 258 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B34 falseDestination: B30 -> B32  <||@
  Comment 185 block B32 null  <||@
  Comment 185 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 185 268 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 189 270 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 197 272 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 205 274 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 213 276 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 221 278 MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 225 280 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 232 282 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 232 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 239 284 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 239 286 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 242 288 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 247 290 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 250 292 JUMP ~[] destination: B32 -> B35  <||@
  Comment 250 block B35 null  <||@
  Comment 250 314 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 250 316 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 258 318 CMP (x: r13|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 261 320 r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 268 322 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 271 324 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 275 326 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B54 falseDestination: B35 -> B37  <||@
  Comment 281 block B37 null  <||@
  Comment 281 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 281 334 rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 285 336 rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 289 338 r10|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 297 340 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 300 346 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 307 342 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B42 falseDestination: B37 -> B40  <||@
  Comment 313 block B42 null  <||@
  Comment 313 372 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 313 374 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 317 376 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 320 378 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44  <||@
  Comment 326 block B44 null  <||@
  Comment 326 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 326 386 xmm0|V128_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 332 388 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 338 390 rdx|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 342 392 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 345 394 JUMP ~[] destination: B44 -> B45  <||@
  Comment 345 block B45 null  <||@
  Comment 345 396 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 345 398 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 349 400 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 352 402 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B48 falseDestination: B45 -> B47  <||@
  Comment 358 block B47 null  <||@
  Comment 358 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 410 xmm0|V64_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 364 412 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 370 414 rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 374 416 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 377 418 JUMP ~[] destination: B47 -> B48  <||@
  Comment 377 block B48 null  <||@
  Comment 377 420 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 377 422 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 381 424 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 384 426 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B51 falseDestination: B48 -> B50  <||@
  Comment 390 block B50 null  <||@
  Comment 390 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 390 434 xmm0|V32_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 396 436 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 402 438 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 406 440 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 409 442 JUMP ~[] destination: B50 -> B51  <||@
  Comment 409 block B51 null  <||@
  Comment 409 444 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 409 446 rdx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 415 448 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 418 450 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B54 falseDestination: B51 -> B53  <||@
  Comment 424 block B53 null  <||@
  Comment 424 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 424 458 rdx|DWORD = MOVSX [r10|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 429 460 MOV (x: [rcx|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 434 462 JUMP ~[] destination: B53 -> B54  <||@
  Comment 434 block B54 null  <||@
  Comment 434 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 434 466 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 437 468 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 440 470 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B74  <||@
  Comment 446 block B74 null  <||@
  Comment 446 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 446 612 r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 451 618 r14|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@70ac0422 encoding: base: 0 shift: 3  <||@
  Comment 458 620 MOV (x: [r13|QWORD[.] + 20], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 462 622 rax|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 469 624 rsi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 479 626 MOVB (x: [rax|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 483 628 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 487 630 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 491 632 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 495 634 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 501 block B76 null  <||@
  Comment 501 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 501 652 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 505 654 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 512 656 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 512 658 JUMP ~[] destination: B76 -> B77  <||@
  Comment 512 block B77 null  <||@
  Comment 512 660 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 512 662 rbx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 515 664 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 515 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 525 666 rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 532 668 MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD  <||@
  Comment 535 670 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 535 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 542 672 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 546 674 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 550 676 r10|QWORD = MOV [r13|QWORD[.]] size: QWORD  <||@
  Comment 554 678 rax|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 561 680 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 565 682 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 571 block B78 null  <||@
  Comment 571 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 571 686 rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 574 688 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 583 12  <||@
  Comment 593 block B55 null  <||@
  Comment 593 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 593 474 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 598 476 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 601 478 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 605 480 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 608 482 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 614 block B56 null  <||@
  Comment 614 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 614 486 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 621 488 JUMP ~[] destination: B56 -> B60  <||@
  Comment 621 block B60 null  <||@
  Comment 621 512 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 621 514 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 625 516 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 628 518 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B63 falseDestination: B60 -> B62  <||@
  Comment 634 block B62 null  <||@
  Comment 634 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 634 526 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 638 528 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 644 530 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 648 532 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 651 534 JUMP ~[] destination: B62 -> B63  <||@
  Comment 651 block B63 null  <||@
  Comment 651 536 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 651 538 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 655 540 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 658 542 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B66 falseDestination: B63 -> B65  <||@
  Comment 664 block B65 null  <||@
  Comment 664 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 664 550 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 668 552 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 674 554 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 678 556 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 681 558 JUMP ~[] destination: B65 -> B66  <||@
  Comment 681 block B66 null  <||@
  Comment 681 560 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 681 562 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 685 564 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 688 566 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B69 falseDestination: B66 -> B68  <||@
  Comment 694 block B68 null  <||@
  Comment 694 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 574 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 698 576 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 704 578 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 708 580 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 711 582 JUMP ~[] destination: B68 -> B69  <||@
  Comment 711 block B69 null  <||@
  Comment 711 584 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 711 586 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 714 588 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 717 590 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B74 falseDestination: B69 -> B71  <||@
  Comment 723 block B71 null  <||@
  Comment 723 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 600 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 728 604 JUMP ~[] destination: B71 -> B74  <||@
  Comment 733 block B40 loop 0 depth 1 header:487|LoopBegin  <||@
  Comment 733 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 736 358 xmm0|V256_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 742 360 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 748 362 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 752 364 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 755 366 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B42 falseDestination: B40 -> B40  <||@
  Comment 762 block B57 null  <||@
  Comment 762 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 762 492 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 766 494 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 773 496 JUMP ~[] destination: B57 -> B58  <||@
  Comment 773 block B58 loop 1 depth 1 header:552|LoopBegin  <||@
  Comment 773 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 784 500 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 790 502 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 794 504 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 797 506 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B60 falseDestination: B58 -> B58  <||@
  Comment 804 block B34 null  <||@
  Comment 804 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 804 296 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 809 302 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 809 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 819 304 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 822 306 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 827 308 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 830 310 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 830 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 835 [r14:0, stack:8]at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0, duringCall: false, rethrow: false]
              |0                                          
     locals:  |stack:40|QWORD[.]                          
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]   <||@
  Comment 836 312 JUMP ~[] destination: B34 -> B35  <||@
  Comment 841 block B79 null  <||@
  Comment 841 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 841 692 r11|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 846 694 rsi|QWORD = MOV [r11|QWORD] size: QWORD  <||@
  Comment 849 696 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 852 698 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B79 -> B91 falseDestination: B79 -> B81  <||@
  Comment 858 block B81 null  <||@
  Comment 858 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 858 706 TEST r10|QWORD y: 2 size: QWORD  <||@
  Comment 865 708 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B85  <||@
  Comment 871 block B82 null  <||@
  Comment 871 710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 871 712 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 874 714 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 880 716 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B82 -> B83 falseDestination: B82 -> B91  <||@
  Comment 886 block B91 null  <||@
  Comment 886 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 886 786 rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 889 788 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 898 12  <||@
  Comment 908 block B75 null  <||@
  Comment 908 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 908 638 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 908 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 918 640 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 923 642 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 928 644 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:23]  <||@
  Comment 928 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 933 [r13:0, r14:0]at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 23, duringCall: false, rethrow: false]
              |0                                     
     locals:  |r13|QWORD[.]                          
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]   <||@
  Comment 934 646 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 934 648 JUMP ~[] destination: B75 -> B77  <||@
  Comment 939 block B2 null  <||@
  Comment 939 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 939 30 rax|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 946 32 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 950 34 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B14  <||@
  Comment 956 block B14 null  <||@
  Comment 956 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 956 118 TEST r10|QWORD y: 2 size: QWORD  <||@
  Comment 963 120 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B20  <||@
  Comment 969 block B15 null  <||@
  Comment 969 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 969 124 r10|QWORD = OR r10|QWORD y: 1 size: QWORD  <||@
  Comment 973 126 MOV (x: [r11|QWORD], y: r10|QWORD) size: QWORD  <||@
  Comment 976 128 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 979 130 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: r11|QWORD) accessKind: QWORD  <||@
  Comment 985 132 CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 988 134 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B26 falseDestination: B15 -> B17  <||@
  Comment 999 block B3 null  <||@
  Comment 999 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 999 38 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1002 40 TEST rcx|QWORD y: 7 size: QWORD  <||@
  Comment 1009 42 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B12  <||@
  Comment 1015 block B4 null  <||@
  Comment 1015 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1015 46 TEST rcx|QWORD y: 768 size: QWORD  <||@
  Comment 1022 48 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 1028 block B5 null  <||@
  Comment 1028 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1028 52 r10|QWORD = AND r10|QWORD y: 895 size: QWORD  <||@
  Comment 1035 54 rsi|QWORD = OR (x: r15|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1041 56 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1044 58 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 1050 60 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B5 -> B10 falseDestination: B5 -> B7  <||@
  Comment 1056 block B7 null  <||@
  Comment 1056 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1056 70 JUMP ~[] destination: B7 -> B26  <||@
  Comment 1061 block B85 null  <||@
  Comment 1061 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 736 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1064 738 rax|QWORD = MOV [r10|QWORD + 22] size: QWORD  <||@
  Comment 1068 740 rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD  <||@
  Comment 1072 742 rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1075 744 rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1078 746 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1081 748 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B90  <||@
  Comment 1087 block B86 null  <||@
  Comment 1087 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1087 752 rax|QWORD = MOV [r10|QWORD + 54] size: QWORD  <||@
  Comment 1091 754 rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD  <||@
  Comment 1095 756 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1098 758 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B90  <||@
  Comment 1104 block B87 null  <||@
  Comment 1104 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1104 762 MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1108 764 JUMP ~[] destination: B87 -> B91  <||@
  Comment 1113 block B12 null  <||@
  Comment 1113 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 104 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1116 106 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD  <||@
  Comment 1122 110 JUMP ~[] destination: B12 -> B14  <||@
  Comment 1127 block B20 null  <||@
  Comment 1127 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1127 164 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 166 MOV (x: [r11|QWORD], y: r11|QWORD) size: QWORD  <||@
  Comment 1133 168 CMP [r10|QWORD + 22] y: 0 size: QWORD  <||@
  Comment 1138 170 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B25  <||@
  Comment 1144 block B21 null  <||@
  Comment 1144 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1144 174 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1151 176 rax|QWORD = CAS (address: [r10|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 1157 178 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B21 -> B25 falseDestination: B21 -> B23  <||@
  Comment 1163 block B23 null  <||@
  Comment 1163 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1163 188 JUMP ~[] destination: B23 -> B26  <||@
  Comment 1168 block B17 null  <||@
  Comment 1168 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1168 142 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1171 144 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 1174 146 TEST rax|QWORD y: -4089 size: QWORD  <||@
  Comment 1181 148 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B25  <||@
  Comment 1187 block B18 null  <||@
  Comment 1187 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1187 152 MOV (x: [r11|QWORD], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1190 156 JUMP ~[] destination: B18 -> B26  <||@
  Comment 1195 block B8 null  <||@
  Comment 1195 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 74 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1198 76 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD  <||@
  Comment 1204 78 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B8 -> B10 falseDestination: B8 -> B11  <||@
  Comment 1210 block B11 null  <||@
  Comment 1210 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1210 100 JUMP ~[] destination: B11 -> B26  <||@
  Comment 1215 block B83 null  <||@
  Comment 1215 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 720 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 722 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1221 724 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1224 726 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1224 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1230 728 JUMP ~[] destination: B83 -> B91  <||@
  Comment 1235 block B90 null  <||@
  Comment 1235 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1235 776 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1238 778 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1241 780 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1241 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1247 782 JUMP ~[] destination: B90 -> B91  <||@
  Comment 1252 block B25 null  <||@
  Comment 1252 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1252 196 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1255 198 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1258 200 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 1258 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1263 [rbp:0]at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0, duringCall: false, rethrow: false]
              |0                                     
     locals:  |rbp|QWORD[.]                          
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]   <||@
  Comment 1264 202 r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1267 204 JUMP ~[] destination: B25 -> B26  <||@
  Comment 1272 block B10 null  <||@
  Comment 1272 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 86 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1275 88 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1278 90 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 1278 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1283 [rbp:0]at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0, duringCall: false, rethrow: false]
              |0                                     
     locals:  |rbp|QWORD[.]                          
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]   <||@
  Comment 1284 92 r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1287 94 JUMP ~[] destination: B10 -> B26  <||@
  Comment 1292 block B28 null  <||@
  Comment 1292 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1292 228 r10|DWORD = MOVE input: int[-23905|0xffffffffffffa29f]  <||@
  Comment 1298 232 JUMP ~[] destination: B28 -> B94  <||@
  Comment 1298 block B94 null  <||@
  Comment 1298 802 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1298 798 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1301 804 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1308 806 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1315 808 DEOPT info [bci:0]  <||@
  Comment 1315 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1320 [rbp:0]at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0, duringCall: false, rethrow: false]
              |0                                     
     locals:  |rbp|QWORD[.]                          
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]   <||@
  Comment 1321 block B93 null  <||@
  Comment 1321 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1321 796 r10|DWORD = MOVE input: int[-10003|0xffffffffffffd8ed]  <||@
  Comment 1327 800 JUMP ~[] destination: B93 -> B94  <||@
  Comment 1329 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1329 4  <||@
  Comment 1335 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1335 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9396[java.lang.StringBuffer.toString()]"
  method "HotSpotCompilation-9396[java.lang.StringBuffer.toString()]"
  date 1527005208896
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107bc8a40 448b560849c1e203493bc20f850fd4c3fe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee4d8b55004c8d5c241048be08d600c0070000004c8b86a80000004d8bcf4d0bc8498bc94933ca48f7c187ffffff0f8545030000418b751485f60f85b7040000458b7510438504f4458b550c4585d20f8c85040000498b7760498b57704181faffffff000f8388020000418bcad1e18d491783e1f84863c94c8bd94c03de4c3bda0f876b0200004d895f600f188431c00000000f188431000100000f188431400100000f188431800100004489560c48c70601000000c74608410000f8488bc64c896c2408458bea428b34f50c000000443bee458bd5440f4fd64963f24883fe010f8c99000000488d56f0488d48104e8d14f5100000004885d249c7c3000000000f8da7010000488d56f84c3bda0f8f13000000c4817a6f045ac4a17a7f0459498d53084c8bda488d56fc4c3bda0f8f13000000c481f96e045ac4a1f97e0459498d53044c8bda488d56fe4c3bda0f8f13000000c481796e045ac4a1797e0459498d53024c8bda488bd648ffca4c3bda0f8f0a000000430fbf145a66428914594963d5483bd60f8f930000004c8b6c24084c8bf049c1ee0345897514498bc548c1e80948be00e01b170100000044882430498b4760488d7018493b77700f8797010000498977600f1880d8000000488bd848bed01600c007000000488bb6a8000000488930c74008da0200f84489700c448960104d8b5500498bc24883e0074883f8050f850e010000488bc3488b6c24204883c42885057963ccfcc5f877c3488d4c7010482bd6488d72f04885f60f8d9400000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8febfeffff6646892451e9e1feffff666690c4817e6f045ac4a17e7f04594d8d5b104c3bda7eebe93ffeffffc5f9efc049c7c2000000006666660f1f840000000000c4a17e7f04514d8d52104c3bd67ef1e949ffffff4c896c240848be080200c007000000418bd2b900000000458beae85de03cff90e9b1fdffff4c8d5c2410498b334885f60f841c00000049f7c2020000000f85be000000498bc3f0490fb175000f8549010000488bc3488b6c24204883c42885053e62ccfcc5f877c348be680b00c007000000ba02000000b901000000e8fbdf3cff90e955feffff498bc24883e0074883f8050f842b00000049f7c2020000000f859e0000004983ca014d8913498bc2f04d0fb15d00493bc20f8484fcffffe9a9000000498bed48f7c1070000000f856200000048f7c1000300000f85a70000004981e27f030000498bf7490bf2498bc2f0480fb175000f85d8000000e941fcffff498bed498b4216498b72264933c7480bc64885c00f8594000000498b4236490b423e4885c00f85830000004d896216e91dffffff498bc2f04c0fb14500e955ffffff498bed4d891b49837a16000f856c00000048c7c000000000f04d0fb17a160f8559000000e9d6fbffff498bed482bc448f7c007f0ffff0f85410000004d8923e9bbfbffff498bc2f04c0fb14d000f853e000000e9a7fbffff498bed488bf5498bd3e8535557ff90e9a3feffff488bf5498bd3e8425557ff90e992feffff488bf5498bd3e831da3cff904c8bede96efbffff488bf5498bd3e81dda3cff904c8bede95afbffff41ba9fa2ffff498bed4589979c0200004d89a7a8020000e896e6c3fe9041baedd8ffffebe1e8aa1608ff90e884e5c3fe90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@272ec84a slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r10|QWORD = MOV [r13|QWORD[.]] size: QWORD  <||@
  Comment 55 10 r11|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 60 12 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}  <||@
  Comment 60 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}}  <||@
  Comment 70 14 r8|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 77 16 r9|QWORD = OR (x: r15|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 83 18 rcx|QWORD = XOR (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 89 20 TEST rcx|QWORD y: -121 size: QWORD  <||@
  Comment 96 22 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B26 falseDestination: B0 -> B2  <||@
  Comment 102 block B26 null  <||@
  Comment 102 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 102 208 rsi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 106 210 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 108 212 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B93  <||@
  Comment 114 block B27 null  <||@
  Comment 114 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 216 r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 118 218 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0]  <||@
  Comment 118 [r13:0, r14:0]at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0, duringCall: false, rethrow: false]
              |0                                     
     locals:  |r13|QWORD[.]                          
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]   <||@
  Comment 118 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 122 220 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 126 222 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 129 224 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 135 block B29 null  <||@
  Comment 135 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 236 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 139 238 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 143 240 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 150 242 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B34  <||@
  Comment 156 block B30 null  <||@
  Comment 156 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 246 rcx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 161 248 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 164 250 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 167 252 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 170 254 r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 176 256 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 179 258 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B34 falseDestination: B30 -> B32  <||@
  Comment 185 block B32 null  <||@
  Comment 185 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 185 268 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 189 270 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 197 272 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 205 274 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 213 276 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 221 278 MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 225 280 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 232 282 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 232 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 239 284 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 239 286 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 242 288 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 247 290 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 250 292 JUMP ~[] destination: B32 -> B35  <||@
  Comment 250 block B35 null  <||@
  Comment 250 314 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 250 316 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 258 318 CMP (x: r13|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 261 320 r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 268 322 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 271 324 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 275 326 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B54 falseDestination: B35 -> B37  <||@
  Comment 281 block B37 null  <||@
  Comment 281 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 281 334 rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 285 336 rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 289 338 r10|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 297 340 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 300 346 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 307 342 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B42 falseDestination: B37 -> B40  <||@
  Comment 313 block B42 null  <||@
  Comment 313 372 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 313 374 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 317 376 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 320 378 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44  <||@
  Comment 326 block B44 null  <||@
  Comment 326 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 326 386 xmm0|V128_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 332 388 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 338 390 rdx|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 342 392 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 345 394 JUMP ~[] destination: B44 -> B45  <||@
  Comment 345 block B45 null  <||@
  Comment 345 396 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 345 398 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 349 400 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 352 402 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B48 falseDestination: B45 -> B47  <||@
  Comment 358 block B47 null  <||@
  Comment 358 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 410 xmm0|V64_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 364 412 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 370 414 rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 374 416 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 377 418 JUMP ~[] destination: B47 -> B48  <||@
  Comment 377 block B48 null  <||@
  Comment 377 420 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 377 422 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 381 424 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 384 426 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B51 falseDestination: B48 -> B50  <||@
  Comment 390 block B50 null  <||@
  Comment 390 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 390 434 xmm0|V32_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 396 436 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 402 438 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 406 440 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 409 442 JUMP ~[] destination: B50 -> B51  <||@
  Comment 409 block B51 null  <||@
  Comment 409 444 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 409 446 rdx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 415 448 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 418 450 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B54 falseDestination: B51 -> B53  <||@
  Comment 424 block B53 null  <||@
  Comment 424 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 424 458 rdx|DWORD = MOVSX [r10|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 429 460 MOV (x: [rcx|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 434 462 JUMP ~[] destination: B53 -> B54  <||@
  Comment 434 block B54 null  <||@
  Comment 434 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 434 466 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 437 468 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 440 470 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B74  <||@
  Comment 446 block B74 null  <||@
  Comment 446 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 446 612 r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 451 618 r14|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@70ac0422 encoding: base: 0 shift: 3  <||@
  Comment 458 620 MOV (x: [r13|QWORD[.] + 20], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 462 622 rax|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 469 624 rsi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 479 626 MOVB (x: [rax|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 483 628 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 487 630 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 491 632 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 495 634 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 501 block B76 null  <||@
  Comment 501 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 501 652 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 505 654 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 512 656 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 512 658 JUMP ~[] destination: B76 -> B77  <||@
  Comment 512 block B77 null  <||@
  Comment 512 660 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 512 662 rbx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 515 664 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 515 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 525 666 rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 532 668 MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD  <||@
  Comment 535 670 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 535 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 542 672 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 546 674 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 550 676 r10|QWORD = MOV [r13|QWORD[.]] size: QWORD  <||@
  Comment 554 678 rax|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 561 680 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 565 682 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 571 block B78 null  <||@
  Comment 571 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 571 686 rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 574 688 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 583 12  <||@
  Comment 593 block B55 null  <||@
  Comment 593 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 593 474 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 598 476 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 601 478 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 605 480 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 608 482 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 614 block B56 null  <||@
  Comment 614 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 614 486 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 621 488 JUMP ~[] destination: B56 -> B60  <||@
  Comment 621 block B60 null  <||@
  Comment 621 512 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 621 514 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 625 516 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 628 518 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B63 falseDestination: B60 -> B62  <||@
  Comment 634 block B62 null  <||@
  Comment 634 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 634 526 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 638 528 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 644 530 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 648 532 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 651 534 JUMP ~[] destination: B62 -> B63  <||@
  Comment 651 block B63 null  <||@
  Comment 651 536 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 651 538 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 655 540 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 658 542 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B66 falseDestination: B63 -> B65  <||@
  Comment 664 block B65 null  <||@
  Comment 664 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 664 550 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 668 552 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 674 554 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 678 556 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 681 558 JUMP ~[] destination: B65 -> B66  <||@
  Comment 681 block B66 null  <||@
  Comment 681 560 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 681 562 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 685 564 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 688 566 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B69 falseDestination: B66 -> B68  <||@
  Comment 694 block B68 null  <||@
  Comment 694 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 574 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 698 576 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 704 578 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 708 580 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 711 582 JUMP ~[] destination: B68 -> B69  <||@
  Comment 711 block B69 null  <||@
  Comment 711 584 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 711 586 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 714 588 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 717 590 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B74 falseDestination: B69 -> B71  <||@
  Comment 723 block B71 null  <||@
  Comment 723 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 600 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 728 604 JUMP ~[] destination: B71 -> B74  <||@
  Comment 733 block B40 loop 0 depth 1 header:487|LoopBegin  <||@
  Comment 733 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 736 358 xmm0|V256_WORD = H [r10|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 742 360 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 748 362 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 752 364 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 755 366 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B42 falseDestination: B40 -> B40  <||@
  Comment 762 block B57 null  <||@
  Comment 762 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 762 492 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 766 494 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 773 496 JUMP ~[] destination: B57 -> B58  <||@
  Comment 773 block B58 loop 1 depth 1 header:552|LoopBegin  <||@
  Comment 773 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 784 500 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 790 502 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 794 504 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 797 506 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B60 falseDestination: B58 -> B58  <||@
  Comment 804 block B34 null  <||@
  Comment 804 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 804 296 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 809 302 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 809 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 819 304 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 822 306 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 827 308 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 830 310 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 830 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 835 [r14:0, stack:8]at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0, duringCall: false, rethrow: false]
              |0                                          
     locals:  |stack:40|QWORD[.]                          
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]   <||@
  Comment 836 312 JUMP ~[] destination: B34 -> B35  <||@
  Comment 841 block B79 null  <||@
  Comment 841 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 841 692 r11|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 846 694 rsi|QWORD = MOV [r11|QWORD] size: QWORD  <||@
  Comment 849 696 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 852 698 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B79 -> B91 falseDestination: B79 -> B81  <||@
  Comment 858 block B81 null  <||@
  Comment 858 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 858 706 TEST r10|QWORD y: 2 size: QWORD  <||@
  Comment 865 708 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B85  <||@
  Comment 871 block B82 null  <||@
  Comment 871 710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 871 712 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 874 714 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 880 716 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B82 -> B83 falseDestination: B82 -> B91  <||@
  Comment 886 block B91 null  <||@
  Comment 886 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 886 786 rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 889 788 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 898 12  <||@
  Comment 908 block B75 null  <||@
  Comment 908 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 908 638 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 908 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 918 640 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 923 642 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 928 644 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:23]  <||@
  Comment 928 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 933 [r13:0, r14:0]at java.lang.StringBuffer.toString(StringBuffer.java:671) [bci: 23, duringCall: false, rethrow: false]
              |0                                     
     locals:  |r13|QWORD[.]                          
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]   <||@
  Comment 934 646 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 934 648 JUMP ~[] destination: B75 -> B77  <||@
  Comment 939 block B2 null  <||@
  Comment 939 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 939 30 rax|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 946 32 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 950 34 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B14  <||@
  Comment 956 block B14 null  <||@
  Comment 956 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 956 118 TEST r10|QWORD y: 2 size: QWORD  <||@
  Comment 963 120 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B20  <||@
  Comment 969 block B15 null  <||@
  Comment 969 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 969 124 r10|QWORD = OR r10|QWORD y: 1 size: QWORD  <||@
  Comment 973 126 MOV (x: [r11|QWORD], y: r10|QWORD) size: QWORD  <||@
  Comment 976 128 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 979 130 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: r11|QWORD) accessKind: QWORD  <||@
  Comment 985 132 CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 988 134 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B26 falseDestination: B15 -> B17  <||@
  Comment 999 block B3 null  <||@
  Comment 999 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 999 38 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1002 40 TEST rcx|QWORD y: 7 size: QWORD  <||@
  Comment 1009 42 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B12  <||@
  Comment 1015 block B4 null  <||@
  Comment 1015 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1015 46 TEST rcx|QWORD y: 768 size: QWORD  <||@
  Comment 1022 48 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 1028 block B5 null  <||@
  Comment 1028 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1028 52 r10|QWORD = AND r10|QWORD y: 895 size: QWORD  <||@
  Comment 1035 54 rsi|QWORD = OR (x: r15|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1041 56 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1044 58 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 1050 60 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B5 -> B10 falseDestination: B5 -> B7  <||@
  Comment 1056 block B7 null  <||@
  Comment 1056 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1056 70 JUMP ~[] destination: B7 -> B26  <||@
  Comment 1061 block B85 null  <||@
  Comment 1061 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 736 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1064 738 rax|QWORD = MOV [r10|QWORD + 22] size: QWORD  <||@
  Comment 1068 740 rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD  <||@
  Comment 1072 742 rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1075 744 rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1078 746 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1081 748 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B90  <||@
  Comment 1087 block B86 null  <||@
  Comment 1087 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1087 752 rax|QWORD = MOV [r10|QWORD + 54] size: QWORD  <||@
  Comment 1091 754 rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD  <||@
  Comment 1095 756 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1098 758 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B90  <||@
  Comment 1104 block B87 null  <||@
  Comment 1104 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1104 762 MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1108 764 JUMP ~[] destination: B87 -> B91  <||@
  Comment 1113 block B12 null  <||@
  Comment 1113 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 104 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1116 106 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD  <||@
  Comment 1122 110 JUMP ~[] destination: B12 -> B14  <||@
  Comment 1127 block B20 null  <||@
  Comment 1127 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1127 164 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 166 MOV (x: [r11|QWORD], y: r11|QWORD) size: QWORD  <||@
  Comment 1133 168 CMP [r10|QWORD + 22] y: 0 size: QWORD  <||@
  Comment 1138 170 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B25  <||@
  Comment 1144 block B21 null  <||@
  Comment 1144 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1144 174 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1151 176 rax|QWORD = CAS (address: [r10|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 1157 178 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B21 -> B25 falseDestination: B21 -> B23  <||@
  Comment 1163 block B23 null  <||@
  Comment 1163 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1163 188 JUMP ~[] destination: B23 -> B26  <||@
  Comment 1168 block B17 null  <||@
  Comment 1168 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1168 142 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1171 144 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 1174 146 TEST rax|QWORD y: -4089 size: QWORD  <||@
  Comment 1181 148 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B25  <||@
  Comment 1187 block B18 null  <||@
  Comment 1187 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1187 152 MOV (x: [r11|QWORD], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1190 156 JUMP ~[] destination: B18 -> B26  <||@
  Comment 1195 block B8 null  <||@
  Comment 1195 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 74 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1198 76 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD  <||@
  Comment 1204 78 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B8 -> B10 falseDestination: B8 -> B11  <||@
  Comment 1210 block B11 null  <||@
  Comment 1210 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1210 100 JUMP ~[] destination: B11 -> B26  <||@
  Comment 1215 block B83 null  <||@
  Comment 1215 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 720 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 722 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1221 724 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1224 726 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1224 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1230 728 JUMP ~[] destination: B83 -> B91  <||@
  Comment 1235 block B90 null  <||@
  Comment 1235 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1235 776 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1238 778 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1241 780 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1241 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1247 782 JUMP ~[] destination: B90 -> B91  <||@
  Comment 1252 block B25 null  <||@
  Comment 1252 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1252 196 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1255 198 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1258 200 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 1258 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1263 [rbp:0]at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0, duringCall: false, rethrow: false]
              |0                                     
     locals:  |rbp|QWORD[.]                          
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]   <||@
  Comment 1264 202 r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1267 204 JUMP ~[] destination: B25 -> B26  <||@
  Comment 1272 block B10 null  <||@
  Comment 1272 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 86 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1275 88 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1278 90 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 1278 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1283 [rbp:0]at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0, duringCall: false, rethrow: false]
              |0                                     
     locals:  |rbp|QWORD[.]                          
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]   <||@
  Comment 1284 92 r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1287 94 JUMP ~[] destination: B10 -> B26  <||@
  Comment 1292 block B28 null  <||@
  Comment 1292 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1292 228 r10|DWORD = MOVE input: int[-23905|0xffffffffffffa29f]  <||@
  Comment 1298 232 JUMP ~[] destination: B28 -> B94  <||@
  Comment 1298 block B94 null  <||@
  Comment 1298 802 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1298 798 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1301 804 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1308 806 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1315 808 DEOPT info [bci:0]  <||@
  Comment 1315 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1320 [rbp:0]at java.lang.StringBuffer.toString(StringBuffer.java:668) [bci: 0, duringCall: false, rethrow: false]
              |0                                     
     locals:  |rbp|QWORD[.]                          
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]   <||@
  Comment 1321 block B93 null  <||@
  Comment 1321 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1321 796 r10|DWORD = MOVE input: int[-10003|0xffffffffffffd8ed]  <||@
  Comment 1327 800 JUMP ~[] destination: B93 -> B94  <||@
  Comment 1329 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1329 4  <||@
  Comment 1335 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1335 5  <||@
  HexCodeFile>>> <|@
end_nmethod
