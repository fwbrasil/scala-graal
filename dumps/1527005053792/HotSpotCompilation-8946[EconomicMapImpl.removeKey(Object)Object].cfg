begin_compilation
  name " HotSpotCompilation-8946[org.graalvm.collections.EconomicMapImpl.removeKey(Object)]"
  method "HotSpotCompilation-8946[org.graalvm.collections.EconomicMapImpl.removeKey(Object)]"
  date 1527005198924
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1186 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1186  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v685 v1161 v573 ?957 ?73 ?193 ?26 ?165 ?34 ?48 v1162 v1163 ?129 ?62 ?202 v1166 ?203 v1177 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:609) [bci: 1]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 ?203 v438 v1002 a1010 v969 v992 ?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 609
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a4 - - 
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a4 - -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 v1186 ?62 v573 ?48 ?129 v96 v568 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a1136 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a1136  <|@  <|@
f <@~|@floating>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1136 a1149 a1148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:613) [bci: 15]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1161 
=== Succesors ===
next: v14 
=== Usages ===
v686 
=== Predecessor ===
v1186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1161 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:613) [bci: 15]
stamp: void
=== Inputs ===
value: a1136 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1136  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:613) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i776 v807 i802 i767 i309 i313 i174 i757 i267 i195 i200 v218 i225 i242 i280 i262 j765 i308 i312 i960 i785 j754 i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1138 a1142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1137 i1145 v677 v666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:613) [bci: 18]
stamp: void
trueSuccessorProbability: 0.6305692384914456
=== Inputs ===
condition: v686 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
a1136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v686 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4603854882320279160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 616
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
?48 ?129 ?62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:613) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 i47 ?62 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608450063267186394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v46 
values: i10 i313 i313 i313 
=== Succesors ===
=== Usages ===
?48 v50 i25 ?62 i313 i309 ?129 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v46 values: i10 i313 i313 i313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.032248858132847
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v45 
=== Succesors ===
next: i1137 
=== Usages ===
i47 v52 v65 v70 v393 v478 v875 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v45 #next: i1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
=== Succesors ===
next: v54 
=== Usages ===
v50 
=== Predecessor ===
v46 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1162 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i1137 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i47 y: i1137  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 0.5507111845837876
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
i1137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v51 #falseSuccessor: v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604531796888928470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1138 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1163 
=== Succesors ===
next: i1139 
=== Usages ===
a546 v1164 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1163 #next: i1139  <|@  <|@
tid ?48 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 245
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 a2 i47 - 
=== Succesors ===
=== Usages ===
v741 v742 v992 i1139 v1187 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 a2 i47 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1138 
=== Succesors ===
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?48 
guard: - 
address: v1164 
=== Succesors ===
next: v876 
=== Usages ===
v552 
=== Predecessor ===
a1138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?48 guard: - address: v1164 #next: v876  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i47 
y: i42 
=== Succesors ===
=== Usages ===
i959 v1165 v552 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i47 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i309 
y: i1139 
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i309 y: i1139  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v552 
=== Succesors ===
trueSuccessor: v872 
falseSuccessor: v875 
=== Usages ===
=== Predecessor ===
i1139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v552 #trueSuccessor: v872 #falseSuccessor: v875  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604531796888928470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1140 
=== Usages ===
a1140 
=== Predecessor ===
v876 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1140  <|@  <|@
f <@~|@floating>@ <|@
tid a546 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1138 
=== Succesors ===
=== Usages ===
v1165 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1138  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a546 
index: i309 
=== Succesors ===
=== Usages ===
a1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a546 index: i309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v872 
address: v1165 
=== Succesors ===
next: v1187 
=== Usages ===
a561 v1187 
=== Predecessor ===
v872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v872 address: v1165 #next: v1187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?48 
object: a1140 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
a1140 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?48 object: a1140 #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid a561 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1140 
=== Succesors ===
=== Usages ===
v568 v572 v96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1140  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a561 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a561  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:634) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i47 
y: i42 
=== Succesors ===
=== Usages ===
i314 i47 i47 i47 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i47 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v97 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v1187 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v97 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589530689420827488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603923513294220650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1141 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
=== Succesors ===
next: v105 
=== Usages ===
a566 v569 v690 v692 
=== Predecessor ===
v98 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1166 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
value: a1141 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1141  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v569 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
a1141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v569 #trueSuccessor: v103 #falseSuccessor: v104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603766423483315740
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v741 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?48 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?48 #next: v393  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580684095357381067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid a691 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1141 
y: a691 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1141 y: a691  <|@  <|@
tid ?129 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 a2 i47 - 
=== Succesors ===
=== Usages ===
?956 ?955 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 a2 i47 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v692 
=== Succesors ===
trueSuccessor: v115 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v692 #trueSuccessor: v115 #falseSuccessor: v109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578306291694639967
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: i119 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i119  <|@  <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4f0d3092
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a561 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a561  <|@  <|@
tid ?955 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?129 
values: - - - 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?129 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v568 
stateDuring: ?955 
=== Succesors ===
next: v133 
=== Usages ===
i132 
=== Predecessor ===
v115 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v568 stateDuring: ?955 #next: v133  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
i119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572452178122338414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid a689 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1141 
y: a689 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1141 y: a689  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v690 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v690 #trueSuccessor: v110 #falseSuccessor: v116  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533118429814864446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v742  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?48 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?48 #next: v478  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572438504676425297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: i124 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i124  <|@  <|@
f <@~|@floating>@ <|@
tid a566 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1141 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1141  <|@  <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@b5714bb
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a566 a2 a561 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a566 a2 a561  <|@  <|@
tid ?956 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?129 
values: - - - 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?129 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v572 
stateDuring: ?956 
=== Succesors ===
next: v134 
=== Usages ===
i132 
=== Predecessor ===
v116 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v572 stateDuring: ?956 #next: v134  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
i124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580680676995902788
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v130 
values: i119 i124 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v130 values: i119 i124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v133 v134 
=== Succesors ===
next: v68 
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v133 v134 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i10 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i132 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 0.9223242473295923
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v64 #falseSuccessor: v381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580290476302139003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 1
=== Inputs ===
outerFrameState: ?73 
values: a1 a2 i47 - i10 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 a2 i47 - i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?62 
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?62 #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
loopBegin: v46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4563886033999162512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589628239594268434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v451 v453 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v451 v453 #next: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589628239594268434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v46 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v46 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v65 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v46 
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v46 #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid i994 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -141595
stableDimension: 0
stamp: i32 [-141595] ⇊00000000fffdd6e5 ⇈00000000fffdd6e5
stampKind: i32
value: int[-141595|0xfffffffffffdd6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?48 
actionAndReason: i994 
speculation: a4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?48 actionAndReason: i994 speculation: a4  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4603361130390703326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:251) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v46 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v46 #next: v438  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:624) [bci: 56]
stamp: void
=== Inputs ===
result: a4 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a4 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600326692877382416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:614) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i16 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i16  <|@  <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:614) [bci: 23]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@2d1363f1
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)>
=== Inputs ===
arguments: a1 a2 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2  <|@  <|@
tid ?957 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 614
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
bci: 23
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:614) [bci: 23]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findAndRemoveHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v573 
stateDuring: ?957 
=== Succesors ===
next: v22 
=== Usages ===
i312 i25 i308 
=== Predecessor ===
v13 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v573 stateDuring: ?957 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:634) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i16 
y: i42 
=== Succesors ===
=== Usages ===
i314 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i16 
y: i42 
=== Succesors ===
=== Usages ===
i959 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i16 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
i16 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4601567647610158292
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v23 
values: i16 i47 
=== Succesors ===
=== Usages ===
?26 v28 i368 i191 i192 i191 i191 i164 i191 ?34 j746 i747 i756 v762 i767 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v23 values: i16 i47  <|@  <|@
f <@~|@floating>@ <|@
tid i959 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v23 
values: i308 i309 
=== Succesors ===
=== Usages ===
i960 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v23 values: i308 i309  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v23 
values: i312 i313 
=== Succesors ===
=== Usages ===
?165 i192 i192 i192 i192 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v23 values: i312 i313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v22 v24 
=== Succesors ===
next: v31 
=== Usages ===
i25 i959 i314 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v22 v24 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 37]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 i369 i223 i237 i233 i374 i793 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i27 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i25 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 38]
stamp: void
trueSuccessorProbability: 0.009154018920574424
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4571275966914787444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:624) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:624) [bci: 56]
stamp: void
=== Inputs ===
result: a4 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a4 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B96" 
    xhandlers
    flags 
    probability 4601495367223266034
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1142 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1163 
=== Succesors ===
next: i1143 
=== Usages ===
a575 v1179 v1167 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1163 #next: i1143  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 619
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i25 - 
=== Succesors ===
=== Usages ===
v969 i1143 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i25 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1142 
=== Succesors ===
=== Usages ===
i1143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1167 
=== Succesors ===
next: v889 
=== Usages ===
v581 v804 v778 v648 v658 v759 v276 v787 v769 j744 
=== Predecessor ===
a1142 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1167 #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid i960 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i959 
y: i42 
=== Succesors ===
=== Usages ===
v1168 v581 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i959 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i960 
y: i1143 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i960 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v581 
=== Succesors ===
trueSuccessor: v886 
falseSuccessor: v888 
=== Usages ===
=== Predecessor ===
i1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v581 #trueSuccessor: v886 #falseSuccessor: v888  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4601495367223266034
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1144 
=== Usages ===
a1144 
=== Predecessor ===
v889 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1144  <|@  <|@
f <@~|@floating>@ <|@
tid a575 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1142 
=== Succesors ===
=== Usages ===
v1173 v1171 v1168 v1170 v1172 v1174 v1175 v1176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1142  <|@  <|@
f <@~|@floating>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: i960 
=== Succesors ===
=== Usages ===
a1144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: i960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v886 
address: v1168 
=== Succesors ===
next: i1145 
=== Usages ===
a589 v590 v1169 v1178 
=== Predecessor ===
v886 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v886 address: v1168 #next: i1145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
=== Succesors ===
next: v937 
=== Usages ===
i280 i283 i368 i374 
=== Predecessor ===
a1144 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1162 #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 100]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i1145 
y: i27 
=== Succesors ===
=== Usages ===
v206 i305 v666 v168 v762 i747 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1145 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i1145 
y: i25 
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1145 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i368 
y: i27 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i368 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v370 j1034 j1043 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i369 
y: i147 
=== Succesors ===
=== Usages ===
v373 v151 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i369 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
value: a1144 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v590 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v935 
=== Usages ===
=== Predecessor ===
i1145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v590 #trueSuccessor: v936 #falseSuccessor: v935  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    probability 4586419818880082522
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v945 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v945  <|@  <|@
f <@*|@fixed>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4600712992492730023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1146 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1146  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1144 
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1178 
=== Succesors ===
next: v1019 
=== Usages ===
v1050 
=== Predecessor ===
v935 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1178 #next: v1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1050 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1146 
y: v1049 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1146 y: v1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
trueSuccessorProbability: 0.07849735111992084
=== Inputs ===
condition: v1050 
=== Succesors ===
trueSuccessor: v1017 
falseSuccessor: v1016 
=== Usages ===
=== Predecessor ===
v1146 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1050 #trueSuccessor: v1017 #falseSuccessor: v1016  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4584500886934378315
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1147 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1147  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1144 
=== Succesors ===
=== Usages ===
a1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
=== Succesors ===
next: v151 
=== Usages ===
a595 
=== Predecessor ===
v1017 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1169 #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid a595 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1147 
=== Succesors ===
=== Usages ===
a330 a330 a496 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1147  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.8554295858465635
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v149 
falseSuccessor: v150 
=== Usages ===
=== Predecessor ===
a1147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v149 #falseSuccessor: v150  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4583222354546656621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1148 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1161 
=== Succesors ===
next: v161 
=== Usages ===
v1134 
=== Predecessor ===
v149 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1161 #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
value: a1148 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1148  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.6758796339967927
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
a1148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v156 #falseSuccessor: v160  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4580770340825029651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B73" 
    xhandlers
    flags 
    probability 4576057649224307380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B73" 
    xhandlers
    flags 
    probability 4571764151704569718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v150 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600160263397357874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1020 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1020  <|@  <|@
f <@*|@fixed>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
v1016 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B25" "B32" 
    successors "B34" "B72" 
    xhandlers
    flags 
    probability 4600942638127893885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v945 v1020 
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v945 v1020 #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid a589 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1144 
=== Succesors ===
=== Usages ===
a330 a496 a330 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.8554295858465635
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v371 #falseSuccessor: v372  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B71" 
    xhandlers
    flags 
    probability 4599891464013958746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1149 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1161 
=== Succesors ===
next: v503 
=== Usages ===
v695 
=== Predecessor ===
v371 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1161 #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
value: a1149 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1149  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.6758796339967927
=== Inputs ===
condition: v695 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
a1149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v695 #trueSuccessor: v501 #falseSuccessor: v502  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4597575752192850016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B29" "B35" 
    successors "B37" "B42" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a496 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v487 
values: a595 a589 
=== Succesors ===
=== Usages ===
?34 a330 ?341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v487 values: a595 a589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v488 v489 
=== Succesors ===
next: v1061 
=== Usages ===
a496 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v488 v489 #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid j746 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i25 
=== Succesors ===
=== Usages ===
j751 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i747 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i374 
y: i25 
=== Succesors ===
=== Usages ===
j748 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i374 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i747 
=== Succesors ===
=== Usages ===
j750 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i747  <|@  <|@
f <@~|@floating>@ <|@
tid j749 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j750 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j750 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j748 
y: j749 
=== Succesors ===
=== Usages ===
j751 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j748 y: j749  <|@  <|@
f <@~|@floating>@ <|@
tid j751 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j746 
y: j750 
=== Succesors ===
=== Usages ===
j752 j765 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j746 y: j750  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j752 j774 j783 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j752 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j751 
y: j745 
=== Succesors ===
=== Usages ===
j754 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j751 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j752 
y: i42 
=== Succesors ===
=== Usages ===
v758 j774 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j752 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i374 
=== Succesors ===
=== Usages ===
v1061 v1077 v1093 v1109 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i25 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1143 
=== Succesors ===
=== Usages ===
v758 v768 v777 v786 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1143  <|@  <|@
f <@~|@floating>@ <|@
tid i756 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i25 
y: i42 
=== Succesors ===
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i25 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i757 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i756 
y: i42 
=== Succesors ===
=== Usages ===
v759 i776 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i756 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1060 
falseSuccessor: v1057 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1060 #falseSuccessor: v1057  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B41" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1069 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j754 
y: j744 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j754 y: j744  <|@  <|@
f <@~|@floating>@ <|@
tid i982 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -154651
stableDimension: 0
stamp: i32 [-154651] ⇊00000000fffda3e5 ⇈00000000fffda3e5
stampKind: i32
value: int[-154651|0xfffffffffffda3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i978 i978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v758 
=== Succesors ===
trueSuccessor: v1068 
falseSuccessor: v1065 
=== Usages ===
=== Predecessor ===
v1060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v758 #trueSuccessor: v1068 #falseSuccessor: v1065  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i757 
y: i1143 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i757 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v1058 
falseSuccessor: v1066 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v1058 #falseSuccessor: v1066  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1056  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1054 
=== Predecessor ===
v1058 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1182 
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1182  <|@  <|@
f <@*|@fixed>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1066 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v981  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1065 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1055 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1055  <|@  <|@
f <@*|@fixed>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1054 
=== Predecessor ===
v1057 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B39" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1055 v1056 
=== Succesors ===
next: v1077 
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1055 v1056 #next: v1077  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j751 
y: i42 
=== Succesors ===
=== Usages ===
v768 j783 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j751 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i25 
y: i42 
=== Succesors ===
=== Usages ===
v769 i785 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i25 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1076 
falseSuccessor: v1073 
=== Usages ===
=== Predecessor ===
v1054 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1076 #falseSuccessor: v1073  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1085 
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1085  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j765 
y: j744 
=== Succesors ===
=== Usages ===
v1085 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j765 y: j744  <|@  <|@
f <@~|@floating>@ <|@
tid i984 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -157979
stableDimension: 0
stamp: i32 [-157979] ⇊00000000fffd96e5 ⇈00000000fffd96e5
stampKind: i32
value: int[-157979|0xfffffffffffd96e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i978 i978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v768 
=== Succesors ===
trueSuccessor: v1084 
falseSuccessor: v1081 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v768 #trueSuccessor: v1084 #falseSuccessor: v1081  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i767 
y: i1143 
=== Succesors ===
=== Usages ===
v1083 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i767 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v769 
=== Succesors ===
trueSuccessor: v1074 
falseSuccessor: v1082 
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v769 #trueSuccessor: v1074 #falseSuccessor: v1082  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1072 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1072  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
v1074 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1183 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1183  <|@  <|@
f <@*|@fixed>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1082 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v983  <|@  <|@
f <@*|@fixed>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1081 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1071 
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1071  <|@  <|@
f <@*|@fixed>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
v1073 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B46" 
    successors "B51" "B56" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1071 v1072 
=== Succesors ===
next: v1093 
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1071 v1072 #next: v1093  <|@  <|@
f <@*|@fixed>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1092 
falseSuccessor: v1089 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1092 #falseSuccessor: v1089  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid j774 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j754 
y: j745 
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j754 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j774 
y: j744 
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j774 y: j744  <|@  <|@
f <@~|@floating>@ <|@
tid i986 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -160539
stableDimension: 0
stamp: i32 [-160539] ⇊00000000fffd8ce5 ⇈00000000fffd8ce5
stampKind: i32
value: int[-160539|0xfffffffffffd8ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i978 i978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v777 
=== Succesors ===
trueSuccessor: v1100 
falseSuccessor: v1097 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v777 #trueSuccessor: v1100 #falseSuccessor: v1097  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid i776 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i757 
y: i42 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i757 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i776 
y: i1143 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i776 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v778 
=== Succesors ===
trueSuccessor: v1090 
falseSuccessor: v1098 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v778 #trueSuccessor: v1090 #falseSuccessor: v1098  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v1099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
v1090 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1184 
=== Usages ===
=== Predecessor ===
v1099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1184  <|@  <|@
f <@*|@fixed>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1098 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v985  <|@  <|@
f <@*|@fixed>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1097 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1087  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
v1089 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B53" 
    successors "B58" "B64" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1087 v1088 
=== Succesors ===
next: v1109 
=== Usages ===
v782 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1087 v1088 #next: v1109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1108 
falseSuccessor: v1105 
=== Usages ===
=== Predecessor ===
v1086 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1108 #falseSuccessor: v1105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1117  <|@  <|@
f <@~|@floating>@ <|@
tid j783 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j765 
y: j745 
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j765 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j783 
y: j744 
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j783 y: j744  <|@  <|@
f <@~|@floating>@ <|@
tid i976 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -163611
stableDimension: 0
stamp: i32 [-163611] ⇊00000000fffd80e5 ⇈00000000fffd80e5
stampKind: i32
value: int[-163611|0xfffffffffffd80e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i978 i978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v786 
=== Succesors ===
trueSuccessor: v1116 
falseSuccessor: v1113 
=== Usages ===
=== Predecessor ===
v1108 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v786 #trueSuccessor: v1116 #falseSuccessor: v1113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1115  <|@  <|@
f <@~|@floating>@ <|@
tid i785 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i767 
y: i42 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i767 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i785 
y: i1143 
=== Succesors ===
=== Usages ===
v1115 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i785 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v787 
=== Succesors ===
trueSuccessor: v1106 
falseSuccessor: v1114 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v787 #trueSuccessor: v1106 #falseSuccessor: v1114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1104 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
v1106 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v975  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1113 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B41" "B48" "B55" "B40" "B47" "B54" "B61" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i978 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-163611 - -154651] ⇊00000000fffd80e5 ⇈00000000fffdbfe5
valueDescription: i32
=== Inputs ===
merge: v974 
values: i976 i982 i984 i986 i982 i984 i986 i976 
=== Succesors ===
=== Usages ===
v980 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v974 values: i976 i982 i984 i986 i982 i984 i986 i976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v975 v981 v983 v985 v1182 v1183 v1184 v1185 
=== Succesors ===
next: v980 
=== Usages ===
i978 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v975 v981 v983 v985 v1182 v1183 v1184 v1185 #next: v980  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 620
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i25 - a496 
=== Succesors ===
=== Usages ===
v980 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i25 - a496  <|@  <|@
f <@~|@floating>@ <|@
tid a977 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@466068644
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@466068644]
=== Inputs ===
=== Succesors ===
=== Usages ===
v980 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?34 
actionAndReason: i978 
speculation: a977 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?34 actionAndReason: i978 speculation: a977  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B65" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1103  <|@  <|@
f <@*|@fixed>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
v1105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1103 v1104 
=== Succesors ===
next: v162 
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1103 v1104 #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v1102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B67" "B70" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602581886650062546
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v163 
values: i25 i174 
=== Succesors ===
=== Usages ===
?165 v168 i191 i174 i267 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v163 values: i25 i174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.9698005896823043
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v162 
=== Succesors ===
next: v173 
=== Usages ===
i164 v170 v189 v914 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v162 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i164 
y: i374 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i164 y: i374  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.49233439910722987
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v170 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v169 #falseSuccessor: v170  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597941681925458370
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1150 
=== Usages ===
v764 v791 v782 v773 
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1142 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1179 
=== Succesors ===
next: v915 
=== Usages ===
v1052 
=== Predecessor ===
v169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1179 #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1052 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1150 
y: v1051 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1150 y: v1051  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v911 
falseSuccessor: v914 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v911 #falseSuccessor: v914  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B66" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597941681925458370
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1151 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1151  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1054 v169 
=== Succesors ===
=== Usages ===
a1151 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1054 v169  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 44]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i164 
y: i42 
=== Succesors ===
=== Usages ===
i164 i262 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i164 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i174 
y: i42 
=== Succesors ===
=== Usages ===
j1157 v1170 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i174 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: i262 
=== Succesors ===
=== Usages ===
a1151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: i262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v764 
address: v1170 
=== Succesors ===
next: v624 
=== Usages ===
v624 
=== Predecessor ===
v911 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v764 address: v1170 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1070 v169 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1070 v169  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i164 
y: i42 
=== Succesors ===
=== Usages ===
j1159 v1171 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i164 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: i267 
=== Succesors ===
=== Usages ===
v624 j1033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: i267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v773 
address: v1171 
value: a1151 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1033 
=== Usages ===
=== Predecessor ===
a1151 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v773 address: v1171 value: a1151 stateAfter: - lastLocationAccess: - #next: j1033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1171 
=== Succesors ===
next: v1038 
=== Usages ===
j1034 
=== Predecessor ===
v624 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1171 #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid j1034 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1033 
y: i147 
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1033 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid j1037 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1180 v1181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1034 
index: j1037 
=== Succesors ===
=== Usages ===
v1038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1034 index: j1037  <|@  <|@
f <@~|@floating>@ <|@
tid i1039 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1038 v1046 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
value: i1039 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1152 
=== Usages ===
=== Predecessor ===
j1033 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1180 value: i1039 stateAfter: - lastLocationAccess: - #next: a1152  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1086 v169 
=== Succesors ===
=== Usages ===
a1152 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1086 v169  <|@  <|@
f <@~|@floating>@ <|@
tid j1157 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i262 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i262  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: j1157 
=== Succesors ===
=== Usages ===
a1152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: j1157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1152 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v782 
address: v1172 
=== Succesors ===
next: v646 
=== Usages ===
v646 
=== Predecessor ===
v1038 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v782 address: v1172 #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1102 v169 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1102 v169  <|@  <|@
f <@~|@floating>@ <|@
tid j1159 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i267 
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i267  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: j1159 
=== Succesors ===
=== Usages ===
v646 j1042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: j1159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v791 
address: v1173 
value: a1152 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1042 
=== Usages ===
=== Predecessor ===
a1152 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v791 address: v1173 value: a1152 stateAfter: - lastLocationAccess: - #next: j1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1173 
=== Succesors ===
next: v1046 
=== Usages ===
j1043 
=== Predecessor ===
v646 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1173 #next: v1046  <|@  <|@
f <@~|@floating>@ <|@
tid j1043 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1042 
y: i147 
=== Succesors ===
=== Usages ===
v1181 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1042 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1043 
index: j1037 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1043 index: j1037  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1181 
value: i1039 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
j1042 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1181 value: i1039 stateAfter: - lastLocationAccess: - #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
loopBegin: v163 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v163  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v163 
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v163 #next: v912  <|@  <|@
tid ?341 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 621
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - a496 
=== Succesors ===
=== Usages ===
?165 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a496  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: ?341 
values: a1 - i164 - i314 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?341 values: a1 - i164 - i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 613
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@1506260085]
stamp: void
=== Inputs ===
stateBefore: ?165 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B73" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:643) [bci: 69]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v163 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v163 #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v170 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B73" 
    xhandlers
    flags 
    probability 4592728333242747047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B73" 
    xhandlers
    flags 
    probability 4588570213947275542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v376  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" "B70" "B72" "B71" 
    successors "B74" "B94" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v158 
values: i25 i25 i164 i25 i25 
=== Succesors ===
=== Usages ===
?193 i195 i793 v807 ?202 ?203 v206 i216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v158 values: i25 i25 i164 i25 i25  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v158 
values: i314 i314 i25 i314 i314 
=== Succesors ===
=== Usages ===
?193 v685 ?202 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v158 values: i314 i314 i25 i314 i314  <|@  <|@
f <@~|@floating>@ <|@
tid a330 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v158 
values: a595 a595 a496 a589 a589 
=== Succesors ===
=== Usages ===
v300 v303 v299 v302 ?340 ?348 ?346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v158 values: a595 a595 a496 a589 a589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v157 v159 v190 v376 v506 
=== Succesors ===
next: v919 
=== Usages ===
i191 i192 a330 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v157 v159 v190 v376 v506 #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i191 
y: i42 
=== Succesors ===
=== Usages ===
v1174 i200 v648 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i191 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i195 
y: i1143 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i195 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v648 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v918 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v648 #trueSuccessor: v916 #falseSuccessor: v918  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B93" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v923 
=== Usages ===
v656 
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v923  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i195 
y: i42 
=== Succesors ===
=== Usages ===
v1175 v658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i195 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i200 
y: i1143 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i200 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v658 
=== Succesors ===
trueSuccessor: v920 
falseSuccessor: v922 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v658 #trueSuccessor: v920 #falseSuccessor: v922  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B87" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
v665 
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: i195 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: i195  <|@  <|@
f <@~|@floating>@ <|@
tid a701 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 v665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v916 
address: v1174 
value: a701 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v916 address: v1174 value: a701 stateAfter: - lastLocationAccess: - #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: i200 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: i200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v920 
address: v1175 
value: a701 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v920 address: v1175 value: a701 stateAfter: - lastLocationAccess: - #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:648) [bci: 91]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i191 
y: i374 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i191 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1153 v680 i1155 v682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:648) [bci: 91]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.640014121444422
=== Inputs ===
condition: v206 
=== Succesors ===
trueSuccessor: v207 
falseSuccessor: v208 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v206 #trueSuccessor: v207 #falseSuccessor: v208  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4598678928675949137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 94]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i191 
y: i42 
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i191 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v1121 
falseSuccessor: v1124 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v1121 #falseSuccessor: v1124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1119 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
v1121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B86" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1131  <|@  <|@
f <@~|@floating>@ <|@
tid i793 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i191 
y: i27 
=== Succesors ===
=== Usages ===
i802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i191 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i802 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i793 
y: i42 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i793 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i802 
y: i1143 
=== Succesors ===
=== Usages ===
v1131 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i802 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v1122 
falseSuccessor: v1130 
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v1122 #falseSuccessor: v1130  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1120 
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1120  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
v1122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 4598678928675949137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1119 v1120 
=== Succesors ===
next: v666 
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1119 v1120 #next: v666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 101]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
value: i374 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1153 
=== Usages ===
=== Predecessor ===
v1118 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1162 value: i374 stateAfter: - lastLocationAccess: - #next: i1153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 130]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
=== Succesors ===
next: v214 
=== Usages ===
i1053 
=== Predecessor ===
v666 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 #next: v214  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
i1153 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B84" 
    successors "B82" "B83" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599134038124305116
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i191 i223 
=== Succesors ===
=== Usages ===
i223 v218 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i191 i223  <|@  <|@
f <@~|@floating>@ <|@
tid i305 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i374 i233 
=== Succesors ===
=== Usages ===
i233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i374 i233  <|@  <|@
f <@~|@floating>@ <|@
tid i1053 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i1153 i237 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i1153 i237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0908890324817575
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v214 
=== Succesors ===
next: v222 
=== Usages ===
i216 v219 v229 v240 i305 i1053 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v214 #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 105]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i42 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i216 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 105]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.1273946083388714
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v221 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v219 #falseSuccessor: v221  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 4585727882059693200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v215 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v215 #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a330 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a330 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598438155496317770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 108]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1154 
=== Usages ===
v809 
=== Predecessor ===
v222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1154  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1118 v221 
=== Succesors ===
=== Usages ===
a1154 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1118 v221  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i216 
y: i27 
=== Succesors ===
=== Usages ===
i216 i225 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i216 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i223 
y: i42 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i223 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: i225 
=== Succesors ===
=== Usages ===
a1154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: i225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1154 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v809 
address: v1176 
=== Succesors ===
next: v231 
=== Usages ===
v704 
=== Predecessor ===
v221 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v809 address: v1176 #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 115]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
value: a1154 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 115]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.09548013245033116
=== Inputs ===
condition: v704 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
a1154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v704 #trueSuccessor: v228 #falseSuccessor: v229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B81" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582938972582119604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 118]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 124]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i305 
y: i27 
=== Succesors ===
=== Usages ===
v677 i305 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i305 y: i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 125]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
value: i233 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1162 value: i233 stateAfter: - lastLocationAccess: - #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 134]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i1053 
y: i27 
=== Succesors ===
=== Usages ===
v680 i1053 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1053 y: i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 135]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
value: i237 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1177 value: i237 stateAfter: - lastLocationAccess: - #next: v240  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
loopBegin: v215 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4597790872550647165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v215 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v215 #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a330 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a330 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid a1008 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@722296218
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@722296218]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1007 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171291
stableDimension: 0
stamp: i32 [-171291] ⇊00000000fffd62e5 ⇈00000000fffd62e5
stampKind: i32
value: int[-171291|0xfffffffffffd62e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1009 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v1130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4594800897385169216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1143 
y: i275 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1143 y: i275  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v276 
=== Succesors ===
trueSuccessor: v931 
falseSuccessor: v929 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v276 #trueSuccessor: v931 #falseSuccessor: v929  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1012 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid i1013 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -175123
stableDimension: 0
stamp: i32 [-175123] ⇊00000000fffd53ed ⇈00000000fffd53ed
stampKind: i32
value: int[-175123|0xfffffffffffd53ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1009 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v931 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1009 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-175123 - -171291] ⇊00000000fffd42e5 ⇈00000000fffd73ed
valueDescription: i32
=== Inputs ===
merge: v1005 
values: i1007 i1013 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1005 values: i1007 i1013  <|@  <|@
f <@~|@floating>@ <|@
tid a1010 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1005 
values: a1008 a4 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1005 values: a1008 a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1006 v1012 
=== Succesors ===
next: v1011 
=== Usages ===
i1009 a1010 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1006 v1012 #next: v1011  <|@  <|@
tid ?348 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 621
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - a330 
=== Succesors ===
=== Usages ===
?202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a330  <|@  <|@
tid ?202 <|@
d <@d|@=== Debug Properties ===
bci: 81
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 647
stackSize: 0
=== Inputs ===
outerFrameState: ?348 
values: a1 - i191 - i192 
=== Succesors ===
=== Usages ===
?203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?348 values: a1 - i191 - i192  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?202 
values: a1 i191 a4 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?202 values: a1 i191 a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?203 
actionAndReason: i1009 
speculation: a1010 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?203 actionAndReason: i1009 speculation: a1010  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4594800897385169216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1155 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 146]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
=== Succesors ===
next: v682 
=== Usages ===
i242 
=== Predecessor ===
v929 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid i242 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 150]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i1155 
y: i42 
=== Succesors ===
=== Usages ===
v682 v285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1155 y: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 151]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
value: i242 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
i1155 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1177 value: i242 stateAfter: - lastLocationAccess: - #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i1145 
y: i42 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1145 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i283 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i283 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i1145 
y: i282 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1145 y: i282  <|@  <|@
f <@~|@floating>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-1610612736 - 1610612734]
=== Inputs ===
x: i280 
y: i283 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i280 y: i283  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i242 
y: i284 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i242 y: i284  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.9807503712628541
=== Inputs ===
condition: v285 
=== Succesors ===
trueSuccessor: v286 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
v682 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v285 #trueSuccessor: v286 #falseSuccessor: v287  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4594692466592375543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:478) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v303  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a330 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a330 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4569085993265107542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: i290 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i290  <|@  <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6c330a44
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.compressLarge(int)>
=== Inputs ===
arguments: a1 i192 
=== Succesors ===
=== Usages ===
i290 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i192  <|@  <|@
tid ?340 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 621
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - a330 
=== Succesors ===
=== Usages ===
?294 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a330  <|@  <|@
tid ?294 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 658
stackSize: 0
=== Inputs ===
outerFrameState: ?340 
values: - - - - - 
=== Succesors ===
=== Usages ===
?958 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?340 values: - - - - -  <|@  <|@
tid ?958 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<EconomicMapImpl.maybeCompress(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: ?294 
values: - - 
=== Succesors ===
=== Usages ===
i290 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?294 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i290 <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.compressLarge
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v685 
stateDuring: ?958 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v685 stateDuring: ?958 #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a330 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i290 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a330 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid i1004 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -168731
stableDimension: 0
stamp: i32 [-168731] ⇊00000000fffd6ce5 ⇈00000000fffd6ce5
stampKind: i32
value: int[-168731|0xfffffffffffd6ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1000 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
v922 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@~|@floating>@ <|@
tid i999 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -166171
stableDimension: 0
stamp: i32 [-166171] ⇊00000000fffd76e5 ⇈00000000fffd76e5
stampKind: i32
value: int[-166171|0xfffffffffffd76e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1000 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
v918 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1000 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-168731 - -166171] ⇊00000000fffd64e5 ⇈00000000fffd7ee5
valueDescription: i32
=== Inputs ===
merge: v997 
values: i999 i1004 
=== Succesors ===
=== Usages ===
v1002 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v997 values: i999 i1004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v998 v1003 
=== Succesors ===
next: v1002 
=== Usages ===
i1000 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v998 v1003 #next: v1002  <|@  <|@
tid ?346 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 621
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - a330 
=== Succesors ===
=== Usages ===
?193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a330  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 646
stackSize: 0
=== Inputs ===
outerFrameState: ?346 
values: a1 - i191 - i192 
=== Succesors ===
=== Usages ===
v1002 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?346 values: a1 - i191 - i192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?193 
actionAndReason: i1000 
speculation: a4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?193 actionAndReason: i1000 speculation: a4  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid i971 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149019
stableDimension: 0
stamp: i32 [-149019] ⇊00000000fffdb9e5 ⇈00000000fffdb9e5
stampKind: i32
value: int[-149019|0xfffffffffffdb9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?26 
actionAndReason: i971 
speculation: a4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?26 actionAndReason: i971 speculation: a4  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1186 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1186  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v685 v1161 v573 ?957 ?73 ?193 ?26 ?165 ?34 ?48 v1162 v1163 ?129 ?62 ?202 v1166 ?203 v1177 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:609) [bci: 1]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 ?203 v438 v1002 a1010 v969 v992 ?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 609
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a4 - - 
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a4 - -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 v1186 ?62 v573 ?48 ?129 v96 v568 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a1136 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a1136  <|@  <|@
f <@~|@floating>@ <|@
tid v1161 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1136 a1149 a1148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1136 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:613) [bci: 15]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1161 
=== Succesors ===
next: v14 
=== Usages ===
v686 
=== Predecessor ===
v1186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1161 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:613) [bci: 15]
stamp: void
=== Inputs ===
value: a1136 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1136  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:613) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i776 v807 i802 i767 i309 i313 i174 i757 i267 i195 i200 v218 i225 i242 i280 i262 j765 i308 i312 i960 i785 j754 i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1138 a1142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1162 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1137 i1145 v677 v666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:613) [bci: 18]
stamp: void
trueSuccessorProbability: 0.6305692384914456
=== Inputs ===
condition: v686 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
a1136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v686 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4a1c3ef0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:609) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6305692384914456 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4603854882320279160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid v1166 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 616
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
?48 ?129 ?62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:613) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 i47 ?62 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608450063267186394
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i47 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v46 
values: i10 i313 i313 i313 
=== Succesors ===
=== Usages ===
?48 v50 i25 ?62 i313 i309 ?129 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v46 values: i10 i313 i313 i313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.032248858132847
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v45 
=== Succesors ===
next: i1137 
=== Usages ===
i47 v52 v65 v70 v393 v478 v875 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v45 #next: i1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1137 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
=== Succesors ===
next: v54 
=== Usages ===
v50 
=== Predecessor ===
v46 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1162 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i1137 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i47 y: i1137  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 0.5507111845837876
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
i1137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v51 #falseSuccessor: v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604531796888928470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1138 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1138 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1163 
=== Succesors ===
next: i1139 
=== Usages ===
a546 v1164 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1163 #next: i1139  <|@  <|@
tid ?48 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 245
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 a2 i47 - 
=== Succesors ===
=== Usages ===
v741 v742 v992 i1139 v1187 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 a2 i47 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1164 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1138 
=== Succesors ===
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1139 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?48 
guard: - 
address: v1164 
=== Succesors ===
next: v876 
=== Usages ===
v552 
=== Predecessor ===
a1138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?48 guard: - address: v1164 #next: v876  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i47 
y: i42 
=== Succesors ===
=== Usages ===
i959 v1165 v552 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i47 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i309 
y: i1139 
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i309 y: i1139  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v552 
=== Succesors ===
trueSuccessor: v872 
falseSuccessor: v875 
=== Usages ===
=== Predecessor ===
i1139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v552 #trueSuccessor: v872 #falseSuccessor: v875  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v5|DWORD, y: [v4|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 32] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604531796888928470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1140 
=== Usages ===
a1140 
=== Predecessor ===
v876 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1140  <|@  <|@
f <@~|@floating>@ <|@
tid a546 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1138 
=== Succesors ===
=== Usages ===
v1165 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1138  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
result [v6|QWORD[.] + v5|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a546 
index: i309 
=== Succesors ===
=== Usages ===
a1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a546 index: i309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1140 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v872 
address: v1165 
=== Succesors ===
next: v1187 
=== Usages ===
a561 v1187 
=== Predecessor ===
v872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v872 address: v1165 #next: v1187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?48 
object: a1140 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
a1140 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?48 object: a1140 #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid a561 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1140 
=== Succesors ===
=== Usages ===
v568 v572 v96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1140  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a561 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a561  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:634) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i47 
y: i42 
=== Succesors ===
=== Usages ===
i314 i47 i47 i47 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i47 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v97 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v1187 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v97 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v6|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v7|DWORD[.] * 8] state [bci:2, 32] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589530689420827488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603923513294220650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1141 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1141 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
=== Succesors ===
next: v105 
=== Usages ===
a566 v569 v690 v692 
=== Predecessor ===
v98 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1166 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
value: a1141 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1141  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v569 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
a1141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v569 #trueSuccessor: v103 #falseSuccessor: v104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603766423483315740
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v741 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?48 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?48 #next: v393  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 32] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580684095357381067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid a691 <|@
result NarrowOop[Equivalence$1@1642007824] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1141 
y: a691 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1141 y: a691  <|@  <|@
tid ?129 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 0
=== Inputs ===
outerFrameState: ?73 
values: a1 a2 i47 - 
=== Succesors ===
=== Usages ===
?956 ?955 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 a2 i47 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v692 
=== Succesors ===
trueSuccessor: v115 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v692 #trueSuccessor: v115 #falseSuccessor: v109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578306291694639967
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: i119 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i119  <|@  <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4f0d3092
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a561 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a561  <|@  <|@
tid ?955 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?129 
values: - - - 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?129 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i119 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v568 
stateDuring: ?955 
=== Succesors ===
next: v133 
=== Usages ===
i132 
=== Predecessor ===
v115 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v568 stateDuring: ?955 #next: v133  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
i119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 32] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572452178122338414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid a689 <|@
result NarrowOop[Equivalence$3@1213634123] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1141 
y: a689 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1141 y: a689  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v690 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v690 #trueSuccessor: v110 #falseSuccessor: v116  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533118429814864446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v742  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?48 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?48 #next: v478  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 32] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572438504676425297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: i124 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i124  <|@  <|@
f <@~|@floating>@ <|@
tid a566 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1141 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1141  <|@  <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@b5714bb
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a566 a2 a561 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a566 a2 a561  <|@  <|@
tid ?956 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?129 
values: - - - 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?129 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i124 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v572 
stateDuring: ?956 
=== Succesors ===
next: v134 
=== Usages ===
i132 
=== Predecessor ===
v116 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v572 stateDuring: ?956 #next: v134  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
i124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 32] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580680676995902788
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i132 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v130 
values: i119 i124 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v130 values: i119 i124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v133 v134 
=== Succesors ===
next: v68 
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v133 v134 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i10 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i132 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
trueSuccessorProbability: 0.9223242473295923
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v64 #falseSuccessor: v381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580290476302139003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 1
=== Inputs ===
outerFrameState: ?73 
values: a1 a2 i47 - i10 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a1 a2 i47 - i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?62 
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?62 #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
loopBegin: v46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 32] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4563886033999162512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589628239594268434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v451 v453 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v451 v453 #next: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589628239594268434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v46 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v46 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v65 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD, v5|DWORD, v9|DWORD] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v46 
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v46 #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid i994 <|@
result int[-141595|0xfffffffffffdd6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -141595
stableDimension: 0
stamp: i32 [-141595] ⇊00000000fffdd6e5 ⇈00000000fffdd6e5
stampKind: i32
value: int[-141595|0xfffffffffffdd6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?48 
actionAndReason: i994 
speculation: a4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?48 actionAndReason: i994 speculation: a4  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -141595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:2, 32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4603361130390703326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:251) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v46 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v46 #next: v438  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:624) [bci: 56]
stamp: void
=== Inputs ===
result: a4 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a4 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600326692877382416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:614) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i16 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i16  <|@  <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:614) [bci: 23]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@2d1363f1
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)>
=== Inputs ===
arguments: a1 a2 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2  <|@  <|@
tid ?957 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 614
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i16 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 23
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:614) [bci: 23]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findAndRemoveHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v573 
stateDuring: ?957 
=== Succesors ===
next: v22 
=== Usages ===
i312 i25 i308 
=== Predecessor ===
v13 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v573 stateDuring: ?957 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:634) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i16 
y: i42 
=== Succesors ===
=== Usages ===
i314 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i16 
y: i42 
=== Succesors ===
=== Usages ===
i959 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i16 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
i16 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:614) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD, v17|DWORD, v16|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4601567647610158292
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i25 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v23 
values: i16 i47 
=== Succesors ===
=== Usages ===
?26 v28 i368 i191 i192 i191 i191 i164 i191 ?34 j746 i747 i756 v762 i767 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v23 values: i16 i47  <|@  <|@
f <@~|@floating>@ <|@
tid i959 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v23 
values: i308 i309 
=== Succesors ===
=== Usages ===
i960 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v23 values: i308 i309  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v23 
values: i312 i313 
=== Succesors ===
=== Usages ===
?165 i192 i192 i192 i192 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v23 values: i312 i313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v22 v24 
=== Succesors ===
next: v31 
=== Usages ===
i25 i959 i314 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v22 v24 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 37]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 i369 i223 i237 i233 i374 i793 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i27 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i25 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 38]
stamp: void
trueSuccessorProbability: 0.009154018920574424
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD, v19|DWORD, v20|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.009154018920574424 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4571275966914787444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:624) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:624) [bci: 56]
stamp: void
=== Inputs ===
result: a4 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a4 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B96" 
    xhandlers
    flags 
    probability 4601495367223266034
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1142 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1142 <|@
result v21|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1163 
=== Succesors ===
next: i1143 
=== Usages ===
a575 v1179 v1167 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1163 #next: i1143  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 619
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i25 - 
=== Succesors ===
=== Usages ===
v969 i1143 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i25 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
result [v21|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1142 
=== Succesors ===
=== Usages ===
i1143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1143 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1167 
=== Succesors ===
next: v889 
=== Usages ===
v581 v804 v778 v648 v658 v759 v276 v787 v769 j744 
=== Predecessor ===
a1142 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1167 #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid i960 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i959 
y: i42 
=== Succesors ===
=== Usages ===
v1168 v581 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i959 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i960 
y: i1143 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i960 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v581 
=== Succesors ===
trueSuccessor: v886 
falseSuccessor: v888 
=== Usages ===
=== Predecessor ===
i1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v581 #trueSuccessor: v886 #falseSuccessor: v888  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
locals: v0|QWORD[.] - v18|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[.] * 8 + 12] size: DWORD state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4601495367223266034
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1144 
=== Usages ===
a1144 
=== Predecessor ===
v889 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1144  <|@  <|@
f <@~|@floating>@ <|@
tid a575 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1142 
=== Succesors ===
=== Usages ===
v1173 v1171 v1168 v1170 v1172 v1174 v1175 v1176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1142  <|@  <|@
f <@~|@floating>@ <|@
tid v1168 <|@
result [v24|QWORD[.] + v23|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: i960 
=== Succesors ===
=== Usages ===
a1144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: i960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1144 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v886 
address: v1168 
=== Succesors ===
next: i1145 
=== Usages ===
a589 v590 v1169 v1178 
=== Predecessor ===
v886 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v886 address: v1168 #next: i1145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1145 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
=== Succesors ===
next: v937 
=== Usages ===
i280 i283 i368 i374 
=== Predecessor ===
a1144 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1162 #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 100]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i1145 
y: i27 
=== Succesors ===
=== Usages ===
v206 i305 v666 v168 v762 i747 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1145 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i1145 
y: i25 
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1145 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i368 
y: i27 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i368 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v370 j1034 j1043 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i369 
y: i147 
=== Succesors ===
=== Usages ===
v373 v151 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i369 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
value: a1144 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v590 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v935 
=== Usages ===
=== Predecessor ===
i1145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v590 #trueSuccessor: v936 #falseSuccessor: v935  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v24|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v26|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD[.], y: v25|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    probability 4586419818880082522
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v945 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v945  <|@  <|@
f <@*|@fixed>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4600712992492730023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1146 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1146  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
result [v25|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1144 
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1146 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1178 
=== Succesors ===
next: v1019 
=== Usages ===
v1050 
=== Predecessor ===
v935 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1178 #next: v1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1050 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1146 
y: v1049 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1146 y: v1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v1019 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
trueSuccessorProbability: 0.07849735111992084
=== Inputs ===
condition: v1050 
=== Succesors ===
trueSuccessor: v1017 
falseSuccessor: v1016 
=== Usages ===
=== Predecessor ===
v1146 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1050 #trueSuccessor: v1017 #falseSuccessor: v1016  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v25|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07849735111992084 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4584500886934378315
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1147 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1147  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
result [v25|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1144 
=== Succesors ===
=== Usages ===
a1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1147 <|@
result v30|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
=== Succesors ===
next: v151 
=== Usages ===
a595 
=== Predecessor ===
v1017 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1169 #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid a595 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1147 
=== Succesors ===
=== Usages ===
a330 a330 a496 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1147  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.8554295858465635
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v149 
falseSuccessor: v150 
=== Usages ===
=== Predecessor ===
a1147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v149 #falseSuccessor: v150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v25|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v29|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4583222354546656621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1148 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1148 <|@
result v32|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1161 
=== Succesors ===
next: v161 
=== Usages ===
v1134 
=== Predecessor ===
v149 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1161 #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
value: a1148 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1148  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.6758796339967927
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
a1148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v156 #falseSuccessor: v160  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD[.], y: v32|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4580770340825029651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.]] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B73" 
    xhandlers
    flags 
    probability 4576057649224307380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD, v20|DWORD, v31|QWORD[.]] destination: B30 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B73" 
    xhandlers
    flags 
    probability 4571764151704569718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v150 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD, v20|DWORD, v31|QWORD[.]] destination: B31 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600160263397357874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1020 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1020  <|@  <|@
f <@*|@fixed>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
v1016 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B25" "B32" 
    successors "B34" "B72" 
    xhandlers
    flags 
    probability 4600942638127893885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v945 v1020 
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v945 v1020 #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid a589 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1144 
=== Succesors ===
=== Usages ===
a330 a496 a330 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.8554295858465635
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v371 #falseSuccessor: v372  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v29|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B71" 
    xhandlers
    flags 
    probability 4599891464013958746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1149 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1149 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1161 
=== Succesors ===
next: v503 
=== Usages ===
v695 
=== Predecessor ===
v371 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1161 #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
value: a1149 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1149  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.6758796339967927
=== Inputs ===
condition: v695 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
a1149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v695 #trueSuccessor: v501 #falseSuccessor: v502  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4597575752192850016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B29" "B35" 
    successors "B37" "B42" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a496 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v487 
values: a595 a589 
=== Succesors ===
=== Usages ===
?34 a330 ?341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v487 values: a595 a589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v488 v489 
=== Succesors ===
next: v1061 
=== Usages ===
a496 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v488 v489 #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid j746 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i25 
=== Succesors ===
=== Usages ===
j751 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i747 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i374 
y: i25 
=== Succesors ===
=== Usages ===
j748 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i374 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i747 
=== Succesors ===
=== Usages ===
j750 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i747  <|@  <|@
f <@~|@floating>@ <|@
tid j749 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j750 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j750 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j748 
y: j749 
=== Succesors ===
=== Usages ===
j751 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j748 y: j749  <|@  <|@
f <@~|@floating>@ <|@
tid j751 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j746 
y: j750 
=== Succesors ===
=== Usages ===
j752 j765 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j746 y: j750  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j752 j774 j783 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j752 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j751 
y: j745 
=== Succesors ===
=== Usages ===
j754 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j751 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j752 
y: i42 
=== Succesors ===
=== Usages ===
v758 j774 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j752 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i374 
=== Succesors ===
=== Usages ===
v1061 v1077 v1093 v1109 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i25 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1143 
=== Succesors ===
=== Usages ===
v758 v768 v777 v786 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1143  <|@  <|@
f <@~|@floating>@ <|@
tid i756 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i25 
y: i42 
=== Succesors ===
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i25 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i757 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i756 
y: i42 
=== Succesors ===
=== Usages ===
v759 i776 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i756 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1060 
falseSuccessor: v1057 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1060 #falseSuccessor: v1057  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SUB (x: v27|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = DEC v38|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = ADD (x: v36|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = INC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SHL v41|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = INC v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = SHL v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B41" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1069 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j754 
y: j744 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j754 y: j744  <|@  <|@
f <@~|@floating>@ <|@
tid i982 <|@
result int[-154651|0xfffffffffffda3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -154651
stableDimension: 0
stamp: i32 [-154651] ⇊00000000fffda3e5 ⇈00000000fffda3e5
stampKind: i32
value: int[-154651|0xfffffffffffda3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i978 i978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v758 
=== Succesors ===
trueSuccessor: v1068 
falseSuccessor: v1065 
=== Usages ===
=== Predecessor ===
v1060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v758 #trueSuccessor: v1068 #falseSuccessor: v1065  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i757 
y: i1143 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i757 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v1058 
falseSuccessor: v1066 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v1058 #falseSuccessor: v1066  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1056  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1054 
=== Predecessor ===
v1058 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1182 
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1182  <|@  <|@
f <@*|@fixed>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1066 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154651|0xfffffffffffda3e5]] destination: B40 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v981  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1065 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154651|0xfffffffffffda3e5]] destination: B41 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1055 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1055  <|@  <|@
f <@*|@fixed>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1054 
=== Predecessor ===
v1057 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B39" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1055 v1056 
=== Succesors ===
next: v1077 
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1055 v1056 #next: v1077  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j751 
y: i42 
=== Succesors ===
=== Usages ===
v768 j783 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j751 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i25 
y: i42 
=== Succesors ===
=== Usages ===
v769 i785 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i25 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1076 
falseSuccessor: v1073 
=== Usages ===
=== Predecessor ===
v1054 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1076 #falseSuccessor: v1073  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SHL v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHL v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1085 
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1085  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j765 
y: j744 
=== Succesors ===
=== Usages ===
v1085 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j765 y: j744  <|@  <|@
f <@~|@floating>@ <|@
tid i984 <|@
result int[-157979|0xfffffffffffd96e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -157979
stableDimension: 0
stamp: i32 [-157979] ⇊00000000fffd96e5 ⇈00000000fffd96e5
stampKind: i32
value: int[-157979|0xfffffffffffd96e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i978 i978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v768 
=== Succesors ===
trueSuccessor: v1084 
falseSuccessor: v1081 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v768 #trueSuccessor: v1084 #falseSuccessor: v1081  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i767 
y: i1143 
=== Succesors ===
=== Usages ===
v1083 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i767 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v769 
=== Succesors ===
trueSuccessor: v1074 
falseSuccessor: v1082 
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v769 #trueSuccessor: v1074 #falseSuccessor: v1082  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1072 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1072  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
v1074 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1183 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1183  <|@  <|@
f <@*|@fixed>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1082 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-157979|0xfffffffffffd96e5]] destination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v983  <|@  <|@
f <@*|@fixed>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1081 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-157979|0xfffffffffffd96e5]] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1071 
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1071  <|@  <|@
f <@*|@fixed>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
v1073 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B46" 
    successors "B51" "B56" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1071 v1072 
=== Succesors ===
next: v1093 
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1071 v1072 #next: v1093  <|@  <|@
f <@*|@fixed>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1092 
falseSuccessor: v1089 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1092 #falseSuccessor: v1089  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid j774 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j754 
y: j745 
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j754 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j774 
y: j744 
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j774 y: j744  <|@  <|@
f <@~|@floating>@ <|@
tid i986 <|@
result int[-160539|0xfffffffffffd8ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -160539
stableDimension: 0
stamp: i32 [-160539] ⇊00000000fffd8ce5 ⇈00000000fffd8ce5
stampKind: i32
value: int[-160539|0xfffffffffffd8ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i978 i978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v777 
=== Succesors ===
trueSuccessor: v1100 
falseSuccessor: v1097 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v777 #trueSuccessor: v1100 #falseSuccessor: v1097  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = INC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid i776 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i757 
y: i42 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i757 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i776 
y: i1143 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i776 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v778 
=== Succesors ===
trueSuccessor: v1090 
falseSuccessor: v1098 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v778 #trueSuccessor: v1090 #falseSuccessor: v1098  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v1099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
v1090 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1184 
=== Usages ===
=== Predecessor ===
v1099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1184  <|@  <|@
f <@*|@fixed>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1098 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-160539|0xfffffffffffd8ce5]] destination: B54 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v985  <|@  <|@
f <@*|@fixed>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1097 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-160539|0xfffffffffffd8ce5]] destination: B55 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1087  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
v1089 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B53" 
    successors "B58" "B64" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1087 v1088 
=== Succesors ===
next: v1109 
=== Usages ===
v782 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1087 v1088 #next: v1109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1108 
falseSuccessor: v1105 
=== Usages ===
=== Predecessor ===
v1086 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1108 #falseSuccessor: v1105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1117  <|@  <|@
f <@~|@floating>@ <|@
tid j783 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j765 
y: j745 
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j765 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j783 
y: j744 
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j783 y: j744  <|@  <|@
f <@~|@floating>@ <|@
tid i976 <|@
result int[-163611|0xfffffffffffd80e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -163611
stableDimension: 0
stamp: i32 [-163611] ⇊00000000fffd80e5 ⇈00000000fffd80e5
stampKind: i32
value: int[-163611|0xfffffffffffd80e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i978 i978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v786 
=== Succesors ===
trueSuccessor: v1116 
falseSuccessor: v1113 
=== Usages ===
=== Predecessor ===
v1108 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v786 #trueSuccessor: v1116 #falseSuccessor: v1113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = INC v46|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1115  <|@  <|@
f <@~|@floating>@ <|@
tid i785 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i767 
y: i42 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i767 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i785 
y: i1143 
=== Succesors ===
=== Usages ===
v1115 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i785 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v787 
=== Succesors ===
trueSuccessor: v1106 
falseSuccessor: v1114 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v787 #trueSuccessor: v1106 #falseSuccessor: v1114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1104 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
v1106 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-163611|0xfffffffffffd80e5]] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v975  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1113 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-163611|0xfffffffffffd80e5]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B41" "B48" "B55" "B40" "B47" "B54" "B61" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i978 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-163611 - -154651] ⇊00000000fffd80e5 ⇈00000000fffdbfe5
valueDescription: i32
=== Inputs ===
merge: v974 
values: i976 i982 i984 i986 i982 i984 i986 i976 
=== Succesors ===
=== Usages ===
v980 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v974 values: i976 i982 i984 i986 i982 i984 i986 i976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v975 v981 v983 v985 v1182 v1183 v1184 v1185 
=== Succesors ===
next: v980 
=== Usages ===
i978 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v975 v981 v983 v985 v1182 v1183 v1184 v1185 #next: v980  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 620
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i25 - a496 
=== Succesors ===
=== Usages ===
v980 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i25 - a496  <|@  <|@
f <@~|@floating>@ <|@
tid a977 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@466068644
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@466068644]
=== Inputs ===
=== Succesors ===
=== Usages ===
v980 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?34 
actionAndReason: i978 
speculation: a977 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?34 actionAndReason: i978 speculation: a977  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@466068644] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v53|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 46]
stack: v35|QWORD[.] 
locals: v0|QWORD[.] - v18|DWORD - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B65" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1103  <|@  <|@
f <@*|@fixed>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
v1105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1103 v1104 
=== Succesors ===
next: v162 
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1103 v1104 #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v1102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B67" "B70" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602581886650062546
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i164 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v163 
values: i25 i174 
=== Succesors ===
=== Usages ===
?165 v168 i191 i174 i267 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v163 values: i25 i174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.9698005896823043
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v162 
=== Succesors ===
next: v173 
=== Usages ===
i164 v170 v189 v914 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v162 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i164 
y: i374 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i164 y: i374  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.49233439910722987
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v170 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v169 #falseSuccessor: v170  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49233439910722987 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597941681925458370
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1150 
=== Usages ===
v764 v791 v782 v773 
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
result [v21|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1142 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1150 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1179 
=== Succesors ===
next: v915 
=== Usages ===
v1052 
=== Predecessor ===
v169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1179 #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1052 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1150 
y: v1051 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1150 y: v1051  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v911 
falseSuccessor: v914 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v911 #falseSuccessor: v914  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v21|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B66" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597941681925458370
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1151 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1151  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1054 v169 
=== Succesors ===
=== Usages ===
a1151 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1054 v169  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 44]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i164 
y: i42 
=== Succesors ===
=== Usages ===
i164 i262 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i164 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i174 
y: i42 
=== Succesors ===
=== Usages ===
j1157 v1170 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i174 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
result [v24|QWORD[.] + v56|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: i262 
=== Succesors ===
=== Usages ===
a1151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: i262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1151 <|@
result v57|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v764 
address: v1170 
=== Succesors ===
next: v624 
=== Usages ===
v624 
=== Predecessor ===
v911 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v764 address: v1170 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1070 v169 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1070 v169  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i164 
y: i42 
=== Succesors ===
=== Usages ===
j1159 v1171 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i164 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
result [v24|QWORD[.] + v58|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: i267 
=== Succesors ===
=== Usages ===
v624 j1033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: i267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v773 
address: v1171 
value: a1151 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1033 
=== Usages ===
=== Predecessor ===
a1151 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v773 address: v1171 value: a1151 stateAfter: - lastLocationAccess: - #next: j1033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1033 <|@
result [v24|QWORD[.] + v58|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1171 
=== Succesors ===
next: v1038 
=== Usages ===
j1034 
=== Predecessor ===
v624 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1171 #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid j1034 <|@
result v59|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1033 
y: i147 
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1033 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid j1037 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1180 v1181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
result [v59|QWORD[*] + v61|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1034 
index: j1037 
=== Succesors ===
=== Usages ===
v1038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1034 index: j1037  <|@  <|@
f <@~|@floating>@ <|@
tid i1039 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1038 v1046 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
value: i1039 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1152 
=== Usages ===
=== Predecessor ===
j1033 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1180 value: i1039 stateAfter: - lastLocationAccess: - #next: a1152  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1086 v169 
=== Succesors ===
=== Usages ===
a1152 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1086 v169  <|@  <|@
f <@~|@floating>@ <|@
tid j1157 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i262 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i262  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
result [v24|QWORD[.] + v62|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: j1157 
=== Succesors ===
=== Usages ===
a1152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: j1157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1152 <|@
result v63|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v782 
address: v1172 
=== Succesors ===
next: v646 
=== Usages ===
v646 
=== Predecessor ===
v1038 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v782 address: v1172 #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1102 v169 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1102 v169  <|@  <|@
f <@~|@floating>@ <|@
tid j1159 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i267 
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i267  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
result [v24|QWORD[.] + v64|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: j1159 
=== Succesors ===
=== Usages ===
v646 j1042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: j1159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v791 
address: v1173 
value: a1152 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1042 
=== Usages ===
=== Predecessor ===
a1152 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v791 address: v1173 value: a1152 stateAfter: - lastLocationAccess: - #next: j1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1042 <|@
result [v24|QWORD[.] + v64|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1173 
=== Succesors ===
next: v1046 
=== Usages ===
j1043 
=== Predecessor ===
v646 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1173 #next: v1046  <|@  <|@
f <@~|@floating>@ <|@
tid j1043 <|@
result v65|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1042 
y: i147 
=== Succesors ===
=== Usages ===
v1181 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1042 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
result [v65|QWORD[*] + v61|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1043 
index: j1037 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1043 index: j1037  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1181 
value: i1039 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
j1042 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1181 value: i1039 stateAfter: - lastLocationAccess: - #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
loopBegin: v163 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v163  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v24|QWORD[.] + v56|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHL v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + v58|DWORD * 4 + 16], y: v57|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v24|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = SHR v60|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v59|QWORD[*] + v61|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVSXD v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v24|QWORD[.] + v62|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVSXD v58|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + v64|QWORD * 4 + 20], y: v63|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v24|QWORD[.] + v64|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = SHR v66|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v65|QWORD[*] + v61|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD] destination: B68 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v163 
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v163 #next: v912  <|@  <|@
tid ?341 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 621
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - a496 
=== Succesors ===
=== Usages ===
?165 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a496  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: ?341 
values: a1 - i164 - i314 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?341 values: a1 - i164 - i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 613
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@1506260085]
stamp: void
=== Inputs ===
stateBefore: ?165 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1506260085] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -156988 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: v0|QWORD[.] - v54|DWORD - v20|DWORD 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - v35|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:29, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B73" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:643) [bci: 69]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v163 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v163 #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v170 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v18|DWORD, v35|QWORD[.]] destination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B73" 
    xhandlers
    flags 
    probability 4592728333242747047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD, v20|DWORD, v33|QWORD[.]] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B73" 
    xhandlers
    flags 
    probability 4588570213947275542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v376  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD, v20|DWORD, v33|QWORD[.]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" "B70" "B72" "B71" 
    successors "B74" "B94" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i191 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v158 
values: i25 i25 i164 i25 i25 
=== Succesors ===
=== Usages ===
?193 i195 i793 v807 ?202 ?203 v206 i216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v158 values: i25 i25 i164 i25 i25  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v158 
values: i314 i314 i25 i314 i314 
=== Succesors ===
=== Usages ===
?193 v685 ?202 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v158 values: i314 i314 i25 i314 i314  <|@  <|@
f <@~|@floating>@ <|@
tid a330 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v158 
values: a595 a595 a496 a589 a589 
=== Succesors ===
=== Usages ===
v300 v303 v299 v302 ?340 ?348 ?346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v158 values: a595 a595 a496 a589 a589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v157 v159 v190 v376 v506 
=== Succesors ===
next: v919 
=== Usages ===
i191 i192 a330 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v157 v159 v190 v376 v506 #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i191 
y: i42 
=== Succesors ===
=== Usages ===
v1174 i200 v648 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i191 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i195 
y: i1143 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i195 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v648 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v918 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v648 #trueSuccessor: v916 #falseSuccessor: v918  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD, v69|DWORD, v70|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SHL v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B93" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v923 
=== Usages ===
v656 
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v923  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i195 
y: i42 
=== Succesors ===
=== Usages ===
v1175 v658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i195 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i200 
y: i1143 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i200 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v658 
=== Succesors ===
trueSuccessor: v920 
falseSuccessor: v922 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v658 #trueSuccessor: v920 #falseSuccessor: v922  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B87" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
v665 
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
result [v24|QWORD[.] + v71|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: i195 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: i195  <|@  <|@
f <@~|@floating>@ <|@
tid a701 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 v665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v916 
address: v1174 
value: a701 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v916 address: v1174 value: a701 stateAfter: - lastLocationAccess: - #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
result [v24|QWORD[.] + v72|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: i200 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: i200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v920 
address: v1175 
value: a701 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v920 address: v1175 value: a701 stateAfter: - lastLocationAccess: - #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:648) [bci: 91]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i191 
y: i374 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i191 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1153 v680 i1155 v682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:648) [bci: 91]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.640014121444422
=== Inputs ===
condition: v206 
=== Succesors ===
trueSuccessor: v207 
falseSuccessor: v208 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v206 #trueSuccessor: v207 #falseSuccessor: v208  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + v71|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + v72|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.640014121444422 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4598678928675949137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 94]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i191 
y: i42 
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i191 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v1121 
falseSuccessor: v1124 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v1121 #falseSuccessor: v1124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1119 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
v1121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B86" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1131  <|@  <|@
f <@~|@floating>@ <|@
tid i793 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i191 
y: i27 
=== Succesors ===
=== Usages ===
i802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i191 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i802 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i793 
y: i42 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i793 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i802 
y: i1143 
=== Succesors ===
=== Usages ===
v1131 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i802 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v1122 
falseSuccessor: v1130 
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v1122 #falseSuccessor: v1130  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = DEC v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SHL v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1120 
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1120  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
v1122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 4598678928675949137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1119 v1120 
=== Succesors ===
next: v666 
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1119 v1120 #next: v666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 101]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
value: i374 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1153 
=== Usages ===
=== Predecessor ===
v1118 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1162 value: i374 stateAfter: - lastLocationAccess: - #next: i1153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1153 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 130]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
=== Succesors ===
next: v214 
=== Usages ===
i1053 
=== Predecessor ===
v666 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 #next: v214  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
i1153 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|DWORD, v27|DWORD, v75|DWORD] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B84" 
    successors "B82" "B83" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599134038124305116
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i216 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i191 i223 
=== Succesors ===
=== Usages ===
i223 v218 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i191 i223  <|@  <|@
f <@~|@floating>@ <|@
tid i305 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i374 i233 
=== Succesors ===
=== Usages ===
i233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i374 i233  <|@  <|@
f <@~|@floating>@ <|@
tid i1053 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i1153 i237 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i1153 i237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0908890324817575
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v214 
=== Succesors ===
next: v222 
=== Usages ===
i216 v219 v229 v240 i305 i1053 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v214 #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 105]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i42 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i216 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 105]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.1273946083388714
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v221 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v219 #falseSuccessor: v221  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|DWORD, v78|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1273946083388714 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 4585727882059693200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v215 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v215 #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a330 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a330 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598438155496317770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 108]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1154 
=== Usages ===
v809 
=== Predecessor ===
v222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1154  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1118 v221 
=== Succesors ===
=== Usages ===
a1154 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1118 v221  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i216 
y: i27 
=== Succesors ===
=== Usages ===
i216 i225 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i216 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i223 
y: i42 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i223 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
result [v24|QWORD[.] + v80|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a575 
index: i225 
=== Succesors ===
=== Usages ===
a1154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: i225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1154 <|@
result v81|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v809 
address: v1176 
=== Succesors ===
next: v231 
=== Usages ===
v704 
=== Predecessor ===
v221 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v809 address: v1176 #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 115]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
value: a1154 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 115]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.09548013245033116
=== Inputs ===
condition: v704 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
a1154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v704 #trueSuccessor: v228 #falseSuccessor: v229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = DEC v76|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SHL v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = MOV [v24|QWORD[.] + v80|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|DWORD[.], y: v81|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09548013245033116 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B81" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582938972582119604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 118]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 124]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i305 
y: i27 
=== Succesors ===
=== Usages ===
v677 i305 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i305 y: i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 125]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
value: i233 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1162 value: i233 stateAfter: - lastLocationAccess: - #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 134]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i1053 
y: i27 
=== Succesors ===
=== Usages ===
v680 i1053 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1053 y: i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 135]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
value: i237 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1177 value: i237 stateAfter: - lastLocationAccess: - #next: v240  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
loopBegin: v215 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = DEC v77|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = DEC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|DWORD, v82|DWORD, v83|DWORD] destination: B84 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4597790872550647165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v215 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v215 #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a330 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a330 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid a1008 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@722296218
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@722296218]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1007 <|@
result int[-171291|0xfffffffffffd62e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171291
stableDimension: 0
stamp: i32 [-171291] ⇊00000000fffd62e5 ⇈00000000fffd62e5
stampKind: i32
value: int[-171291|0xfffffffffffd62e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1009 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v1130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@722296218] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-171291|0xfffffffffffd62e5], v84|QWORD[.]] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4594800897385169216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1143 
y: i275 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1143 y: i275  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v276 
=== Succesors ===
trueSuccessor: v931 
falseSuccessor: v929 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v276 #trueSuccessor: v931 #falseSuccessor: v929  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1012 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid i1013 <|@
result int[-175123|0xfffffffffffd53ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -175123
stableDimension: 0
stamp: i32 [-175123] ⇊00000000fffd53ed ⇈00000000fffd53ed
stampKind: i32
value: int[-175123|0xfffffffffffd53ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1009 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v931 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-175123|0xfffffffffffd53ed], Object[null]] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1009 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-175123 - -171291] ⇊00000000fffd42e5 ⇈00000000fffd73ed
valueDescription: i32
=== Inputs ===
merge: v1005 
values: i1007 i1013 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1005 values: i1007 i1013  <|@  <|@
f <@~|@floating>@ <|@
tid a1010 <|@
result v86|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1005 
values: a1008 a4 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1005 values: a1008 a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1006 v1012 
=== Succesors ===
next: v1011 
=== Usages ===
i1009 a1010 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1006 v1012 #next: v1011  <|@  <|@
tid ?348 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 621
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - a330 
=== Succesors ===
=== Usages ===
?202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a330  <|@  <|@
tid ?202 <|@
d <@d|@=== Debug Properties ===
bci: 81
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 647
stackSize: 0
=== Inputs ===
outerFrameState: ?348 
values: a1 - i191 - i192 
=== Succesors ===
=== Usages ===
?203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?348 values: a1 - i191 - i192  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?202 
values: a1 i191 a4 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?202 values: a1 i191 a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?203 
actionAndReason: i1009 
speculation: a1010 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?203 actionAndReason: i1009 speculation: a1010  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v86|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v68|DWORD Object[null] 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
locals: v0|QWORD[.] - v68|DWORD - v69|DWORD 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - v70|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:11, 81, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4594800897385169216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1155 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1155 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 146]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
=== Succesors ===
next: v682 
=== Usages ===
i242 
=== Predecessor ===
v929 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid i242 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 150]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32
=== Inputs ===
x: i1155 
y: i42 
=== Succesors ===
=== Usages ===
v682 v285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1155 y: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 151]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
value: i242 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
i1155 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1177 value: i242 stateAfter: - lastLocationAccess: - #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i1145 
y: i42 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1145 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i283 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i283 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i1145 
y: i282 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1145 y: i282  <|@  <|@
f <@~|@floating>@ <|@
tid i284 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: i32 [-1610612736 - 1610612734]
=== Inputs ===
x: i280 
y: i283 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i280 y: i283  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i242 
y: i284 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i242 y: i284  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
trueSuccessorProbability: 0.9807503712628541
=== Inputs ===
condition: v285 
=== Succesors ===
trueSuccessor: v286 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
v682 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v285 #trueSuccessor: v286 #falseSuccessor: v287  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SAR v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SAR v26|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = ADD (x: v89|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v91|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9807503712628541 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4594692466592375543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:478) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v303  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a330 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a330 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4569085993265107542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: i290 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i290  <|@  <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6c330a44
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.compressLarge(int)>
=== Inputs ===
arguments: a1 i192 
=== Succesors ===
=== Usages ===
i290 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i192  <|@  <|@
tid ?340 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 621
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - a330 
=== Succesors ===
=== Usages ===
?294 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a330  <|@  <|@
tid ?294 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 658
stackSize: 0
=== Inputs ===
outerFrameState: ?340 
values: - - - - - 
=== Succesors ===
=== Usages ===
?958 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?340 values: - - - - -  <|@  <|@
tid ?958 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<EconomicMapImpl.maybeCompress(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: ?294 
values: - - 
=== Succesors ===
=== Usages ===
i290 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?294 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i290 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.compressLarge
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v685 
stateDuring: ?958 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v685 stateDuring: ?958 #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a330 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i290 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a330 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v69|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
locals: - - 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - v70|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157, 49] <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid i1004 <|@
result int[-168731|0xfffffffffffd6ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -168731
stableDimension: 0
stamp: i32 [-168731] ⇊00000000fffd6ce5 ⇈00000000fffd6ce5
stampKind: i32
value: int[-168731|0xfffffffffffd6ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1000 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
v922 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168731|0xfffffffffffd6ce5]] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@~|@floating>@ <|@
tid i999 <|@
result int[-166171|0xfffffffffffd76e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -166171
stableDimension: 0
stamp: i32 [-166171] ⇊00000000fffd76e5 ⇈00000000fffd76e5
stampKind: i32
value: int[-166171|0xfffffffffffd76e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1000 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
v918 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-166171|0xfffffffffffd76e5]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1000 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-168731 - -166171] ⇊00000000fffd64e5 ⇈00000000fffd7ee5
valueDescription: i32
=== Inputs ===
merge: v997 
values: i999 i1004 
=== Succesors ===
=== Usages ===
v1002 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v997 values: i999 i1004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v998 v1003 
=== Succesors ===
next: v1002 
=== Usages ===
i1000 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v998 v1003 #next: v1002  <|@  <|@
tid ?346 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<EconomicMapImpl.removeKey(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 621
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - a330 
=== Succesors ===
=== Usages ===
?193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a330  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 646
stackSize: 0
=== Inputs ===
outerFrameState: ?346 
values: a1 - i191 - i192 
=== Succesors ===
=== Usages ===
v1002 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?346 values: a1 - i191 - i192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?193 
actionAndReason: i1000 
speculation: a4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?193 actionAndReason: i1000 speculation: a4  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: v0|QWORD[.] - v68|DWORD - v69|DWORD 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - v70|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:72, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid i971 <|@
result int[-149019|0xfffffffffffdb9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149019
stableDimension: 0
stamp: i32 [-149019] ⇊00000000fffdb9e5 ⇈00000000fffdb9e5
stampKind: i32
value: int[-149019|0xfffffffffffdb9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?26 
actionAndReason: i971 
speculation: a4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?26 actionAndReason: i971 speculation: a4  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -149019 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
locals: v0|QWORD[.] - v18|DWORD - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4a1c3ef0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:609) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6305692384914456 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4603854882320279160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608450063267186394
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604531796888928470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v5|DWORD, y: [v4|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 32] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604531796888928470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v6|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v7|DWORD[.] * 8] state [bci:2, 32] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603923513294220650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603766423483315740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 32] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580684095357381067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578306291694639967
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 32] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580680676995902788
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580290476302139003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 32] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572452178122338414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572438504676425297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 32] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533118429814864446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 32] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4603361130390703326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600326692877382416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:614) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD, v17|DWORD, v16|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4601567647610158292
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD, v19|DWORD, v20|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.009154018920574424 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B96" 
    xhandlers
    flags 
    probability 4601495367223266034
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
locals: v0|QWORD[.] - v18|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[.] * 8 + 12] size: DWORD state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4601495367223266034
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v24|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v26|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD[.], y: v25|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4600712992492730023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v25|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07849735111992084 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600160263397357874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B25" "B32" 
    successors "B34" "B72" 
    xhandlers
    flags 
    probability 4600942638127893885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v29|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B71" 
    xhandlers
    flags 
    probability 4599891464013958746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4597575752192850016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B29" "B35" 
    successors "B37" "B42" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SUB (x: v27|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = DEC v38|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = ADD (x: v36|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = INC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SHL v41|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = INC v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = SHL v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B39" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SHL v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHL v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B46" 
    successors "B51" "B56" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B53" 
    successors "B58" "B64" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B65" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597941681925458370
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v21|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B66" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597941681925458370
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v24|QWORD[.] + v56|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHL v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + v58|DWORD * 4 + 16], y: v57|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v24|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = SHR v60|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v59|QWORD[*] + v61|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVSXD v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v24|QWORD[.] + v62|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVSXD v58|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + v64|QWORD * 4 + 20], y: v63|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v24|QWORD[.] + v64|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = SHR v66|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v65|QWORD[*] + v61|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD] destination: B68 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B67" "B70" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602581886650062546
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49233439910722987 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B73" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v18|DWORD, v35|QWORD[.]] destination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" "B70" "B72" "B71" 
    successors "B74" "B94" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD, v69|DWORD, v70|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SHL v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B93" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B87" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + v71|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + v72|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.640014121444422 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4598678928675949137
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B86" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = DEC v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SHL v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 4598678928675949137
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|DWORD, v27|DWORD, v75|DWORD] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598438155496317770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = DEC v76|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SHL v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = MOV [v24|QWORD[.] + v80|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|DWORD[.], y: v81|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09548013245033116 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B81" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582938972582119604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = DEC v77|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = DEC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|DWORD, v82|DWORD, v83|DWORD] destination: B84 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B84" 
    successors "B82" "B83" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599134038124305116
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|DWORD, v78|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1273946083388714 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4597790872550647165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4594800897385169216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4594800897385169216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SAR v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SAR v26|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = ADD (x: v89|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v91|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9807503712628541 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4594692466592375543
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = INC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = INC v46|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B41" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B73" 
    xhandlers
    flags 
    probability 4592728333242747047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD, v20|DWORD, v33|QWORD[.]] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589530689420827488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589628239594268434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589628239594268434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD, v5|DWORD, v9|DWORD] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B73" 
    xhandlers
    flags 
    probability 4588570213947275542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD, v20|DWORD, v33|QWORD[.]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    probability 4586419818880082522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 4585727882059693200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4584500886934378315
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v25|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v29|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4583222354546656621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD[.], y: v32|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4580770340825029651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.]] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B73" 
    xhandlers
    flags 
    probability 4576057649224307380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD, v20|DWORD, v31|QWORD[.]] destination: B30 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B73" 
    xhandlers
    flags 
    probability 4571764151704569718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD, v20|DWORD, v31|QWORD[.]] destination: B31 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4571275966914787444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4569085993265107542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v69|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
locals: - - 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - v70|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157, 49] <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4563886033999162512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-166171|0xfffffffffffd76e5]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: v0|QWORD[.] - v68|DWORD - v69|DWORD 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - v70|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:72, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-157979|0xfffffffffffd96e5]] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B41" "B48" "B55" "B40" "B47" "B54" "B61" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@466068644] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v53|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 46]
stack: v35|QWORD[.] 
locals: v0|QWORD[.] - v18|DWORD - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-160539|0xfffffffffffd8ce5]] destination: B54 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1506260085] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -156988 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: v0|QWORD[.] - v54|DWORD - v20|DWORD 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - v35|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:29, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168731|0xfffffffffffd6ce5]] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -149019 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
locals: v0|QWORD[.] - v18|DWORD - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-160539|0xfffffffffffd8ce5]] destination: B55 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-157979|0xfffffffffffd96e5]] destination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154651|0xfffffffffffda3e5]] destination: B41 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@722296218] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-171291|0xfffffffffffd62e5], v84|QWORD[.]] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v86|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v68|DWORD Object[null] 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
locals: v0|QWORD[.] - v68|DWORD - v69|DWORD 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - v70|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:11, 81, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-175123|0xfffffffffffd53ed], Object[null]] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -141595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:2, 32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-163611|0xfffffffffffd80e5]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154651|0xfffffffffffda3e5]] destination: B40 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-163611|0xfffffffffffd80e5]] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     14
     4: new           #58         // java.lang.UnsupportedOperationException
     7: dup           
     8: ldc           #59         // "null not supported as key!"
    10: invokespecial #49         // java.lang.UnsupportedOperationException.<init>:(java.lang.String)void
    13: athrow        
    14: aload_0       
    15: invokespecial #4          // hasHashArray:()boolean
    18: ifeq          30
    21: aload_0       
    22: aload_1       
    23: invokespecial #2          // findAndRemoveHash:(java.lang.Object)int
    26: istore_2      
    27: goto          36
    30: aload_0       
    31: aload_1       
    32: invokespecial #29         // findLinear:(java.lang.Object)int
    35: istore_2      
    36: iload_2       
    37: iconst_m1     
    38: if_icmpeq     55
    41: aload_0       
    42: iload_2       
    43: invokespecial #0          // getValue:(int)java.lang.Object
    46: astore_3      
    47: aload_0       
    48: iload_2       
    49: invokespecial #1          // remove:(int)int
    52: pop           
    53: aload_3       
    54: areturn       
    55: aconst_null   
    56: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4a1c3ef0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:609) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   14  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.6305692384914456 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4603854882320279160
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608450063267186394
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604531796888928470
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 32] <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604531796888928470
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:2, 32] <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction r9|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603923513294220650
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603766423483315740
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 32] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580684095357381067
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578306291694639967
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 32] <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580680676995902788
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  144  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580290476302139003
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 32] <|@ <|@
      nr  152  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572452178122338414
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572438504676425297
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 32] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533118429814864446
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 32] <|@ <|@
      nr  120  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4603361130390703326
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600326692877382416
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:614) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:23] <|@ <|@
      nr  200  <|@ instruction rsi|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4601567647610158292
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  214  <|@ instruction CMP r10|DWORD y: -1 size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.009154018920574424 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B96" 
    xhandlers
    flags 
    probability 4601495367223266034
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  230  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
locals: rsi|QWORD[.] - r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:36] <|@ <|@
      nr  232  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4601495367223266034
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr  242  <|@ instruction r8|DWORD[.] = MOV [r11|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  246  <|@ instruction rbx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4600712992492730023
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.07849735111992084 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600160263397357874
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B25" "B32" 
    successors "B34" "B72" 
    xhandlers
    flags 
    probability 4600942638127893885
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction CMP rdi|DWORD y: 9 size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B71" 
    xhandlers
    flags 
    probability 4599891464013958746
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rdi|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  316  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4597575752192850016
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B29" "B35" 
    successors "B37" "B42" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  328  <|@ instruction rbp|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rbp|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = DEC rbp|QWORD size: QWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction rbp|QWORD = INC rdi|QWORD size: QWORD <|@ <|@
      nr  338  <|@ instruction rbp|QWORD = SHL rbp|QWORD size: QWORD <|@ <|@
      nr  340  <|@ instruction r13|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction r14|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction r14|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B39" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rdi|QWORD = SHL rdi|QWORD size: QWORD <|@ <|@
      nr  390  <|@ instruction rcx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B46" 
    successors "B51" "B56" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B53" 
    successors "B58" "B64" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B65" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597941681925458370
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  536  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B66" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597941681925458370
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction rbp|DWORD = SHL rdi|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction r13|DWORD[.] = MOV [r11|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  548  <|@ instruction rcx|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  552  <|@ instruction r13|QWORD[.] = LEA [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  554  <|@ instruction r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  556  <|@ instruction r14|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  558  <|@ instruction MOVB (x: [r13|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  560  <|@ instruction rbp|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  562  <|@ instruction rbp|DWORD[.] = MOV [r11|QWORD[.] + rbp|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  566  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 4 + 20], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  568  <|@ instruction rcx|QWORD[.] = LEA [r11|QWORD[.] + rcx|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOVB (x: [rcx|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B68 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B67" "B70" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602581886650062546
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  530  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.49233439910722987 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B73" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" "B70" "B72" "B71" 
    successors "B74" "B94" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B93" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B87" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction MOV (x: [r11|QWORD[.] + rax|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  630  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.640014121444422 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4598678928675949137
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B86" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction rax|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  650  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 4598678928675949137
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  664  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598438155496317770
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  688  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  690  <|@ instruction r9|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  692  <|@ instruction r9|DWORD[.] = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  694  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  696  <|@ instruction BRANCH trueDestinationProbability: 0.09548013245033116 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B81" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582938972582119604
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B84 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B84" 
    successors "B82" "B83" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599134038124305116
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  676  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 0.1273946083388714 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4597790872550647165
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4594800897385169216
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction CMP rdx|DWORD y: 8 size: DWORD <|@ <|@
      nr  734  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4594800897385169216
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction rcx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdx|DWORD = SAR rcx|DWORD size: DWORD <|@ <|@
      nr  766  <|@ instruction rcx|DWORD = SAR rcx|DWORD y: 2 size: DWORD <|@ <|@
      nr  768  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.9807503712628541 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4594692466592375543
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  446  <|@ instruction CMP (x: rdx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = INC rdi|QWORD size: QWORD <|@ <|@
      nr  480  <|@ instruction CMP (x: r13|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B41" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction CMP (x: rdx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction CMP (x: r13|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B73" 
    xhandlers
    flags 
    probability 4592728333242747047
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589530689420827488
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589628239594268434
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589628239594268434
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B73" 
    xhandlers
    flags 
    probability 4588570213947275542
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    probability 4586419818880082522
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B25 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 4585727882059693200
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4584500886934378315
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r8|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction CMP rdi|DWORD y: 9 size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4583222354546656621
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  282  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4580770340825029651
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rcx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B73" 
    xhandlers
    flags 
    probability 4576057649224307380
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B30 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B73" 
    xhandlers
    flags 
    probability 4571764151704569718
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B31 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4571275966914787444
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4569085993265107542
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
locals: - - 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157, 49] <|@ <|@
      nr  788  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4563886033999162512
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction r11|DWORD = MOVE input: int[-166171|0xfffffffffffd76e5] <|@ <|@
      nr  804  <|@ instruction stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [rsi:0, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: rsi|QWORD[.] - r10|DWORD - r9|DWORD 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:72, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-157979|0xfffffffffffd96e5] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B41" "B48" "B55" "B40" "B47" "B54" "B61" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@466068644] <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 46]
stack: r8|QWORD[.] 
locals: rsi|QWORD[.] - r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r11|DWORD = MOVE input: int[-160539|0xfffffffffffd8ce5] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B54 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1506260085] <|@ <|@
      nr  582  <|@ instruction MOV [r15|QWORD + 668] y: -156988 size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: rsi|QWORD[.] - rcx|DWORD - r9|DWORD 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:29, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  794  <|@ instruction r11|DWORD = MOVE input: int[-168731|0xfffffffffffd6ce5] <|@ <|@
      nr  796  <|@ instruction stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction MOV [r15|QWORD + 668] y: -149019 size: DWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
locals: rsi|QWORD[.] - r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction r11|DWORD = MOVE input: int[-160539|0xfffffffffffd8ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B55 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction r11|DWORD = MOVE input: int[-157979|0xfffffffffffd96e5] <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r11|DWORD = MOVE input: int[-154651|0xfffffffffffda3e5] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B41 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@722296218] <|@ <|@
      nr  722  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r11|DWORD = MOVE input: int[-171291|0xfffffffffffd62e5] <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] r10|DWORD Object[null] 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
locals: rsi|QWORD[.] - r10|DWORD - r9|DWORD 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:11, 81, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r11|DWORD = MOVE input: int[-175123|0xfffffffffffd53ed] <|@ <|@
      nr  740  <|@ instruction rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction MOV [r15|QWORD + 668] y: -141595 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:2, 32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction r11|DWORD = MOVE input: int[-163611|0xfffffffffffd80e5] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction r11|DWORD = MOVE input: int[-154651|0xfffffffffffda3e5] <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B40 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-163611|0xfffffffffffd80e5] <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     14
     4: new           #58         // java.lang.UnsupportedOperationException
     7: dup           
     8: ldc           #59         // "null not supported as key!"
    10: invokespecial #49         // java.lang.UnsupportedOperationException.<init>:(java.lang.String)void
    13: athrow        
    14: aload_0       
    15: invokespecial #4          // hasHashArray:()boolean
    18: ifeq          30
    21: aload_0       
    22: aload_1       
    23: invokespecial #2          // findAndRemoveHash:(java.lang.Object)int
    26: istore_2      
    27: goto          36
    30: aload_0       
    31: aload_1       
    32: invokespecial #29         // findLinear:(java.lang.Object)int
    35: istore_2      
    36: iload_2       
    37: iconst_m1     
    38: if_icmpeq     55
    41: aload_0       
    42: iload_2       
    43: invokespecial #0          // getValue:(int)java.lang.Object
    46: astore_3      
    47: aload_0       
    48: iload_2       
    49: invokespecial #1          // remove:(int)int
    52: pop           
    53: aload_3       
    54: areturn       
    55: aconst_null   
    56: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4a1c3ef0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:609) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   14  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.6305692384914456 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4603854882320279160
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608450063267186394
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604531796888928470
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 32] <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604531796888928470
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:2, 32] <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction r9|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603923513294220650
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603766423483315740
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 32] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580684095357381067
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   90  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578306291694639967
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 32] <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580680676995902788
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  144  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580290476302139003
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 32] <|@ <|@
      nr  152  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572452178122338414
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572438504676425297
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 32] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533118429814864446
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 32] <|@ <|@
      nr  120  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4603361130390703326
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600326692877382416
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:614) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:23] <|@ <|@
      nr  200  <|@ instruction rsi|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4601567647610158292
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  214  <|@ instruction CMP r10|DWORD y: -1 size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.009154018920574424 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B96" 
    xhandlers
    flags 
    probability 4601495367223266034
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  230  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
locals: rsi|QWORD[.] - r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:36] <|@ <|@
      nr  232  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" "B26" 
    xhandlers
    flags 
    probability 4601495367223266034
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr  242  <|@ instruction r8|DWORD[.] = MOV [r11|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  246  <|@ instruction rbx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B33 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4600712992492730023
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.07849735111992084 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B34" "B72" 
    xhandlers
    flags 
    probability 4600942638127893885
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction CMP rdi|DWORD y: 9 size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B71" 
    xhandlers
    flags 
    probability 4599891464013958746
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rdi|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  316  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B34 -> B36 falseDestination: B34 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B29" "B34" 
    successors "B37" "B43" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  328  <|@ instruction rbp|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rbp|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = DEC rbp|QWORD size: QWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction rbp|QWORD = INC rdi|QWORD size: QWORD <|@ <|@
      nr  338  <|@ instruction rbp|QWORD = SHL rbp|QWORD size: QWORD <|@ <|@
      nr  340  <|@ instruction r13|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction r14|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction r14|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B44" "B50" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rdi|QWORD = SHL rdi|QWORD size: QWORD <|@ <|@
      nr  390  <|@ instruction rcx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B51" "B57" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B58" "B65" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597941681925458370
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  536  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B66" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597941681925458370
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction rbp|DWORD = SHL rdi|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction r13|DWORD[.] = MOV [r11|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  548  <|@ instruction rcx|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  552  <|@ instruction r13|QWORD[.] = LEA [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  554  <|@ instruction r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  556  <|@ instruction r14|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  558  <|@ instruction MOVB (x: [r13|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  560  <|@ instruction rbp|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  562  <|@ instruction rbp|DWORD[.] = MOV [r11|QWORD[.] + rbp|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  566  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 4 + 20], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  568  <|@ instruction rcx|QWORD[.] = LEA [r11|QWORD[.] + rcx|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOVB (x: [rcx|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B68 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B67" "B70" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602581886650062546
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  530  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.49233439910722987 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B73" 
    xhandlers
    flags 
    probability 4598195055832601073
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" "B70" "B72" "B71" 
    successors "B74" "B94" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B93" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B87" 
    xhandlers
    flags 
    probability 4601495367223266033
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction MOV (x: [r11|QWORD[.] + rax|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  630  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.640014121444422 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" "B78" 
    xhandlers
    flags 
    probability 4598678928675949137
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B76 -> B80 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B80" "B86" 
    xhandlers
    flags 
    probability 4594175329048578641
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction rax|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  650  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B80 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4598678928675949137
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  664  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598438155496317770
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  688  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  690  <|@ instruction r9|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  692  <|@ instruction r9|DWORD[.] = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  694  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  696  <|@ instruction BRANCH trueDestinationProbability: 0.09548013245033116 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B81" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582938972582119604
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B84 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B84" 
    successors "B82" "B83" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599134038124305116
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  676  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 0.1273946083388714 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4597790872550647165
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4594800897385169216
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction CMP rdx|DWORD y: 8 size: DWORD <|@ <|@
      nr  734  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4594800897385169216
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction rcx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rdx|DWORD = SAR rcx|DWORD size: DWORD <|@ <|@
      nr  766  <|@ instruction rcx|DWORD = SAR rcx|DWORD y: 2 size: DWORD <|@ <|@
      nr  768  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.9807503712628541 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4594692466592375543
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr  438  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B57" "B54" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  446  <|@ instruction CMP (x: rdx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B57 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = INC rdi|QWORD size: QWORD <|@ <|@
      nr  480  <|@ instruction CMP (x: r13|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B65" "B61" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B65 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B41" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B40" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction CMP (x: rdx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B43 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction CMP (x: r13|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" "B47" 
    xhandlers
    flags 
    probability 4593691456205230577
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B50 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B73" 
    xhandlers
    flags 
    probability 4592728333242747047
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589530689420827488
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589628239594268434
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B73" 
    xhandlers
    flags 
    probability 4588570213947275542
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 4585727882059693200
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B73" 
    xhandlers
    flags 
    probability 4584500886934378315
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r8|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction CMP rdi|DWORD y: 9 size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B73" 
    xhandlers
    flags 
    probability 4583222354546656621
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  282  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4580770340825029651
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rcx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4571275966914787444
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4569085993265107542
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
locals: - - 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157, 49] <|@ <|@
      nr  788  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction r11|DWORD = MOVE input: int[-166171|0xfffffffffffd76e5] <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  804  <|@ instruction stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [rsi:0, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: rsi|QWORD[.] - r10|DWORD - r9|DWORD 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:72, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-157979|0xfffffffffffd96e5] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B41" "B48" "B55" "B40" "B47" "B54" "B61" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@466068644] <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 46]
stack: r8|QWORD[.] 
locals: rsi|QWORD[.] - r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r11|DWORD = MOVE input: int[-160539|0xfffffffffffd8ce5] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B54 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1506260085] <|@ <|@
      nr  582  <|@ instruction MOV [r15|QWORD + 668] y: -156988 size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: rsi|QWORD[.] - rcx|DWORD - r9|DWORD 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:29, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  794  <|@ instruction r11|DWORD = MOVE input: int[-168731|0xfffffffffffd6ce5] <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction MOV [r15|QWORD + 668] y: -149019 size: DWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36]
locals: rsi|QWORD[.] - r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction r11|DWORD = MOVE input: int[-160539|0xfffffffffffd8ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B55 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction r11|DWORD = MOVE input: int[-157979|0xfffffffffffd96e5] <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r11|DWORD = MOVE input: int[-154651|0xfffffffffffda3e5] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B41 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@722296218] <|@ <|@
      nr  722  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r11|DWORD = MOVE input: int[-171291|0xfffffffffffd62e5] <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] r10|DWORD Object[null] 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
locals: rsi|QWORD[.] - r10|DWORD - r9|DWORD 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49]
locals: - - - rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:11, 81, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r11|DWORD = MOVE input: int[-175123|0xfffffffffffd53ed] <|@ <|@
      nr  740  <|@ instruction rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction MOV [r15|QWORD + 668] y: -141595 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:2, 32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction r11|DWORD = MOVE input: int[-163611|0xfffffffffffd80e5] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction r11|DWORD = MOVE input: int[-154651|0xfffffffffffda3e5] <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B40 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-163611|0xfffffffffffd80e5] <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     14
     4: new           #58         // java.lang.UnsupportedOperationException
     7: dup           
     8: ldc           #59         // "null not supported as key!"
    10: invokespecial #49         // java.lang.UnsupportedOperationException.<init>:(java.lang.String)void
    13: athrow        
    14: aload_0       
    15: invokespecial #4          // hasHashArray:()boolean
    18: ifeq          30
    21: aload_0       
    22: aload_1       
    23: invokespecial #2          // findAndRemoveHash:(java.lang.Object)int
    26: istore_2      
    27: goto          36
    30: aload_0       
    31: aload_1       
    32: invokespecial #29         // findLinear:(java.lang.Object)int
    35: istore_2      
    36: iload_2       
    37: iconst_m1     
    38: if_icmpeq     55
    41: aload_0       
    42: iload_2       
    43: invokespecial #0          // getValue:(int)java.lang.Object
    46: astore_3      
    47: aload_0       
    48: iload_2       
    49: invokespecial #1          // remove:(int)int
    52: pop           
    53: aload_3       
    54: areturn       
    55: aconst_null   
    56: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488974242048895424188502448b561c4585d20f851d01000041ba0000000090443b560c0f8def000000448b5e18458bc241d1e0463b04dd0c0000000f834e05000049c1e303478b5c8310438504dc49c1e303458bca41ffc14c3bda0f848d0300008b4e2085c90f850b000000850500000000458bd1eba881f9addeadde44894c24144489442410448954240c0f853c000000488bf2498bd348b8ffffffffffffffff0f1f4000e8000000009085c00f8549030000850500000000448b542414488b542418488b742420e951ffffff81f9addeadde0f842400000048c1e103488bf1488b542418498bcb48b8ffffffffffffffff666690e80000000090ebae850500000000448b542414488b542418488b742420e907ffffff48b80000000000000000488b6c24304883c438850500000000c5f877c3488b742420488b5424180f1f8000000000e800000000908bf0ffc68bd0d1e2448bce448bc2448bd04183faff0f84f6020000488b7424208b46188b14c50c00000041ffc0413bd00f8697030000448bd849c1e303478b4483108b4e0c8bd9ffcb8bf9412bfaffcf4585c00f841200000042813cc508000000addeadde0f847902000049c1e00383ff090f8d4d0200008b7e1c85ff0f85160200004963fa8beb412bea4863ed48ffcd4803fd488bef48ffc548d1e5448bea458bf241ffc641d1e6413bda0f8fba010000894c240c48d1e7418bcad1e1413bda0f8fbc010000413bda0f8f64010000413bda0f8f78010000418bcae95e0000006690813cc508000000addeadde0f85af0200008bf9ffc78befd1e5458b6cab10d1e145896c8b104d8d6c8b1049c1ed0949be00e01b170100000047886435004863ed418b6cab144863c941896c8b14498d4c8b1448c1e909468824318bcf3bd97fa0458bca448bd1418bc2d1e03bd00f86020200008bc8ffc13bd10f866302000045896483104589648b10413bda0f85800000004183fa010f8c0f000000418bc2ffc8d1e03bd00f866f020000895e0c8b46108bd34489542410448bd08b442410e92e000000660f1f440000660f1f440000ffc8448bc841d1e1478b4c8b104585c90f8516000000ffca89560c41ffca4489561083f8017dd9e9ef000000498bc0488b6c24304883c438850500000000c5f877c383fa080f84300200008b4c240cb8010000000346108946108bd1d1fac1f90203d13bd00f8e10010000498bc0488b6c24304883c438850500000000c5f877c348ffc54c3bed0f86a501000041ffc6413bd60f8784feffffe94a01000048ffc74c3bef0f86fe010000ffc13bd10f8772feffffe9050200004c3bed0f8680010000413bd60f8734feffffe9e30100004c3bef0f86eb0000003bd10f8733feffffe954010000894c240ce9a7feffff44894c24144489442410448954240c448b4c2414448b442410448b54240ce94cfdffff894c240ce97bfeffff498bc0488b6c24304883c438850500000000c5f877c3894c240c468b04c51000000049c1e00383ff090f8d4cfeffff8b4e1c85c90f8541feffff8b4c240ce972fdffff48b80000000000000000488b6c24304883c438850500000000c5f877c34c89442420418bd10f1f4000e80000000090488b442420488b6c24304883c438850500000000c5f877c341bbe576fdff4c8944242045899f9c0200004d89a7a8020000e8000000009041bbe596fdff49b9addeaddeaddeadde45899f9c0200004d898fa8020000e8000000009041bbe58cfdffebda49baaddeaddeaddeadde41c7879c020000c49afdff4d8997a8020000e8000000009041bbe56cfdffeb9141c7879c020000e5b9fdff4d89a7a8020000e8000000009041bbe58cfdffeb9041bbe596fdffeb8841bbe5a3fdffeb804c8944242049bbaddeaddeaddeadde4d8bc341bbe562fdff488b4c242045899f9c0200004d8987a8020000e8000000009041bbed53fdff498bc849b80000000000000000ebd741c7879c020000e5d6fdff4d89a7a8020000e8000000009041bbe580fdffe917ffffff41bbe5a3fdffe90cffffff41bbe580fdffe901ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4a1c3ef0 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 58 [rdx:0, rsi:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:609) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |Object[null]  |-  |-   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 12 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 64 14 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 67 16 BRANCH trueDestinationProbability: 0.6305692384914456 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B20  <||@
  Comment 73 block B1 null  <||@
  Comment 73 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 20 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 79 22 JUMP ~[] destination: B1 -> B2  <||@
  Comment 79 block B2 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 79 24 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 80 26 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 84 28 BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19  <||@
  Comment 90 block B3 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 90 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 32 r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 94 34 r8|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 100 36 CMP (x: r8|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 32]  <||@
  Comment 100 [rdx:0, rsi:0, r11:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 100 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 108 38 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B18  <||@
  Comment 114 block B4 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 114 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 42 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3  <||@
  Comment 118 44 r11|DWORD[.] = MOV [r11|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 123 46 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:2, 32]  <||@
  Comment 123 [rdx:0, rsi:0, r11:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 123 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 127 48 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3  <||@
  Comment 131 50 r9|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 137 52 CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 140 54 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 146 block B6 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 146 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 68 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 149 70 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 151 72 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 157 block B7 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 157 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 157 76 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 32]  <||@
  Comment 157 [rdx:0, rsi:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 157 {infopoint: SAFEPOINT}  <||@
  Comment 157 11  <||@
  Comment 163 78 r10|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 166 80 JUMP ~[] destination: B7 -> B2  <||@
  Comment 168 block B8 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 168 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 168 84 CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 168 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 174 90 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 179 92 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 184 94 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 189 86 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 195 block B9 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 195 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 96 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 198 98 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 201 100 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 32]  <||@
  Comment 201 7  <||@
  Comment 215 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 220 [stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 221 102 JUMP ~[] destination: B9 -> B13  <||@
  Comment 221 block B13 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 221 142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 221 144 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 223 146 BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17  <||@
  Comment 229 block B14 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 229 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 150 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 32]  <||@
  Comment 229 [stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |  
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 229 {infopoint: SAFEPOINT}  <||@
  Comment 229 11  <||@
  Comment 235 152 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 240 154 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 245 156 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 250 158 JUMP ~[] destination: B14 -> B2  <||@
  Comment 255 block B10 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 255 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 255 112 CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 255 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 261 114 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 267 block B12 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 267 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 130 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3  <||@
  Comment 271 132 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 274 134 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 279 136 rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 282 138 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 32]  <||@
  Comment 282 7  <||@
  Comment 295 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 300 [stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 301 140 JUMP ~[] destination: B12 -> B13  <||@
  Comment 303 block B11 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 303 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 118 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 32]  <||@
  Comment 303 [stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 303 {infopoint: SAFEPOINT}  <||@
  Comment 303 11  <||@
  Comment 309 120 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 314 122 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 319 124 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 324 126 JUMP ~[] destination: B11 -> B2  <||@
  Comment 329 block B19 null  <||@
  Comment 329 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 188 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 339 190 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 348 12  <||@
  Comment 358 block B20 null  <||@
  Comment 358 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 194 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 363 196 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 368 198 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:23]  <||@
  Comment 368 9  <||@
  Comment 375 {HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)>}  <||@
  Comment 380 [stack:32]at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:614) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 381 200 rsi|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 385 202 rdx|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 389 204 r9|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 392 206 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 395 208 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 398 210 JUMP ~[] destination: B20 -> B21  <||@
  Comment 398 block B21 null  <||@
  Comment 398 212 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 398 214 CMP r10|DWORD y: -1 size: DWORD  <||@
  Comment 402 216 BRANCH trueDestinationProbability: 0.009154018920574424 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 408 block B23 null  <||@
  Comment 408 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 408 226 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 413 228 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 416 230 rdx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:36]  <||@
  Comment 416 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36, duringCall: false, rethrow: false]
              |0             |1  |2          |3 
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD  |-   <||@
  Comment 416 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 423 232 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 426 234 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 429 236 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B96  <||@
  Comment 435 block B24 null  <||@
  Comment 435 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 435 240 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3  <||@
  Comment 442 242 r8|DWORD[.] = MOV [r11|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 447 244 rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 450 246 rbx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 454 248 rdi|DWORD = SUB (x: rcx|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 459 250 rdi|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 461 252 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 464 254 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B33 falseDestination: B24 -> B26  <||@
  Comment 470 block B26 null  <||@
  Comment 470 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 262 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 470 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 482 264 BRANCH trueDestinationProbability: 0.07849735111992084 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33  <||@
  Comment 488 block B33 null  <||@
  Comment 488 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 306 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3  <||@
  Comment 492 308 CMP rdi|DWORD y: 9 size: DWORD  <||@
  Comment 495 310 BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B72  <||@
  Comment 501 block B34 null  <||@
  Comment 501 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 501 314 rdi|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 504 316 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 506 318 BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B34 -> B36 falseDestination: B34 -> B71  <||@
  Comment 512 block B36 null  <||@
  Comment 512 324 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 512 326 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 515 328 rbp|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 520 330 rbp|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 523 332 rbp|QWORD = DEC rbp|QWORD size: QWORD  <||@
  Comment 526 334 rdi|QWORD = ADD (x: rdi|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 529 336 rbp|QWORD = INC rdi|QWORD size: QWORD  <||@
  Comment 535 338 rbp|QWORD = SHL rbp|QWORD size: QWORD  <||@
  Comment 538 340 r13|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 541 342 r14|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 547 344 r14|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 550 346 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 553 348 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B43  <||@
  Comment 559 block B43 null  <||@
  Comment 559 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 382 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 563 388 rdi|QWORD = SHL rdi|QWORD size: QWORD  <||@
  Comment 566 390 rcx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 571 392 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 574 394 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B50  <||@
  Comment 580 block B50 null  <||@
  Comment 580 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 580 430 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 583 432 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B57  <||@
  Comment 589 block B57 null  <||@
  Comment 589 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 589 472 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 592 474 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B65  <||@
  Comment 598 block B65 null  <||@
  Comment 598 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 598 524 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 601 526 JUMP ~[] destination: B65 -> B66  <||@
  Comment 606 block B67 loop 1 depth 1 header:163|LoopBegin  <||@
  Comment 606 534 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 608 536 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 608 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 619 538 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 625 block B68 loop 1 depth 1 header:163|LoopBegin  <||@
  Comment 625 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 625 542 rdi|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 629 544 rbp|DWORD = SHL rdi|DWORD size: DWORD  <||@
  Comment 633 546 r13|DWORD[.] = MOV [r11|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 638 548 rcx|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 640 550 MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 645 552 r13|QWORD[.] = LEA [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 650 554 r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 654 556 r14|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 664 558 MOVB (x: [r13|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 669 560 rbp|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 672 562 rbp|DWORD[.] = MOV [r11|QWORD[.] + rbp|QWORD * 4 + 20] size: DWORD  <||@
  Comment 677 564 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 680 566 MOV (x: [r11|QWORD[.] + rcx|QWORD * 4 + 20], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 685 568 rcx|QWORD[.] = LEA [r11|QWORD[.] + rcx|QWORD * 4 + 20] size: QWORD  <||@
  Comment 690 570 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 694 572 MOVB (x: [rcx|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 698 574 rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 700 576 JUMP ~[] destination: B68 -> B66  <||@
  Comment 700 block B66 loop 1 depth 1 header:163|LoopBegin  <||@
  Comment 700 528 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 700 530 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 702 532 BRANCH trueDestinationProbability: 0.49233439910722987 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70  <||@
  Comment 704 block B70 null  <||@
  Comment 704 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 704 590 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 707 592 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 710 594 JUMP ~[] destination: B70 -> B73  <||@
  Comment 710 block B73 null  <||@
  Comment 710 608 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 710 610 rax|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 715 612 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 717 614 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B94  <||@
  Comment 723 block B74 null  <||@
  Comment 723 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 618 rcx|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 727 620 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 729 622 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B93  <||@
  Comment 735 block B75 null  <||@
  Comment 735 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 626 MOV (x: [r11|QWORD[.] + rax|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 740 628 MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 745 630 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 748 632 BRANCH trueDestinationProbability: 0.640014121444422 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B87  <||@
  Comment 754 block B76 null  <||@
  Comment 754 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 636 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 758 638 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B76 -> B80 falseDestination: B76 -> B78  <||@
  Comment 764 block B78 null  <||@
  Comment 764 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 764 646 rax|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 769 648 rax|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 771 650 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 773 652 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B80 falseDestination: B78 -> B86  <||@
  Comment 779 block B80 null  <||@
  Comment 779 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 779 660 MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 782 662 rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 785 664 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 787 666 stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 792 668 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 795 670 rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 799 672 JUMP ~[] destination: B80 -> B81  <||@
  Comment 804 block B83 loop 2 depth 1 header:215|LoopBegin  <||@
  Comment 804 686 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 816 688 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 818 690 r9|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 824 692 r9|DWORD[.] = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 829 694 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 832 696 BRANCH trueDestinationProbability: 0.09548013245033116 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 838 block B84 loop 2 depth 1 header:215|LoopBegin  <||@
  Comment 838 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 838 700 rdx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 840 702 MOV (x: [rsi|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 843 704 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 846 706 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 850 708 JUMP ~[] destination: B84 -> B81  <||@
  Comment 850 block B81 loop 2 depth 1 header:215|LoopBegin  <||@
  Comment 850 674 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 850 676 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 853 678 BRANCH trueDestinationProbability: 0.1273946083388714 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 860 block B85 null  <||@
  Comment 860 710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 712 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 863 714 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 872 12  <||@
  Comment 882 block B87 null  <||@
  Comment 882 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 882 732 CMP rdx|DWORD y: 8 size: DWORD  <||@
  Comment 885 734 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90  <||@
  Comment 891 block B90 null  <||@
  Comment 891 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 891 756 rcx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 895 758 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 900 760 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 903 762 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 906 764 rdx|DWORD = SAR rcx|DWORD size: DWORD  <||@
  Comment 910 766 rcx|DWORD = SAR rcx|DWORD y: 2 size: DWORD  <||@
  Comment 913 768 rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 915 770 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 917 772 BRANCH trueDestinationProbability: 0.9807503712628541 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 923 block B91 null  <||@
  Comment 923 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 923 776 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 926 778 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 935 12  <||@
  Comment 945 block B51 null  <||@
  Comment 945 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 945 436 rbp|QWORD = INC rbp|QWORD size: QWORD  <||@
  Comment 948 438 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 951 440 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 957 block B52 null  <||@
  Comment 957 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 444 r14|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 960 446 CMP (x: rdx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 963 448 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B57 falseDestination: B52 -> B54  <||@
  Comment 974 block B58 null  <||@
  Comment 974 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 974 478 rdi|QWORD = INC rdi|QWORD size: QWORD  <||@
  Comment 977 480 CMP (x: r13|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 980 482 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B62  <||@
  Comment 986 block B59 null  <||@
  Comment 986 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 986 486 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 988 488 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 990 490 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B65 falseDestination: B59 -> B61  <||@
  Comment 1001 block B37 null  <||@
  Comment 1001 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1001 352 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1004 354 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B41  <||@
  Comment 1010 block B38 null  <||@
  Comment 1010 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 358 CMP (x: rdx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1013 360 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B43 falseDestination: B38 -> B40  <||@
  Comment 1024 block B44 null  <||@
  Comment 1024 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1024 398 CMP (x: r13|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1027 400 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B48  <||@
  Comment 1033 block B45 null  <||@
  Comment 1033 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1033 404 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1035 406 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B50 falseDestination: B45 -> B47  <||@
  Comment 1046 block B71 null  <||@
  Comment 1046 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1046 598 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1050 600 JUMP ~[] destination: B71 -> B73  <||@
  Comment 1055 block B5 null  <||@
  Comment 1055 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1055 58 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1060 60 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1065 62 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1070 64 JUMP ~[] destination: B5 -> B17  <||@
  Comment 1070 block B17 null  <||@
  Comment 1070 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1070 170 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1075 172 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1080 174 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1085 176 JUMP ~[] destination: B17 -> B21  <||@
  Comment 1090 block B72 null  <||@
  Comment 1090 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1090 604 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1094 606 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1099 block B82 null  <||@
  Comment 1099 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1099 682 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1102 684 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1111 12  <||@
  Comment 1121 block B27 null  <||@
  Comment 1121 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1121 268 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1125 270 r8|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1133 272 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3  <||@
  Comment 1137 274 CMP rdi|DWORD y: 9 size: DWORD  <||@
  Comment 1140 276 BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B73  <||@
  Comment 1146 block B28 null  <||@
  Comment 1146 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1146 280 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 1149 282 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1151 284 BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B73  <||@
  Comment 1157 block B29 null  <||@
  Comment 1157 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1157 288 rcx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1161 290 JUMP ~[] destination: B29 -> B36  <||@
  Comment 1166 block B22 null  <||@
  Comment 1166 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1166 220 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1176 222 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1185 12  <||@
  Comment 1195 block B92 null  <||@
  Comment 1195 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 782 stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1200 784 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1203 786 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157, 49]  <||@
  Comment 1203 9  <||@
  Comment 1207 {HotSpotMethod<EconomicMapImpl.compressLarge(int)>}  <||@
  Comment 1212 [stack:32]at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49, duringCall: true, rethrow: false]
              |0  |1  |2  |3                 
     locals:  |-  |-  |-  |stack:32|QWORD[.]   <||@
  Comment 1213 788 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 790 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1227 12  <||@
  Comment 1237 block B94 null  <||@
  Comment 1237 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 802 r11|DWORD = MOVE input: int[-166171|0xfffffffffffd76e5]  <||@
  Comment 1243 806 JUMP ~[] destination: B94 -> B95  <||@
  Comment 1243 block B95 null  <||@
  Comment 1243 808 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1243 804 stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1248 810 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1255 812 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1262 814 DEOPT info [bci:72, 49]  <||@
  Comment 1262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1267 [rsi:0, stack:32]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72, duringCall: false, rethrow: false]
              |0             |1  |2          |3  |4        
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD  |-  |r9|DWORD 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49, duringCall: true, rethrow: false]
              |0  |1  |2  |3                 
     locals:  |-  |-  |-  |stack:32|QWORD[.]   <||@
  Comment 1268 block B48 null  <||@
  Comment 1268 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1268 420 r11|DWORD = MOVE input: int[-157979|0xfffffffffffd96e5]  <||@
  Comment 1274 422 JUMP ~[] destination: B48 -> B63  <||@
  Comment 1274 block B63 null  <||@
  Comment 1274 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1274 510 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@466068644]  <||@
  Comment 1274 {Object[d.a@466068644]}  <||@
  Comment 1284 512 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1291 514 MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 1298 516 DEOPT info [bci:46]  <||@
  Comment 1298 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1303 [rsi:0, r8:0]at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 46, duringCall: false, rethrow: false]
              |0             |1  |2          |3 
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD  |- 
     stack:   |r8|QWORD[.]   |   |           |    <||@
  Comment 1304 block B54 null  <||@
  Comment 1304 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1304 456 r11|DWORD = MOVE input: int[-160539|0xfffffffffffd8ce5]  <||@
  Comment 1310 458 JUMP ~[] destination: B54 -> B63  <||@
  Comment 1312 block B69 null  <||@
  Comment 1312 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1312 580 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1506260085]  <||@
  Comment 1312 {Object[d.a@1506260085]}  <||@
  Comment 1322 582 MOV [r15|QWORD + 668] y: -156988 size: DWORD  <||@
  Comment 1333 584 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1340 586 DEOPT info [bci:29, 49]  <||@
  Comment 1340 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1345 [rsi:0, r8:0]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29, duringCall: false, rethrow: false]
              |0             |1  |2          |3  |4        
     locals:  |rsi|QWORD[.]  |-  |rcx|DWORD  |-  |r9|DWORD 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49, duringCall: true, rethrow: false]
              |0  |1  |2  |3           
     locals:  |-  |-  |-  |r8|QWORD[.]   <||@
  Comment 1346 block B93 null  <||@
  Comment 1346 792 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1346 794 r11|DWORD = MOVE input: int[-168731|0xfffffffffffd6ce5]  <||@
  Comment 1352 798 JUMP ~[] destination: B93 -> B95  <||@
  Comment 1354 block B96 null  <||@
  Comment 1354 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1354 818 MOV [r15|QWORD + 668] y: -149019 size: DWORD  <||@
  Comment 1365 820 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1372 822 DEOPT info [bci:36]  <||@
  Comment 1372 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1377 [rsi:0]at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36, duringCall: false, rethrow: false]
              |0             |1  |2          |3 
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD  |-   <||@
  Comment 1378 block B55 null  <||@
  Comment 1378 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1378 462 r11|DWORD = MOVE input: int[-160539|0xfffffffffffd8ce5]  <||@
  Comment 1384 464 JUMP ~[] destination: B55 -> B63  <||@
  Comment 1386 block B47 null  <||@
  Comment 1386 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1386 414 r11|DWORD = MOVE input: int[-157979|0xfffffffffffd96e5]  <||@
  Comment 1392 416 JUMP ~[] destination: B47 -> B63  <||@
  Comment 1394 block B41 null  <||@
  Comment 1394 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1394 376 r11|DWORD = MOVE input: int[-154651|0xfffffffffffda3e5]  <||@
  Comment 1400 378 JUMP ~[] destination: B41 -> B63  <||@
  Comment 1402 block B86 null  <||@
  Comment 1402 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1402 718 stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1407 720 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@722296218]  <||@
  Comment 1407 {Object[d.a@722296218]}  <||@
  Comment 1417 722 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1420 724 r11|DWORD = MOVE input: int[-171291|0xfffffffffffd62e5]  <||@
  Comment 1426 726 rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1431 728 JUMP ~[] destination: B86 -> B89  <||@
  Comment 1431 block B89 null  <||@
  Comment 1431 746 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1431 748 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1438 750 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1445 752 DEOPT info [bci:11, 81, 49]  <||@
  Comment 1445 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1450 [rcx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |r10|DWORD  |Object[null] 
  at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81, duringCall: true, rethrow: false]
              |0             |1  |2          |3  |4        
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD  |-  |r9|DWORD 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49, duringCall: true, rethrow: false]
              |0  |1  |2  |3            
     locals:  |-  |-  |-  |rcx|QWORD[.]   <||@
  Comment 1451 block B88 null  <||@
  Comment 1451 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1451 738 r11|DWORD = MOVE input: int[-175123|0xfffffffffffd53ed]  <||@
  Comment 1457 740 rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1460 742 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1470 744 JUMP ~[] destination: B88 -> B89  <||@
  Comment 1472 block B18 null  <||@
  Comment 1472 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 180 MOV [r15|QWORD + 668] y: -141595 size: DWORD  <||@
  Comment 1483 182 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1490 184 DEOPT info [bci:2, 32]  <||@
  Comment 1490 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1495 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 1496 block B62 null  <||@
  Comment 1496 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1496 504 r11|DWORD = MOVE input: int[-163611|0xfffffffffffd80e5]  <||@
  Comment 1502 506 JUMP ~[] destination: B62 -> B63  <||@
  Comment 1507 block B40 null  <||@
  Comment 1507 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1507 370 r11|DWORD = MOVE input: int[-154651|0xfffffffffffda3e5]  <||@
  Comment 1513 372 JUMP ~[] destination: B40 -> B63  <||@
  Comment 1518 block B61 null  <||@
  Comment 1518 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1518 498 r11|DWORD = MOVE input: int[-163611|0xfffffffffffd80e5]  <||@
  Comment 1524 500 JUMP ~[] destination: B61 -> B63  <||@
  Comment 1529 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1529 4  <||@
  Comment 1535 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1535 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8946[org.graalvm.collections.EconomicMapImpl.removeKey(Object)]"
  method "HotSpotCompilation-8946[org.graalvm.collections.EconomicMapImpl.removeKey(Object)]"
  date 1527005199355
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106b2aa00 448b560849c1e203493bc20f854fb4cdff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488974242048895424188502448b561c4585d20f851d01000041ba0000000090443b560c0f8def000000448b5e18458bc241d1e0463b04dd0c0000000f834e05000049c1e303478b5c8310438504dc49c1e303458bca41ffc14c3bda0f848d0300008b4e2085c90f850b00000085056345d6fd458bd1eba881f9750300d844894c24144489442410448954240c0f853c000000488bf2498bd348b8ffffffffffffffff0f1f4000e804b8cdff9085c00f854903000085051b45d6fd448b542414488b542418488b742420e951ffffff81f9770300d80f842400000048c1e103488bf1488b542418498bcb48b8ffffffffffffffff666690e8b4b7cdff90ebae8505d144d6fd448b542414488b542418488b742420e907ffffff48b80000000000000000488b6c24304883c4388505a444d6fdc5f877c3488b742420488b5424180f1f8000000000e824b5cdff908bf0ffc68bd0d1e2448bce448bc2448bd04183faff0f84f6020000488b7424208b46188b14c50c00000041ffc0413bd00f8697030000448bd849c1e303478b4483108b4e0c8bd9ffcb8bf9412bfaffcf4585c00f841200000042813cc508000000bc3e01f80f847902000049c1e00383ff090f8d4d0200008b7e1c85ff0f85160200004963fa8beb412bea4863ed48ffcd4803fd488bef48ffc548d1e5448bea458bf241ffc641d1e6413bda0f8fba010000894c240c48d1e7418bcad1e1413bda0f8fbc010000413bda0f8f64010000413bda0f8f78010000418bcae95e0000006690813cc508000000f52200f80f85af0200008bf9ffc78befd1e5458b6cab10d1e145896c8b104d8d6c8b1049c1ed0949be00e01b170100000047886435004863ed418b6cab144863c941896c8b14498d4c8b1448c1e909468824318bcf3bd97fa0458bca448bd1418bc2d1e03bd00f86020200008bc8ffc13bd10f866302000045896483104589648b10413bda0f85800000004183fa010f8c0f000000418bc2ffc8d1e03bd00f866f020000895e0c8b46108bd34489542410448bd08b442410e92e000000660f1f440000660f1f440000ffc8448bc841d1e1478b4c8b104585c90f8516000000ffca89560c41ffca4489561083f8017dd9e9ef000000498bc0488b6c24304883c43885059842d6fdc5f877c383fa080f84300200008b4c240cb8010000000346108946108bd1d1fac1f90203d13bd00f8e10010000498bc0488b6c24304883c43885055942d6fdc5f877c348ffc54c3bed0f86a501000041ffc6413bd60f8784feffffe94a01000048ffc74c3bef0f86fe010000ffc13bd10f8772feffffe9050200004c3bed0f8680010000413bd60f8734feffffe9e30100004c3bef0f86eb0000003bd10f8733feffffe954010000894c240ce9a7feffff44894c24144489442410448954240c448b4c2414448b442410448b54240ce94cfdffff894c240ce97bfeffff498bc0488b6c24304883c4388505a941d6fdc5f877c3894c240c468b04c51000000049c1e00383ff090f8d4cfeffff8b4e1c85c90f8541feffff8b4c240ce972fdffff48b80000000000000000488b6c24304883c43885055f41d6fdc5f877c34c89442420418bd10f1f4000e8e4b1cdff90488b442420488b6c24304883c43885053541d6fdc5f877c341bbe576fdff4c8944242045899f9c0200004d89a7a8020000e80bc7cdff9041bbe596fdff49b9a0fb83bb0700000045899f9c0200004d898fa8020000e8e7c6cdff9041bbe58cfdffebda49ba686285bb0700000041c7879c020000c49afdff4d8997a8020000e8bdc6cdff9041bbe56cfdffeb9141c7879c020000e5b9fdff4d89a7a8020000e89dc6cdff9041bbe58cfdffeb9041bbe596fdffeb8841bbe5a3fdffeb804c8944242049bbb86885bb070000004d8bc341bbe562fdff488b4c242045899f9c0200004d8987a8020000e854c6cdff9041bbed53fdff498bc849b80000000000000000ebd741c7879c020000e5d6fdff4d89a7a8020000e827c6cdff9041bbe580fdffe917ffffff41bbe5a3fdffe90cffffff41bbe580fdffe901ffffffe822f6110090e8fcc4cdff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4a1c3ef0 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 58 [rdx:0, rsi:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:609) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |Object[null]  |-  |-   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 12 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 64 14 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 67 16 BRANCH trueDestinationProbability: 0.6305692384914456 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B20  <||@
  Comment 73 block B1 null  <||@
  Comment 73 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 20 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 79 22 JUMP ~[] destination: B1 -> B2  <||@
  Comment 79 block B2 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 79 24 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 80 26 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 84 28 BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19  <||@
  Comment 90 block B3 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 90 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 32 r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 94 34 r8|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 100 36 CMP (x: r8|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 32]  <||@
  Comment 100 [rdx:0, rsi:0, r11:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 100 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 108 38 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B18  <||@
  Comment 114 block B4 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 114 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 42 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3  <||@
  Comment 118 44 r11|DWORD[.] = MOV [r11|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 123 46 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:2, 32]  <||@
  Comment 123 [rdx:0, rsi:0, r11:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 123 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 127 48 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3  <||@
  Comment 131 50 r9|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 137 52 CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 140 54 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 146 block B6 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 146 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 68 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 149 70 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 151 72 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 157 block B7 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 157 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 157 76 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 32]  <||@
  Comment 157 [rdx:0, rsi:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 157 {infopoint: SAFEPOINT}  <||@
  Comment 157 11  <||@
  Comment 163 78 r10|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 166 80 JUMP ~[] destination: B7 -> B2  <||@
  Comment 168 block B8 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 168 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 168 84 CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 168 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 174 90 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 179 92 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 184 94 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 189 86 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 195 block B9 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 195 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 96 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 198 98 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 201 100 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 32]  <||@
  Comment 201 7  <||@
  Comment 215 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 220 [stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 221 102 JUMP ~[] destination: B9 -> B13  <||@
  Comment 221 block B13 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 221 142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 221 144 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 223 146 BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17  <||@
  Comment 229 block B14 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 229 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 150 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 32]  <||@
  Comment 229 [stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |  
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 229 {infopoint: SAFEPOINT}  <||@
  Comment 229 11  <||@
  Comment 235 152 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 240 154 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 245 156 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 250 158 JUMP ~[] destination: B14 -> B2  <||@
  Comment 255 block B10 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 255 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 255 112 CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 255 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 261 114 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 267 block B12 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 267 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 130 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3  <||@
  Comment 271 132 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 274 134 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 279 136 rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 282 138 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 32]  <||@
  Comment 282 7  <||@
  Comment 295 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 300 [stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 301 140 JUMP ~[] destination: B12 -> B13  <||@
  Comment 303 block B11 loop 0 depth 1 header:46|LoopBegin  <||@
  Comment 303 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 118 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 32]  <||@
  Comment 303 [stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 303 {infopoint: SAFEPOINT}  <||@
  Comment 303 11  <||@
  Comment 309 120 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 314 122 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 319 124 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 324 126 JUMP ~[] destination: B11 -> B2  <||@
  Comment 329 block B19 null  <||@
  Comment 329 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 188 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 339 190 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 348 12  <||@
  Comment 358 block B20 null  <||@
  Comment 358 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 194 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 363 196 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 368 198 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:23]  <||@
  Comment 368 9  <||@
  Comment 375 {HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)>}  <||@
  Comment 380 [stack:32]at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:614) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 381 200 rsi|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 385 202 rdx|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 389 204 r9|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 392 206 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 395 208 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 398 210 JUMP ~[] destination: B20 -> B21  <||@
  Comment 398 block B21 null  <||@
  Comment 398 212 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 398 214 CMP r10|DWORD y: -1 size: DWORD  <||@
  Comment 402 216 BRANCH trueDestinationProbability: 0.009154018920574424 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 408 block B23 null  <||@
  Comment 408 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 408 226 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 413 228 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 416 230 rdx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:36]  <||@
  Comment 416 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36, duringCall: false, rethrow: false]
              |0             |1  |2          |3 
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD  |-   <||@
  Comment 416 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 423 232 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 426 234 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 429 236 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B96  <||@
  Comment 435 block B24 null  <||@
  Comment 435 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 435 240 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3  <||@
  Comment 442 242 r8|DWORD[.] = MOV [r11|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 447 244 rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 450 246 rbx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 454 248 rdi|DWORD = SUB (x: rcx|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 459 250 rdi|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 461 252 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 464 254 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B33 falseDestination: B24 -> B26  <||@
  Comment 470 block B26 null  <||@
  Comment 470 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 262 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 470 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 482 264 BRANCH trueDestinationProbability: 0.07849735111992084 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33  <||@
  Comment 488 block B33 null  <||@
  Comment 488 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 306 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3  <||@
  Comment 492 308 CMP rdi|DWORD y: 9 size: DWORD  <||@
  Comment 495 310 BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B72  <||@
  Comment 501 block B34 null  <||@
  Comment 501 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 501 314 rdi|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 504 316 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 506 318 BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B34 -> B36 falseDestination: B34 -> B71  <||@
  Comment 512 block B36 null  <||@
  Comment 512 324 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 512 326 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 515 328 rbp|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 520 330 rbp|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 523 332 rbp|QWORD = DEC rbp|QWORD size: QWORD  <||@
  Comment 526 334 rdi|QWORD = ADD (x: rdi|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 529 336 rbp|QWORD = INC rdi|QWORD size: QWORD  <||@
  Comment 535 338 rbp|QWORD = SHL rbp|QWORD size: QWORD  <||@
  Comment 538 340 r13|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 541 342 r14|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 547 344 r14|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 550 346 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 553 348 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B43  <||@
  Comment 559 block B43 null  <||@
  Comment 559 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 382 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 563 388 rdi|QWORD = SHL rdi|QWORD size: QWORD  <||@
  Comment 566 390 rcx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 571 392 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 574 394 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B50  <||@
  Comment 580 block B50 null  <||@
  Comment 580 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 580 430 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 583 432 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B57  <||@
  Comment 589 block B57 null  <||@
  Comment 589 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 589 472 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 592 474 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B65  <||@
  Comment 598 block B65 null  <||@
  Comment 598 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 598 524 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 601 526 JUMP ~[] destination: B65 -> B66  <||@
  Comment 606 block B67 loop 1 depth 1 header:163|LoopBegin  <||@
  Comment 606 534 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 608 536 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 608 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 619 538 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 625 block B68 loop 1 depth 1 header:163|LoopBegin  <||@
  Comment 625 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 625 542 rdi|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 629 544 rbp|DWORD = SHL rdi|DWORD size: DWORD  <||@
  Comment 633 546 r13|DWORD[.] = MOV [r11|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 638 548 rcx|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 640 550 MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 645 552 r13|QWORD[.] = LEA [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 650 554 r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 654 556 r14|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 664 558 MOVB (x: [r13|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 669 560 rbp|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 672 562 rbp|DWORD[.] = MOV [r11|QWORD[.] + rbp|QWORD * 4 + 20] size: DWORD  <||@
  Comment 677 564 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 680 566 MOV (x: [r11|QWORD[.] + rcx|QWORD * 4 + 20], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 685 568 rcx|QWORD[.] = LEA [r11|QWORD[.] + rcx|QWORD * 4 + 20] size: QWORD  <||@
  Comment 690 570 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 694 572 MOVB (x: [rcx|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 698 574 rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 700 576 JUMP ~[] destination: B68 -> B66  <||@
  Comment 700 block B66 loop 1 depth 1 header:163|LoopBegin  <||@
  Comment 700 528 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 700 530 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 702 532 BRANCH trueDestinationProbability: 0.49233439910722987 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70  <||@
  Comment 704 block B70 null  <||@
  Comment 704 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 704 590 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 707 592 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 710 594 JUMP ~[] destination: B70 -> B73  <||@
  Comment 710 block B73 null  <||@
  Comment 710 608 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 710 610 rax|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 715 612 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 717 614 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B94  <||@
  Comment 723 block B74 null  <||@
  Comment 723 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 618 rcx|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 727 620 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 729 622 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B93  <||@
  Comment 735 block B75 null  <||@
  Comment 735 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 626 MOV (x: [r11|QWORD[.] + rax|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 740 628 MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 745 630 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 748 632 BRANCH trueDestinationProbability: 0.640014121444422 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B87  <||@
  Comment 754 block B76 null  <||@
  Comment 754 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 636 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 758 638 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B76 -> B80 falseDestination: B76 -> B78  <||@
  Comment 764 block B78 null  <||@
  Comment 764 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 764 646 rax|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 769 648 rax|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 771 650 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 773 652 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B80 falseDestination: B78 -> B86  <||@
  Comment 779 block B80 null  <||@
  Comment 779 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 779 660 MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 782 662 rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 785 664 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 787 666 stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 792 668 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 795 670 rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 799 672 JUMP ~[] destination: B80 -> B81  <||@
  Comment 804 block B83 loop 2 depth 1 header:215|LoopBegin  <||@
  Comment 804 686 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 816 688 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 818 690 r9|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 824 692 r9|DWORD[.] = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 829 694 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 832 696 BRANCH trueDestinationProbability: 0.09548013245033116 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 838 block B84 loop 2 depth 1 header:215|LoopBegin  <||@
  Comment 838 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 838 700 rdx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 840 702 MOV (x: [rsi|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 843 704 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 846 706 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 850 708 JUMP ~[] destination: B84 -> B81  <||@
  Comment 850 block B81 loop 2 depth 1 header:215|LoopBegin  <||@
  Comment 850 674 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 850 676 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 853 678 BRANCH trueDestinationProbability: 0.1273946083388714 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 860 block B85 null  <||@
  Comment 860 710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 712 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 863 714 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 872 12  <||@
  Comment 882 block B87 null  <||@
  Comment 882 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 882 732 CMP rdx|DWORD y: 8 size: DWORD  <||@
  Comment 885 734 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90  <||@
  Comment 891 block B90 null  <||@
  Comment 891 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 891 756 rcx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 895 758 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 900 760 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 903 762 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 906 764 rdx|DWORD = SAR rcx|DWORD size: DWORD  <||@
  Comment 910 766 rcx|DWORD = SAR rcx|DWORD y: 2 size: DWORD  <||@
  Comment 913 768 rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 915 770 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 917 772 BRANCH trueDestinationProbability: 0.9807503712628541 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 923 block B91 null  <||@
  Comment 923 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 923 776 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 926 778 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 935 12  <||@
  Comment 945 block B51 null  <||@
  Comment 945 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 945 436 rbp|QWORD = INC rbp|QWORD size: QWORD  <||@
  Comment 948 438 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 951 440 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 957 block B52 null  <||@
  Comment 957 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 444 r14|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 960 446 CMP (x: rdx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 963 448 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B57 falseDestination: B52 -> B54  <||@
  Comment 974 block B58 null  <||@
  Comment 974 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 974 478 rdi|QWORD = INC rdi|QWORD size: QWORD  <||@
  Comment 977 480 CMP (x: r13|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 980 482 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B62  <||@
  Comment 986 block B59 null  <||@
  Comment 986 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 986 486 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 988 488 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 990 490 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B65 falseDestination: B59 -> B61  <||@
  Comment 1001 block B37 null  <||@
  Comment 1001 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1001 352 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1004 354 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B41  <||@
  Comment 1010 block B38 null  <||@
  Comment 1010 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 358 CMP (x: rdx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1013 360 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B43 falseDestination: B38 -> B40  <||@
  Comment 1024 block B44 null  <||@
  Comment 1024 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1024 398 CMP (x: r13|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1027 400 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B48  <||@
  Comment 1033 block B45 null  <||@
  Comment 1033 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1033 404 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1035 406 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B50 falseDestination: B45 -> B47  <||@
  Comment 1046 block B71 null  <||@
  Comment 1046 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1046 598 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1050 600 JUMP ~[] destination: B71 -> B73  <||@
  Comment 1055 block B5 null  <||@
  Comment 1055 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1055 58 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1060 60 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1065 62 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1070 64 JUMP ~[] destination: B5 -> B17  <||@
  Comment 1070 block B17 null  <||@
  Comment 1070 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1070 170 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1075 172 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1080 174 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1085 176 JUMP ~[] destination: B17 -> B21  <||@
  Comment 1090 block B72 null  <||@
  Comment 1090 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1090 604 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1094 606 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1099 block B82 null  <||@
  Comment 1099 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1099 682 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1102 684 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1111 12  <||@
  Comment 1121 block B27 null  <||@
  Comment 1121 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1121 268 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1125 270 r8|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1133 272 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79dd09c4 encoding: base: 0 shift: 3  <||@
  Comment 1137 274 CMP rdi|DWORD y: 9 size: DWORD  <||@
  Comment 1140 276 BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B73  <||@
  Comment 1146 block B28 null  <||@
  Comment 1146 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1146 280 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 1149 282 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1151 284 BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B73  <||@
  Comment 1157 block B29 null  <||@
  Comment 1157 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1157 288 rcx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1161 290 JUMP ~[] destination: B29 -> B36  <||@
  Comment 1166 block B22 null  <||@
  Comment 1166 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1166 220 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1176 222 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1185 12  <||@
  Comment 1195 block B92 null  <||@
  Comment 1195 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 782 stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1200 784 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1203 786 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157, 49]  <||@
  Comment 1203 9  <||@
  Comment 1207 {HotSpotMethod<EconomicMapImpl.compressLarge(int)>}  <||@
  Comment 1212 [stack:32]at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49, duringCall: true, rethrow: false]
              |0  |1  |2  |3                 
     locals:  |-  |-  |-  |stack:32|QWORD[.]   <||@
  Comment 1213 788 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 790 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1227 12  <||@
  Comment 1237 block B94 null  <||@
  Comment 1237 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 802 r11|DWORD = MOVE input: int[-166171|0xfffffffffffd76e5]  <||@
  Comment 1243 806 JUMP ~[] destination: B94 -> B95  <||@
  Comment 1243 block B95 null  <||@
  Comment 1243 808 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1243 804 stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1248 810 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1255 812 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1262 814 DEOPT info [bci:72, 49]  <||@
  Comment 1262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1267 [rsi:0, stack:32]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72, duringCall: false, rethrow: false]
              |0             |1  |2          |3  |4        
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD  |-  |r9|DWORD 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49, duringCall: true, rethrow: false]
              |0  |1  |2  |3                 
     locals:  |-  |-  |-  |stack:32|QWORD[.]   <||@
  Comment 1268 block B48 null  <||@
  Comment 1268 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1268 420 r11|DWORD = MOVE input: int[-157979|0xfffffffffffd96e5]  <||@
  Comment 1274 422 JUMP ~[] destination: B48 -> B63  <||@
  Comment 1274 block B63 null  <||@
  Comment 1274 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1274 510 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@466068644]  <||@
  Comment 1274 {Object[d.a@466068644]}  <||@
  Comment 1284 512 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1291 514 MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 1298 516 DEOPT info [bci:46]  <||@
  Comment 1298 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1303 [rsi:0, r8:0]at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:620) [bci: 46, duringCall: false, rethrow: false]
              |0             |1  |2          |3 
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD  |- 
     stack:   |r8|QWORD[.]   |   |           |    <||@
  Comment 1304 block B54 null  <||@
  Comment 1304 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1304 456 r11|DWORD = MOVE input: int[-160539|0xfffffffffffd8ce5]  <||@
  Comment 1310 458 JUMP ~[] destination: B54 -> B63  <||@
  Comment 1312 block B69 null  <||@
  Comment 1312 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1312 580 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1506260085]  <||@
  Comment 1312 {Object[d.a@1506260085]}  <||@
  Comment 1322 582 MOV [r15|QWORD + 668] y: -156988 size: DWORD  <||@
  Comment 1333 584 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1340 586 DEOPT info [bci:29, 49]  <||@
  Comment 1340 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1345 [rsi:0, r8:0]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29, duringCall: false, rethrow: false]
              |0             |1  |2          |3  |4        
     locals:  |rsi|QWORD[.]  |-  |rcx|DWORD  |-  |r9|DWORD 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49, duringCall: true, rethrow: false]
              |0  |1  |2  |3           
     locals:  |-  |-  |-  |r8|QWORD[.]   <||@
  Comment 1346 block B93 null  <||@
  Comment 1346 792 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1346 794 r11|DWORD = MOVE input: int[-168731|0xfffffffffffd6ce5]  <||@
  Comment 1352 798 JUMP ~[] destination: B93 -> B95  <||@
  Comment 1354 block B96 null  <||@
  Comment 1354 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1354 818 MOV [r15|QWORD + 668] y: -149019 size: DWORD  <||@
  Comment 1365 820 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1372 822 DEOPT info [bci:36]  <||@
  Comment 1372 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1377 [rsi:0]at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:619) [bci: 36, duringCall: false, rethrow: false]
              |0             |1  |2          |3 
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD  |-   <||@
  Comment 1378 block B55 null  <||@
  Comment 1378 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1378 462 r11|DWORD = MOVE input: int[-160539|0xfffffffffffd8ce5]  <||@
  Comment 1384 464 JUMP ~[] destination: B55 -> B63  <||@
  Comment 1386 block B47 null  <||@
  Comment 1386 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1386 414 r11|DWORD = MOVE input: int[-157979|0xfffffffffffd96e5]  <||@
  Comment 1392 416 JUMP ~[] destination: B47 -> B63  <||@
  Comment 1394 block B41 null  <||@
  Comment 1394 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1394 376 r11|DWORD = MOVE input: int[-154651|0xfffffffffffda3e5]  <||@
  Comment 1400 378 JUMP ~[] destination: B41 -> B63  <||@
  Comment 1402 block B86 null  <||@
  Comment 1402 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1402 718 stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1407 720 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@722296218]  <||@
  Comment 1407 {Object[d.a@722296218]}  <||@
  Comment 1417 722 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1420 724 r11|DWORD = MOVE input: int[-171291|0xfffffffffffd62e5]  <||@
  Comment 1426 726 rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1431 728 JUMP ~[] destination: B86 -> B89  <||@
  Comment 1431 block B89 null  <||@
  Comment 1431 746 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1431 748 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1438 750 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1445 752 DEOPT info [bci:11, 81, 49]  <||@
  Comment 1445 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1450 [rcx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |r10|DWORD  |Object[null] 
  at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81, duringCall: true, rethrow: false]
              |0             |1  |2          |3  |4        
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD  |-  |r9|DWORD 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:621) [bci: 49, duringCall: true, rethrow: false]
              |0  |1  |2  |3            
     locals:  |-  |-  |-  |rcx|QWORD[.]   <||@
  Comment 1451 block B88 null  <||@
  Comment 1451 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1451 738 r11|DWORD = MOVE input: int[-175123|0xfffffffffffd53ed]  <||@
  Comment 1457 740 rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1460 742 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1470 744 JUMP ~[] destination: B88 -> B89  <||@
  Comment 1472 block B18 null  <||@
  Comment 1472 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 180 MOV [r15|QWORD + 668] y: -141595 size: DWORD  <||@
  Comment 1483 182 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1490 184 DEOPT info [bci:2, 32]  <||@
  Comment 1490 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1495 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:616) [bci: 32, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 1496 block B62 null  <||@
  Comment 1496 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1496 504 r11|DWORD = MOVE input: int[-163611|0xfffffffffffd80e5]  <||@
  Comment 1502 506 JUMP ~[] destination: B62 -> B63  <||@
  Comment 1507 block B40 null  <||@
  Comment 1507 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1507 370 r11|DWORD = MOVE input: int[-154651|0xfffffffffffda3e5]  <||@
  Comment 1513 372 JUMP ~[] destination: B40 -> B63  <||@
  Comment 1518 block B61 null  <||@
  Comment 1518 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1518 498 r11|DWORD = MOVE input: int[-163611|0xfffffffffffd80e5]  <||@
  Comment 1524 500 JUMP ~[] destination: B61 -> B63  <||@
  Comment 1529 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1529 4  <||@
  Comment 1535 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1535 5  <||@
  HexCodeFile>>> <|@
end_nmethod
