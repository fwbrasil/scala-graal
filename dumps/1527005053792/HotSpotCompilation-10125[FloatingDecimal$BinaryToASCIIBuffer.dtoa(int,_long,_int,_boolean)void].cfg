begin_compilation
  name " HotSpotCompilation-10125[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  method "HotSpotCompilation-10125[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  date 1527005239007
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1725 v1890 ?1725 v1891 ?1724 ?28 ?852 ?1723 v1112 ?90 ?1722 ?1721 ?1720 ?1719 ?555 ?1718 ?167 ?980 v1900 ?239 ?514 v1401 v1924 v1923 ?594 ?1717 ?636 ?1716 ?1014 v1399 ?373 ?381 v1922 ?585 ?1003 ?650 ?443 ?1715 ?636 ?1714 ?1713 ?465 ?1712 ?1711 ?475 ?620 ?486 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1405 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1099 v1102 i1731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsRoundedUp
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1890 
value: i1405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1890 value: i1405 stateAfter: - lastLocationAccess: - #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
displacement: 25
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1102 v1733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:440) [bci: 64]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1891 
value: i1405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v1099 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1891 value: i1405 stateAfter: - lastLocationAccess: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid a1743 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1746 v1814 v1806 v1774 v1790 v1756 v1782 v1766 ?465 ?475 ?486 ?555 ?585 ?620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1719 ?1718 ?1717 ?28 ?90 ?1716 ?1715 ?1714 ?1713 ?486 ?1712 ?167 ?980 ?239 v241 ?1711 ?1014 ?475 ?465 ?514 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v703 v1475 i458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i120 i69 ?90 ?28 v65 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 143]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 i83 i679 j741 v751 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 109]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 v986 v189 v985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 102]
rawvalue: int[27]{0, 3, 5, 7, 10, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[27]{0, 3, 5, 7, 10, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1892 v1896 v1897 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 i1073 i1044 v60 i78 v1112 i887 i889 v140 i891 v230 i1068 ?239 ?239 v241 v872 i460 i855 i1075 v747 ?1719 v302 i303 i328 i333 v336 v1260 i1029 i371 i372 v382 v392 i423 i428 i450 ?1718 ?1717 v493 i494 i1028 i500 v503 ?514 v1386 i525 i546 i547 v556 v565 v589 i590 i596 i372 i371 v637 i1043 v1395 v651 v655 i774 i371 i372 i546 i547 i546 i547 i78 i78 i951 i1848 i1852 ?29 ?381 ?381 ?555 ?555 ?636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 96]
rawvalue: 27
stableDimension: 0
stamp: i32 [27] ⇊000000000000001b ⇈000000000000001b
stampKind: i32
value: int[27|0x1b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v893 v894 v171 v1140 v1213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i107 i83 ?90 i16 ?28 v32 v37 v65 i69 v81 d734 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v35 v1056 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 50]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j725 i9 j84 ?90 ?28 j121 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfTrailingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:431) [bci: 45]
stamp: i32 [0 - 64] ⇈000000000000007f
=== Inputs ===
value: j3 
=== Succesors ===
=== Usages ===
i11 i679 j121 ?28 ?90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountTrailingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountTrailingZerosNode>@ value: j3  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 54]
stamp: i32 [-11 - 53]
=== Inputs ===
x: i10 
y: i9 
=== Succesors ===
=== Usages ===
i153 v130 i16 ?28 i53 ?90 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i10 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 71]
stamp: i32
=== Inputs ===
x: i11 
y: i2 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i11 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 i70 i341 i134 i764 i774 i855 i826 i829 i851 i870 i855 i1854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
stamp: i32
=== Inputs ===
x: i16 
y: i17 
=== Succesors ===
=== Usages ===
v19 i1043 i1044 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 v95 v108 v130 i942 i169 i949 i952 i214 i220 ?239 i459 i906 v924 i922 ?443 i299 i303 j317 j324 i328 i333 i948 i1029 j413 i423 i428 i377 i378 i438 j446 i450 i945 i478 i483 i494 v499 i500 i1926 i525 i590 v595 i596 i599 v1374 i644 i681 j1850 i1028 j689 j693 i851 v816 ?443 i1852 v842 i855 v865 i1848 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i7 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
trueSuccessorProbability: 0.726772406928274
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604721403427327083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1056  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 0.9996262583639761
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v1054 
falseSuccessor: v1055 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v1054 #falseSuccessor: v1055  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604718956845853292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1038  <|@  <|@
f <@*|@fixed>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1054 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4553646222502524500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1057 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1057  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v1055 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B27" 
    xhandlers
    flags 
    probability 4598593650663286570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 0.9996262583639761
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v33 #falseSuccessor: v34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4598591811095463232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v33 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607179052434631948
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1043 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v1036 
values: i18 i8 
=== Succesors ===
=== Usages ===
i1044 v893 v1892 v60 i1044 i1044 i1044 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1036 values: i18 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1037 v1038 
=== Succesors ===
next: v43 
=== Usages ===
i1043 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1037 v1038 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 86]
rawvalue: -21
stableDimension: 0
stamp: i32 [-21] ⇊00000000ffffffeb ⇈00000000ffffffeb
stampKind: i32
value: int[-21|0xffffffffffffffeb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i36 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
stamp: void
trueSuccessorProbability: 6.874510040402823E-4
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v42 #falseSuccessor: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559477469886609793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v42 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607172862740671949
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 91]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1043 
y: i45 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1043 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
stamp: void
trueSuccessorProbability: 0.5135895145912284
=== Inputs ===
condition: v893 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v893 #trueSuccessor: v47 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602796314746464677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1855 
=== Usages ===
i1855 
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1855  <|@  <|@
f <@~|@floating>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i1043 
=== Succesors ===
=== Usages ===
i1855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i1043  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 107]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v47 
address: v1892 
=== Succesors ===
next: v59 
=== Usages ===
i53 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v47 address: v1892 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 108]
stamp: i32
=== Inputs ===
x: i11 
y: i1855 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i1855  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i54 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
trueSuccessorProbability: 0.9987311433807979
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
i1855 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v56 #falseSuccessor: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602790451239230686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1043 
y: i8 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1043 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 116]
stamp: void
trueSuccessorProbability: 0.4020092226613966
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v61 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596589483113290611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1495 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1495  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 74
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 443
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?28 
values: - - i8 
=== Succesors ===
=== Usages ===
v1746 i1857 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?28 values: - - i8  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i80 
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v1492 
falseSuccessor: v1494 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v1492 #falseSuccessor: v1494  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596589483113290611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v1495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i2 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
stamp: void
trueSuccessorProbability: 0.0011119564581260066
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4552582423775683270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 125]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 128]
stamp: i32
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 130]
stamp: i32
=== Inputs ===
x: i69 
y: i17 
=== Succesors ===
=== Usages ===
v1895 v703 v709 v1125 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i69 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i702 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i702  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v703 
=== Succesors ===
trueSuccessor: v704 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v703 #trueSuccessor: v704 #falseSuccessor: v705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4548078824148312774
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4548078824148312774
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1856 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1856  <|@  <|@
f <@~|@floating>@ <|@
tid a1113 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1893 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a1113 
index: - 
=== Succesors ===
=== Usages ===
a1856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1113 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsNumber
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1893 
=== Succesors ===
next: i1857 
=== Usages ===
a1117 v1894 
=== Predecessor ===
v705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1893 #next: i1857  <|@  <|@
f <@~|@floating>@ <|@
tid v1894 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1856 
=== Succesors ===
=== Usages ===
i1857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1857 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v1894 
=== Succesors ===
next: v712 
=== Usages ===
v709 v1125 
=== Predecessor ===
a1856 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v1894 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i1857 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i1857  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
i1857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v710 #falseSuccessor: v711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 13]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1503 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1503  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i1857 
=== Succesors ===
=== Usages ===
v1503 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i70 y: i1857  <|@  <|@
f <@*|@fixed>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1125 
=== Succesors ===
trueSuccessor: v1500 
falseSuccessor: v1502 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1125 #trueSuccessor: v1500 #falseSuccessor: v1502  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1858 
=== Usages ===
i1858 
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1858  <|@  <|@
f <@~|@floating>@ <|@
tid a1117 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1856 
=== Succesors ===
=== Usages ===
v1895 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1856  <|@  <|@
f <@~|@floating>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1117 
index: i70 
=== Succesors ===
=== Usages ===
i1858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1117 index: i70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1500 
address: v1895 
=== Succesors ===
next: v75 
=== Usages ===
i78 
=== Predecessor ===
v1500 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1500 address: v1895 #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
i1858 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1749 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1749  <|@  <|@
f <@~|@floating>@ <|@
tid i1750 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288283
stableDimension: 0
stamp: i32 [-288283] ⇊00000000fffb99e5 ⇈00000000fffb99e5
stampKind: i32
value: int[-288283|0xfffffffffffb99e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
v1502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v859  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596581230769776106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:469) [bci: 139]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596589483113290610
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v76 
values: i1858 i8 i8 i8 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v76 values: i1858 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v75 v77 v859 v860 
=== Succesors ===
next: v87 
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v75 v77 v859 v860 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 162]
stamp: i32
=== Inputs ===
x: i80 
y: i2 
=== Succesors ===
=== Usages ===
j84 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i80 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j84 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 163]
stamp: i64
=== Inputs ===
x: j3 
y: i83 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i83  <|@  <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@218ba884
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
=== Inputs ===
arguments: a1 i8 j84 i78 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i8 j84 i78  <|@  <|@
tid ?1710 <|@
d <@d|@=== Debug Properties ===
bci: 170
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
bci: 170
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.developLongDigits
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1112 
stateDuring: ?1710 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1112 stateDuring: ?1710 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:477) [bci: 173]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1741 
=== Usages ===
=== Predecessor ===
v1495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1741  <|@  <|@
f <@~|@floating>@ <|@
tid i1742 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284435
stableDimension: 0
stamp: i32 [-284435] ⇊00000000fffba8ed ⇈00000000fffba8ed
stampKind: i32
value: int[-284435|0xfffffffffffba8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
v1494 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1744 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-288283 - -284435] ⇊00000000fffb80e5 ⇈00000000fffbb9fd
valueDescription: i32
=== Inputs ===
merge: v1740 
values: i1742 i1750 
=== Succesors ===
=== Usages ===
v1746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1740 values: i1742 i1750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1741 v1749 
=== Succesors ===
next: v1746 
=== Usages ===
i1744 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1741 v1749 #next: v1746  <|@  <|@
f <@*|@fixed>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i1744 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i1744 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599191351894436866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559143454679177847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602424715906320465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4547163294193854126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605327053094328611
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1044 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v39 
values: i18 i1043 i1043 i1043 i1043 i8 
=== Succesors ===
=== Usages ===
?90 i946 i1925 i941 i947 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v39 values: i18 i1043 i1043 i1043 i1043 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v38 v40 v48 v57 v62 v1057 
=== Succesors ===
next: v750 
=== Usages ===
i1044 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v38 v40 v48 v57 v62 v1057 #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid j724 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j725 j753 j754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j725 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 7]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j3 
y: j724 
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j3 y: j724  <|@  <|@
f <@~|@floating>@ <|@
tid j723 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4607182418800017408
stableDimension: 0
stamp: i64 [4607182418800017408] ⇊3ff0000000000000 ⇈3ff0000000000000
stampKind: i64
value: long[4607182418800017408|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j726 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4607182418800017408 - 4611686018427387903] ⇊3ff0000000000000 ⇈3fffffffffffffff
=== Inputs ===
x: j725 
y: j723 
=== Succesors ===
=== Usages ===
d727 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j725 y: j723  <|@  <|@
f <@~|@floating>@ <|@
tid d727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.longBitsToDouble(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64! [4.9E-324 - 1.7976931348623157E308]
=== Inputs ===
value: j726 
=== Succesors ===
=== Usages ===
d729 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: j726  <|@  <|@
f <@~|@floating>@ <|@
tid d728 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 14]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d729 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d727 
y: d728 
=== Succesors ===
=== Usages ===
d731 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: d727 y: d728  <|@  <|@
f <@~|@floating>@ <|@
tid d730 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.289529654
stableDimension: 0
stamp: f64! [0.289529654]
stampKind: f64
value: double[0.289529654|0x3fd287a762c9bd93]
=== Inputs ===
=== Succesors ===
=== Usages ===
d731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d731 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d729 
y: d730 
=== Succesors ===
=== Usages ===
d733 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d729 y: d730  <|@  <|@
f <@~|@floating>@ <|@
tid d732 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.176091259
stableDimension: 0
stamp: f64! [0.176091259]
stampKind: f64
value: double[0.176091259|0x3fc68a288b421b8c]
=== Inputs ===
=== Succesors ===
=== Usages ===
d733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d733 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d731 
y: d732 
=== Succesors ===
=== Usages ===
d737 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d731 y: d732  <|@  <|@
f <@~|@floating>@ <|@
tid d734 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@39bcec26
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
d736 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid d735 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 28]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.301029995663981
stableDimension: 0
stamp: f64! [0.301029995663981]
stampKind: f64
value: double[0.301029995663981|0x3fd34413509f79fb]
=== Inputs ===
=== Succesors ===
=== Usages ===
d736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d736 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 31]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d734 
y: d735 
=== Succesors ===
=== Usages ===
d737 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d734 y: d735  <|@  <|@
f <@~|@floating>@ <|@
tid d737 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 32]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d733 
y: d736 
=== Succesors ===
=== Usages ===
j738 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d733 y: d736  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:822) [bci: 37]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64
=== Inputs ===
value: d737 
=== Succesors ===
=== Usages ===
j740 v746 j754 v762 v767 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d737  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 66]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j745 
=== Succesors ===
=== Usages ===
v761 i774 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j740 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j738 
y: j739 
=== Succesors ===
=== Usages ===
j741 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j738 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid j741 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j740 
y: i80 
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j740 y: i80  <|@  <|@
f <@~|@floating>@ <|@
tid i742 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 51]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j741 
=== Succesors ===
=== Usages ===
i744 i771 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j741  <|@  <|@
f <@~|@floating>@ <|@
tid i743 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i744 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i742 
y: i743 
=== Succesors ===
=== Usages ===
v747 v751 j753 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i742 y: i743  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i744 
y: i8 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i744 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.8012441897039807
=== Inputs ===
condition: v747 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v749 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v747 #trueSuccessor: v748 #falseSuccessor: v749  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603905584622184487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:829) [bci: 147]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1507  <|@  <|@
f <@~|@floating>@ <|@
tid j766 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 154]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9223372036854775807
stableDimension: 0
stamp: i64 [9223372036854775807] ⇊7fffffffffffffff ⇈7fffffffffffffff
stampKind: i64
value: long[9223372036854775807|0x7fffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j766 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j766  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v767 
=== Succesors ===
trueSuccessor: v1506 
falseSuccessor: v1504 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v767 #trueSuccessor: v1506 #falseSuccessor: v1504  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1752 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1752  <|@  <|@
f <@~|@floating>@ <|@
tid i1753 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -358931
stableDimension: 0
stamp: i32 [-358931] ⇊00000000fffa85ed ⇈00000000fffa85ed
stampKind: i32
value: int[-358931|0xfffffffffffa85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
v1506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603905584622184487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid i774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 169]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1 - 0]
=== Inputs ===
condition: v746 
trueValue: i8 
falseValue: i17 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v746 trueValue: i8 falseValue: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v1504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B204" 
    xhandlers
    flags 
    probability 4594853894179111922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 81]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1511 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1511  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i744 
y: i80 
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i744 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v1508 
falseSuccessor: v1510 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v1508 #falseSuccessor: v1510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594853894179111922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j738 
y: j724 
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j738 y: j724  <|@  <|@
f <@~|@floating>@ <|@
tid j755 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j756 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j754 
y: j755 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j754 y: j755  <|@  <|@
f <@~|@floating>@ <|@
tid i770 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1075
stableDimension: 0
stamp: i32 [1075] ⇊0000000000000433 ⇈0000000000000433
stampKind: i32
value: int[1075|0x433]
=== Inputs ===
=== Succesors ===
=== Usages ===
i771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i771 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i770 
y: i742 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i770 y: i742  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j756 
y: i771 
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j756 y: i771  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32
=== Inputs ===
value: j757 
=== Succesors ===
=== Usages ===
i764 i777 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j757  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 117]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.008440302444170916
=== Inputs ===
condition: v746 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v760 
=== Usages ===
=== Predecessor ===
v1508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v746 #trueSuccessor: v759 #falseSuccessor: v760  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563785606294653927
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594805903683832922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1515 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1515  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:826) [bci: 93]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j724 
y: i744 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j724 y: i744  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j753 
=== Succesors ===
=== Usages ===
v1515 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j753  <|@  <|@
f <@*|@fixed>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1514 
falseSuccessor: v1512 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1514 #falseSuccessor: v1512  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1759 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1759  <|@  <|@
f <@~|@floating>@ <|@
tid i1760 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -359443
stableDimension: 0
stamp: i32 [-359443] ⇊00000000fffa83ed ⇈00000000fffa83ed
stampKind: i32
value: int[-359443|0xfffffffffffa83ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
v1514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594805903683832922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32
=== Inputs ===
x: i17 
y: i758 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i17 y: i758  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v1512 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i777 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v775 
values: i774 i764 i758 
=== Succesors ===
=== Usages ===
?1719 i94 ?1718 v108 i948 ?1717 ?1716 ?475 ?1715 ?167 ?980 ?239 v244 v247 i524 ?486 ?514 ?1714 i341 ?1713 i1017 i457 ?1712 ?465 ?1711 i1018 i1854 i889 i946 i1925 i1926 i1927 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v775 values: i774 i764 i758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v776 v778 v779 
=== Succesors ===
next: v98 
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v776 v778 v779 #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 184]
stamp: i32
=== Inputs ===
value: i777 
=== Succesors ===
=== Usages ===
v95 i942 i887 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i777  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i94 
y: i7 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i94 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
trueSuccessorProbability: 0.726772406928274
=== Inputs ===
condition: v95 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v95 #trueSuccessor: v96 #falseSuccessor: v97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603372974827671461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596984333357164028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i1926 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1111]
stamp: i32
=== Inputs ===
x: i7 
y: i777 
=== Succesors ===
=== Usages ===
i945 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i7 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid i942 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 329]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i94 
y: i7 
=== Succesors ===
=== Usages ===
i1927 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i94 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i1927 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 329]
stamp: i32
=== Inputs ===
x: i942 
y: i777 
=== Succesors ===
=== Usages ===
i951 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i942 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1925 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 194]
stamp: i32
=== Inputs ===
x: i1044 
y: i777 
=== Succesors ===
=== Usages ===
i941 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1044 y: i777  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v101 
values: i8 i94 
=== Succesors ===
=== Usages ===
?1714 v1273 ?1713 ?1712 ?1713 ?1711 ?465 ?1711 ?1712 v894 v1896 ?475 ?465 ?167 ?167 ?980 ?980 v1898 v1150 v1904 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i8 i94  <|@  <|@
f <@~|@floating>@ <|@
tid i941 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i1044 i1925 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i1044 i1925  <|@  <|@
f <@~|@floating>@ <|@
tid i951 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i8 i1927 
=== Succesors ===
=== Usages ===
i168 i978 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i8 i1927  <|@  <|@
f <@~|@floating>@ <|@
tid i945 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i7 i1926 
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i7 i1926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v102 
=== Succesors ===
next: v111 
=== Usages ===
i887 i941 i951 i945 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v102 #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i7 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 328]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i213 i219 i905 j316 j323 j412 i680 i921 j688 j692 i955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
trueSuccessorProbability: 0.726772406928274
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v109 #falseSuccessor: v110  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603372974827671461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596984333357164028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i948 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 340]
stamp: i32
=== Inputs ===
x: i777 
y: i7 
=== Succesors ===
=== Usages ===
i949 i952 i954 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i952 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 364]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i948 
y: i7 
=== Succesors ===
=== Usages ===
i954 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i948 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 364]
stamp: i32
=== Inputs ===
x: i948 
y: i952 
=== Succesors ===
=== Usages ===
i955 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i948 y: i952  <|@  <|@
f <@~|@floating>@ <|@
tid i946 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:524) [bci: 211]
stamp: i32
=== Inputs ===
x: i777 
y: i1044 
=== Succesors ===
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i1044  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v114 
values: i8 i777 
=== Succesors ===
=== Usages ===
?1715 v1158 ?1714 v1213 ?1713 ?167 ?475 ?980 v1899 v1905 ?1712 v1267 ?465 ?1711 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i8 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i947 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i1044 i946 
=== Succesors ===
=== Usages ===
i129 i1086 i127 v780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i1044 i946  <|@  <|@
f <@~|@floating>@ <|@
tid i949 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i7 i948 
=== Succesors ===
=== Usages ===
v171 v1897 v1275 v1140 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i7 i948  <|@  <|@
f <@~|@floating>@ <|@
tid i955 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i160 i954 
=== Succesors ===
=== Usages ===
i964 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i160 i954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v113 v115 
=== Succesors ===
next: v783 
=== Usages ===
i889 i947 i949 i955 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v113 v115 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 196]
stamp: i32
=== Inputs ===
x: i2 
y: i941 
=== Succesors ===
=== Usages ===
i123 i120 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i941  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 235]
stamp: i32 [-12 - 52]
=== Inputs ===
x: i80 
y: i9 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i80 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 236]
stamp: i32
=== Inputs ===
x: i107 
y: i679 
=== Succesors ===
=== Usages ===
i1087 i1086 i127 v780 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i679  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i947 
y: i123 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i947 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:527) [bci: 222]
stamp: i32
=== Inputs ===
x: i107 
y: i4 
=== Succesors ===
=== Usages ===
i1087 i129 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i7 
=== Succesors ===
=== Usages ===
v133 v1083 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i11 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
trueSuccessorProbability: 0.4463098071277339
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v781 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v781 #falseSuccessor: v782  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4600055486821680204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:540) [bci: 252]
stamp: i32
=== Inputs ===
x: i123 
y: i947 
=== Succesors ===
=== Usages ===
i1068 i1070 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i123 y: i947  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i120 
y: i947 
=== Succesors ===
=== Usages ===
i1078 i138 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i120 y: i947  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3376150132094379
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v132 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v132  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593285577899345121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1059  <|@  <|@
f <@*|@fixed>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597625175479993896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4601591420112236029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@~|@floating>@ <|@
tid i1086 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:541) [bci: 259]
stamp: i32
=== Inputs ===
x: i947 
y: i123 
=== Succesors ===
=== Usages ===
i1073 i1075 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i947 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i1087 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i120 
y: i123 
=== Succesors ===
=== Usages ===
i1078 i138 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i120 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3376150132094379
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v1081 
falseSuccessor: v1082 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v1081 #falseSuccessor: v1082  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4594515707184985161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v1081 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598500752674175837
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1078 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1058 
values: i129 i1087 
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1058 values: i129 i1087  <|@  <|@
f <@~|@floating>@ <|@
tid i1070 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1058 
values: i127 i8 
=== Succesors ===
=== Usages ===
i1068 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1058 values: i127 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1075 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1058 
values: i8 i1086 
=== Succesors ===
=== Usages ===
i1073 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1058 values: i8 i1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1059 v1060 
=== Succesors ===
next: v137 
=== Usages ===
i1078 i1070 i1075 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1059 v1060 #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: i32
=== Inputs ===
x: i1078 
y: i17 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1078 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v1058 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598917576665011161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v1082 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i129 i134 i1087 
=== Succesors ===
=== Usages ===
i891 v140 i144 i145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i129 i134 i1087  <|@  <|@
f <@~|@floating>@ <|@
tid i1068 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i127 i1070 i8 
=== Succesors ===
=== Usages ===
i144 i149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i127 i1070 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1073 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i8 i1075 i1086 
=== Succesors ===
=== Usages ===
i145 i150 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i8 i1075 i1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v137 v1088 
=== Succesors ===
next: v143 
=== Usages ===
i138 i1068 i1073 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v137 v1088 #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i8 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i138 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
stamp: void
trueSuccessorProbability: 0.9998329866541154
=== Inputs ===
condition: v140 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v140 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605325858642678375
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:559) [bci: 294]
stamp: i32
=== Inputs ===
x: i1073 
y: i138 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1073 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 287]
stamp: i32
=== Inputs ===
x: i1068 
y: i138 
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1068 y: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4549024497976202376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v147 
values: i1068 i144 
=== Succesors ===
=== Usages ===
?1713 i153 ?167 ?980 i207 j310 ?1712 ?465 ?1711 i472 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i1068 i144  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v147 
values: i1073 i145 
=== Succesors ===
=== Usages ===
?1715 ?167 i169 ?980 i209 j312 ?1714 v1267 ?465 ?1713 ?1712 ?475 ?1711 i482 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i1073 i145  <|@  <|@
f <@~|@floating>@ <|@
tid i891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v147 
values: i138 i8 
=== Succesors ===
=== Usages ===
?1714 ?167 ?980 i211 j314 ?1713 ?465 ?1712 ?1711 ?475 i477 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i138 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v146 v148 
=== Succesors ===
next: v157 
=== Usages ===
i149 i150 i891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v146 v148 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 307]
stamp: i32
=== Inputs ===
x: i11 
y: i149 
=== Succesors ===
=== Usages ===
?167 i168 i992 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i949 
y: i45 
=== Succesors ===
=== Usages ===
v174 v990 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i949 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i887 
y: i45 
=== Succesors ===
=== Usages ===
v157 v1579 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i887 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 637]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 j630 j630 v449 v1853 ?650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 545]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 i915 i344 i439 i516 i600 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 566]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 v360 v537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 559]
rawvalue: -3
stableDimension: 0
stamp: i32 [-3] ⇊00000000fffffffd ⇈00000000fffffffd
stampKind: i32
value: int[-3|0xfffffffffffffffd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 v358 v530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i8 
=== Succesors ===
=== Usages ===
v1539 v357 v529 v1034 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v1900 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1861 a1883 a1869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:537) [bci: 228]
stamp: i64
=== Inputs ===
x: j3 
y: i9 
=== Succesors ===
=== Usages ===
?1713 v1273 ?1712 ?167 ?980 i203 j309 ?1711 ?465 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
stamp: void
trueSuccessorProbability: 0.9998329714381159
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v155 #falseSuccessor: v156  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605325858533856079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 317]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1859 
=== Usages ===
i1859 
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1859  <|@  <|@
f <@~|@floating>@ <|@
tid v1896 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i887 
=== Succesors ===
=== Usages ===
i1859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 322]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v155 
address: v1896 
=== Succesors ===
next: v990 
=== Usages ===
i978 i992 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v155 address: v1896 #next: v990  <|@  <|@
f <@~|@floating>@ <|@
tid i992 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i153 
y: i1859 
=== Succesors ===
=== Usages ===
i982 i983 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i1859  <|@  <|@
f <@*|@fixed>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 0.9998329739743084
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v988 
falseSuccessor: v989 
=== Usages ===
=== Predecessor ===
i1859 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v988 #falseSuccessor: v989  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605324664191044661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 348]
stamp: void
=== Inputs ===
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v973  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
v988 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B67" 
    xhandlers
    flags 
    probability 4549024052172398913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 359]
stamp: void
=== Inputs ===
=== Succesors ===
next: v977 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v977  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v989 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4549024943712324430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 326]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i153 
y: i951 
=== Succesors ===
=== Usages ===
i982 i983 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i951  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 0.9998329739743084
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4549024126467393663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 348]
stamp: void
=== Inputs ===
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v972  <|@  <|@
f <@*|@fixed>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4605325858551994506
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i978 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v971 
values: i951 i1859 
=== Succesors ===
=== Usages ===
?167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v971 values: i951 i1859  <|@  <|@
f <@~|@floating>@ <|@
tid i983 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v971 
values: i168 i992 
=== Succesors ===
=== Usages ===
i1729 v986 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v971 values: i168 i992  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v972 v973 
=== Succesors ===
next: v1519 
=== Usages ===
i978 i983 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v972 v973 #next: v1519  <|@  <|@
f <@~|@floating>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i949 
y: i45 
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i949 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1140 
=== Succesors ===
trueSuccessor: v1516 
falseSuccessor: v1518 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1140 #trueSuccessor: v1516 #falseSuccessor: v1518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4605325858551994506
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
i1860 
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i983 
y: i54 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i983 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
stamp: void
trueSuccessorProbability: 0.9842400133610677
=== Inputs ===
condition: v986 
=== Succesors ===
trueSuccessor: v967 
falseSuccessor: v968 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v986 #trueSuccessor: v967 #falseSuccessor: v968  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    probability 4605213164576788801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 375]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1860 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1860  <|@  <|@
f <@~|@floating>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i949 
=== Succesors ===
=== Usages ===
i1860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1516 
address: v1897 
=== Succesors ===
next: v959 
=== Usages ===
i964 
=== Predecessor ===
v967 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1516 address: v1897 #next: v959  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
i1860 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B134" 
    xhandlers
    flags 
    probability 4578366036194218575
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v970  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v968 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1517 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1517  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 330
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 591
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - i153 i978 
=== Succesors ===
=== Usages ===
v1517 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - i153 i978  <|@  <|@
f <@*|@fixed>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1141
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?167 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1518 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?167  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4492280099333854477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 359]
stamp: void
=== Inputs ===
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v975  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B58" 
    successors "B68" "B133" 
    xhandlers
    flags 
    probability 4549024869417329680
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i982 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v974 
values: i168 i992 
=== Succesors ===
=== Usages ===
i1729 v985 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v974 values: i168 i992  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v975 v977 
=== Succesors ===
next: v188 
=== Usages ===
i982 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v975 v977 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i982 
y: i54 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i982 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
stamp: void
trueSuccessorProbability: 0.9842400133610677
=== Inputs ===
condition: v985 
=== Succesors ===
trueSuccessor: v186 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v985 #trueSuccessor: v186 #falseSuccessor: v187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4548947758239191451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 375]
stamp: void
=== Inputs ===
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v958  <|@  <|@
f <@*|@fixed>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B63" 
    successors "B70" "B132" 
    xhandlers
    flags 
    probability 4605214340293151682
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i964 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v957 
values: i955 i1860 
=== Succesors ===
=== Usages ===
?980 i184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v957 values: i955 i1860  <|@  <|@
f <@~|@floating>@ <|@
tid i1729 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v957 
values: i982 i983 
=== Succesors ===
=== Usages ===
?980 v197 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v957 values: i982 i983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v958 v959 
=== Succesors ===
next: v195 
=== Usages ===
i964 i1729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v958 v959 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 336]
stamp: i32
=== Inputs ===
x: i150 
y: i7 
=== Succesors ===
=== Usages ===
?980 i184 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: i32
=== Inputs ===
x: i169 
y: i964 
=== Succesors ===
=== Usages ===
v189 v201 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i964  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i54 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
stamp: void
trueSuccessorProbability: 0.9643485236493783
=== Inputs ===
condition: v189 
=== Succesors ===
trueSuccessor: v190 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v189 #trueSuccessor: v190 #falseSuccessor: v194  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B99" 
    xhandlers
    flags 
    probability 4604963385246279636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1861 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 537]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1900 
=== Succesors ===
next: v200 
=== Usages ===
v1224 a1223 v1901 v1902 v1903 v1933 v1934 
=== Predecessor ===
v190 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1900 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1861 
=== Succesors ===
=== Usages ===
i1863 i1868 i1867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1861  <|@  <|@
tid ?980 <|@
d <@d|@=== Debug Properties ===
bci: 365
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 594
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - i1729 - - - - - - - - - i169 i964 
=== Succesors ===
=== Usages ===
v1814 j319 j321 i217 i216 v1933 i1867 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - i1729 - - - - - - - - - i169 i964  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 384]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 v201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1729 
y: i196 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1729 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
stamp: void
trueSuccessorProbability: 8.798732982450153E-4
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
a1861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v198 #falseSuccessor: v199  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B98" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 389]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1523 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i196 
=== Succesors ===
=== Usages ===
v1523 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v1520 
falseSuccessor: v1522 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v1520 #falseSuccessor: v1522  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B97" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1527 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1527  <|@  <|@
f <@~|@floating>@ <|@
tid i1149 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
rawvalue: 14
stableDimension: 0
stamp: i32 [14] ⇊000000000000000e ⇈000000000000000e
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1150 v1158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i887 
y: i1149 
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i887 y: i1149  <|@  <|@
f <@*|@fixed>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1150 
=== Succesors ===
trueSuccessor: v1524 
falseSuccessor: v1526 
=== Usages ===
=== Predecessor ===
v1520 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1150 #trueSuccessor: v1524 #falseSuccessor: v1526  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B96" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1531 
=== Usages ===
i1862 
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1531  <|@  <|@
f <@~|@floating>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i889 
y: i1149 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i889 y: i1149  <|@  <|@
f <@*|@fixed>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1158 
=== Succesors ===
trueSuccessor: v1528 
falseSuccessor: v1530 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1158 #trueSuccessor: v1528 #falseSuccessor: v1530  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1933 
=== Usages ===
i1864 
=== Predecessor ===
v1531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?980 
object: a1861 
=== Succesors ===
next: v1539 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?980 object: a1861 #next: v1539  <|@  <|@
f <@*|@fixed>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v1538 
falseSuccessor: v1536 
=== Usages ===
=== Predecessor ===
v1933 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v1538 #falseSuccessor: v1536  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1823 
=== Usages ===
=== Predecessor ===
v1539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1823  <|@  <|@
f <@~|@floating>@ <|@
tid i1824 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -304147
stableDimension: 0
stamp: i32 [-304147] ⇊00000000fffb5bed ⇈00000000fffb5bed
stampKind: i32
value: int[-304147|0xfffffffffffb5bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1543 
=== Usages ===
=== Predecessor ===
v1539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1543  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i243 
=== Succesors ===
=== Usages ===
v1543 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v1542 
falseSuccessor: v1540 
=== Usages ===
=== Predecessor ===
v1536 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v1542 #falseSuccessor: v1540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1831 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1831  <|@  <|@
f <@~|@floating>@ <|@
tid i1832 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -304403
stableDimension: 0
stamp: i32 [-304403] ⇊00000000fffb5aed ⇈00000000fffb5aed
stampKind: i32
value: int[-304403|0xfffffffffffb5aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B95" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1547 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1547  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i246 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v1544 
falseSuccessor: v1546 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v1544 #falseSuccessor: v1546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1862 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1862  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 398]
rawvalue: int[14]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[14]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1898 v1899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a204 
index: i887 
=== Succesors ===
=== Usages ===
i1862 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a204 index: i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1862 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1524 
address: v1898 
=== Succesors ===
next: v1551 
=== Usages ===
i206 i211 
=== Predecessor ===
v1544 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1524 address: v1898 #next: v1551  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:600) [bci: 429]
stamp: i32
=== Inputs ===
x: i1862 
y: i891 
=== Succesors ===
=== Usages ===
i219 i220 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1862 y: i891  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i211 
y: i160 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i211 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i211 
y: i7 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i211 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i219 
y: i220 
=== Succesors ===
=== Usages ===
v222 i225 ?239 i906 i905 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i219 y: i220  <|@  <|@
f <@~|@floating>@ <|@
tid i905 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i221 
y: i160 
=== Succesors ===
=== Usages ===
i907 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i221 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i906 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i221 
y: i7 
=== Succesors ===
=== Usages ===
i907 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i221 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i907 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i905 
y: i906 
=== Succesors ===
=== Usages ===
v909 i911 v924 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i905 y: i906  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i907 
y: i7 
=== Succesors ===
=== Usages ===
v1551 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i907 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v1550 
falseSuccessor: v1548 
=== Usages ===
=== Predecessor ===
i1862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v1550 #falseSuccessor: v1548  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1835 
=== Usages ===
=== Predecessor ===
v1551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1835  <|@  <|@
f <@~|@floating>@ <|@
tid i1836 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -304915
stableDimension: 0
stamp: i32 [-304915] ⇊00000000fffb58ed ⇈00000000fffb58ed
stampKind: i32
value: int[-304915|0xfffffffffffb58ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1863 
=== Usages ===
=== Predecessor ===
v1551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1901 
=== Succesors ===
next: v1555 
=== Usages ===
v1475 
=== Predecessor ===
v1548 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1901 #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 697]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1863 
y: i702 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1863 y: i702  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1475 
=== Succesors ===
trueSuccessor: v1554 
falseSuccessor: v1552 
=== Usages ===
=== Predecessor ===
i1863 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1475 #trueSuccessor: v1554 #falseSuccessor: v1552  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1839 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1839  <|@  <|@
f <@~|@floating>@ <|@
tid i1840 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -361499
stableDimension: 0
stamp: i32 [-361499] ⇊00000000fffa7be5 ⇈00000000fffa7be5
stampKind: i32
value: int[-361499|0xfffffffffffa7be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1864 
=== Usages ===
v1187 v1203 
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1864  <|@  <|@
f <@~|@floating>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a204 
index: i889 
=== Succesors ===
=== Usages ===
i1864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a204 index: i889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1528 
address: v1899 
=== Succesors ===
next: i216 
=== Usages ===
i209 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1528 address: v1899 #next: i216  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 397]
resultBits: 32
stamp: i32
=== Inputs ===
value: j121 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j121  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 404]
stamp: i32
=== Inputs ===
x: i203 
y: i1862 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i203 y: i1862  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 407]
stamp: i32
=== Inputs ===
x: i206 
y: i149 
=== Succesors ===
=== Usages ===
i216 i217 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i206 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 418]
stamp: i32
=== Inputs ===
x: i1864 
y: i150 
=== Succesors ===
=== Usages ===
i213 i214 i216 i217 ?239 i903 i904 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1864 y: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:608) [bci: 446]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?980 
x: i207 
y: i209 
=== Succesors ===
next: v1559 
=== Usages ===
v230 i235 
=== Predecessor ===
i1864 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?980 x: i207 y: i209 #next: v1559  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i8 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i216 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v1558 
falseSuccessor: v1556 
=== Usages ===
=== Predecessor ===
i216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v1558 #falseSuccessor: v1556  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1841 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1841  <|@  <|@
f <@~|@floating>@ <|@
tid i1842 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299283
stableDimension: 0
stamp: i32 [-299283] ⇊00000000fffb6eed ⇈00000000fffb6eed
stampKind: i32
value: int[-299283|0xfffffffffffb6eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1558 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
=== Inputs ===
=== Succesors ===
next: i217 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i217 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 455]
op: REM
stamp: i32 [-2147483647 - 2147483647]
type: SIGNED
=== Inputs ===
stateBefore: ?980 
x: i207 
y: i209 
=== Succesors ===
next: v1563 
=== Usages ===
i681 i680 
=== Predecessor ===
v1556 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?980 x: i207 y: i209 #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i217 
y: i160 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i217 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i217 
y: i7 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i217 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i680 
y: i681 
=== Succesors ===
=== Usages ===
v222 i225 ?239 i904 i903 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i680 y: i681  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i682 
y: i221 
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i682 y: i221  <|@  <|@
f <@*|@fixed>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v1562 
falseSuccessor: v1560 
=== Usages ===
=== Predecessor ===
i217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v1562 #falseSuccessor: v1560  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1843 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1843  <|@  <|@
f <@~|@floating>@ <|@
tid i1844 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -298771
stableDimension: 0
stamp: i32 [-298771] ⇊00000000fffb70ed ⇈00000000fffb70ed
stampKind: i32
value: int[-298771|0xfffffffffffb70ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1567 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i209 
y: i160 
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i209 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i209 
y: i7 
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i209 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i213 
y: i214 
=== Succesors ===
=== Usages ===
v226 ?239 v912 i300 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i213 y: i214  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 484]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i221 
y: i682 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i221 y: i682  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i225 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i215 y: i225  <|@  <|@
f <@*|@fixed>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1566 
falseSuccessor: v1564 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1566 #falseSuccessor: v1564  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1845 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1845  <|@  <|@
f <@~|@floating>@ <|@
tid i1846 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299027
stableDimension: 0
stamp: i32 [-299027] ⇊00000000fffb6fed ⇈00000000fffb6fed
stampKind: i32
value: int[-299027|0xfffffffffffb6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1845 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B93" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1187 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1187  <|@  <|@
f <@~|@floating>@ <|@
tid v1902 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1861 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1861  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 549]
stamp: i32
=== Inputs ===
x: i216 
y: i234 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i216 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 550]
resultBits: 16
stamp: i16
=== Inputs ===
value: i235 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1552 
address: v1902 
value: i236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i903 
=== Usages ===
=== Predecessor ===
v1564 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1552 address: v1902 value: i236 stateAfter: - lastLocationAccess: - #next: i903  <|@  <|@
tid ?239 <|@
d <@d|@=== Debug Properties ===
bci: 552
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 626
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i7 i8 i8 - - - - - i682 i209 i221 i215 - - - - 
=== Succesors ===
=== Usages ===
i903 i904 v1766 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i7 i8 i8 - - - - - i682 i209 i221 i215 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i903 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:630) [bci: 591]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?239 
x: i682 
y: i209 
=== Succesors ===
next: i904 
=== Usages ===
i915 
=== Predecessor ===
v1187 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?239 x: i682 y: i209 #next: i904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i904 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 600]
op: REM
stamp: i32 [-2147483647 - 2147483646]
type: SIGNED
=== Inputs ===
stateBefore: ?239 
x: i682 
y: i209 
=== Succesors ===
next: v1571 
=== Usages ===
i921 i922 
=== Predecessor ===
i903 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?239 x: i682 y: i209 #next: v1571  <|@  <|@
f <@~|@floating>@ <|@
tid i921 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i904 
y: i160 
=== Succesors ===
=== Usages ===
i923 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i904 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i922 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i904 
y: i7 
=== Succesors ===
=== Usages ===
i923 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i904 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i923 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i921 
y: i922 
=== Succesors ===
=== Usages ===
v909 i911 v302 i299 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i921 y: i922  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i923 
y: i907 
=== Succesors ===
=== Usages ===
v1571 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i923 y: i907  <|@  <|@
f <@*|@fixed>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v909 
=== Succesors ===
trueSuccessor: v1568 
falseSuccessor: v1570 
=== Usages ===
=== Predecessor ===
i904 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v909 #trueSuccessor: v1568 #falseSuccessor: v1570  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1575 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1575  <|@  <|@
f <@~|@floating>@ <|@
tid i911 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 660]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i907 
y: i923 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i907 y: i923  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i911 
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i215 y: i911  <|@  <|@
f <@*|@fixed>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v912 
=== Succesors ===
trueSuccessor: v1574 
falseSuccessor: v1572 
=== Usages ===
=== Predecessor ===
v1568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v912 #trueSuccessor: v1574 #falseSuccessor: v1572  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1762 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1762  <|@  <|@
f <@~|@floating>@ <|@
tid i1763 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305427
stableDimension: 0
stamp: i32 [-305427] ⇊00000000fffb56ed ⇈00000000fffb56ed
stampKind: i32
value: int[-305427|0xfffffffffffb56ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1764 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
v1574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B195" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1203 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1903 <|@
d <@d|@=== Debug Properties ===
displacement: 18
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1861 
=== Succesors ===
=== Usages ===
v1203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1861  <|@  <|@
f <@~|@floating>@ <|@
tid i915 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 695]
stamp: i32
=== Inputs ===
x: i903 
y: i234 
=== Succesors ===
=== Usages ===
i916 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i903 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i916 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 696]
resultBits: 16
stamp: i16
=== Inputs ===
value: i915 
=== Succesors ===
=== Usages ===
v1203 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 697]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1552 
address: v1903 
value: i916 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1552 address: v1903 value: i916 stateAfter: - lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 704]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i923 
y: i7 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i923 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 707]
stamp: i32
=== Inputs ===
x: i299 
y: i215 
=== Succesors ===
=== Usages ===
j301 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i299 y: i215  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 708]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i300 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i300  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i923 
y: i8 
=== Succesors ===
=== Usages ===
i303 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i923 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v302 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1204 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v302 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1204 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 722]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i303 
=== Succesors ===
=== Usages ===
i1731 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1767 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1767  <|@  <|@
f <@~|@floating>@ <|@
tid i1768 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305171
stableDimension: 0
stamp: i32 [-305171] ⇊00000000fffb57ed ⇈00000000fffb57ed
stampKind: i32
value: int[-305171|0xfffffffffffb57ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1764 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
v1570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1764 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-305427 - -305171] ⇊00000000fffb56ed ⇈00000000fffb57ed
valueDescription: i32
=== Inputs ===
merge: v1761 
values: i1763 i1768 
=== Succesors ===
=== Usages ===
v1766 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1761 values: i1763 i1768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1762 v1767 
=== Succesors ===
next: v1766 
=== Usages ===
i1764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1762 v1767 #next: v1766  <|@  <|@
f <@*|@fixed>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?239 
actionAndReason: i1764 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?239 actionAndReason: i1764 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1837 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1837  <|@  <|@
f <@~|@floating>@ <|@
tid i1838 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -304659
stableDimension: 0
stamp: i32 [-304659] ⇊00000000fffb59ed ⇈00000000fffb59ed
stampKind: i32
value: int[-304659|0xfffffffffffb59ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1821 
=== Usages ===
=== Predecessor ===
v1531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1821  <|@  <|@
f <@~|@floating>@ <|@
tid i1822 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -296731
stableDimension: 0
stamp: i32 [-296731] ⇊00000000fffb78e5 ⇈00000000fffb78e5
stampKind: i32
value: int[-296731|0xfffffffffffb78e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1819 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1819  <|@  <|@
f <@~|@floating>@ <|@
tid i1820 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294683
stableDimension: 0
stamp: i32 [-294683] ⇊00000000fffb80e5 ⇈00000000fffb80e5
stampKind: i32
value: int[-294683|0xfffffffffffb80e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1817 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1817  <|@  <|@
f <@~|@floating>@ <|@
tid i1818 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293907
stableDimension: 0
stamp: i32 [-293907] ⇊00000000fffb83ed ⇈00000000fffb83ed
stampKind: i32
value: int[-293907|0xfffffffffffb83ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B100" "B130" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 728]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1579 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1579  <|@  <|@
f <@*|@fixed>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v1576 
falseSuccessor: v1578 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v1576 #falseSuccessor: v1578  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B129" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1583 
=== Usages ===
j1865 
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1583  <|@  <|@
f <@~|@floating>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i889 
y: i45 
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i889 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1213 
=== Succesors ===
trueSuccessor: v1580 
falseSuccessor: v1582 
=== Usages ===
=== Predecessor ===
v1576 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1213 #trueSuccessor: v1580 #falseSuccessor: v1582  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B107" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1865 
=== Usages ===
j1866 
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1865  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 93]
rawvalue: long[27]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [J
stampKind: a -
value: Object[long[27]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1904 v1905 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i887 
=== Succesors ===
=== Usages ===
j1865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1576 
address: v1904 
=== Succesors ===
next: j1866 
=== Usages ===
j309 j314 
=== Predecessor ===
v1580 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1576 address: v1904 #next: j1866  <|@  <|@
f <@~|@floating>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i889 
=== Succesors ===
=== Usages ===
j1866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1866 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1580 
address: v1905 
=== Succesors ===
next: j319 
=== Usages ===
j312 
=== Predecessor ===
j1865 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1580 address: v1905 #next: j319  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 735]
stamp: i64
=== Inputs ===
x: j121 
y: j1865 
=== Succesors ===
=== Usages ===
j310 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j121 y: j1865  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 738]
stamp: i64
=== Inputs ===
x: j309 
y: i149 
=== Succesors ===
=== Usages ===
j319 j321 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j309 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 749]
stamp: i64
=== Inputs ===
x: j1866 
y: i150 
=== Succesors ===
=== Usages ===
j316 j317 j319 j321 ?1003 ?1014 ?443 ?373 ?381 j408 j410 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1866 y: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j319 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 778]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?980 
x: j310 
y: j312 
=== Succesors ===
next: j321 
=== Usages ===
i320 
=== Predecessor ===
j1866 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?980 x: j310 y: j312 #next: j321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j321 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 789]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775807]
type: SIGNED
=== Inputs ===
stateBefore: ?980 
x: j310 
y: j312 
=== Succesors ===
next: v339 
=== Usages ===
j689 j688 
=== Predecessor ===
j319 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?980 x: j310 y: j312 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j312 
y: i160 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j312 
y: i7 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j316 
y: j317 
=== Succesors ===
=== Usages ===
j447 v332 ?443 ?1014 v427 ?373 ?381 ?1003 j1849 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j316 y: j317  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:654) [bci: 760]
stamp: i64
=== Inputs ===
x: j1865 
y: i891 
=== Succesors ===
=== Usages ===
j323 j324 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1865 y: i891  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j314 
y: i160 
=== Succesors ===
=== Usages ===
j325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j314 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j324 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j314 
y: i7 
=== Succesors ===
=== Usages ===
j325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j314 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j325 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j323 
y: j324 
=== Succesors ===
=== Usages ===
j380 v327 j330 ?373 ?1014 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j323 y: j324  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j321 
y: i160 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j321 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j689 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j321 
y: i7 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j321 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j690 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j688 
y: j689 
=== Succesors ===
=== Usages ===
j379 v327 j330 ?373 ?1014 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j688 y: j689  <|@  <|@
f <@~|@floating>@ <|@
tid j330 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 820]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j325 
y: j690 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j325 y: j690  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j330 
=== Succesors ===
=== Usages ===
i333 v1587 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j330  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 779]
resultBits: 32
stamp: i32
=== Inputs ===
value: j319 
=== Succesors ===
=== Usages ===
v336 i344 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j319  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i8 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i320 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
trueSuccessorProbability: 0.1394488655468913
=== Inputs ===
condition: v336 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
j321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v336 #trueSuccessor: v337 #falseSuccessor: v338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4592230573593724458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 862]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1587 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1587  <|@  <|@
f <@*|@fixed>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v1586 
falseSuccessor: v1584 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v1586 #falseSuccessor: v1584  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1815 
=== Usages ===
=== Predecessor ===
v1587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1815  <|@  <|@
f <@~|@floating>@ <|@
tid i1816 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -320531
stableDimension: 0
stamp: i32 [-320531] ⇊00000000fffb1bed ⇈00000000fffb1bed
stampKind: i32
value: int[-320531|0xfffffffffffb1bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4592230573593724458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v1587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i777 
y: i17 
=== Succesors ===
=== Usages ===
i1017 i1018 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.011112534426439506
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v1584 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v355 #falseSuccessor: v356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B117" 
    xhandlers
    flags 
    probability 4563023887533601084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B112" 
    xhandlers
    flags 
    probability 4592146494458807909
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1013 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1013  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4604011643404215320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 873]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1867 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1867 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?980 
guard: - 
address: v1901 
=== Succesors ===
next: v1595 
=== Usages ===
v1260 
=== Predecessor ===
v338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?980 guard: - address: v1901 #next: v1595  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1867 
y: i8 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1867 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1260 
=== Succesors ===
trueSuccessor: v1594 
falseSuccessor: v1592 
=== Usages ===
=== Predecessor ===
i1867 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1260 #trueSuccessor: v1594 #falseSuccessor: v1592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1833 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1833  <|@  <|@
f <@~|@floating>@ <|@
tid i1834 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -363547
stableDimension: 0
stamp: i32 [-363547] ⇊00000000fffa73e5 ⇈00000000fffa73e5
stampKind: i32
value: int[-363547|0xfffffffffffa73e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604011643404215320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1265 
=== Usages ===
v1265 
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1265  <|@  <|@
f <@~|@floating>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1861 
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1861  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 886]
stamp: i32
=== Inputs ===
x: i320 
y: i234 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 887]
resultBits: 16
stamp: i16
=== Inputs ===
value: i344 
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1592 
address: v1934 
value: i345 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1034 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1592 address: v1934 value: i345 stateAfter: - lastLocationAccess: - #next: v1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.011112534426439506
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v1032 
falseSuccessor: v1033 
=== Usages ===
=== Predecessor ===
v1265 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v1032 #falseSuccessor: v1033  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B117" 
    xhandlers
    flags 
    probability 4574951777169331133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v1034 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v1032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4603946785943155568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1015 
=== Usages ===
=== Predecessor ===
v1034 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
v1033 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4604882045167610941
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1017 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1012 
values: i341 i777 
=== Succesors ===
=== Usages ===
v358 v360 i1018 i1018 ?1014 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1012 values: i341 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1029 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1012 
values: i8 i7 
=== Succesors ===
=== Usages ===
i1028 i1028 ?1014 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1012 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1013 v1015 
=== Succesors ===
next: v1599 
=== Usages ===
i1017 i1029 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1013 v1015 #next: v1599  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1017 
y: i243 
=== Succesors ===
=== Usages ===
v1599 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1017 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j690 
y: j325 
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j690 y: j325  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v327 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i371 ?1014 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v327 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v332 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i372 ?1014 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v332 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v1598 
falseSuccessor: v1596 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v1598 #falseSuccessor: v1596  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1597 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1597  <|@  <|@
tid ?1014 <|@
d <@d|@=== Debug Properties ===
bci: 889
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 680
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i1017 - - - - - - - i1029 i328 i333 - - - - - j690 - j312 - j325 - j318 - 
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i1017 - - - - - - - i1029 i328 i333 - - - - - j690 - j312 - j325 - j318 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1266
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?1014 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1598 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?1014  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604882045167610941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1017 
y: i246 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1017 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
stamp: void
trueSuccessorProbability: 0.9996761815326328
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v365 
=== Usages ===
=== Predecessor ===
v1596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v361 #falseSuccessor: v365  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4604879873373617018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4553027692215940194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" "B105" "B116" "B110" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i328 i8 i8 i8 
=== Succesors ===
=== Usages ===
?373 i377 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i328 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i333 i8 i8 i8 
=== Succesors ===
=== Usages ===
?373 i378 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i333 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1018 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v369 
values: i1017 i341 i1017 i777 
=== Succesors ===
=== Usages ===
i457 ?373 ?381 ?1003 ?443 i457 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i1017 i341 i1017 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1028 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i1029 i8 i1029 i7 
=== Succesors ===
=== Usages ===
i376 ?373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i1029 i8 i1029 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v368 v370 v691 v1035 
=== Succesors ===
next: v1603 
=== Usages ===
i371 i372 i1018 i1028 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v368 v370 v691 v1035 #next: v1603  <|@  <|@
f <@~|@floating>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
value: a1861 
=== Succesors ===
=== Usages ===
v1603 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1861  <|@  <|@
f <@*|@fixed>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1224 
=== Succesors ===
trueSuccessor: v1602 
falseSuccessor: v1600 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1224 #trueSuccessor: v1602 #falseSuccessor: v1600  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1601 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1601  <|@  <|@
tid ?373 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1018 - - - - - - - i1028 i371 i372 - - - - - j690 - j312 - j325 - j318 - 
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1018 - - - - - - - i1028 i371 i372 - - - - - j690 - j312 - j325 - j318 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1469
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: NullCheckException
speculation: Object[d.a@613009710]
stamp: void
=== Inputs ===
stateBefore: ?373 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1602 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1868 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1901 
=== Succesors ===
next: v374 
=== Usages ===
v1242 
=== Predecessor ===
v1600 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1901 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid a1223 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1024]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1861 
=== Succesors ===
=== Usages ===
v1906 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1861  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
i1868 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B124" "B125" 
    successors "B121" "B128" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618510354942738279
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v375 
values: i1028 i438 i438 
=== Succesors ===
=== Usages ===
?381 i458 v1242 v1906 i438 i458 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i1028 i438 i438  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v375 
values: i371 i7 i423 
=== Succesors ===
=== Usages ===
i459 v382 i459 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i371 i7 i423  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v375 
values: i372 i7 i428 
=== Succesors ===
=== Usages ===
i460 i460 v392 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i372 i7 i428  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v375 
values: j690 j694 j694 
=== Succesors ===
=== Usages ===
?381 v449 j446 j408 j410 j1850 v1853 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j690 j694 j694  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v375 
values: j325 j414 j414 
=== Succesors ===
=== Usages ===
?381 j412 j413 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j325 j414 j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 8.049710812116691
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v374 
=== Succesors ===
next: v391 
=== Usages ===
i376 i377 i378 j379 j380 v385 v397 v444 v994 v1607 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v374 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i8 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
trueSuccessorProbability: 0.9147424652848216
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v385 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v383 #falseSuccessor: v385  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617928528835372735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 919]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i378 
y: i8 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i378 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
trueSuccessorProbability: 0.9573972653370932
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v393 #falseSuccessor: v397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617662580820830923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 924]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1608 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1608  <|@  <|@
tid ?381 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1018 - - - - - - - i376 i8 i8 - - - - - j379 - j312 - j380 - j318 - 
=== Succesors ===
=== Usages ===
j408 j410 v1605 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1018 - - - - - - - i376 i8 i8 - - - - - j379 - j312 - j380 - j318 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i376 
y: i1868 
=== Succesors ===
=== Usages ===
v1608 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i376 y: i1868  <|@  <|@
f <@*|@fixed>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1242 
=== Succesors ===
trueSuccessor: v1604 
falseSuccessor: v1607 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1242 #trueSuccessor: v1604 #falseSuccessor: v1607  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617662580820830923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: j408 
=== Usages ===
v1237 
=== Predecessor ===
v1608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 928]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?381 
x: j379 
y: j312 
=== Succesors ===
next: j410 
=== Usages ===
i409 
=== Predecessor ===
v1604 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?381 x: j379 y: j312 #next: j410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 939]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775806]
type: SIGNED
=== Inputs ===
stateBefore: ?381 
x: j379 
y: j312 
=== Succesors ===
next: v1237 
=== Usages ===
j693 j692 
=== Predecessor ===
j408 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?381 x: j379 y: j312 #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1223 
index: i376 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1223 index: i376  <|@  <|@
f <@~|@floating>@ <|@
tid i409 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 929]
resultBits: 32
stamp: i32
=== Inputs ===
value: j408 
=== Succesors ===
=== Usages ===
?1003 i439 ?443 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j408  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1036]
stamp: i32
=== Inputs ===
x: i409 
y: i234 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i409 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1037]
resultBits: 16
stamp: i16
=== Inputs ===
value: i439 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1604 
address: v1906 
value: i440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
j410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1604 address: v1906 value: i440 stateAfter: - lastLocationAccess: - #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid j692 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j410 
y: i160 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j410 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j693 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j410 
y: i7 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j410 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j692 
y: j693 
=== Succesors ===
=== Usages ===
j379 v422 j425 j379 ?443 ?1003 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j692 y: j693  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1029]
stamp: i32
=== Inputs ===
x: i376 
y: i7 
=== Succesors ===
=== Usages ===
?443 i376 ?1003 i376 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i376 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775792] ⇈fffffffffffffff0
=== Inputs ===
x: j380 
y: i160 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j380 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j413 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j380 
y: i7 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j380 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j414 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j412 
y: j413 
=== Succesors ===
=== Usages ===
j380 v417 ?443 v422 j425 j380 ?1003 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j412 y: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j414 
y: j280 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j414 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
stamp: void
trueSuccessorProbability: 3.497146646258553E-4
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v418 #falseSuccessor: v419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B120" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566203837736347339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:697) [bci: 1017]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1487 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1487  <|@  <|@
tid ?443 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1018 - - - - - - - i438 i7 i7 - - i409 - - j694 - j312 - j414 - j318 - 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1018 - - - - - - - i438 i7 i7 - - i409 - - j694 - j312 - j414 - j318 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?443 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?443 #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
loopBegin: v375 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B120" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617660490729317885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 981]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1488 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1488  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j694 
y: j414 
=== Succesors ===
=== Usages ===
i423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j694 y: j414  <|@  <|@
f <@~|@floating>@ <|@
tid i423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v422 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i377 ?1003 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v422 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1000]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j414 
y: j694 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j414 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j425 
=== Succesors ===
=== Usages ===
i428 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j425  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v427 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i378 ?1003 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v427 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1003 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1018 - - - - - - - i438 i423 i428 - - i409 - - j694 - j312 - j414 - j318 - 
=== Succesors ===
=== Usages ===
v1488 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1018 - - - - - - - i438 i423 i428 - - i409 - - j694 - j312 - j414 - j318 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1003 
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?1003 #next: v994  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v375 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1488 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v1605 
=== Usages ===
=== Predecessor ===
v1608 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v1605  <|@  <|@
f <@*|@fixed>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1478
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B195" 
    xhandlers
    flags 
    probability 4597678356755873395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v1847 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v1847  <|@  <|@
f <@~|@floating>@ <|@
tid j1850 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j379 
y: i7 
=== Succesors ===
=== Usages ===
j1849 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j379 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j1849 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j1850 
y: j318 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1850 y: j318  <|@  <|@
f <@~|@floating>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j379 
y: j278 
=== Succesors ===
=== Usages ===
i1852 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j379 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid i1852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1853 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1851 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1853 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1851 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1852 
=== Succesors ===
=== Usages ===
i1731 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1852  <|@  <|@
f <@*|@fixed>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B195" 
    xhandlers
    flags 
    probability 4602829828404200769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j379 
y: i7 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j379 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j446 
y: j318 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j446 y: j318  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j379 
y: j278 
=== Succesors ===
=== Usages ===
i450 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j379 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v449 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1250 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v449 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1250 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i450 
=== Succesors ===
=== Usages ===
i1731 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i450  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1827 
=== Usages ===
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1827  <|@  <|@
f <@~|@floating>@ <|@
tid i1828 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310811
stableDimension: 0
stamp: i32 [-310811] ⇊00000000fffb41e5 ⇈00000000fffb41e5
stampKind: i32
value: int[-310811|0xfffffffffffb41e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1825 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1825  <|@  <|@
f <@~|@floating>@ <|@
tid i1826 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -308763
stableDimension: 0
stamp: i32 [-308763] ⇊00000000fffb49e5 ⇈00000000fffb49e5
stampKind: i32
value: int[-308763|0xfffffffffffb49e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B103" "B98" "B97" "B96" "B75" "B130" "B129" "B77" "B108" "B80" "B95" "B82" "B84" "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1812 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-363547 - -293907] ⇊00000000fffa00e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1809 
values: i1816 i1818 i1820 i1822 i1824 i1826 i1828 i1832 i1834 i1836 i1838 i1840 i1842 i1844 i1846 
=== Succesors ===
=== Usages ===
v1814 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1809 values: i1816 i1818 i1820 i1822 i1824 i1826 i1828 i1832 i1834 i1836 i1838 i1840 i1842 i1844 i1846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1815 v1817 v1819 v1821 v1823 v1825 v1827 v1831 v1833 v1835 v1837 v1839 v1841 v1843 v1845 
=== Succesors ===
next: v1814 
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1815 v1817 v1819 v1821 v1823 v1825 v1827 v1831 v1833 v1835 v1837 v1839 v1841 v1843 v1845 #next: v1814  <|@  <|@
f <@*|@fixed>@ <|@
tid v1814 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?980 
actionAndReason: i1812 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1809 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?980 actionAndReason: i1812 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B134" 
    xhandlers
    flags 
    probability 4583687782908329398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B134" 
    xhandlers
    flags 
    probability 4522045541653454144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B132" "B64" 
    successors "B135" "B138" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v191 v193 v970 
=== Succesors ===
next: a464 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v191 v193 v970 #next: a464  <|@  <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@feeaf89
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i889 i150 
=== Succesors ===
=== Usages ===
a464 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i889 i150  <|@  <|@
tid ?1711 <|@
d <@d|@=== Debug Properties ===
bci: 1074
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a464 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a464 <|@
d <@d|@=== Debug Properties ===
bci: 1074
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1267 
stateDuring: ?1711 
=== Succesors ===
next: v1928 
=== Usages ===
v1271 v1272 ?1712 v1928 
=== Predecessor ===
v192 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1267 stateDuring: ?1711 #next: v1928  <|@  <|@
tid ?465 <|@
d <@d|@=== Debug Properties ===
bci: 1077
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - a1743 
=== Succesors ===
=== Usages ===
v1928 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?465 
object: a464 
=== Succesors ===
next: i467 
=== Usages ===
=== Predecessor ===
a464 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?465 object: a464 #next: i467  <|@  <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@557b93bd
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.getNormalizationBias()>
=== Inputs ===
arguments: a464 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a464  <|@  <|@
tid ?1712 <|@
d <@d|@=== Debug Properties ===
bci: 1081
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 711
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - a464 - - - - - - - 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - a464 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i467 <|@
d <@d|@=== Debug Properties ===
bci: 1081
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.getNormalizationBias
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1271 
stateDuring: ?1712 
=== Succesors ===
next: a470 
=== Usages ===
?1715 v1272 ?1714 i472 ?475 i477 ?1713 i482 
=== Predecessor ===
v1928 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1271 stateDuring: ?1712 #next: a470  <|@  <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@3fd1e085
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a464 i467 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a464 i467  <|@  <|@
tid ?1713 <|@
d <@d|@=== Debug Properties ===
bci: 1090
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - i467 - - - - - - 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - i467 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a470 <|@
d <@d|@=== Debug Properties ===
bci: 1090
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1272 
stateDuring: ?1713 
=== Succesors ===
next: a474 
=== Usages ===
?1722 ?475 ?1721 ?486 v1278 ?1720 ?1719 ?1718 ?514 ?1717 ?1716 ?594 ?1715 ?555 v1284 ?1714 ?585 ?852 
=== Predecessor ===
i467 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1272 stateDuring: ?1713 #next: a474  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1102]
stamp: i32
=== Inputs ===
x: i149 
y: i467 
=== Succesors ===
=== Usages ===
v1273 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i149 y: i467  <|@  <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@4362a073
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>
=== Inputs ===
arguments: j121 i887 i472 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: j121 i887 i472  <|@  <|@
tid ?1714 <|@
d <@d|@=== Debug Properties ===
bci: 1103
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - - 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a474 <|@
d <@d|@=== Debug Properties ===
bci: 1103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfMulPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1273 
stateDuring: ?1714 
=== Succesors ===
next: v1929 
=== Usages ===
a1476 ?1722 ?486 a1476 ?1721 v1351 ?1720 v1283 ?1719 ?514 ?1718 ?1717 ?594 ?1716 ?555 ?852 v1929 ?585 ?1715 v1278 v1279 v1284 v1374 v1914 v1907 v1908 ?815 
=== Predecessor ===
a470 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1273 stateDuring: ?1714 #next: v1929  <|@  <|@
tid ?475 <|@
d <@d|@=== Debug Properties ===
bci: 1106
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - - a1743 
=== Succesors ===
=== Usages ===
v1929 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?475 
object: a474 
=== Succesors ===
next: a480 
=== Usages ===
=== Predecessor ===
a474 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?475 object: a474 #next: a480  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1116]
stamp: i32
=== Inputs ===
x: i467 
y: i891 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i467 y: i891  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1118]
stamp: i32
=== Inputs ===
x: i477 
y: i7 
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i477 y: i7  <|@  <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@390add71
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i945 i478 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i945 i478  <|@  <|@
tid ?1715 <|@
d <@d|@=== Debug Properties ===
bci: 1119
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 715
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i889 - - - - - - - - - - - a470 i467 a474 - - - - - 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i889 - - - - - - - - - - - a470 i467 a474 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a480 <|@
d <@d|@=== Debug Properties ===
bci: 1119
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1274 
stateDuring: ?1715 
=== Succesors ===
next: a485 
=== Usages ===
?1719 ?486 ?1718 v1279 ?1717 v1283 ?1716 ?514 a554 
=== Predecessor ===
v1929 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1274 stateDuring: ?1715 #next: a485  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1132]
stamp: i32
=== Inputs ===
x: i150 
y: i467 
=== Succesors ===
=== Usages ===
i483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i467  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1134]
stamp: i32
=== Inputs ===
x: i482 
y: i7 
=== Succesors ===
=== Usages ===
v1275 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i482 y: i7  <|@  <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@30655796
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i949 i483 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i949 i483  <|@  <|@
tid ?1716 <|@
d <@d|@=== Debug Properties ===
bci: 1135
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a485 <|@
d <@d|@=== Debug Properties ===
bci: 1135
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1275 
stateDuring: ?1716 
=== Succesors ===
next: v1930 
=== Usages ===
v1283 ?1723 ?1722 v1351 ?1721 ?514 ?1720 ?1719 v1378 ?1718 ?555 ?852 ?620 ?1717 ?585 ?594 v1930 
=== Predecessor ===
a480 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1275 stateDuring: ?1716 #next: v1930  <|@  <|@
tid ?486 <|@
d <@d|@=== Debug Properties ===
bci: 1138
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - a1743 
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?486 
object: a485 
=== Succesors ===
next: i488 
=== Usages ===
=== Predecessor ===
a485 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?486 object: a485 #next: i488  <|@  <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@4cd7
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a474 a470 
=== Succesors ===
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a470  <|@  <|@
tid ?1717 <|@
d <@d|@=== Debug Properties ===
bci: 1147
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 724
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - - - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - - - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i488 <|@
d <@d|@=== Debug Properties ===
bci: 1147
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1278 
stateDuring: ?1717 
=== Succesors ===
next: i491 
=== Usages ===
?1719 ?1718 i516 v503 ?514 
=== Predecessor ===
v1930 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1278 stateDuring: ?1717 #next: i491  <|@  <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5637059c
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a474 a480 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a480  <|@  <|@
tid ?1718 <|@
d <@d|@=== Debug Properties ===
bci: 1156
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 725
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i491 <|@
d <@d|@=== Debug Properties ===
bci: 1156
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1279 
stateDuring: ?1718 
=== Succesors ===
next: i497 
=== Usages ===
v493 
=== Predecessor ===
i488 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1279 stateDuring: ?1718 #next: i497  <|@  <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3939ab7e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a485 a474 a480 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a485 a474 a480  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i491 
y: i8 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i491 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v493 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?1719 ?514 i546 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v493 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1719 <|@
d <@d|@=== Debug Properties ===
bci: 1175
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 726
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 - - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 - - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i497 <|@
d <@d|@=== Debug Properties ===
bci: 1175
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1283 
stateDuring: ?1719 
=== Succesors ===
next: v506 
=== Usages ===
v499 
=== Predecessor ===
i491 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1283 stateDuring: ?1719 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i497 
y: i7 
=== Succesors ===
=== Usages ===
i500 v512 i1848 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i497 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i488 
y: i8 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i488 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
trueSuccessorProbability: 0.10331442221558673
=== Inputs ===
condition: v503 
=== Succesors ===
trueSuccessor: v504 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
i497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v503 #trueSuccessor: v504 #falseSuccessor: v505  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4571459255254427360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1216]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1218]
stamp: void
trueSuccessorProbability: 0.3612716763005781
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v511 #falseSuccessor: v510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B139" 
    xhandlers
    flags 
    probability 4564592581715046601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B142" 
    xhandlers
    flags 
    probability 4568290009319748956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:731) [bci: 1221]
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid i1854 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i777 
y: i17 
=== Succesors ===
=== Usages ===
i524 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4585378352466984997
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B136" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4585595532429988267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v507 v509 
=== Succesors ===
next: a1869 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v507 v509 #next: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1228]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1900 
=== Succesors ===
next: i1870 
=== Usages ===
v1921 v1920 
=== Predecessor ===
v508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1900 #next: i1870  <|@  <|@
f <@~|@floating>@ <|@
tid i500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v499 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v499 trueValue: i7 falseValue: i8  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 1227
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 733
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 i500 - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
v1774 i1870 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 i500 - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1869 
=== Succesors ===
=== Usages ===
i1870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v1920 
=== Succesors ===
next: v1628 
=== Usages ===
v1386 
=== Predecessor ===
a1869 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v1920 #next: v1628  <|@  <|@
f <@~|@floating>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1870 
y: i8 
=== Succesors ===
=== Usages ===
v1628 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1870 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1386 
=== Succesors ===
trueSuccessor: v1627 
falseSuccessor: v1625 
=== Usages ===
=== Predecessor ===
i1870 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1386 #trueSuccessor: v1627 #falseSuccessor: v1625  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1774 
=== Usages ===
=== Predecessor ===
v1628 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1774  <|@  <|@
f <@~|@floating>@ <|@
tid i1776 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -364827
stableDimension: 0
stamp: i32 [-364827] ⇊00000000fffa6ee5 ⇈00000000fffa6ee5
stampKind: i32
value: int[-364827|0xfffffffffffa6ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?514 
actionAndReason: i1776 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1627 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?514 actionAndReason: i1776 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4585595532429988267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1391 
=== Usages ===
v1391 
=== Predecessor ===
v1628 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1391  <|@  <|@
f <@~|@floating>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1869 
=== Succesors ===
=== Usages ===
v1391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1869  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1240]
stamp: i32
=== Inputs ===
x: i488 
y: i234 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i488 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1241]
resultBits: 16
stamp: i16
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
v1391 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1625 
address: v1921 
value: i517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v1625 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1625 address: v1921 value: i517 stateAfter: - lastLocationAccess: - #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v1391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B137" "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v522 
values: i1854 i777 
=== Succesors ===
=== Usages ===
?1725 v530 v537 i457 ?1724 ?555 ?852 ?636 ?1723 ?585 ?1722 ?594 ?1721 ?1720 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: i1854 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v522 
values: i8 i7 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v521 v523 
=== Succesors ===
next: v529 
=== Usages ===
i524 i525 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v521 v523 #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1245]
stamp: void
trueSuccessorProbability: 0.04001194386383995
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v527 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v527 #falseSuccessor: v528  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    probability 4565092964349806135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4585746689684238543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1248]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i243 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i524 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
stamp: void
trueSuccessorProbability: 0.2867807153965785
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v535 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v535 #falseSuccessor: v534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    probability 4577561299409501925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4583625119891087916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1255]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i246 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i524 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
stamp: void
trueSuccessorProbability: 0.9952027911033581
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v538 #falseSuccessor: v540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    probability 4583586896217599341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid i1848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v499 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v499 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    probability 4549024654223368107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" "B143" "B148" "B145" 
    successors "B150" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v544 
values: i494 i8 i8 i8 
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i494 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v544 
values: i1848 i8 i8 i8 
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i1848 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v543 v545 v695 v696 
=== Succesors ===
next: v549 
=== Usages ===
i546 i547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v543 v545 v695 v696 #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a474 
index: - 
=== Succesors ===
=== Usages ===
a1878 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a474 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a474 
index: - 
=== Succesors ===
=== Usages ===
i1874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a474 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a474 
index: - 
=== Succesors ===
=== Usages ===
i1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a474 index: -  <|@  <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@23fa9228
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a474 a470 
=== Succesors ===
=== Usages ===
i580 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a470  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" "B178" 
    successors "B151" "B186" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604077143920223441
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i551 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v550 
values: i525 i599 
=== Succesors ===
=== Usages ===
?555 ?1720 ?636 ?1725 ?585 ?1724 ?594 i599 v1919 ?852 v1359 ?1723 ?620 ?1722 i458 ?1721 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i525 i599  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v550 
values: i546 i590 
=== Succesors ===
=== Usages ===
?1724 v556 ?636 i459 ?1725 ?1723 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i546 i590  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v550 
values: i547 i596 
=== Succesors ===
=== Usages ===
?1724 i460 v565 ?636 ?1725 ?1723 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i547 i596  <|@  <|@
f <@~|@floating>@ <|@
tid a554 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v550 
values: a480 a584 
=== Succesors ===
=== Usages ===
v1931 ?1720 v1288 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: a480 a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 16.228886899433018
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v549 
=== Succesors ===
next: v564 
=== Usages ===
i551 i552 i553 a554 v559 v570 v605 v1694 v1684 v1642 v1672 v1654 v1660 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v549 #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i553 
y: i8 
=== Succesors ===
=== Usages ===
v578 v610 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i553 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i552 
y: i8 
=== Succesors ===
=== Usages ===
v564 v617 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i552 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
trueSuccessorProbability: 0.9453137929132266
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v557 #falseSuccessor: v559  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B185" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603754390061644612
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1273]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
trueSuccessorProbability: 0.9926666536987687
=== Inputs ===
condition: v565 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v570 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v565 #trueSuccessor: v566 #falseSuccessor: v570  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603713476072174465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1931 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1931  <|@  <|@
tid ?555 <|@
d <@d|@=== Debug Properties ===
bci: 1268
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 744
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i8 i8 - - - - - a470 - a474 a1743 a485 - - - 
=== Succesors ===
=== Usages ===
v1931 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i8 i8 - - - - - a470 - a474 a1743 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?555 
object: a554 
=== Succesors ===
next: i580 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?555 object: a554 #next: i580  <|@  <|@
tid ?1720 <|@
d <@d|@=== Debug Properties ===
bci: 1282
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 745
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - - - - a470 - a474 a554 a485 - - - 
=== Succesors ===
=== Usages ===
i580 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - - - - a470 - a474 a554 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i580 <|@
d <@d|@=== Debug Properties ===
bci: 1282
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1284 
stateDuring: ?1720 
=== Succesors ===
next: a584 
=== Usages ===
?1722 ?585 ?1721 ?594 i600 ?852 
=== Predecessor ===
v1931 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1284 stateDuring: ?1720 #next: a584  <|@  <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@211e0474
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.multBy10()>
=== Inputs ===
arguments: a554 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a554  <|@  <|@
tid ?1721 <|@
d <@d|@=== Debug Properties ===
bci: 1312
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
d <@d|@=== Debug Properties ===
bci: 1312
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.multBy10
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1288 
stateDuring: ?1721 
=== Succesors ===
next: i1871 
=== Usages ===
v1909 ?852 ?1722 v1351 ?594 v1910 a554 v1911 ?815 
=== Predecessor ===
i580 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1288 stateDuring: ?1721 #next: i1871  <|@  <|@
tid ?585 <|@
d <@d|@=== Debug Properties ===
bci: 1315
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - a1743 
=== Succesors ===
=== Usages ===
i1871 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - a1743  <|@  <|@
f <@~|@floating>@ <|@
tid v1910 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a584 
index: - 
=== Succesors ===
=== Usages ===
i1871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 15]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?585 
guard: - 
address: v1910 
=== Succesors ===
next: i1872 
=== Usages ===
i798 
=== Predecessor ===
a584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?585 guard: - address: v1910 #next: i1872  <|@  <|@
f <@~|@floating>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a584 
index: - 
=== Succesors ===
=== Usages ===
i1872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1872 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 11]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1909 
=== Succesors ===
next: i1873 
=== Usages ===
i798 i814 
=== Predecessor ===
i1871 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1909 #next: i1873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1907 
=== Succesors ===
next: i1874 
=== Usages ===
i795 i813 
=== Predecessor ===
i1872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1907 #next: i1874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1908 
=== Succesors ===
next: v802 
=== Usages ===
i795 
=== Predecessor ===
i1873 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1908 #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid i798 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1871 
y: i1872 
=== Succesors ===
=== Usages ===
v799 v804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1871 y: i1872  <|@  <|@
f <@~|@floating>@ <|@
tid i795 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1873 
y: i1874 
=== Succesors ===
=== Usages ===
v799 v804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1873 y: i1874  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i798 
y: i795 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i798 y: i795  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.23168656987595593
=== Inputs ===
condition: v799 
=== Succesors ===
trueSuccessor: v800 
falseSuccessor: v801 
=== Usages ===
=== Predecessor ===
i1874 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v799 #trueSuccessor: v800 #falseSuccessor: v801  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594300578921775959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:951) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v854  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" "B156" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602181853656081750
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i795 
y: i798 
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i795 y: i798  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 4.944535213690093E-4
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v805 
falseSuccessor: v806 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v805 #falseSuccessor: v806  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4552749834017755928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:953) [bci: 32]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v805 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602177645741042236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:955) [bci: 34]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v811  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v806 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B175" 
    successors "B158" "B169" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4602240215608151533
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i813 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v812 
values: i1873 i826 
=== Succesors ===
=== Usages ===
?815 v816 i826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v812 values: i1873 i826  <|@  <|@
f <@~|@floating>@ <|@
tid i814 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v812 
values: i1872 i829 
=== Succesors ===
=== Usages ===
?815 i863 v842 i829 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v812 values: i1872 i829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0073559460563954
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v811 
=== Succesors ===
next: a1875 
=== Usages ===
i813 i814 v817 v833 v838 v1659 v1683 v1671 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v811 #next: a1875  <|@  <|@
f <@~|@floating>@ <|@
tid v1911 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a584 
index: - 
=== Succesors ===
=== Usages ===
a1875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1875 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 69]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1911 
=== Succesors ===
next: v822 
=== Usages ===
v1912 a1305 
=== Predecessor ===
v812 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1911 #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v1912 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1875 
=== Succesors ===
=== Usages ===
i1876 i1880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1875  <|@  <|@
f <@~|@floating>@ <|@
tid a1305 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 135]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1875 
=== Succesors ===
=== Usages ===
v1913 ?864 v1917 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1875  <|@  <|@
tid ?852 <|@
d <@d|@=== Debug Properties ===
bci: 1321
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 748
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 a584 a485 - - - 
=== Succesors ===
=== Usages ===
?815 ?880 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 a584 a485 - - -  <|@  <|@
tid ?815 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 957
stackSize: 0
=== Inputs ===
outerFrameState: ?852 
values: a474 a584 - - i813 i814 - - 
=== Succesors ===
=== Usages ===
v1790 i1879 i1880 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?852 values: a474 a584 - - i813 i814 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i814 
y: i7 
=== Succesors ===
=== Usages ===
v1643 v1661 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i814 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i813 
y: i7 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i813 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.007302231237322543
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v821 
=== Usages ===
=== Predecessor ===
a1875 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v817 #falseSuccessor: v821  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570155365516302698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:964) [bci: 114]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1643 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1643  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v1642 
falseSuccessor: v1639 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v1642 #falseSuccessor: v1639  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1786 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1786  <|@  <|@
f <@~|@floating>@ <|@
tid i1787 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333075
stableDimension: 0
stamp: i32 [-333075] ⇊00000000fffaeaed ⇈00000000fffaeaed
stampKind: i32
value: int[-333075|0xfffffffffffaeaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1785 
=== Predecessor ===
v1642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570155365516302698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v861  <|@  <|@
f <@*|@fixed>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
v1639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B165" 
    successors "B162" "B163" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4571989317480343110
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i863 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v862 
values: i814 i870 
=== Succesors ===
=== Usages ===
?864 v865 i870 j1887 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v862 values: i814 i870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.3333333333333333
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v861 
=== Succesors ===
next: v869 
=== Usages ===
i863 v866 v873 v874 v1653 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v861 #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i863 
y: i7 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i863 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v865 
=== Succesors ===
trueSuccessor: v866 
falseSuccessor: v868 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v865 #trueSuccessor: v866 #falseSuccessor: v868  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567485717852972614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:928) [bci: 15]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v862 
=== Succesors ===
next: v1092 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v862 #next: v1092  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v866 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" "B167" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567485717852972614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 4]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1876 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1876  <|@  <|@
tid ?880 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 968
stackSize: 0
=== Inputs ===
outerFrameState: ?852 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?864 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?852 values: - - - - - - - -  <|@  <|@
tid ?864 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.checkZeroTail(int[], int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 923
stackSize: 0
=== Inputs ===
outerFrameState: ?880 
values: a1305 i863 
=== Succesors ===
=== Usages ===
v1806 i1876 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?880 values: a1305 i863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1876 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?864 
guard: - 
address: v1912 
=== Succesors ===
next: v1655 
=== Usages ===
v1311 
=== Predecessor ===
v868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?864 guard: - address: v1912 #next: v1655  <|@  <|@
f <@~|@floating>@ <|@
tid i870 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 5]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i863 
y: i17 
=== Succesors ===
=== Usages ===
i863 v1311 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i863 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i870 
y: i1876 
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i870 y: i1876  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1311 
=== Succesors ===
trueSuccessor: v1650 
falseSuccessor: v1653 
=== Usages ===
=== Predecessor ===
i1876 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1311 #trueSuccessor: v1650 #falseSuccessor: v1653  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B165" "B166" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567485717852972614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1877 
=== Usages ===
i1877 
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1877  <|@  <|@
f <@~|@floating>@ <|@
tid j1887 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i863 
=== Succesors ===
=== Usages ===
v1913 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i863  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a1305 
index: j1887 
=== Succesors ===
=== Usages ===
i1877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1305 index: j1887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1650 
address: v1913 
=== Succesors ===
next: v877 
=== Usages ===
v872 
=== Predecessor ===
v1650 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1650 address: v1913 #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 10]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1877 
y: i8 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1877 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 10]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v872 
=== Succesors ===
trueSuccessor: v876 
falseSuccessor: v874 
=== Usages ===
=== Predecessor ===
i1877 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v872 #trueSuccessor: v876 #falseSuccessor: v874  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B161" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4562982118225602118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v873  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
loopBegin: v862 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v862  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562982118225602118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:925) [bci: 13]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v862 
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v862 #next: v858  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v862 
=== Succesors ===
next: v1654 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v862 #next: v1654  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1806 
=== Usages ===
=== Predecessor ===
v1653 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1806  <|@  <|@
f <@~|@floating>@ <|@
tid i1808 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -335899
stableDimension: 0
stamp: i32 [-335899] ⇊00000000fffadfe5 ⇈00000000fffadfe5
stampKind: i32
value: int[-335899|0xfffffffffffadfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1806 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?864 
actionAndReason: i1808 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?864 actionAndReason: i1808 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B170" "B172" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 51]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1661 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1661  <|@  <|@
f <@*|@fixed>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v1659 
falseSuccessor: v1656 
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v1659 #falseSuccessor: v1656  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1660 
=== Usages ===
=== Predecessor ===
v1661 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1660  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1791 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1791  <|@  <|@
f <@~|@floating>@ <|@
tid i1792 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -337683
stableDimension: 0
stamp: i32 [-337683] ⇊00000000fffad8ed ⇈00000000fffad8ed
stampKind: i32
value: int[-337683|0xfffffffffffad8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1785 
=== Predecessor ===
v1660 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B173" "B182" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1878 
=== Usages ===
=== Predecessor ===
v1661 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1878 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1914 
=== Succesors ===
next: i1879 
=== Usages ===
a1322 v1915 
=== Predecessor ===
v1656 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1914 #next: i1879  <|@  <|@
f <@~|@floating>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
i1879 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1879 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?815 
guard: - 
address: v1915 
=== Succesors ===
next: v1673 
=== Usages ===
v1328 
=== Predecessor ===
a1878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?815 guard: - address: v1915 #next: v1673  <|@  <|@
f <@~|@floating>@ <|@
tid i826 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i813 
y: i17 
=== Succesors ===
=== Usages ===
i813 v1916 v1328 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i813 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i826 
y: i1879 
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i826 y: i1879  <|@  <|@
f <@*|@fixed>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1328 
=== Succesors ===
trueSuccessor: v1668 
falseSuccessor: v1671 
=== Usages ===
=== Predecessor ===
i1879 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1328 #trueSuccessor: v1668 #falseSuccessor: v1671  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B180" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1880 
=== Usages ===
i1881 
=== Predecessor ===
v1673 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?815 
guard: - 
address: v1912 
=== Succesors ===
next: v1685 
=== Usages ===
v1343 
=== Predecessor ===
v1668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?815 guard: - address: v1912 #next: v1685  <|@  <|@
f <@~|@floating>@ <|@
tid i829 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i814 
y: i17 
=== Succesors ===
=== Usages ===
i814 v1917 v1343 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i814 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i829 
y: i1880 
=== Succesors ===
=== Usages ===
v1685 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i829 y: i1880  <|@  <|@
f <@*|@fixed>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1343 
=== Succesors ===
trueSuccessor: v1680 
falseSuccessor: v1683 
=== Usages ===
=== Predecessor ===
i1880 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1343 #trueSuccessor: v1680 #falseSuccessor: v1683  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1881 
=== Usages ===
i1882 
=== Predecessor ===
v1685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1881  <|@  <|@
f <@~|@floating>@ <|@
tid a1322 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1878 
=== Succesors ===
=== Usages ===
v1916 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1878  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1322 
index: i826 
=== Succesors ===
=== Usages ===
i1881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1322 index: i826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1881 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1668 
address: v1916 
=== Succesors ===
next: i1882 
=== Usages ===
v831 v850 
=== Predecessor ===
v1680 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1668 address: v1916 #next: i1882  <|@  <|@
f <@~|@floating>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1305 
index: i829 
=== Succesors ===
=== Usages ===
i1882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1305 index: i829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1680 
address: v1917 
=== Succesors ===
next: v837 
=== Usages ===
v831 v850 
=== Predecessor ===
i1881 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1680 address: v1917 #next: v837  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1881 
y: i1882 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1881 y: i1882  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0073559460563955865
=== Inputs ===
condition: v831 
=== Succesors ===
trueSuccessor: v832 
falseSuccessor: v833 
=== Usages ===
=== Predecessor ===
i1882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v831 #trueSuccessor: v832 #falseSuccessor: v833  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B157" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4570155365516302668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:963) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v838  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
loopBegin: v812 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v812  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602115075873932936
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1881 
y: i1882 
=== Succesors ===
=== Usages ===
i851 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1881 y: i1882  <|@  <|@
f <@~|@floating>@ <|@
tid i851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32 [-1 - 1] ⇊0000000000000001
=== Inputs ===
condition: v850 
trueValue: i17 
falseValue: i7 
=== Succesors ===
=== Usages ===
i855 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v850 trueValue: i17 falseValue: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B153" "B155" "B176" "B166" "B162" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603713476072174464
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i855 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 1]
valueDescription: i32
=== Inputs ===
merge: v853 
values: i7 i17 i851 i17 i8 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v853 values: i7 i17 i851 i17 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v854 v856 v857 v858 v1092 
=== Succesors ===
next: i593 
=== Usages ===
i855 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v854 v856 v857 v858 v1092 #next: i593  <|@  <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@4f6bee2e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a485 a474 a584 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a485 a474 a584  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i855 
y: i8 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i855 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v589 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?594 ?1722 i552 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v589 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1722 <|@
d <@d|@=== Debug Properties ===
bci: 1340
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i593 <|@
d <@d|@=== Debug Properties ===
bci: 1340
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1351 
stateDuring: ?1722 
=== Succesors ===
next: a1883 
=== Usages ===
?594 v595 
=== Predecessor ===
v853 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1351 stateDuring: ?1722 #next: a1883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1883 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1900 
=== Succesors ===
next: i1884 
=== Usages ===
a1353 v1918 
=== Predecessor ===
i593 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1900 #next: i1884  <|@  <|@
tid ?594 <|@
d <@d|@=== Debug Properties ===
bci: 1343
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - i593 
=== Succesors ===
=== Usages ===
v1782 i1884 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - i593  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1883 
=== Succesors ===
=== Usages ===
i1884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1884 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?594 
guard: - 
address: v1918 
=== Succesors ===
next: v1695 
=== Usages ===
v1359 
=== Predecessor ===
a1883 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?594 guard: - address: v1918 #next: v1695  <|@  <|@
f <@~|@floating>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i551 
y: i1884 
=== Succesors ===
=== Usages ===
v1695 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i551 y: i1884  <|@  <|@
f <@*|@fixed>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1359 
=== Succesors ===
trueSuccessor: v1691 
falseSuccessor: v1694 
=== Usages ===
=== Predecessor ===
i1884 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1359 #trueSuccessor: v1691 #falseSuccessor: v1694  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B150" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603713476072174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1367 
=== Usages ===
v1367 
=== Predecessor ===
v1695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid a1353 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1883 
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1883  <|@  <|@
f <@~|@floating>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1353 
index: i551 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1353 index: i551  <|@  <|@
f <@~|@floating>@ <|@
tid i600 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1366]
stamp: i32
=== Inputs ===
x: i580 
y: i234 
=== Succesors ===
=== Usages ===
i601 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i580 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i601 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1367]
resultBits: 16
stamp: i16
=== Inputs ===
value: i600 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1691 
address: v1919 
value: i601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v1691 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1691 address: v1919 value: i601 stateAfter: - lastLocationAccess: - #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i593 
y: i7 
=== Succesors ===
=== Usages ===
i596 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i593 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v595 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v595 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1359]
stamp: i32
=== Inputs ===
x: i551 
y: i7 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i551 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
loopBegin: v550 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1782 
=== Usages ===
=== Predecessor ===
v1695 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1782  <|@  <|@
f <@~|@floating>@ <|@
tid i1784 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -348187
stableDimension: 0
stamp: i32 [-348187] ⇊00000000fffaafe5 ⇈00000000fffaafe5
stampKind: i32
value: int[-348187|0xfffffffffffaafe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?594 
actionAndReason: i1784 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1694 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?594 actionAndReason: i1784 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1684 
=== Usages ===
=== Predecessor ===
v1685 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1684  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1799 
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1799  <|@  <|@
f <@~|@floating>@ <|@
tid i1800 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -344091
stableDimension: 0
stamp: i32 [-344091] ⇊00000000fffabfe5 ⇈00000000fffabfe5
stampKind: i32
value: int[-344091|0xfffffffffffabfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1785 
=== Predecessor ===
v1684 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1672 
=== Usages ===
=== Predecessor ===
v1673 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1672  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1795 
=== Usages ===
=== Predecessor ===
v1671 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1795  <|@  <|@
f <@~|@floating>@ <|@
tid i1796 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -340251
stableDimension: 0
stamp: i32 [-340251] ⇊00000000fffacee5 ⇈00000000fffacee5
stampKind: i32
value: int[-340251|0xfffffffffffacee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1785 
=== Predecessor ===
v1672 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B159" "B171" "B183" "B181" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1788 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-344091 - -333075] ⇊00000000fffa80e5 ⇈00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v1785 
values: i1787 i1792 i1796 i1800 
=== Succesors ===
=== Usages ===
v1790 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1785 values: i1787 i1792 i1796 i1800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1786 v1791 v1795 v1799 
=== Succesors ===
next: v1790 
=== Usages ===
i1788 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1786 v1791 v1795 v1799 #next: v1790  <|@  <|@
f <@*|@fixed>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?815 
actionAndReason: i1788 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1785 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?815 actionAndReason: i1788 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B187" 
    xhandlers
    flags 
    probability 4571887012805861801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v569  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B187" 
    xhandlers
    flags 
    probability 4585324882773055691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v567 v569 
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v567 v569 #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1374]
stamp: void
trueSuccessorProbability: 0.056102655923604895
=== Inputs ===
condition: v565 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v565 #trueSuccessor: v608 #falseSuccessor: v609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B192" 
    xhandlers
    flags 
    probability 4567369521956602247
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    probability 4585653062890184936
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1377]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1379]
stamp: void
trueSuccessorProbability: 0.11919064179576351
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v615 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v616 #falseSuccessor: v615  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    probability 4571887012805861812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    probability 4584998439058662577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a619 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a619  <|@  <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@3bfdcee6
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a474 i7 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 i7  <|@  <|@
tid ?1723 <|@
d <@d|@=== Debug Properties ===
bci: 1385
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a619 <|@
d <@d|@=== Debug Properties ===
bci: 1385
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1374 
stateDuring: ?1723 
=== Succesors ===
next: v1932 
=== Usages ===
v1378 a1476 ?1724 v1932 
=== Predecessor ===
v615 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1374 stateDuring: ?1723 #next: v1932  <|@  <|@
tid ?620 <|@
d <@d|@=== Debug Properties ===
bci: 1388
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - a1743 
=== Succesors ===
=== Usages ===
v1932 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?620 
object: a619 
=== Succesors ===
next: i622 
=== Usages ===
=== Predecessor ===
a619 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?620 object: a619 #next: i622  <|@  <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@4c617063
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a619 a485 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a619 a485  <|@  <|@
tid ?1724 <|@
d <@d|@=== Debug Properties ===
bci: 1394
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 754
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - a619 - - - - - 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - a619 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i622 <|@
d <@d|@=== Debug Properties ===
bci: 1394
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1378 
stateDuring: ?1724 
=== Succesors ===
next: v627 
=== Usages ===
j624 
=== Predecessor ===
v1932 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1378 stateDuring: ?1724 #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid j624 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1397]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
j630 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i622  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
i622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" "B188" "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v628 
values: j624 j278 j278 
=== Succesors ===
=== Usages ===
?1725 ?636 j461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: j624 j278 j278  <|@  <|@
f <@~|@floating>@ <|@
tid a1476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: a!# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v628 
values: a619 a474 a474 
=== Succesors ===
=== Usages ===
v1371 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: a619 a474 a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v627 v629 v697 
=== Succesors ===
next: i635 
=== Usages ===
j630 a1476 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v627 v629 v697 #next: i635  <|@  <|@
f <@~|@floating>@ <|@
tid a633 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1409]
rawvalue: FDBigInteger@241972498
stableDimension: 0
stamp: a!# Lsun/misc/FDBigInteger;
stampKind: a -
value: Object[FDBigInteger@241972498]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1d0df03f
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a1476 a633 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1476 a633  <|@  <|@
tid ?1725 <|@
d <@d|@=== Debug Properties ===
bci: 1412
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i635 <|@
d <@d|@=== Debug Properties ===
bci: 1412
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1371 
stateDuring: ?1725 
=== Succesors ===
next: v1703 
=== Usages ===
v637 
=== Predecessor ===
v628 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1371 stateDuring: ?1725 #next: v1703  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i635 
y: i8 
=== Succesors ===
=== Usages ===
v1703 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i635 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v637 
=== Succesors ===
trueSuccessor: v1702 
falseSuccessor: v1700 
=== Usages ===
=== Predecessor ===
i635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v637 #trueSuccessor: v1702 #falseSuccessor: v1700  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1701 
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1701  <|@  <|@
tid ?636 <|@
d <@d|@=== Debug Properties ===
bci: 1415
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 i8 
=== Succesors ===
=== Usages ===
v1701 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1471
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?636 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1702 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B92" "B128" "B194" "B127" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4605327053094328613
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v455 
values: i777 i1018 i524 i1018 
=== Succesors ===
=== Usages ===
?650 i644 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i777 i1018 i524 i1018  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v455 
values: i702 i376 i551 i376 
=== Succesors ===
=== Usages ===
?650 v1398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i702 i376 i551 i376  <|@  <|@
f <@~|@floating>@ <|@
tid i459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v455 
values: i7 i377 i552 i377 
=== Succesors ===
=== Usages ===
v655 ?650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i7 i377 i552 i377  <|@  <|@
f <@~|@floating>@ <|@
tid i460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v455 
values: i8 i378 i553 i378 
=== Succesors ===
=== Usages ===
v651 ?650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i8 i378 i553 i378  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v455 
values: j301 j447 j630 j1849 
=== Succesors ===
=== Usages ===
v660 v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: j301 j447 j630 j1849  <|@  <|@
f <@~|@floating>@ <|@
tid i1731 <|@
d <@d|@=== Debug Properties ===
stamp: i8 [0 - 1] ⇈0000000000000001
valueDescription: i8
=== Inputs ===
merge: v455 
values: i1204 i1250 i1405 i1851 
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i1204 i1250 i1405 i1851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v454 v456 v642 v1847 
=== Succesors ===
next: v1733 
=== Usages ===
i457 i458 i459 i460 j461 i1731 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v454 v456 v642 v1847 #next: v1733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 722]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1891 
value: i1731 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1393 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1891 value: i1731 stateAfter: - lastLocationAccess: - #next: v1393  <|@  <|@
f <@~|@floating>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1430]
stamp: i32
=== Inputs ===
x: i457 
y: i7 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i457 y: i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1431]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1922 
value: i644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1395 
=== Usages ===
=== Predecessor ===
v1733 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1922 value: i644 stateAfter: - lastLocationAccess: - #next: v1395  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:761) [bci: 1436]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1923 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1398 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1923 value: i8 stateAfter: - lastLocationAccess: - #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1924 
value: i458 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1924 value: i458 stateAfter: - lastLocationAccess: - #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i460 
y: i8 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i460 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
trueSuccessorProbability: 0.5799198372453163
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v652 
falseSuccessor: v653 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v652 #falseSuccessor: v653  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors 
    xhandlers
    flags 
    probability 4601966600213449805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4599680306720466429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1450]
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i459 
y: i8 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i459 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
trueSuccessorProbability: 0.7217825002710615
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v656 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v656 #falseSuccessor: v657  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors 
    xhandlers
    flags 
    probability 4597841950257931132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1504]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@d87672e
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1726 <|@
d <@d|@=== Debug Properties ===
bci: 1505
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
bci: 1505
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1399 
stateDuring: ?1726 
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1399 stateDuring: ?1726 #next: v701  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B200" "B201" 
    xhandlers
    flags 
    probability 4591351307938615547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1455]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1707 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1707  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j278 
=== Succesors ===
=== Usages ===
v1707 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j461 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v1706 
falseSuccessor: v1704 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v1706 #falseSuccessor: v1704  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1705 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1705  <|@  <|@
tid ?650 <|@
d <@d|@=== Debug Properties ===
bci: 1445
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 766
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i457 - - - - - - - i458 i459 i460 j278 - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i457 - - - - - - - i458 i459 i460 j278 - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1400
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?650 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?650  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B202" "B203" 
    xhandlers
    flags 
    probability 4591351307938615547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j280 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j461 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
stamp: void
trueSuccessorProbability: 0.37802026500389707
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v667 #falseSuccessor: v666  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 4585216378835628493
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 4588479037786861609
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1497]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@58d81286
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1727 <|@
d <@d|@=== Debug Properties ===
bci: 1498
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 775
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
bci: 1498
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1401 
stateDuring: ?1727 
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1401 stateDuring: ?1727 #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1757 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1757  <|@  <|@
f <@~|@floating>@ <|@
tid i1758 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -359187
stableDimension: 0
stamp: i32 [-359187] ⇊00000000fffa84ed ⇈00000000fffa84ed
stampKind: i32
value: int[-359187|0xfffffffffffa84ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
v1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B30" "B204" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1754 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-359443 - -358931] ⇊00000000fffa80ed ⇈00000000fffa87ed
valueDescription: i32
=== Inputs ===
merge: v1751 
values: i1753 i1758 i1760 
=== Succesors ===
=== Usages ===
v1756 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1751 values: i1753 i1758 i1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1752 v1757 v1759 
=== Succesors ===
next: v1756 
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1752 v1757 v1759 #next: v1756  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 174
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 515
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i1044 - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1756 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i1044 - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?90 
actionAndReason: i1754 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?90 actionAndReason: i1754 speculation: a1743  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1725 v1890 ?1725 v1891 ?1724 ?28 ?852 ?1723 v1112 ?90 ?1722 ?1721 ?1720 ?1719 ?555 ?1718 ?167 ?980 v1900 ?239 ?514 v1401 v1924 v1923 ?594 ?1717 ?636 ?1716 ?1014 v1399 ?373 ?381 v1922 ?585 ?1003 ?650 ?443 ?1715 ?636 ?1714 ?1713 ?465 ?1712 ?1711 ?475 ?620 ?486 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1890 <|@
result [v0|QWORD[.] + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1405 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1099 v1102 i1731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsRoundedUp
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1890 
value: i1405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1890 value: i1405 stateAfter: - lastLocationAccess: - #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid v1891 <|@
result [v0|QWORD[.] + 25] <|@
d <@d|@=== Debug Properties ===
displacement: 25
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1102 v1733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:440) [bci: 64]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1891 
value: i1405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v1099 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1891 value: i1405 stateAfter: - lastLocationAccess: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid a1743 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1746 v1814 v1806 v1774 v1790 v1756 v1782 v1766 ?465 ?475 ?486 ?555 ?585 ?620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1719 ?1718 ?1717 ?28 ?90 ?1716 ?1715 ?1714 ?1713 ?486 ?1712 ?167 ?980 ?239 v241 ?1711 ?1014 ?475 ?465 ?514 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v703 v1475 i458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i120 i69 ?90 ?28 v65 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
result int[52|0x34] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 143]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 i83 i679 j741 v751 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result int[64|0x40] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 109]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 v986 v189 v985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a51 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 102]
rawvalue: int[27]{0, 3, 5, 7, 10, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[27]{0, 3, 5, 7, 10, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1892 v1896 v1897 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 i1073 i1044 v60 i78 v1112 i887 i889 v140 i891 v230 i1068 ?239 ?239 v241 v872 i460 i855 i1075 v747 ?1719 v302 i303 i328 i333 v336 v1260 i1029 i371 i372 v382 v392 i423 i428 i450 ?1718 ?1717 v493 i494 i1028 i500 v503 ?514 v1386 i525 i546 i547 v556 v565 v589 i590 i596 i372 i371 v637 i1043 v1395 v651 v655 i774 i371 i372 i546 i547 i546 i547 i78 i78 i951 i1848 i1852 ?29 ?381 ?381 ?555 ?555 ?636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[27|0x1b] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 96]
rawvalue: 27
stableDimension: 0
stamp: i32 [27] ⇊000000000000001b ⇈000000000000001b
stampKind: i32
value: int[27|0x1b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v893 v894 v171 v1140 v1213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i107 i83 ?90 i16 ?28 v32 v37 v65 i69 v81 d734 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v35 v1056 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[53|0x35] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 50]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j725 i9 j84 ?90 ?28 j121 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfTrailingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:431) [bci: 45]
stamp: i32 [0 - 64] ⇈000000000000007f
=== Inputs ===
value: j3 
=== Succesors ===
=== Usages ===
i11 i679 j121 ?28 ?90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountTrailingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountTrailingZerosNode>@ value: j3  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 54]
stamp: i32 [-11 - 53]
=== Inputs ===
x: i10 
y: i9 
=== Succesors ===
=== Usages ===
i153 v130 i16 ?28 i53 ?90 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i10 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 71]
stamp: i32
=== Inputs ===
x: i11 
y: i2 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i11 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 i70 i341 i134 i764 i774 i855 i826 i829 i851 i870 i855 i1854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
stamp: i32
=== Inputs ===
x: i16 
y: i17 
=== Succesors ===
=== Usages ===
v19 i1043 i1044 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 v95 v108 v130 i942 i169 i949 i952 i214 i220 ?239 i459 i906 v924 i922 ?443 i299 i303 j317 j324 i328 i333 i948 i1029 j413 i423 i428 i377 i378 i438 j446 i450 i945 i478 i483 i494 v499 i500 i1926 i525 i590 v595 i596 i599 v1374 i644 i681 j1850 i1028 j689 j693 i851 v816 ?443 i1852 v842 i855 v865 i1848 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i7 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
trueSuccessorProbability: 0.726772406928274
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1ffd8396 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = TZCNT v2|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v8|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604721403427327083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1056  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 0.9996262583639761
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v1054 
falseSuccessor: v1055 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v1054 #falseSuccessor: v1055  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9996262583639761 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604718956845853292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1038  <|@  <|@
f <@*|@fixed>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1054 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4553646222502524500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1057 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1057  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v1055 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B3 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B27" 
    xhandlers
    flags 
    probability 4598593650663286570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 0.9996262583639761
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v33 #falseSuccessor: v34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9996262583639761 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4598591811095463232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v33 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607179052434631948
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1043 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v1036 
values: i18 i8 
=== Succesors ===
=== Usages ===
i1044 v893 v1892 v60 i1044 i1044 i1044 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1036 values: i18 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1037 v1038 
=== Succesors ===
next: v43 
=== Usages ===
i1043 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1037 v1038 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[-21|0xffffffffffffffeb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 86]
rawvalue: -21
stableDimension: 0
stamp: i32 [-21] ⇊00000000ffffffeb ⇈00000000ffffffeb
stampKind: i32
value: int[-21|0xffffffffffffffeb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i36 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
stamp: void
trueSuccessorProbability: 6.874510040402823E-4
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v42 #falseSuccessor: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -21 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 6.874510040402823E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559477469886609793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v42 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607172862740671949
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 91]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1043 
y: i45 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1043 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
stamp: void
trueSuccessorProbability: 0.5135895145912284
=== Inputs ===
condition: v893 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v893 #trueSuccessor: v47 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5135895145912284 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602796314746464677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1855 
=== Usages ===
i1855 
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1855  <|@  <|@
f <@~|@floating>@ <|@
tid v1892 <|@
result [v5|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i1043 
=== Succesors ===
=== Usages ===
i1855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i1043  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1855 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 107]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v47 
address: v1892 
=== Succesors ===
next: v59 
=== Usages ===
i53 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v47 address: v1892 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 108]
stamp: i32
=== Inputs ===
x: i11 
y: i1855 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i1855  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i54 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
trueSuccessorProbability: 0.9987311433807979
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
i1855 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v56 #falseSuccessor: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v8|DWORD, ~y: [v5|QWORD[.] + v11|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9987311433807979 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602790451239230686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1043 
y: i8 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1043 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 116]
stamp: void
trueSuccessorProbability: 0.4020092226613966
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v61 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4020092226613966 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596589483113290611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1495 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1495  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 74
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 443
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?28 
values: - - i8 
=== Succesors ===
=== Usages ===
v1746 i1857 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?28 values: - - i8  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i80 
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v1492 
falseSuccessor: v1494 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v1492 #falseSuccessor: v1494  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596589483113290611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v1495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i2 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
stamp: void
trueSuccessorProbability: 0.0011119564581260066
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0011119564581260066 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4552582423775683270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 125]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 128]
stamp: i32
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 130]
stamp: i32
=== Inputs ===
x: i69 
y: i17 
=== Succesors ===
=== Usages ===
v1895 v703 v709 v1125 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i69 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i702 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i702  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v703 
=== Succesors ===
trueSuccessor: v704 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v703 #trueSuccessor: v704 #falseSuccessor: v705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = DEC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4548078824148312774
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4548078824148312774
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1856 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1856  <|@  <|@
f <@~|@floating>@ <|@
tid a1113 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1893 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1893 <|@
result [v15|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a1113 
index: - 
=== Succesors ===
=== Usages ===
a1856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1113 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1856 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsNumber
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1893 
=== Succesors ===
next: i1857 
=== Usages ===
a1117 v1894 
=== Predecessor ===
v705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1893 #next: i1857  <|@  <|@
f <@~|@floating>@ <|@
tid v1894 <|@
result [v16|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1856 
=== Succesors ===
=== Usages ===
i1857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1857 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v1894 
=== Succesors ===
next: v712 
=== Usages ===
v709 v1125 
=== Predecessor ===
a1856 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v1894 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i1857 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i1857  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
i1857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v710 #falseSuccessor: v711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v15|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 13]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1503 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1503  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i1857 
=== Succesors ===
=== Usages ===
v1503 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i70 y: i1857  <|@  <|@
f <@*|@fixed>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1125 
=== Succesors ===
trueSuccessor: v1500 
falseSuccessor: v1502 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1125 #trueSuccessor: v1500 #falseSuccessor: v1502  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1858 
=== Usages ===
i1858 
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1858  <|@  <|@
f <@~|@floating>@ <|@
tid a1117 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1856 
=== Succesors ===
=== Usages ===
v1895 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1856  <|@  <|@
f <@~|@floating>@ <|@
tid v1895 <|@
result [v18|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1117 
index: i70 
=== Succesors ===
=== Usages ===
i1858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1117 index: i70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1858 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1500 
address: v1895 
=== Succesors ===
next: v75 
=== Usages ===
i78 
=== Predecessor ===
v1500 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1500 address: v1895 #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
i1858 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v18|QWORD[.] + v14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1749 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1749  <|@  <|@
f <@~|@floating>@ <|@
tid i1750 <|@
result int[-288283|0xfffffffffffb99e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288283
stableDimension: 0
stamp: i32 [-288283] ⇊00000000fffb99e5 ⇈00000000fffb99e5
stampKind: i32
value: int[-288283|0xfffffffffffb99e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
v1502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288283|0xfffffffffffb99e5]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v859  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596581230769776106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:469) [bci: 139]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596589483113290610
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i78 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v76 
values: i1858 i8 i8 i8 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v76 values: i1858 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v75 v77 v859 v860 
=== Succesors ===
next: v87 
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v75 v77 v859 v860 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 162]
stamp: i32
=== Inputs ===
x: i80 
y: i2 
=== Succesors ===
=== Usages ===
j84 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i80 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j84 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 163]
stamp: i64
=== Inputs ===
x: j3 
y: i83 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i83  <|@  <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@218ba884
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
=== Inputs ===
arguments: a1 i8 j84 i78 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i8 j84 i78  <|@  <|@
tid ?1710 <|@
d <@d|@=== Debug Properties ===
bci: 170
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
bci: 170
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.developLongDigits
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1112 
stateDuring: ?1710 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1112 stateDuring: ?1710 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:477) [bci: 173]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1741 
=== Usages ===
=== Predecessor ===
v1495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1741  <|@  <|@
f <@~|@floating>@ <|@
tid i1742 <|@
result int[-284435|0xfffffffffffba8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284435
stableDimension: 0
stamp: i32 [-284435] ⇊00000000fffba8ed ⇈00000000fffba8ed
stampKind: i32
value: int[-284435|0xfffffffffffba8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
v1494 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284435|0xfffffffffffba8ed]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1744 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-288283 - -284435] ⇊00000000fffb80e5 ⇈00000000fffbb9fd
valueDescription: i32
=== Inputs ===
merge: v1740 
values: i1742 i1750 
=== Succesors ===
=== Usages ===
v1746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1740 values: i1742 i1750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1741 v1749 
=== Succesors ===
next: v1746 
=== Usages ===
i1744 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1741 v1749 #next: v1746  <|@  <|@
f <@*|@fixed>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i1744 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i1744 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599191351894436866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559143454679177847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602424715906320465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4547163294193854126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605327053094328611
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1044 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v39 
values: i18 i1043 i1043 i1043 i1043 i8 
=== Succesors ===
=== Usages ===
?90 i946 i1925 i941 i947 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v39 values: i18 i1043 i1043 i1043 i1043 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v38 v40 v48 v57 v62 v1057 
=== Succesors ===
next: v750 
=== Usages ===
i1044 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v38 v40 v48 v57 v62 v1057 #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid j724 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j725 j753 j754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j725 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 7]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j3 
y: j724 
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j3 y: j724  <|@  <|@
f <@~|@floating>@ <|@
tid j723 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4607182418800017408
stableDimension: 0
stamp: i64 [4607182418800017408] ⇊3ff0000000000000 ⇈3ff0000000000000
stampKind: i64
value: long[4607182418800017408|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j726 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4607182418800017408 - 4611686018427387903] ⇊3ff0000000000000 ⇈3fffffffffffffff
=== Inputs ===
x: j725 
y: j723 
=== Succesors ===
=== Usages ===
d727 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j725 y: j723  <|@  <|@
f <@~|@floating>@ <|@
tid d727 <|@
result v30|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.longBitsToDouble(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64! [4.9E-324 - 1.7976931348623157E308]
=== Inputs ===
value: j726 
=== Succesors ===
=== Usages ===
d729 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: j726  <|@  <|@
f <@~|@floating>@ <|@
tid d728 <|@
result double[1.5|0x3ff8000000000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 14]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d729 <|@
result v31|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d727 
y: d728 
=== Succesors ===
=== Usages ===
d731 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: d727 y: d728  <|@  <|@
f <@~|@floating>@ <|@
tid d730 <|@
result double[0.289529654|0x3fd287a762c9bd93] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.289529654
stableDimension: 0
stamp: f64! [0.289529654]
stampKind: f64
value: double[0.289529654|0x3fd287a762c9bd93]
=== Inputs ===
=== Succesors ===
=== Usages ===
d731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d731 <|@
result v33|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d729 
y: d730 
=== Succesors ===
=== Usages ===
d733 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d729 y: d730  <|@  <|@
f <@~|@floating>@ <|@
tid d732 <|@
result double[0.176091259|0x3fc68a288b421b8c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.176091259
stableDimension: 0
stamp: f64! [0.176091259]
stampKind: f64
value: double[0.176091259|0x3fc68a288b421b8c]
=== Inputs ===
=== Succesors ===
=== Usages ===
d733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d733 <|@
result v35|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d731 
y: d732 
=== Succesors ===
=== Usages ===
d737 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d731 y: d732  <|@  <|@
f <@~|@floating>@ <|@
tid d734 <|@
result v37|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@39bcec26
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
d736 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid d735 <|@
result double[0.301029995663981|0x3fd34413509f79fb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 28]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.301029995663981
stableDimension: 0
stamp: f64! [0.301029995663981]
stampKind: f64
value: double[0.301029995663981|0x3fd34413509f79fb]
=== Inputs ===
=== Succesors ===
=== Usages ===
d736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d736 <|@
result v38|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 31]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d734 
y: d735 
=== Succesors ===
=== Usages ===
d737 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d734 y: d735  <|@  <|@
f <@~|@floating>@ <|@
tid d737 <|@
result v40|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 32]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d733 
y: d736 
=== Succesors ===
=== Usages ===
j738 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d733 y: d736  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:822) [bci: 37]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64
=== Inputs ===
value: d737 
=== Succesors ===
=== Usages ===
j740 v746 j754 v762 v767 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d737  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 66]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j745 
=== Succesors ===
=== Usages ===
v761 i774 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j740 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j738 
y: j739 
=== Succesors ===
=== Usages ===
j741 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j738 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid j741 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j740 
y: i80 
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j740 y: i80  <|@  <|@
f <@~|@floating>@ <|@
tid i742 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 51]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j741 
=== Succesors ===
=== Usages ===
i744 i771 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j741  <|@  <|@
f <@~|@floating>@ <|@
tid i743 <|@
result int[-1023|0xfffffffffffffc01] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i744 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i742 
y: i743 
=== Succesors ===
=== Usages ===
v747 v751 j753 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i742 y: i743  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i744 
y: i8 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i744 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.8012441897039807
=== Inputs ===
condition: v747 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v749 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v747 #trueSuccessor: v748 #falseSuccessor: v749  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND (x: v2|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = OR (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMOVQ v29|QWORD nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VSUBSD (x: v30|DOUBLE, y: v32|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v31|DOUBLE, y: v34|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v36|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr   -1  <|@ instruction v35|DOUBLE = VADDSD (x: v33|DOUBLE, y: v36|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v37|DOUBLE = VCVTSI2SD v1|DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = VMULSD (x: v37|DOUBLE, y: v39|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v40|DOUBLE = VADDSD (x: v35|DOUBLE, y: v38|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = VMOVQ v40|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND (x: v41|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = SHR v44|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV v45|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA [v46|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603905584622184487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:829) [bci: 147]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1507  <|@  <|@
f <@~|@floating>@ <|@
tid j766 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 154]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9223372036854775807
stableDimension: 0
stamp: i64 [9223372036854775807] ⇊7fffffffffffffff ⇈7fffffffffffffff
stampKind: i64
value: long[9223372036854775807|0x7fffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j766 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j766  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v767 
=== Succesors ===
trueSuccessor: v1506 
falseSuccessor: v1504 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v767 #trueSuccessor: v1506 #falseSuccessor: v1504  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1752 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1752  <|@  <|@
f <@~|@floating>@ <|@
tid i1753 <|@
result int[-358931|0xfffffffffffa85ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -358931
stableDimension: 0
stamp: i32 [-358931] ⇊00000000fffa85ed ⇈00000000fffa85ed
stampKind: i32
value: int[-358931|0xfffffffffffa85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
v1506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-358931|0xfffffffffffa85ed]] destination: B30 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603905584622184487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid i774 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 169]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1 - 0]
=== Inputs ===
condition: v746 
trueValue: i8 
falseValue: i17 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v746 trueValue: i8 falseValue: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v1504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: v50|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B204" 
    xhandlers
    flags 
    probability 4594853894179111922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 81]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1511 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1511  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i744 
y: i80 
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i744 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v1508 
falseSuccessor: v1510 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v1508 #falseSuccessor: v1510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594853894179111922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j738 
y: j724 
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j738 y: j724  <|@  <|@
f <@~|@floating>@ <|@
tid j755 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j756 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j754 
y: j755 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j754 y: j755  <|@  <|@
f <@~|@floating>@ <|@
tid i770 <|@
result int[1075|0x433] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1075
stableDimension: 0
stamp: i32 [1075] ⇊0000000000000433 ⇈0000000000000433
stampKind: i32
value: int[1075|0x433]
=== Inputs ===
=== Succesors ===
=== Usages ===
i771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i771 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i770 
y: i742 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i770 y: i742  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j756 
y: i771 
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j756 y: i771  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32
=== Inputs ===
value: j757 
=== Succesors ===
=== Usages ===
i764 i777 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j757  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 117]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.008440302444170916
=== Inputs ===
condition: v746 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v760 
=== Usages ===
=== Predecessor ===
v1508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v746 #trueSuccessor: v759 #falseSuccessor: v760  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND (x: v41|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = OR (x: v51|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SHR (x: v53|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOV v56|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563785606294653927
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594805903683832922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1515 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1515  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:826) [bci: 93]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j724 
y: i744 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j724 y: i744  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j753 
=== Succesors ===
=== Usages ===
v1515 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j753  <|@  <|@
f <@*|@fixed>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1514 
falseSuccessor: v1512 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1514 #falseSuccessor: v1512  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHR (x: v26|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1759 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1759  <|@  <|@
f <@~|@floating>@ <|@
tid i1760 <|@
result int[-359443|0xfffffffffffa83ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -359443
stableDimension: 0
stamp: i32 [-359443] ⇊00000000fffa83ed ⇈00000000fffa83ed
stampKind: i32
value: int[-359443|0xfffffffffffa83ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
v1514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-359443|0xfffffffffffa83ed]] destination: B36 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594805903683832922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32
=== Inputs ===
x: i17 
y: i758 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i17 y: i758  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v1512 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|DWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i777 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v775 
values: i774 i764 i758 
=== Succesors ===
=== Usages ===
?1719 i94 ?1718 v108 i948 ?1717 ?1716 ?475 ?1715 ?167 ?980 ?239 v244 v247 i524 ?486 ?514 ?1714 i341 ?1713 i1017 i457 ?1712 ?465 ?1711 i1018 i1854 i889 i946 i1925 i1926 i1927 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v775 values: i774 i764 i758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v776 v778 v779 
=== Succesors ===
next: v98 
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v776 v778 v779 #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 184]
stamp: i32
=== Inputs ===
value: i777 
=== Succesors ===
=== Usages ===
v95 i942 i887 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i777  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i94 
y: i7 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i94 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
trueSuccessorProbability: 0.726772406928274
=== Inputs ===
condition: v95 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v95 #trueSuccessor: v96 #falseSuccessor: v97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NEG v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603372974827671461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v25|DWORD, int[0|0x0], int[1|0x1]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596984333357164028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i1926 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1111]
stamp: i32
=== Inputs ===
x: i7 
y: i777 
=== Succesors ===
=== Usages ===
i945 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i7 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid i942 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 329]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i94 
y: i7 
=== Succesors ===
=== Usages ===
i1927 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i94 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i1927 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 329]
stamp: i32
=== Inputs ===
x: i942 
y: i777 
=== Succesors ===
=== Usages ===
i951 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i942 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1925 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 194]
stamp: i32
=== Inputs ===
x: i1044 
y: i777 
=== Succesors ===
=== Usages ===
i941 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1044 y: i777  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SUB (x: v63|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v65|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = SUB (x: v25|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|DWORD, v67|DWORD, v66|DWORD, v64|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i887 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v101 
values: i8 i94 
=== Succesors ===
=== Usages ===
?1714 v1273 ?1713 ?1712 ?1713 ?1711 ?465 ?1711 ?1712 v894 v1896 ?475 ?465 ?167 ?167 ?980 ?980 v1898 v1150 v1904 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i8 i94  <|@  <|@
f <@~|@floating>@ <|@
tid i941 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i1044 i1925 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i1044 i1925  <|@  <|@
f <@~|@floating>@ <|@
tid i951 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i8 i1927 
=== Succesors ===
=== Usages ===
i168 i978 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i8 i1927  <|@  <|@
f <@~|@floating>@ <|@
tid i945 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i7 i1926 
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i7 i1926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v102 
=== Succesors ===
next: v111 
=== Usages ===
i887 i941 i951 i945 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v102 #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i7 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 328]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i213 i219 i905 j316 j323 j412 i680 i921 j688 j692 i955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
trueSuccessorProbability: 0.726772406928274
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v109 #falseSuccessor: v110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD, v69|DWORD, v70|DWORD, v71|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603372974827671461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v25|DWORD, int[1|0x1], int[3|0x3]] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596984333357164028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i948 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 340]
stamp: i32
=== Inputs ===
x: i777 
y: i7 
=== Succesors ===
=== Usages ===
i949 i952 i954 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i952 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 364]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i948 
y: i7 
=== Succesors ===
=== Usages ===
i954 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i948 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 364]
stamp: i32
=== Inputs ===
x: i948 
y: i952 
=== Succesors ===
=== Usages ===
i955 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i948 y: i952  <|@  <|@
f <@~|@floating>@ <|@
tid i946 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:524) [bci: 211]
stamp: i32
=== Inputs ===
x: i777 
y: i1044 
=== Succesors ===
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i1044  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = ADD (x: v73|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v61|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, v75|DWORD, v72|DWORD, v74|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i889 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v114 
values: i8 i777 
=== Succesors ===
=== Usages ===
?1715 v1158 ?1714 v1213 ?1713 ?167 ?475 ?980 v1899 v1905 ?1712 v1267 ?465 ?1711 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i8 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i947 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i1044 i946 
=== Succesors ===
=== Usages ===
i129 i1086 i127 v780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i1044 i946  <|@  <|@
f <@~|@floating>@ <|@
tid i949 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i7 i948 
=== Succesors ===
=== Usages ===
v171 v1897 v1275 v1140 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i7 i948  <|@  <|@
f <@~|@floating>@ <|@
tid i955 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i160 i954 
=== Succesors ===
=== Usages ===
i964 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i160 i954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v113 v115 
=== Succesors ===
next: v783 
=== Usages ===
i889 i947 i949 i955 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v113 v115 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 196]
stamp: i32
=== Inputs ===
x: i2 
y: i941 
=== Succesors ===
=== Usages ===
i123 i120 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i941  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 235]
stamp: i32 [-12 - 52]
=== Inputs ===
x: i80 
y: i9 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i80 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 236]
stamp: i32
=== Inputs ===
x: i107 
y: i679 
=== Succesors ===
=== Usages ===
i1087 i1086 i127 v780 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i679  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i947 
y: i123 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i947 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:527) [bci: 222]
stamp: i32
=== Inputs ===
x: i107 
y: i4 
=== Succesors ===
=== Usages ===
i1087 i129 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i7 
=== Succesors ===
=== Usages ===
v133 v1083 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i11 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
trueSuccessorProbability: 0.4463098071277339
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v781 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v781 #falseSuccessor: v782  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|DWORD, v78|DWORD, v79|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ADD (x: v69|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = SUB (x: v81|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v80|DWORD, ~y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SUB (x: v80|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4463098071277339 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4600055486821680204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:540) [bci: 252]
stamp: i32
=== Inputs ===
x: i123 
y: i947 
=== Succesors ===
=== Usages ===
i1068 i1070 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i123 y: i947  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i120 
y: i947 
=== Succesors ===
=== Usages ===
i1078 i138 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i120 y: i947  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3376150132094379
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v132 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v132  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = SUB (x: v83|DWORD, ~y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v84|DWORD, ~y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3376150132094379 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593285577899345121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1059  <|@  <|@
f <@*|@fixed>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD, v85|DWORD, int[0|0x0]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597625175479993896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD, v85|DWORD, int[0|0x0]] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4601591420112236029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@~|@floating>@ <|@
tid i1086 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:541) [bci: 259]
stamp: i32
=== Inputs ===
x: i947 
y: i123 
=== Succesors ===
=== Usages ===
i1073 i1075 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i947 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i1087 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i120 
y: i123 
=== Succesors ===
=== Usages ===
i1078 i138 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i120 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3376150132094379
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v1081 
falseSuccessor: v1082 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v1081 #falseSuccessor: v1082  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v77|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v84|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3376150132094379 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4594515707184985161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v1081 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, int[0|0x0], v87|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598500752674175837
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1078 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1058 
values: i129 i1087 
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1058 values: i129 i1087  <|@  <|@
f <@~|@floating>@ <|@
tid i1070 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1058 
values: i127 i8 
=== Succesors ===
=== Usages ===
i1068 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1058 values: i127 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1075 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1058 
values: i8 i1086 
=== Succesors ===
=== Usages ===
i1073 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1058 values: i8 i1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1059 v1060 
=== Succesors ===
next: v137 
=== Usages ===
i1078 i1070 i1075 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1059 v1060 #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: i32
=== Inputs ===
x: i1078 
y: i17 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1078 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v1058 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|DWORD, v91|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = DEC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, v90|DWORD, v91|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598917576665011161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v1082 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, int[0|0x0], v87|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i138 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i129 i134 i1087 
=== Succesors ===
=== Usages ===
i891 v140 i144 i145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i129 i134 i1087  <|@  <|@
f <@~|@floating>@ <|@
tid i1068 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i127 i1070 i8 
=== Succesors ===
=== Usages ===
i144 i149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i127 i1070 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1073 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i8 i1075 i1086 
=== Succesors ===
=== Usages ===
i145 i150 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i8 i1075 i1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v137 v1088 
=== Succesors ===
next: v143 
=== Usages ===
i138 i1068 i1073 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v137 v1088 #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i8 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i138 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
stamp: void
trueSuccessorProbability: 0.9998329866541154
=== Inputs ===
condition: v140 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v140 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD, v94|DWORD, v95|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998329866541154 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605325858642678375
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:559) [bci: 294]
stamp: i32
=== Inputs ===
x: i1073 
y: i138 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1073 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 287]
stamp: i32
=== Inputs ===
x: i1068 
y: i138 
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1068 y: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = SUB (x: v95|DWORD, ~y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = SUB (x: v94|DWORD, ~y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|DWORD, v96|DWORD, int[0|0x0]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4549024497976202376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD, v95|DWORD, v93|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i149 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v147 
values: i1068 i144 
=== Succesors ===
=== Usages ===
?1713 i153 ?167 ?980 i207 j310 ?1712 ?465 ?1711 i472 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i1068 i144  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v147 
values: i1073 i145 
=== Succesors ===
=== Usages ===
?1715 ?167 i169 ?980 i209 j312 ?1714 v1267 ?465 ?1713 ?1712 ?475 ?1711 i482 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i1073 i145  <|@  <|@
f <@~|@floating>@ <|@
tid i891 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v147 
values: i138 i8 
=== Succesors ===
=== Usages ===
?1714 ?167 ?980 i211 j314 ?1713 ?465 ?1712 ?1711 ?475 i477 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i138 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v146 v148 
=== Succesors ===
next: v157 
=== Usages ===
i149 i150 i891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v146 v148 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 307]
stamp: i32
=== Inputs ===
x: i11 
y: i149 
=== Succesors ===
=== Usages ===
?167 i168 i992 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i949 
y: i45 
=== Succesors ===
=== Usages ===
v174 v990 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i949 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i887 
y: i45 
=== Succesors ===
=== Usages ===
v157 v1579 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i887 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 637]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 j630 j630 v449 v1853 ?650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result int[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 545]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 i915 i344 i439 i516 i600 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 566]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 v360 v537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
result int[-3|0xfffffffffffffffd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 559]
rawvalue: -3
stableDimension: 0
stamp: i32 [-3] ⇊00000000fffffffd ⇈00000000fffffffd
stampKind: i32
value: int[-3|0xfffffffffffffffd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 v358 v530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i8 
=== Succesors ===
=== Usages ===
v1539 v357 v529 v1034 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v1900 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1861 a1883 a1869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:537) [bci: 228]
stamp: i64
=== Inputs ===
x: j3 
y: i9 
=== Succesors ===
=== Usages ===
?1713 v1273 ?1712 ?167 ?980 i203 j309 ?1711 ?465 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
stamp: void
trueSuccessorProbability: 0.9998329714381159
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v155 #falseSuccessor: v156  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD, v99|DWORD, v100|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = ADD (x: v98|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998329714381159 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605325858533856079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 317]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1859 
=== Usages ===
i1859 
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1859  <|@  <|@
f <@~|@floating>@ <|@
tid v1896 <|@
result [v5|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i887 
=== Succesors ===
=== Usages ===
i1859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1859 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 322]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v155 
address: v1896 
=== Succesors ===
next: v990 
=== Usages ===
i978 i992 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v155 address: v1896 #next: v990  <|@  <|@
f <@~|@floating>@ <|@
tid i992 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i153 
y: i1859 
=== Succesors ===
=== Usages ===
i982 i983 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i1859  <|@  <|@
f <@*|@fixed>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 0.9998329739743084
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v988 
falseSuccessor: v989 
=== Usages ===
=== Predecessor ===
i1859 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v988 #falseSuccessor: v989  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v5|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v101|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998329739743084 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605324664191044661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 348]
stamp: void
=== Inputs ===
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v973  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
v988 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD, v104|DWORD] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B67" 
    xhandlers
    flags 
    probability 4549024052172398913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 359]
stamp: void
=== Inputs ===
=== Succesors ===
next: v977 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v977  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v989 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B58 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4549024943712324430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 326]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i153 
y: i951 
=== Succesors ===
=== Usages ===
i982 i983 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i951  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 0.9998329739743084
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = ADD (x: v70|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998329739743084 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4549024126467393663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 348]
stamp: void
=== Inputs ===
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v972  <|@  <|@
f <@*|@fixed>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD, v105|DWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4605325858551994506
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i978 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v971 
values: i951 i1859 
=== Succesors ===
=== Usages ===
?167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v971 values: i951 i1859  <|@  <|@
f <@~|@floating>@ <|@
tid i983 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v971 
values: i168 i992 
=== Succesors ===
=== Usages ===
i1729 v986 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v971 values: i168 i992  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v972 v973 
=== Succesors ===
next: v1519 
=== Usages ===
i978 i983 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v972 v973 #next: v1519  <|@  <|@
f <@~|@floating>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i949 
y: i45 
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i949 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1140 
=== Succesors ===
trueSuccessor: v1516 
falseSuccessor: v1518 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1140 #trueSuccessor: v1516 #falseSuccessor: v1518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4605325858551994506
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
i1860 
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i983 
y: i54 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i983 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
stamp: void
trueSuccessorProbability: 0.9842400133610677
=== Inputs ===
condition: v986 
=== Succesors ===
trueSuccessor: v967 
falseSuccessor: v968 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v986 #trueSuccessor: v967 #falseSuccessor: v968  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v107|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9842400133610677 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    probability 4605213164576788801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 375]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1860 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1860  <|@  <|@
f <@~|@floating>@ <|@
tid v1897 <|@
result [v5|QWORD[.] + v78|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i949 
=== Succesors ===
=== Usages ===
i1860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1860 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1516 
address: v1897 
=== Succesors ===
next: v959 
=== Usages ===
i964 
=== Predecessor ===
v967 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1516 address: v1897 #next: v959  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
i1860 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOV [v5|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|DWORD, v107|DWORD] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B134" 
    xhandlers
    flags 
    probability 4578366036194218575
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v970  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v968 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1517 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1517  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 330
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 591
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - i153 i978 
=== Succesors ===
=== Usages ===
v1517 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - i153 i978  <|@  <|@
f <@*|@fixed>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1141
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?167 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1518 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?167  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -292123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stack: v101|DWORD v106|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4492280099333854477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 359]
stamp: void
=== Inputs ===
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v975  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B58" 
    successors "B68" "B133" 
    xhandlers
    flags 
    probability 4549024869417329680
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i982 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v974 
values: i168 i992 
=== Succesors ===
=== Usages ===
i1729 v985 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v974 values: i168 i992  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v975 v977 
=== Succesors ===
next: v188 
=== Usages ===
i982 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v975 v977 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i982 
y: i54 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i982 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
stamp: void
trueSuccessorProbability: 0.9842400133610677
=== Inputs ===
condition: v985 
=== Succesors ===
trueSuccessor: v186 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v985 #trueSuccessor: v186 #falseSuccessor: v187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v109|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9842400133610677 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4548947758239191451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 375]
stamp: void
=== Inputs ===
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v958  <|@  <|@
f <@*|@fixed>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|DWORD, v109|DWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B63" 
    successors "B70" "B132" 
    xhandlers
    flags 
    probability 4605214340293151682
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i964 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v957 
values: i955 i1860 
=== Succesors ===
=== Usages ===
?980 i184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v957 values: i955 i1860  <|@  <|@
f <@~|@floating>@ <|@
tid i1729 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v957 
values: i982 i983 
=== Succesors ===
=== Usages ===
?980 v197 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v957 values: i982 i983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v958 v959 
=== Succesors ===
next: v195 
=== Usages ===
i964 i1729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v958 v959 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 336]
stamp: i32
=== Inputs ===
x: i150 
y: i7 
=== Succesors ===
=== Usages ===
?980 i184 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: i32
=== Inputs ===
x: i169 
y: i964 
=== Succesors ===
=== Usages ===
v189 v201 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i964  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i54 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
stamp: void
trueSuccessorProbability: 0.9643485236493783
=== Inputs ===
condition: v189 
=== Succesors ===
trueSuccessor: v190 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v189 #trueSuccessor: v190 #falseSuccessor: v194  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC v99|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ADD (x: v112|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9643485236493783 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B99" 
    xhandlers
    flags 
    probability 4604963385246279636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1861 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1861 <|@
result v114|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 537]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1900 
=== Succesors ===
next: v200 
=== Usages ===
v1224 a1223 v1901 v1902 v1903 v1933 v1934 
=== Predecessor ===
v190 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1900 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v1901 <|@
result [v114|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1861 
=== Succesors ===
=== Usages ===
i1863 i1868 i1867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1861  <|@  <|@
tid ?980 <|@
d <@d|@=== Debug Properties ===
bci: 365
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 594
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - i1729 - - - - - - - - - i169 i964 
=== Succesors ===
=== Usages ===
v1814 j319 j321 i217 i216 v1933 i1867 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - i1729 - - - - - - - - - i169 i964  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 384]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 v201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1729 
y: i196 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1729 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
stamp: void
trueSuccessorProbability: 8.798732982450153E-4
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
a1861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v198 #falseSuccessor: v199  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v111|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 8.798732982450153E-4 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B98" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 389]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1523 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i196 
=== Succesors ===
=== Usages ===
v1523 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v1520 
falseSuccessor: v1522 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v1520 #falseSuccessor: v1522  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B97" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1527 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1527  <|@  <|@
f <@~|@floating>@ <|@
tid i1149 <|@
result int[14|0xe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
rawvalue: 14
stableDimension: 0
stamp: i32 [14] ⇊000000000000000e ⇈000000000000000e
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1150 v1158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i887 
y: i1149 
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i887 y: i1149  <|@  <|@
f <@*|@fixed>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1150 
=== Succesors ===
trueSuccessor: v1524 
falseSuccessor: v1526 
=== Usages ===
=== Predecessor ===
v1520 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1150 #trueSuccessor: v1524 #falseSuccessor: v1526  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B96" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1531 
=== Usages ===
i1862 
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1531  <|@  <|@
f <@~|@floating>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i889 
y: i1149 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i889 y: i1149  <|@  <|@
f <@*|@fixed>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1158 
=== Succesors ===
trueSuccessor: v1528 
falseSuccessor: v1530 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1158 #trueSuccessor: v1528 #falseSuccessor: v1530  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1933 
=== Usages ===
i1864 
=== Predecessor ===
v1531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?980 
object: a1861 
=== Succesors ===
next: v1539 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?980 object: a1861 #next: v1539  <|@  <|@
f <@*|@fixed>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v1538 
falseSuccessor: v1536 
=== Usages ===
=== Predecessor ===
v1933 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v1538 #falseSuccessor: v1536  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v114|DWORD[.] * 8] state [bci:365] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1823 
=== Usages ===
=== Predecessor ===
v1539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1823  <|@  <|@
f <@~|@floating>@ <|@
tid i1824 <|@
result int[-304147|0xfffffffffffb5bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -304147
stableDimension: 0
stamp: i32 [-304147] ⇊00000000fffb5bed ⇈00000000fffb5bed
stampKind: i32
value: int[-304147|0xfffffffffffb5bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-304147|0xfffffffffffb5bed]] destination: B75 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1543 
=== Usages ===
=== Predecessor ===
v1539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1543  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i243 
=== Succesors ===
=== Usages ===
v1543 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v1542 
falseSuccessor: v1540 
=== Usages ===
=== Predecessor ===
v1536 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v1542 #falseSuccessor: v1540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1831 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1831  <|@  <|@
f <@~|@floating>@ <|@
tid i1832 <|@
result int[-304403|0xfffffffffffb5aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -304403
stableDimension: 0
stamp: i32 [-304403] ⇊00000000fffb5aed ⇈00000000fffb5aed
stampKind: i32
value: int[-304403|0xfffffffffffb5aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-304403|0xfffffffffffb5aed]] destination: B77 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B95" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1547 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1547  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i246 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v1544 
falseSuccessor: v1546 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v1544 #falseSuccessor: v1546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1862 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1862  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 398]
rawvalue: int[14]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[14]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1898 v1899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1898 <|@
result [v115|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a204 
index: i887 
=== Succesors ===
=== Usages ===
i1862 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a204 index: i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1862 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1524 
address: v1898 
=== Succesors ===
next: v1551 
=== Usages ===
i206 i211 
=== Predecessor ===
v1544 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1524 address: v1898 #next: v1551  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:600) [bci: 429]
stamp: i32
=== Inputs ===
x: i1862 
y: i891 
=== Succesors ===
=== Usages ===
i219 i220 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1862 y: i891  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i211 
y: i160 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i211 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i211 
y: i7 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i211 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i219 
y: i220 
=== Succesors ===
=== Usages ===
v222 i225 ?239 i906 i905 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i219 y: i220  <|@  <|@
f <@~|@floating>@ <|@
tid i905 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i221 
y: i160 
=== Succesors ===
=== Usages ===
i907 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i221 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i906 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i221 
y: i7 
=== Succesors ===
=== Usages ===
i907 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i221 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i907 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i905 
y: i906 
=== Succesors ===
=== Usages ===
v909 i911 v924 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i905 y: i906  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i907 
y: i7 
=== Succesors ===
=== Usages ===
v1551 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i907 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v1550 
falseSuccessor: v1548 
=== Usages ===
=== Predecessor ===
i1862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v1550 #falseSuccessor: v1548  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOV [v115|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SHL (x: v116|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SHL v117|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = SHL v117|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ADD (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SHL v120|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = SHL v120|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = ADD (x: v121|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v123|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1835 
=== Usages ===
=== Predecessor ===
v1551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1835  <|@  <|@
f <@~|@floating>@ <|@
tid i1836 <|@
result int[-304915|0xfffffffffffb58ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -304915
stableDimension: 0
stamp: i32 [-304915] ⇊00000000fffb58ed ⇈00000000fffb58ed
stampKind: i32
value: int[-304915|0xfffffffffffb58ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-304915|0xfffffffffffb58ed]] destination: B80 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1863 
=== Usages ===
=== Predecessor ===
v1551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1863 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1901 
=== Succesors ===
next: v1555 
=== Usages ===
v1475 
=== Predecessor ===
v1548 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1901 #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid v1475 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 697]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1863 
y: i702 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1863 y: i702  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1475 
=== Succesors ===
trueSuccessor: v1554 
falseSuccessor: v1552 
=== Usages ===
=== Predecessor ===
i1863 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1475 #trueSuccessor: v1554 #falseSuccessor: v1552  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v114|DWORD[.] * 8 + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1839 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1839  <|@  <|@
f <@~|@floating>@ <|@
tid i1840 <|@
result int[-361499|0xfffffffffffa7be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -361499
stableDimension: 0
stamp: i32 [-361499] ⇊00000000fffa7be5 ⇈00000000fffa7be5
stampKind: i32
value: int[-361499|0xfffffffffffa7be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-361499|0xfffffffffffa7be5]] destination: B82 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1864 
=== Usages ===
v1187 v1203 
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1864  <|@  <|@
f <@~|@floating>@ <|@
tid v1899 <|@
result [v115|QWORD[.] + v76|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a204 
index: i889 
=== Succesors ===
=== Usages ===
i1864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a204 index: i889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1864 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1528 
address: v1899 
=== Succesors ===
next: i216 
=== Usages ===
i209 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1528 address: v1899 #next: i216  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 397]
resultBits: 32
stamp: i32
=== Inputs ===
value: j121 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j121  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 404]
stamp: i32
=== Inputs ===
x: i203 
y: i1862 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i203 y: i1862  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 407]
stamp: i32
=== Inputs ===
x: i206 
y: i149 
=== Succesors ===
=== Usages ===
i216 i217 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i206 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 418]
stamp: i32
=== Inputs ===
x: i1864 
y: i150 
=== Succesors ===
=== Usages ===
i213 i214 i216 i217 ?239 i903 i904 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1864 y: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i216 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:608) [bci: 446]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?980 
x: i207 
y: i209 
=== Succesors ===
next: v1559 
=== Usages ===
v230 i235 
=== Predecessor ===
i1864 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?980 x: i207 y: i209 #next: v1559  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i8 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i216 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v1558 
falseSuccessor: v1556 
=== Usages ===
=== Predecessor ===
i216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v1558 #falseSuccessor: v1556  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOV [v115|QWORD[.] + v76|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOV v102|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = IMUL (x: v125|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = SHL (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = SHL (x: v124|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v128|DWORD) size: DWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v129|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1841 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1841  <|@  <|@
f <@~|@floating>@ <|@
tid i1842 <|@
result int[-299283|0xfffffffffffb6eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299283
stableDimension: 0
stamp: i32 [-299283] ⇊00000000fffb6eed ⇈00000000fffb6eed
stampKind: i32
value: int[-299283|0xfffffffffffb6eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1558 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299283|0xfffffffffffb6eed]] destination: B84 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
=== Inputs ===
=== Succesors ===
next: i217 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i217 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 455]
op: REM
stamp: i32 [-2147483647 - 2147483647]
type: SIGNED
=== Inputs ===
stateBefore: ?980 
x: i207 
y: i209 
=== Succesors ===
next: v1563 
=== Usages ===
i681 i680 
=== Predecessor ===
v1556 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?980 x: i207 y: i209 #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i217 
y: i160 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i217 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i217 
y: i7 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i217 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i680 
y: i681 
=== Succesors ===
=== Usages ===
v222 i225 ?239 i904 i903 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i680 y: i681  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i682 
y: i221 
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i682 y: i221  <|@  <|@
f <@*|@fixed>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v1562 
falseSuccessor: v1560 
=== Usages ===
=== Predecessor ===
i217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v1562 #falseSuccessor: v1560  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = SHL v130|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = SHL v130|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = ADD (x: v131|DWORD, y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v120|DWORD, y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1843 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1843  <|@  <|@
f <@~|@floating>@ <|@
tid i1844 <|@
result int[-298771|0xfffffffffffb70ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -298771
stableDimension: 0
stamp: i32 [-298771] ⇊00000000fffb70ed ⇈00000000fffb70ed
stampKind: i32
value: int[-298771|0xfffffffffffb70ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-298771|0xfffffffffffb70ed]] destination: B86 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1567 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i209 
y: i160 
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i209 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i209 
y: i7 
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i209 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i213 
y: i214 
=== Succesors ===
=== Usages ===
v226 ?239 v912 i300 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i213 y: i214  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 484]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i221 
y: i682 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i221 y: i682  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i225 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i215 y: i225  <|@  <|@
f <@*|@fixed>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1566 
falseSuccessor: v1564 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1566 #falseSuccessor: v1564  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = SHL v128|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = SHL v128|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ADD (x: v134|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = ADD (x: v133|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1845 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1845  <|@  <|@
f <@~|@floating>@ <|@
tid i1846 <|@
result int[-299027|0xfffffffffffb6fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299027
stableDimension: 0
stamp: i32 [-299027] ⇊00000000fffb6fed ⇈00000000fffb6fed
stampKind: i32
value: int[-299027|0xfffffffffffb6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1845 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299027|0xfffffffffffb6fed]] destination: B88 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B93" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1187 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1187  <|@  <|@
f <@~|@floating>@ <|@
tid v1902 <|@
result [v114|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1861 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1861  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 549]
stamp: i32
=== Inputs ===
x: i216 
y: i234 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i216 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 550]
resultBits: 16
stamp: i16
=== Inputs ===
value: i235 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1187 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1552 
address: v1902 
value: i236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i903 
=== Usages ===
=== Predecessor ===
v1564 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1552 address: v1902 value: i236 stateAfter: - lastLocationAccess: - #next: i903  <|@  <|@
tid ?239 <|@
d <@d|@=== Debug Properties ===
bci: 552
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 626
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i7 i8 i8 - - - - - i682 i209 i221 i215 - - - - 
=== Succesors ===
=== Usages ===
i903 i904 v1766 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i7 i8 i8 - - - - - i682 i209 i221 i215 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i903 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:630) [bci: 591]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?239 
x: i682 
y: i209 
=== Succesors ===
next: i904 
=== Usages ===
i915 
=== Predecessor ===
v1187 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?239 x: i682 y: i209 #next: i904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i904 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 600]
op: REM
stamp: i32 [-2147483647 - 2147483646]
type: SIGNED
=== Inputs ===
stateBefore: ?239 
x: i682 
y: i209 
=== Succesors ===
next: v1571 
=== Usages ===
i921 i922 
=== Predecessor ===
i903 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?239 x: i682 y: i209 #next: v1571  <|@  <|@
f <@~|@floating>@ <|@
tid i921 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i904 
y: i160 
=== Succesors ===
=== Usages ===
i923 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i904 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i922 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i904 
y: i7 
=== Succesors ===
=== Usages ===
i923 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i904 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i923 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i921 
y: i922 
=== Succesors ===
=== Usages ===
v909 i911 v302 i299 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i921 y: i922  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i923 
y: i907 
=== Succesors ===
=== Usages ===
v1571 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i923 y: i907  <|@  <|@
f <@*|@fixed>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v909 
=== Succesors ===
trueSuccessor: v1568 
falseSuccessor: v1570 
=== Usages ===
=== Predecessor ===
i904 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v909 #trueSuccessor: v1568 #falseSuccessor: v1570  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = LEA [v129|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|DWORD[.] * 8 + 16], y: v138|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v133|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - v133|DWORD v128|DWORD v120|DWORD v136|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v128|DWORD) size: DWORD state [bci:552] <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = SHL v140|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = SHL v140|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = ADD (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1575 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1575  <|@  <|@
f <@~|@floating>@ <|@
tid i911 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 660]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i907 
y: i923 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i907 y: i923  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i911 
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i215 y: i911  <|@  <|@
f <@*|@fixed>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v912 
=== Succesors ===
trueSuccessor: v1574 
falseSuccessor: v1572 
=== Usages ===
=== Predecessor ===
v1568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v912 #trueSuccessor: v1574 #falseSuccessor: v1572  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ADD (x: v123|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1762 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1762  <|@  <|@
f <@~|@floating>@ <|@
tid i1763 <|@
result int[-305427|0xfffffffffffb56ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305427
stableDimension: 0
stamp: i32 [-305427] ⇊00000000fffb56ed ⇈00000000fffb56ed
stampKind: i32
value: int[-305427|0xfffffffffffb56ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1764 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
v1574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305427|0xfffffffffffb56ed]] destination: B91 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B195" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1203 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1903 <|@
result [v114|DWORD[.] * 8 + 18] <|@
d <@d|@=== Debug Properties ===
displacement: 18
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1861 
=== Succesors ===
=== Usages ===
v1203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1861  <|@  <|@
f <@~|@floating>@ <|@
tid i915 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 695]
stamp: i32
=== Inputs ===
x: i903 
y: i234 
=== Succesors ===
=== Usages ===
i916 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i903 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i916 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 696]
resultBits: 16
stamp: i16
=== Inputs ===
value: i915 
=== Succesors ===
=== Usages ===
v1203 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1203 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 697]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1552 
address: v1903 
value: i916 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1552 address: v1903 value: i916 stateAfter: - lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
result v146|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 704]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i923 
y: i7 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i923 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 707]
stamp: i32
=== Inputs ===
x: i299 
y: i215 
=== Succesors ===
=== Usages ===
j301 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i299 y: i215  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
result v148|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 708]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i300 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i300  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i923 
y: i8 
=== Succesors ===
=== Usages ===
i303 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i923 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v302 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1204 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v302 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1204 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 722]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i303 
=== Succesors ===
=== Usages ===
i1731 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = LEA [v139|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|DWORD[.] * 8 + 18], y: v145|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = SHL v143|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = SUB (x: v146|DWORD, ~y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOVSXD v147|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v143|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[2|0x2], int[1|0x1], int[0|0x0], v148|QWORD, v149|DWORD] destination: B92 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1767 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1767  <|@  <|@
f <@~|@floating>@ <|@
tid i1768 <|@
result int[-305171|0xfffffffffffb57ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305171
stableDimension: 0
stamp: i32 [-305171] ⇊00000000fffb57ed ⇈00000000fffb57ed
stampKind: i32
value: int[-305171|0xfffffffffffb57ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1764 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
v1570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305171|0xfffffffffffb57ed]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1764 <|@
result v150|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-305427 - -305171] ⇊00000000fffb56ed ⇈00000000fffb57ed
valueDescription: i32
=== Inputs ===
merge: v1761 
values: i1763 i1768 
=== Succesors ===
=== Usages ===
v1766 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1761 values: i1763 i1768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1762 v1767 
=== Succesors ===
next: v1766 
=== Usages ===
i1764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1762 v1767 #next: v1766  <|@  <|@
f <@*|@fixed>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?239 
actionAndReason: i1764 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?239 actionAndReason: i1764 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v150|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v150|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - v133|DWORD v128|DWORD v120|DWORD v136|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:552] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1837 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1837  <|@  <|@
f <@~|@floating>@ <|@
tid i1838 <|@
result int[-304659|0xfffffffffffb59ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -304659
stableDimension: 0
stamp: i32 [-304659] ⇊00000000fffb59ed ⇈00000000fffb59ed
stampKind: i32
value: int[-304659|0xfffffffffffb59ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-304659|0xfffffffffffb59ed]] destination: B95 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1821 
=== Usages ===
=== Predecessor ===
v1531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1821  <|@  <|@
f <@~|@floating>@ <|@
tid i1822 <|@
result int[-296731|0xfffffffffffb78e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -296731
stableDimension: 0
stamp: i32 [-296731] ⇊00000000fffb78e5 ⇈00000000fffb78e5
stampKind: i32
value: int[-296731|0xfffffffffffb78e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-296731|0xfffffffffffb78e5]] destination: B96 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1819 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1819  <|@  <|@
f <@~|@floating>@ <|@
tid i1820 <|@
result int[-294683|0xfffffffffffb80e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294683
stableDimension: 0
stamp: i32 [-294683] ⇊00000000fffb80e5 ⇈00000000fffb80e5
stampKind: i32
value: int[-294683|0xfffffffffffb80e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294683|0xfffffffffffb80e5]] destination: B97 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1817 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1817  <|@  <|@
f <@~|@floating>@ <|@
tid i1818 <|@
result int[-293907|0xfffffffffffb83ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293907
stableDimension: 0
stamp: i32 [-293907] ⇊00000000fffb83ed ⇈00000000fffb83ed
stampKind: i32
value: int[-293907|0xfffffffffffb83ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293907|0xfffffffffffb83ed]] destination: B98 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B100" "B130" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 728]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1579 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1579  <|@  <|@
f <@*|@fixed>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v1576 
falseSuccessor: v1578 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v1576 #falseSuccessor: v1578  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B99 -> B100 falseDestination: B99 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B129" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1583 
=== Usages ===
j1865 
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1583  <|@  <|@
f <@~|@floating>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i889 
y: i45 
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i889 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1213 
=== Succesors ===
trueSuccessor: v1580 
falseSuccessor: v1582 
=== Usages ===
=== Predecessor ===
v1576 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1213 #trueSuccessor: v1580 #falseSuccessor: v1582  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B107" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1865 
=== Usages ===
j1866 
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1865  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
result v151|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 93]
rawvalue: long[27]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [J
stampKind: a -
value: Object[long[27]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1904 v1905 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1904 <|@
result [v151|QWORD[.] + v68|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i887 
=== Succesors ===
=== Usages ===
j1865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1865 <|@
result v152|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1576 
address: v1904 
=== Succesors ===
next: j1866 
=== Usages ===
j309 j314 
=== Predecessor ===
v1580 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1576 address: v1904 #next: j1866  <|@  <|@
f <@~|@floating>@ <|@
tid v1905 <|@
result [v151|QWORD[.] + v76|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i889 
=== Succesors ===
=== Usages ===
j1866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1866 <|@
result v153|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1580 
address: v1905 
=== Succesors ===
next: j319 
=== Usages ===
j312 
=== Predecessor ===
j1865 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1580 address: v1905 #next: j319  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
result v154|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 735]
stamp: i64
=== Inputs ===
x: j121 
y: j1865 
=== Succesors ===
=== Usages ===
j310 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j121 y: j1865  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 738]
stamp: i64
=== Inputs ===
x: j309 
y: i149 
=== Succesors ===
=== Usages ===
j319 j321 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j309 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 749]
stamp: i64
=== Inputs ===
x: j1866 
y: i150 
=== Succesors ===
=== Usages ===
j316 j317 j319 j321 ?1003 ?1014 ?443 ?373 ?381 j408 j410 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1866 y: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j319 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 778]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?980 
x: j310 
y: j312 
=== Succesors ===
next: j321 
=== Usages ===
i320 
=== Predecessor ===
j1866 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?980 x: j310 y: j312 #next: j321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j321 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 789]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775807]
type: SIGNED
=== Inputs ===
stateBefore: ?980 
x: j310 
y: j312 
=== Succesors ===
next: v339 
=== Usages ===
j689 j688 
=== Predecessor ===
j319 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?980 x: j310 y: j312 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j312 
y: i160 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j312 
y: i7 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
result v161|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j316 
y: j317 
=== Succesors ===
=== Usages ===
j447 v332 ?443 ?1014 v427 ?373 ?381 ?1003 j1849 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j316 y: j317  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
result v162|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:654) [bci: 760]
stamp: i64
=== Inputs ===
x: j1865 
y: i891 
=== Succesors ===
=== Usages ===
j323 j324 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1865 y: i891  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j314 
y: i160 
=== Succesors ===
=== Usages ===
j325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j314 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j324 <|@
result v164|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j314 
y: i7 
=== Succesors ===
=== Usages ===
j325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j314 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j325 <|@
result v165|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j323 
y: j324 
=== Succesors ===
=== Usages ===
j380 v327 j330 ?373 ?1014 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j323 y: j324  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
result v166|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j321 
y: i160 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j321 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j689 <|@
result v167|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j321 
y: i7 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j321 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j690 <|@
result v168|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j688 
y: j689 
=== Succesors ===
=== Usages ===
j379 v327 j330 ?373 ?1014 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j688 y: j689  <|@  <|@
f <@~|@floating>@ <|@
tid j330 <|@
result v169|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 820]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j325 
y: j690 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j325 y: j690  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j330 
=== Succesors ===
=== Usages ===
i333 v1587 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j330  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
result v170|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 779]
resultBits: 32
stamp: i32
=== Inputs ===
value: j319 
=== Succesors ===
=== Usages ===
v336 i344 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j319  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i8 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i320 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
trueSuccessorProbability: 0.1394488655468913
=== Inputs ===
condition: v336 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
j321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v336 #trueSuccessor: v337 #falseSuccessor: v338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOV [v151|QWORD[.] + v68|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOV [v151|QWORD[.] + v76|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = IMUL (x: v152|QWORD, y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = SHL (x: v154|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = SHL (x: v153|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v155|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v156|QWORD) size: QWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = SHL v156|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = SHL v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = ADD (x: v159|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = SHL (x: v152|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = SHL v162|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = SHL v162|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = ADD (x: v163|QWORD, y: v164|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = SHL v158|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = SHL v158|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = ADD (x: v166|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = ADD (x: v165|QWORD, y: v168|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = MOV v157|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v170|DWORD, y: v170|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1394488655468913 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4592230573593724458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 862]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1587 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1587  <|@  <|@
f <@*|@fixed>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v1586 
falseSuccessor: v1584 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v1586 #falseSuccessor: v1584  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v169|QWORD, y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1815 
=== Usages ===
=== Predecessor ===
v1587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1815  <|@  <|@
f <@~|@floating>@ <|@
tid i1816 <|@
result int[-320531|0xfffffffffffb1bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -320531
stableDimension: 0
stamp: i32 [-320531] ⇊00000000fffb1bed ⇈00000000fffb1bed
stampKind: i32
value: int[-320531|0xfffffffffffb1bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320531|0xfffffffffffb1bed]] destination: B103 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4592230573593724458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v1587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result v171|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i777 
y: i17 
=== Succesors ===
=== Usages ===
i1017 i1018 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.011112534426439506
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v1584 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v355 #falseSuccessor: v356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011112534426439506 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B117" 
    xhandlers
    flags 
    probability 4563023887533601084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v171|DWORD, int[0|0x0]] destination: B105 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B112" 
    xhandlers
    flags 
    probability 4592146494458807909
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1013 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1013  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v171|DWORD, int[0|0x0]] destination: B106 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4604011643404215320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 873]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1867 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1867 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?980 
guard: - 
address: v1901 
=== Succesors ===
next: v1595 
=== Usages ===
v1260 
=== Predecessor ===
v338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?980 guard: - address: v1901 #next: v1595  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1867 
y: i8 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1867 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1595 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1260 
=== Succesors ===
trueSuccessor: v1594 
falseSuccessor: v1592 
=== Usages ===
=== Predecessor ===
i1867 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1260 #trueSuccessor: v1594 #falseSuccessor: v1592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction CMP [v114|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1833 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1833  <|@  <|@
f <@~|@floating>@ <|@
tid i1834 <|@
result int[-363547|0xfffffffffffa73e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -363547
stableDimension: 0
stamp: i32 [-363547] ⇊00000000fffa73e5 ⇈00000000fffa73e5
stampKind: i32
value: int[-363547|0xfffffffffffa73e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-363547|0xfffffffffffa73e5]] destination: B108 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604011643404215320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1265 
=== Usages ===
v1265 
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1265  <|@  <|@
f <@~|@floating>@ <|@
tid v1934 <|@
result [v114|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1861 
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1861  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
result v172|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 886]
stamp: i32
=== Inputs ===
x: i320 
y: i234 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 887]
resultBits: 16
stamp: i16
=== Inputs ===
value: i344 
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1265 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1592 
address: v1934 
value: i345 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1034 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1592 address: v1934 value: i345 stateAfter: - lastLocationAccess: - #next: v1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.011112534426439506
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v1032 
falseSuccessor: v1033 
=== Usages ===
=== Predecessor ===
v1265 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v1032 #falseSuccessor: v1033  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|DWORD = LEA [v170|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|DWORD[.] * 8 + 16], y: v172|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011112534426439506 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B117" 
    xhandlers
    flags 
    probability 4574951777169331133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v1034 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v1032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v61|DWORD, int[1|0x1]] destination: B110 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4603946785943155568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1015 
=== Usages ===
=== Predecessor ===
v1034 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
v1033 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[1|0x1]] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4604882045167610941
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1017 <|@
result v173|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1012 
values: i341 i777 
=== Succesors ===
=== Usages ===
v358 v360 i1018 i1018 ?1014 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1012 values: i341 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1029 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1012 
values: i8 i7 
=== Succesors ===
=== Usages ===
i1028 i1028 ?1014 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1012 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1013 v1015 
=== Succesors ===
next: v1599 
=== Usages ===
i1017 i1029 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1013 v1015 #next: v1599  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1017 
y: i243 
=== Succesors ===
=== Usages ===
v1599 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1017 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j690 
y: j325 
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j690 y: j325  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result v175|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v327 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i371 ?1014 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v327 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result v176|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v332 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i372 ?1014 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v332 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v1598 
falseSuccessor: v1596 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v1598 #falseSuccessor: v1596  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v173|DWORD, v174|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v165|QWORD, y: v168|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP (x: v169|QWORD, y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP v173|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1597 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1597  <|@  <|@
tid ?1014 <|@
d <@d|@=== Debug Properties ===
bci: 889
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 680
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i1017 - - - - - - - i1029 i328 i333 - - - - - j690 - j312 - j325 - j318 - 
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i1017 - - - - - - - i1029 i328 i333 - - - - - j690 - j312 - j325 - j318 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1266
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?1014 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1598 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?1014  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -324115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v173|DWORD - - - - - - - v174|DWORD v175|DWORD v176|DWORD - - - - - v168|QWORD - v156|QWORD - v165|QWORD - v161|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604882045167610941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1017 
y: i246 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1017 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
stamp: void
trueSuccessorProbability: 0.9996761815326328
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v365 
=== Usages ===
=== Predecessor ===
v1596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v361 #falseSuccessor: v365  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v173|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9996761815326328 condition: < trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4604879873373617018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v175|DWORD, v176|DWORD, v173|DWORD, v174|DWORD] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4553027692215940194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v173|DWORD, v174|DWORD] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" "B105" "B116" "B110" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i371 <|@
result v177|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i328 i8 i8 i8 
=== Succesors ===
=== Usages ===
?373 i377 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i328 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
result v178|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i333 i8 i8 i8 
=== Succesors ===
=== Usages ===
?373 i378 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i333 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1018 <|@
result v179|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v369 
values: i1017 i341 i1017 i777 
=== Succesors ===
=== Usages ===
i457 ?373 ?381 ?1003 ?443 i457 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i1017 i341 i1017 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1028 <|@
result v180|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i1029 i8 i1029 i7 
=== Succesors ===
=== Usages ===
i376 ?373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i1029 i8 i1029 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v368 v370 v691 v1035 
=== Succesors ===
next: v1603 
=== Usages ===
i371 i372 i1018 i1028 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v368 v370 v691 v1035 #next: v1603  <|@  <|@
f <@~|@floating>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
value: a1861 
=== Succesors ===
=== Usages ===
v1603 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1861  <|@  <|@
f <@*|@fixed>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1224 
=== Succesors ===
trueSuccessor: v1602 
falseSuccessor: v1600 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1224 #trueSuccessor: v1602 #falseSuccessor: v1600  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v177|DWORD, v178|DWORD, v179|DWORD, v180|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD[.], y: v114|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1601 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1601  <|@  <|@
tid ?373 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1018 - - - - - - - i1028 i371 i372 - - - - - j690 - j312 - j325 - j318 - 
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1018 - - - - - - - i1028 i371 i372 - - - - - j690 - j312 - j325 - j318 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1469
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: NullCheckException
speculation: Object[d.a@613009710]
stamp: void
=== Inputs ===
stateBefore: ?373 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1602 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@613009710] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -376075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v181|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v179|DWORD - - - - - - - v180|DWORD v177|DWORD v178|DWORD - - - - - v168|QWORD - v156|QWORD - v165|QWORD - v161|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1868 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1868 <|@
result v182|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1901 
=== Succesors ===
next: v374 
=== Usages ===
v1242 
=== Predecessor ===
v1600 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1901 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid a1223 <|@
result v183|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1024]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1861 
=== Succesors ===
=== Usages ===
v1906 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1861  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
i1868 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|DWORD = MOV [v114|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v180|DWORD, v177|DWORD, v178|DWORD, v168|QWORD, v165|QWORD] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B124" "B125" 
    successors "B121" "B128" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618510354942738279
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i376 <|@
result v184|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v375 
values: i1028 i438 i438 
=== Succesors ===
=== Usages ===
?381 i458 v1242 v1906 i438 i458 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i1028 i438 i438  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result v185|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v375 
values: i371 i7 i423 
=== Succesors ===
=== Usages ===
i459 v382 i459 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i371 i7 i423  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
result v186|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v375 
values: i372 i7 i428 
=== Succesors ===
=== Usages ===
i460 i460 v392 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i372 i7 i428  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
result v187|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v375 
values: j690 j694 j694 
=== Succesors ===
=== Usages ===
?381 v449 j446 j408 j410 j1850 v1853 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j690 j694 j694  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
result v188|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v375 
values: j325 j414 j414 
=== Succesors ===
=== Usages ===
?381 j412 j413 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j325 j414 j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 8.049710812116691
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v374 
=== Succesors ===
next: v391 
=== Usages ===
i376 i377 i378 j379 j380 v385 v397 v444 v994 v1607 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v374 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i8 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
trueSuccessorProbability: 0.9147424652848216
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v385 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v383 #falseSuccessor: v385  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v184|DWORD, v185|DWORD, v186|DWORD, v187|QWORD, v188|QWORD] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v185|DWORD, y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9147424652848216 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617928528835372735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 919]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i378 
y: i8 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i378 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
trueSuccessorProbability: 0.9573972653370932
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v393 #falseSuccessor: v397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|DWORD, y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9573972653370932 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617662580820830923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 924]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1608 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1608  <|@  <|@
tid ?381 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1018 - - - - - - - i376 i8 i8 - - - - - j379 - j312 - j380 - j318 - 
=== Succesors ===
=== Usages ===
j408 j410 v1605 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1018 - - - - - - - i376 i8 i8 - - - - - j379 - j312 - j380 - j318 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i376 
y: i1868 
=== Succesors ===
=== Usages ===
v1608 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i376 y: i1868  <|@  <|@
f <@*|@fixed>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1242 
=== Succesors ===
trueSuccessor: v1604 
falseSuccessor: v1607 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1242 #trueSuccessor: v1604 #falseSuccessor: v1607  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v182|DWORD, y: v184|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617662580820830923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: j408 
=== Usages ===
v1237 
=== Predecessor ===
v1608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j408 <|@
result v189|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 928]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?381 
x: j379 
y: j312 
=== Succesors ===
next: j410 
=== Usages ===
i409 
=== Predecessor ===
v1604 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?381 x: j379 y: j312 #next: j410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j410 <|@
result v190|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 939]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775806]
type: SIGNED
=== Inputs ===
stateBefore: ?381 
x: j379 
y: j312 
=== Succesors ===
next: v1237 
=== Usages ===
j693 j692 
=== Predecessor ===
j408 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?381 x: j379 y: j312 #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid v1906 <|@
result [v183|QWORD[.] + v184|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1223 
index: i376 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1223 index: i376  <|@  <|@
f <@~|@floating>@ <|@
tid i409 <|@
result v191|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 929]
resultBits: 32
stamp: i32
=== Inputs ===
value: j408 
=== Succesors ===
=== Usages ===
?1003 i439 ?443 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j408  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
result v192|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1036]
stamp: i32
=== Inputs ===
x: i409 
y: i234 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i409 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1037]
resultBits: 16
stamp: i16
=== Inputs ===
value: i439 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1237 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1604 
address: v1906 
value: i440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
j410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1604 address: v1906 value: i440 stateAfter: - lastLocationAccess: - #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid j692 <|@
result v193|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j410 
y: i160 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j410 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j693 <|@
result v194|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j410 
y: i7 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j410 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
result v195|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j692 
y: j693 
=== Succesors ===
=== Usages ===
j379 v422 j425 j379 ?443 ?1003 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j692 y: j693  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
result v196|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1029]
stamp: i32
=== Inputs ===
x: i376 
y: i7 
=== Succesors ===
=== Usages ===
?443 i376 ?1003 i376 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i376 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
result v197|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775792] ⇈fffffffffffffff0
=== Inputs ===
x: j380 
y: i160 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j380 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j413 <|@
result v198|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j380 
y: i7 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j380 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j414 <|@
result v199|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j412 
y: j413 
=== Succesors ===
=== Usages ===
j380 v417 ?443 v422 j425 j380 ?1003 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j412 y: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j414 
y: j280 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j414 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
stamp: void
trueSuccessorProbability: 3.497146646258553E-4
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v418 #falseSuccessor: v419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v187|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v179|DWORD - - - - - - - v184|DWORD int[0|0x0] int[0|0x0] - - - - - v187|QWORD - v156|QWORD - v188|QWORD - v161|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v156|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v190|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = MOV v189|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v192|DWORD = LEA [v191|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v183|QWORD[.] + v184|DWORD * 2 + 16], y: v192|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = SHL v190|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v194|QWORD = SHL v190|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v195|QWORD = ADD (x: v193|QWORD, y: v194|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v196|DWORD = INC v184|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = SHL v188|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = SHL v188|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v199|QWORD = ADD (x: v197|QWORD, y: v198|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v199|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.497146646258553E-4 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B120" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566203837736347339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:697) [bci: 1017]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1487 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1487  <|@  <|@
tid ?443 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1018 - - - - - - - i438 i7 i7 - - i409 - - j694 - j312 - j414 - j318 - 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1018 - - - - - - - i438 i7 i7 - - i409 - - j694 - j312 - j414 - j318 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?443 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?443 #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
loopBegin: v375 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v179|DWORD - - - - - - - v196|DWORD int[1|0x1] int[1|0x1] - - v191|DWORD - - v195|QWORD - v156|QWORD - v199|QWORD - v161|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v196|DWORD, int[1|0x1], int[1|0x1], v195|QWORD, v199|QWORD] destination: B124 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B120" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617660490729317885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 981]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1488 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1488  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j694 
y: j414 
=== Succesors ===
=== Usages ===
i423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j694 y: j414  <|@  <|@
f <@~|@floating>@ <|@
tid i423 <|@
result v200|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v422 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i377 ?1003 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v422 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
result v201|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1000]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j414 
y: j694 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j414 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j425 
=== Succesors ===
=== Usages ===
i428 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j425  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
result v202|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v427 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i378 ?1003 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v427 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1003 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1018 - - - - - - - i438 i423 i428 - - i409 - - j694 - j312 - j414 - j318 - 
=== Succesors ===
=== Usages ===
v1488 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1018 - - - - - - - i438 i423 i428 - - i409 - - j694 - j312 - j414 - j318 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1003 
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?1003 #next: v994  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v375 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1488 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v199|QWORD, y: v195|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v200|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = ADD (x: v199|QWORD, y: v195|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v201|QWORD, y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v179|DWORD - - - - - - - v196|DWORD v200|DWORD v202|DWORD - - v191|DWORD - - v195|QWORD - v156|QWORD - v199|QWORD - v161|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v196|DWORD, v200|DWORD, v202|DWORD, v195|QWORD, v199|QWORD] destination: B125 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v1605 
=== Usages ===
=== Predecessor ===
v1608 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v1605  <|@  <|@
f <@*|@fixed>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1478
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -378395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v179|DWORD - - - - - - - v184|DWORD int[0|0x0] int[0|0x0] - - - - - v187|QWORD - v156|QWORD - v188|QWORD - v161|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B195" 
    xhandlers
    flags 
    probability 4597678356755873395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v1847 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v1847  <|@  <|@
f <@~|@floating>@ <|@
tid j1850 <|@
result v203|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j379 
y: i7 
=== Succesors ===
=== Usages ===
j1849 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j379 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j1849 <|@
result v204|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j1850 
y: j318 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1850 y: j318  <|@  <|@
f <@~|@floating>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j379 
y: j278 
=== Succesors ===
=== Usages ===
i1852 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j379 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid i1852 <|@
result v205|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1853 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1851 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1853 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1851 <|@
result v205|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1852 
=== Succesors ===
=== Usages ===
i1731 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1852  <|@  <|@
f <@*|@fixed>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v203|QWORD = SHL v187|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v204|QWORD = SUB (x: v203|QWORD, ~y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v187|QWORD, y: v187|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|DWORD, v184|DWORD, v185|DWORD, v186|DWORD, v204|QWORD, v205|DWORD] destination: B127 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B195" 
    xhandlers
    flags 
    probability 4602829828404200769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
result v206|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j379 
y: i7 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j379 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
result v207|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j446 
y: j318 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j446 y: j318  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j379 
y: j278 
=== Succesors ===
=== Usages ===
i450 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j379 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
result v208|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v449 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1250 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v449 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1250 <|@
result v208|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i450 
=== Succesors ===
=== Usages ===
i1731 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i450  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|QWORD = SHL v187|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = SUB (x: v206|QWORD, ~y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v187|QWORD, y: v187|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v208|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|DWORD, v184|DWORD, v185|DWORD, v186|DWORD, v207|QWORD, v208|DWORD] destination: B128 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1827 
=== Usages ===
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1827  <|@  <|@
f <@~|@floating>@ <|@
tid i1828 <|@
result int[-310811|0xfffffffffffb41e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310811
stableDimension: 0
stamp: i32 [-310811] ⇊00000000fffb41e5 ⇈00000000fffb41e5
stampKind: i32
value: int[-310811|0xfffffffffffb41e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310811|0xfffffffffffb41e5]] destination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1825 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1825  <|@  <|@
f <@~|@floating>@ <|@
tid i1826 <|@
result int[-308763|0xfffffffffffb49e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -308763
stableDimension: 0
stamp: i32 [-308763] ⇊00000000fffb49e5 ⇈00000000fffb49e5
stampKind: i32
value: int[-308763|0xfffffffffffb49e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-308763|0xfffffffffffb49e5]] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B103" "B98" "B97" "B96" "B75" "B130" "B129" "B77" "B108" "B80" "B95" "B82" "B84" "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1812 <|@
result v209|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-363547 - -293907] ⇊00000000fffa00e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1809 
values: i1816 i1818 i1820 i1822 i1824 i1826 i1828 i1832 i1834 i1836 i1838 i1840 i1842 i1844 i1846 
=== Succesors ===
=== Usages ===
v1814 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1809 values: i1816 i1818 i1820 i1822 i1824 i1826 i1828 i1832 i1834 i1836 i1838 i1840 i1842 i1844 i1846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1815 v1817 v1819 v1821 v1823 v1825 v1827 v1831 v1833 v1835 v1837 v1839 v1841 v1843 v1845 
=== Succesors ===
next: v1814 
=== Usages ===
i1812 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1815 v1817 v1819 v1821 v1823 v1825 v1827 v1831 v1833 v1835 v1837 v1839 v1841 v1843 v1845 #next: v1814  <|@  <|@
f <@*|@fixed>@ <|@
tid v1814 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?980 
actionAndReason: i1812 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1809 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?980 actionAndReason: i1812 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v209|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v209|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:365] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B134" 
    xhandlers
    flags 
    probability 4583687782908329398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B134" 
    xhandlers
    flags 
    probability 4522045541653454144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B132" "B64" 
    successors "B135" "B138" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v191 v193 v970 
=== Succesors ===
next: a464 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v191 v193 v970 #next: a464  <|@  <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@feeaf89
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i889 i150 
=== Succesors ===
=== Usages ===
a464 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i889 i150  <|@  <|@
tid ?1711 <|@
d <@d|@=== Debug Properties ===
bci: 1074
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a464 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a464 <|@
result v210|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1074
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1267 
stateDuring: ?1711 
=== Succesors ===
next: v1928 
=== Usages ===
v1271 v1272 ?1712 v1928 
=== Predecessor ===
v192 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1267 stateDuring: ?1711 #next: v1928  <|@  <|@
tid ?465 <|@
d <@d|@=== Debug Properties ===
bci: 1077
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - a1743 
=== Succesors ===
=== Usages ===
v1928 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?465 
object: a464 
=== Succesors ===
next: i467 
=== Usages ===
=== Predecessor ===
a464 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?465 object: a464 #next: i467  <|@  <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@557b93bd
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.getNormalizationBias()>
=== Inputs ===
arguments: a464 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a464  <|@  <|@
tid ?1712 <|@
d <@d|@=== Debug Properties ===
bci: 1081
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 711
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - a464 - - - - - - - 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - a464 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i467 <|@
result v211|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1081
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.getNormalizationBias
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1271 
stateDuring: ?1712 
=== Succesors ===
next: a470 
=== Usages ===
?1715 v1272 ?1714 i472 ?475 i477 ?1713 i482 
=== Predecessor ===
v1928 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1271 stateDuring: ?1712 #next: a470  <|@  <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@3fd1e085
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a464 i467 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a464 i467  <|@  <|@
tid ?1713 <|@
d <@d|@=== Debug Properties ===
bci: 1090
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - i467 - - - - - - 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - i467 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a470 <|@
result v212|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1090
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1272 
stateDuring: ?1713 
=== Succesors ===
next: a474 
=== Usages ===
?1722 ?475 ?1721 ?486 v1278 ?1720 ?1719 ?1718 ?514 ?1717 ?1716 ?594 ?1715 ?555 v1284 ?1714 ?585 ?852 
=== Predecessor ===
i467 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1272 stateDuring: ?1713 #next: a474  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
result v213|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1102]
stamp: i32
=== Inputs ===
x: i149 
y: i467 
=== Succesors ===
=== Usages ===
v1273 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i149 y: i467  <|@  <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@4362a073
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>
=== Inputs ===
arguments: j121 i887 i472 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: j121 i887 i472  <|@  <|@
tid ?1714 <|@
d <@d|@=== Debug Properties ===
bci: 1103
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - - 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a474 <|@
result v214|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfMulPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1273 
stateDuring: ?1714 
=== Succesors ===
next: v1929 
=== Usages ===
a1476 ?1722 ?486 a1476 ?1721 v1351 ?1720 v1283 ?1719 ?514 ?1718 ?1717 ?594 ?1716 ?555 ?852 v1929 ?585 ?1715 v1278 v1279 v1284 v1374 v1914 v1907 v1908 ?815 
=== Predecessor ===
a470 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1273 stateDuring: ?1714 #next: v1929  <|@  <|@
tid ?475 <|@
d <@d|@=== Debug Properties ===
bci: 1106
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - - a1743 
=== Succesors ===
=== Usages ===
v1929 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?475 
object: a474 
=== Succesors ===
next: a480 
=== Usages ===
=== Predecessor ===
a474 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?475 object: a474 #next: a480  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
result v215|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1116]
stamp: i32
=== Inputs ===
x: i467 
y: i891 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i467 y: i891  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result v216|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1118]
stamp: i32
=== Inputs ===
x: i477 
y: i7 
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i477 y: i7  <|@  <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@390add71
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i945 i478 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i945 i478  <|@  <|@
tid ?1715 <|@
d <@d|@=== Debug Properties ===
bci: 1119
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 715
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i889 - - - - - - - - - - - a470 i467 a474 - - - - - 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i889 - - - - - - - - - - - a470 i467 a474 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a480 <|@
result v217|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1119
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1274 
stateDuring: ?1715 
=== Succesors ===
next: a485 
=== Usages ===
?1719 ?486 ?1718 v1279 ?1717 v1283 ?1716 ?514 a554 
=== Predecessor ===
v1929 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1274 stateDuring: ?1715 #next: a485  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result v218|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1132]
stamp: i32
=== Inputs ===
x: i150 
y: i467 
=== Succesors ===
=== Usages ===
i483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i467  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
result v219|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1134]
stamp: i32
=== Inputs ===
x: i482 
y: i7 
=== Succesors ===
=== Usages ===
v1275 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i482 y: i7  <|@  <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@30655796
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i949 i483 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i949 i483  <|@  <|@
tid ?1716 <|@
d <@d|@=== Debug Properties ===
bci: 1135
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a485 <|@
result v220|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1135
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1275 
stateDuring: ?1716 
=== Succesors ===
next: v1930 
=== Usages ===
v1283 ?1723 ?1722 v1351 ?1721 ?514 ?1720 ?1719 v1378 ?1718 ?555 ?852 ?620 ?1717 ?585 ?594 v1930 
=== Predecessor ===
a480 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1275 stateDuring: ?1716 #next: v1930  <|@  <|@
tid ?486 <|@
d <@d|@=== Debug Properties ===
bci: 1138
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - a1743 
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?486 
object: a485 
=== Succesors ===
next: i488 
=== Usages ===
=== Predecessor ===
a485 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?486 object: a485 #next: i488  <|@  <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@4cd7
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a474 a470 
=== Succesors ===
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a470  <|@  <|@
tid ?1717 <|@
d <@d|@=== Debug Properties ===
bci: 1147
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 724
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - - - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - - - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i488 <|@
result v221|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1147
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1278 
stateDuring: ?1717 
=== Succesors ===
next: i491 
=== Usages ===
?1719 ?1718 i516 v503 ?514 
=== Predecessor ===
v1930 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1278 stateDuring: ?1717 #next: i491  <|@  <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5637059c
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a474 a480 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a480  <|@  <|@
tid ?1718 <|@
d <@d|@=== Debug Properties ===
bci: 1156
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 725
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i491 <|@
result v222|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1156
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1279 
stateDuring: ?1718 
=== Succesors ===
next: i497 
=== Usages ===
v493 
=== Predecessor ===
i488 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1279 stateDuring: ?1718 #next: i497  <|@  <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3939ab7e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a485 a474 a480 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a485 a474 a480  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i491 
y: i8 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i491 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
result v223|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v493 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?1719 ?514 i546 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v493 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1719 <|@
d <@d|@=== Debug Properties ===
bci: 1175
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 726
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 - - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 - - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i497 <|@
result v224|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1175
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1283 
stateDuring: ?1719 
=== Succesors ===
next: v506 
=== Usages ===
v499 
=== Predecessor ===
i491 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1283 stateDuring: ?1719 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i497 
y: i7 
=== Succesors ===
=== Usages ===
i500 v512 i1848 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i497 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i488 
y: i8 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i488 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
trueSuccessorProbability: 0.10331442221558673
=== Inputs ===
condition: v503 
=== Succesors ===
trueSuccessor: v504 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
i497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v503 #trueSuccessor: v504 #falseSuccessor: v505  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v210|QWORD[.]] state [bci:1077] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v210|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v211|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - v211|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr   -1  <|@ instruction v212|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = ADD (x: v211|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v213|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v212|QWORD[.] v211|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v212|QWORD[.] v211|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [v214|QWORD[.]] state [bci:1106] <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = ADD (x: v211|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v216|DWORD = INC v215|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v216|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD - - - - - - - - - - - v212|QWORD[.] v211|DWORD v214|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = ADD (x: v99|DWORD, y: v211|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v219|DWORD = INC v218|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v78|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v219|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - - - - - - - - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr   -1  <|@ instruction v220|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - - - - - - - - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v220|QWORD[.]] state [bci:1138] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v212|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] - - - - - - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr   -1  <|@ instruction v221|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] - - - - v221|DWORD - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v222|DWORD, y: v222|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v220|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v223|DWORD - - - v221|DWORD - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v221|DWORD, y: v221|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10331442221558673 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4571459255254427360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1216]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1218]
stamp: void
trueSuccessorProbability: 0.3612716763005781
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v511 #falseSuccessor: v510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v224|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3612716763005781 condition: < trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B139" 
    xhandlers
    flags 
    probability 4564592581715046601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B136 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B142" 
    xhandlers
    flags 
    probability 4568290009319748956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:731) [bci: 1221]
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid i1854 <|@
result v225|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i777 
y: i17 
=== Succesors ===
=== Usages ===
i524 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|DWORD, int[0|0x0]] destination: B137 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4585378352466984997
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B136" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4585595532429988267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v507 v509 
=== Succesors ===
next: a1869 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v507 v509 #next: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1869 <|@
result v226|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1228]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1900 
=== Succesors ===
next: i1870 
=== Usages ===
v1921 v1920 
=== Predecessor ===
v508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1900 #next: i1870  <|@  <|@
f <@~|@floating>@ <|@
tid i500 <|@
result v227|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v499 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v499 trueValue: i7 falseValue: i8  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 1227
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 733
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 i500 - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
v1774 i1870 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 i500 - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1920 <|@
result [v226|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1869 
=== Succesors ===
=== Usages ===
i1870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1870 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v1920 
=== Succesors ===
next: v1628 
=== Usages ===
v1386 
=== Predecessor ===
a1869 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v1920 #next: v1628  <|@  <|@
f <@~|@floating>@ <|@
tid v1386 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1870 
y: i8 
=== Succesors ===
=== Usages ===
v1628 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1870 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1628 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1386 
=== Succesors ===
trueSuccessor: v1627 
falseSuccessor: v1625 
=== Usages ===
=== Predecessor ===
i1870 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1386 #trueSuccessor: v1627 #falseSuccessor: v1625  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v226|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v224|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v227|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v223|DWORD v227|DWORD - - v221|DWORD - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction CMP [v226|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1774 
=== Usages ===
=== Predecessor ===
v1628 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1774  <|@  <|@
f <@~|@floating>@ <|@
tid i1776 <|@
result int[-364827|0xfffffffffffa6ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -364827
stableDimension: 0
stamp: i32 [-364827] ⇊00000000fffa6ee5 ⇈00000000fffa6ee5
stampKind: i32
value: int[-364827|0xfffffffffffa6ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?514 
actionAndReason: i1776 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1627 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?514 actionAndReason: i1776 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -364827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v223|DWORD v227|DWORD - - v221|DWORD - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1227] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4585595532429988267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1391 
=== Usages ===
v1391 
=== Predecessor ===
v1628 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1391  <|@  <|@
f <@~|@floating>@ <|@
tid v1921 <|@
result [v226|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1869 
=== Succesors ===
=== Usages ===
v1391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1869  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
result v228|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1240]
stamp: i32
=== Inputs ===
x: i488 
y: i234 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i488 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1241]
resultBits: 16
stamp: i16
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
v1391 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1391 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1625 
address: v1921 
value: i517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v1625 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1625 address: v1921 value: i517 stateAfter: - lastLocationAccess: - #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v1391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = LEA [v221|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v226|DWORD[.] * 8 + 16], y: v228|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[1|0x1]] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B137" "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i524 <|@
result v229|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v522 
values: i1854 i777 
=== Succesors ===
=== Usages ===
?1725 v530 v537 i457 ?1724 ?555 ?852 ?636 ?1723 ?585 ?1722 ?594 ?1721 ?1720 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: i1854 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i525 <|@
result v230|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v522 
values: i8 i7 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v521 v523 
=== Succesors ===
next: v529 
=== Usages ===
i524 i525 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v521 v523 #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1245]
stamp: void
trueSuccessorProbability: 0.04001194386383995
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v527 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v527 #falseSuccessor: v528  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v229|DWORD, v230|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04001194386383995 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    probability 4565092964349806135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4585746689684238543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1248]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i243 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i524 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
stamp: void
trueSuccessorProbability: 0.2867807153965785
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v535 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v535 #falseSuccessor: v534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v229|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2867807153965785 condition: < trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    probability 4577561299409501925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4583625119891087916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1255]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i246 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i524 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
stamp: void
trueSuccessorProbability: 0.9952027911033581
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v538 #falseSuccessor: v540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v229|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9952027911033581 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    probability 4583586896217599341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid i1848 <|@
result v231|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v499 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v499 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v224|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v231|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v223|DWORD, v231|DWORD] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    probability 4549024654223368107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" "B143" "B148" "B145" 
    successors "B150" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i546 <|@
result v232|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v544 
values: i494 i8 i8 i8 
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i494 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
result v233|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v544 
values: i1848 i8 i8 i8 
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i1848 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v543 v545 v695 v696 
=== Succesors ===
next: v549 
=== Usages ===
i546 i547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v543 v545 v695 v696 #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v1914 <|@
result [v214|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a474 
index: - 
=== Succesors ===
=== Usages ===
a1878 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a474 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1908 <|@
result [v214|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a474 
index: - 
=== Succesors ===
=== Usages ===
i1874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a474 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1907 <|@
result [v214|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a474 
index: - 
=== Succesors ===
=== Usages ===
i1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a474 index: -  <|@  <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@23fa9228
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a474 a470 
=== Succesors ===
=== Usages ===
i580 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a470  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v232|DWORD, v233|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v230|DWORD, v232|DWORD, v233|DWORD, v217|QWORD[.]] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" "B178" 
    successors "B151" "B186" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604077143920223441
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i551 <|@
result v234|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v550 
values: i525 i599 
=== Succesors ===
=== Usages ===
?555 ?1720 ?636 ?1725 ?585 ?1724 ?594 i599 v1919 ?852 v1359 ?1723 ?620 ?1722 i458 ?1721 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i525 i599  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
result v235|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v550 
values: i546 i590 
=== Succesors ===
=== Usages ===
?1724 v556 ?636 i459 ?1725 ?1723 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i546 i590  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
result v236|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v550 
values: i547 i596 
=== Succesors ===
=== Usages ===
?1724 i460 v565 ?636 ?1725 ?1723 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i547 i596  <|@  <|@
f <@~|@floating>@ <|@
tid a554 <|@
result v237|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v550 
values: a480 a584 
=== Succesors ===
=== Usages ===
v1931 ?1720 v1288 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: a480 a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 16.228886899433018
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v549 
=== Succesors ===
next: v564 
=== Usages ===
i551 i552 i553 a554 v559 v570 v605 v1694 v1684 v1642 v1672 v1654 v1660 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v549 #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i553 
y: i8 
=== Succesors ===
=== Usages ===
v578 v610 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i553 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i552 
y: i8 
=== Succesors ===
=== Usages ===
v564 v617 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i552 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
trueSuccessorProbability: 0.9453137929132266
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v557 #falseSuccessor: v559  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v234|DWORD, v235|DWORD, v236|DWORD, v237|QWORD[.]] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v235|DWORD, y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9453137929132266 condition: = trueDestination: B150 -> B151 falseDestination: B150 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B185" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603754390061644612
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1273]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
trueSuccessorProbability: 0.9926666536987687
=== Inputs ===
condition: v565 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v570 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v565 #trueSuccessor: v566 #falseSuccessor: v570  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v236|DWORD, y: v236|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9926666536987687 condition: = trueDestination: B151 -> B152 falseDestination: B151 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603713476072174465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1931 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1931  <|@  <|@
tid ?555 <|@
d <@d|@=== Debug Properties ===
bci: 1268
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 744
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i8 i8 - - - - - a470 - a474 a1743 a485 - - - 
=== Succesors ===
=== Usages ===
v1931 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i8 i8 - - - - - a470 - a474 a1743 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?555 
object: a554 
=== Succesors ===
next: i580 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?555 object: a554 #next: i580  <|@  <|@
tid ?1720 <|@
d <@d|@=== Debug Properties ===
bci: 1282
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 745
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - - - - a470 - a474 a554 a485 - - - 
=== Succesors ===
=== Usages ===
i580 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - - - - a470 - a474 a554 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i580 <|@
result v238|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1282
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1284 
stateDuring: ?1720 
=== Succesors ===
next: a584 
=== Usages ===
?1722 ?585 ?1721 ?594 i600 ?852 
=== Predecessor ===
v1931 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1284 stateDuring: ?1720 #next: a584  <|@  <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@211e0474
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.multBy10()>
=== Inputs ===
arguments: a554 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a554  <|@  <|@
tid ?1721 <|@
d <@d|@=== Debug Properties ===
bci: 1312
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
result v239|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1312
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.multBy10
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1288 
stateDuring: ?1721 
=== Succesors ===
next: i1871 
=== Usages ===
v1909 ?852 ?1722 v1351 ?594 v1910 a554 v1911 ?815 
=== Predecessor ===
i580 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1288 stateDuring: ?1721 #next: i1871  <|@  <|@
tid ?585 <|@
d <@d|@=== Debug Properties ===
bci: 1315
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - a1743 
=== Succesors ===
=== Usages ===
i1871 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - a1743  <|@  <|@
f <@~|@floating>@ <|@
tid v1910 <|@
result [v239|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a584 
index: - 
=== Succesors ===
=== Usages ===
i1871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1871 <|@
result v240|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 15]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?585 
guard: - 
address: v1910 
=== Succesors ===
next: i1872 
=== Usages ===
i798 
=== Predecessor ===
a584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?585 guard: - address: v1910 #next: i1872  <|@  <|@
f <@~|@floating>@ <|@
tid v1909 <|@
result [v239|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a584 
index: - 
=== Succesors ===
=== Usages ===
i1872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1872 <|@
result v241|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 11]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1909 
=== Succesors ===
next: i1873 
=== Usages ===
i798 i814 
=== Predecessor ===
i1871 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1909 #next: i1873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1873 <|@
result v242|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1907 
=== Succesors ===
next: i1874 
=== Usages ===
i795 i813 
=== Predecessor ===
i1872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1907 #next: i1874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1874 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1908 
=== Succesors ===
next: v802 
=== Usages ===
i795 
=== Predecessor ===
i1873 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1908 #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid i798 <|@
result v243|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1871 
y: i1872 
=== Succesors ===
=== Usages ===
v799 v804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1871 y: i1872  <|@  <|@
f <@~|@floating>@ <|@
tid i795 <|@
result v244|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1873 
y: i1874 
=== Succesors ===
=== Usages ===
v799 v804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1873 y: i1874  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i798 
y: i795 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i798 y: i795  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.23168656987595593
=== Inputs ===
condition: v799 
=== Succesors ===
trueSuccessor: v800 
falseSuccessor: v801 
=== Usages ===
=== Predecessor ===
i1874 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v799 #trueSuccessor: v800 #falseSuccessor: v801  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD int[0|0x0] int[0|0x0] - - - - - v212|QWORD[.] - v214|QWORD[.] Object[null] v220|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v237|QWORD[.]] state [bci:1268] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v212|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - - - - v212|QWORD[.] - v214|QWORD[.] v237|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr   -1  <|@ instruction v238|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v237|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] - v220|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr   -1  <|@ instruction v239|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: Object[null] 
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] - v220|QWORD[.] - - - 
>@ <|@ instruction v240|DWORD = MOV [v239|QWORD[.] + 12] size: DWORD state [bci:1315] <|@ <|@
      nr   -1  <|@ instruction v241|DWORD = MOV [v239|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v242|DWORD = MOV [v214|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v243|DWORD = ADD (x: v240|DWORD, y: v241|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v244|DWORD = ADD (x: v242|DWORD, ~y: [v214|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v244|DWORD, y: v243|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.23168656987595593 condition: > trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594300578921775959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:951) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v854  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B153 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" "B156" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602181853656081750
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i795 
y: i798 
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i795 y: i798  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 4.944535213690093E-4
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v805 
falseSuccessor: v806 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v805 #falseSuccessor: v806  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v243|DWORD, y: v244|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.944535213690093E-4 condition: > trueDestination: B154 -> B155 falseDestination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4552749834017755928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:953) [bci: 32]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v805 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff]] destination: B155 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602177645741042236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:955) [bci: 34]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v811  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v806 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v242|DWORD, v241|DWORD] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B175" 
    successors "B158" "B169" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4602240215608151533
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i813 <|@
result v245|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v812 
values: i1873 i826 
=== Succesors ===
=== Usages ===
?815 v816 i826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v812 values: i1873 i826  <|@  <|@
f <@~|@floating>@ <|@
tid i814 <|@
result v246|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v812 
values: i1872 i829 
=== Succesors ===
=== Usages ===
?815 i863 v842 i829 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v812 values: i1872 i829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0073559460563954
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v811 
=== Succesors ===
next: a1875 
=== Usages ===
i813 i814 v817 v833 v838 v1659 v1683 v1671 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v811 #next: a1875  <|@  <|@
f <@~|@floating>@ <|@
tid v1911 <|@
result [v239|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a584 
index: - 
=== Succesors ===
=== Usages ===
a1875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1875 <|@
result v247|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 69]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1911 
=== Succesors ===
next: v822 
=== Usages ===
v1912 a1305 
=== Predecessor ===
v812 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1911 #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v1912 <|@
result [v247|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1875 
=== Succesors ===
=== Usages ===
i1876 i1880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1875  <|@  <|@
f <@~|@floating>@ <|@
tid a1305 <|@
result v248|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 135]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1875 
=== Succesors ===
=== Usages ===
v1913 ?864 v1917 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1875  <|@  <|@
tid ?852 <|@
d <@d|@=== Debug Properties ===
bci: 1321
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 748
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 a584 a485 - - - 
=== Succesors ===
=== Usages ===
?815 ?880 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 a584 a485 - - -  <|@  <|@
tid ?815 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 957
stackSize: 0
=== Inputs ===
outerFrameState: ?852 
values: a474 a584 - - i813 i814 - - 
=== Succesors ===
=== Usages ===
v1790 i1879 i1880 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?852 values: a474 a584 - - i813 i814 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i814 
y: i7 
=== Succesors ===
=== Usages ===
v1643 v1661 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i814 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i813 
y: i7 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i813 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.007302231237322543
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v821 
=== Usages ===
=== Predecessor ===
a1875 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v817 #falseSuccessor: v821  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v245|DWORD, v246|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v247|DWORD[.] = MOV [v239|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v248|QWORD[.] = UNCOMPRESSPOINTER (input: v247|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v245|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007302231237322543 condition: < trueDestination: B157 -> B158 falseDestination: B157 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570155365516302698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:964) [bci: 114]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1643 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1643  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v1642 
falseSuccessor: v1639 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v1642 #falseSuccessor: v1639  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v246|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1786 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1786  <|@  <|@
f <@~|@floating>@ <|@
tid i1787 <|@
result int[-333075|0xfffffffffffaeaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333075
stableDimension: 0
stamp: i32 [-333075] ⇊00000000fffaeaed ⇈00000000fffaeaed
stampKind: i32
value: int[-333075|0xfffffffffffaeaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1785 
=== Predecessor ===
v1642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333075|0xfffffffffffaeaed]] destination: B159 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570155365516302698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v861  <|@  <|@
f <@*|@fixed>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
v1639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v246|DWORD] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B165" 
    successors "B162" "B163" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4571989317480343110
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i863 <|@
result v249|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v862 
values: i814 i870 
=== Succesors ===
=== Usages ===
?864 v865 i870 j1887 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v862 values: i814 i870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.3333333333333333
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v861 
=== Succesors ===
next: v869 
=== Usages ===
i863 v866 v873 v874 v1653 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v861 #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i863 
y: i7 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i863 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v865 
=== Succesors ===
trueSuccessor: v866 
falseSuccessor: v868 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v865 #trueSuccessor: v866 #falseSuccessor: v868  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v249|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v249|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567485717852972614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:928) [bci: 15]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v862 
=== Succesors ===
next: v1092 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v862 #next: v1092  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v866 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B162 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" "B167" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567485717852972614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 4]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1876 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1876  <|@  <|@
tid ?880 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 968
stackSize: 0
=== Inputs ===
outerFrameState: ?852 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?864 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?852 values: - - - - - - - -  <|@  <|@
tid ?864 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.checkZeroTail(int[], int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 923
stackSize: 0
=== Inputs ===
outerFrameState: ?880 
values: a1305 i863 
=== Succesors ===
=== Usages ===
v1806 i1876 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?880 values: a1305 i863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1876 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?864 
guard: - 
address: v1912 
=== Succesors ===
next: v1655 
=== Usages ===
v1311 
=== Predecessor ===
v868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?864 guard: - address: v1912 #next: v1655  <|@  <|@
f <@~|@floating>@ <|@
tid i870 <|@
result v250|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 5]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i863 
y: i17 
=== Succesors ===
=== Usages ===
i863 v1311 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i863 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1311 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i870 
y: i1876 
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i870 y: i1876  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1311 
=== Succesors ===
trueSuccessor: v1650 
falseSuccessor: v1653 
=== Usages ===
=== Predecessor ===
i1876 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1311 #trueSuccessor: v1650 #falseSuccessor: v1653  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v250|DWORD = DEC v249|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: v248|QWORD[.] v249|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v250|DWORD, y: [v247|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140, 1321] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B163 -> B164 falseDestination: B163 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B165" "B166" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567485717852972614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1877 
=== Usages ===
i1877 
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1877  <|@  <|@
f <@~|@floating>@ <|@
tid j1887 <|@
result v251|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i863 
=== Succesors ===
=== Usages ===
v1913 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i863  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
result [v248|QWORD[.] + v251|QWORD * 4 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a1305 
index: j1887 
=== Succesors ===
=== Usages ===
i1877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1305 index: j1887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1877 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1650 
address: v1913 
=== Succesors ===
next: v877 
=== Usages ===
v872 
=== Predecessor ===
v1650 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1650 address: v1913 #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 10]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1877 
y: i8 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1877 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 10]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v872 
=== Succesors ===
trueSuccessor: v876 
falseSuccessor: v874 
=== Usages ===
=== Predecessor ===
i1877 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v872 #trueSuccessor: v876 #falseSuccessor: v874  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v251|QWORD = MOVSXD v249|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v248|QWORD[.] + v251|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B161" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4562982118225602118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v873  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
loopBegin: v862 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v862  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v250|DWORD] destination: B165 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562982118225602118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:925) [bci: 13]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v862 
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v862 #next: v858  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff]] destination: B166 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v862 
=== Succesors ===
next: v1654 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v862 #next: v1654  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1806 
=== Usages ===
=== Predecessor ===
v1653 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1806  <|@  <|@
f <@~|@floating>@ <|@
tid i1808 <|@
result int[-335899|0xfffffffffffadfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -335899
stableDimension: 0
stamp: i32 [-335899] ⇊00000000fffadfe5 ⇈00000000fffadfe5
stampKind: i32
value: int[-335899|0xfffffffffffadfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1806 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?864 
actionAndReason: i1808 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?864 actionAndReason: i1808 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -335899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: v248|QWORD[.] v249|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0, 140, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B170" "B172" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 51]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1661 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1661  <|@  <|@
f <@*|@fixed>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v1659 
falseSuccessor: v1656 
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v1659 #falseSuccessor: v1656  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v246|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B169 -> B170 falseDestination: B169 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1660 
=== Usages ===
=== Predecessor ===
v1661 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1660  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1791 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1791  <|@  <|@
f <@~|@floating>@ <|@
tid i1792 <|@
result int[-337683|0xfffffffffffad8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -337683
stableDimension: 0
stamp: i32 [-337683] ⇊00000000fffad8ed ⇈00000000fffad8ed
stampKind: i32
value: int[-337683|0xfffffffffffad8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1785 
=== Predecessor ===
v1660 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-337683|0xfffffffffffad8ed]] destination: B171 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B173" "B182" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1878 
=== Usages ===
=== Predecessor ===
v1661 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1878 <|@
result v252|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1914 
=== Succesors ===
next: i1879 
=== Usages ===
a1322 v1915 
=== Predecessor ===
v1656 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1914 #next: i1879  <|@  <|@
f <@~|@floating>@ <|@
tid v1915 <|@
result [v252|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
i1879 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1879 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?815 
guard: - 
address: v1915 
=== Succesors ===
next: v1673 
=== Usages ===
v1328 
=== Predecessor ===
a1878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?815 guard: - address: v1915 #next: v1673  <|@  <|@
f <@~|@floating>@ <|@
tid i826 <|@
result v253|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i813 
y: i17 
=== Succesors ===
=== Usages ===
i813 v1916 v1328 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i813 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1328 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i826 
y: i1879 
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i826 y: i1879  <|@  <|@
f <@*|@fixed>@ <|@
tid v1673 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1328 
=== Succesors ===
trueSuccessor: v1668 
falseSuccessor: v1671 
=== Usages ===
=== Predecessor ===
i1879 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1328 #trueSuccessor: v1668 #falseSuccessor: v1671  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v252|DWORD[.] = MOV [v214|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v253|DWORD = DEC v245|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v214|QWORD[.] v239|QWORD[.] - - v245|DWORD v246|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v253|DWORD, y: [v252|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B172 -> B173 falseDestination: B172 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B180" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1880 
=== Usages ===
i1881 
=== Predecessor ===
v1673 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1880 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?815 
guard: - 
address: v1912 
=== Succesors ===
next: v1685 
=== Usages ===
v1343 
=== Predecessor ===
v1668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?815 guard: - address: v1912 #next: v1685  <|@  <|@
f <@~|@floating>@ <|@
tid i829 <|@
result v254|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i814 
y: i17 
=== Succesors ===
=== Usages ===
i814 v1917 v1343 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i814 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i829 
y: i1880 
=== Succesors ===
=== Usages ===
v1685 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i829 y: i1880  <|@  <|@
f <@*|@fixed>@ <|@
tid v1685 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1343 
=== Succesors ===
trueSuccessor: v1680 
falseSuccessor: v1683 
=== Usages ===
=== Predecessor ===
i1880 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1343 #trueSuccessor: v1680 #falseSuccessor: v1683  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v254|DWORD = DEC v246|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v214|QWORD[.] v239|QWORD[.] - - v245|DWORD v246|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v254|DWORD, y: [v247|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B173 -> B174 falseDestination: B173 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1881 
=== Usages ===
i1882 
=== Predecessor ===
v1685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1881  <|@  <|@
f <@~|@floating>@ <|@
tid a1322 <|@
result v255|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1878 
=== Succesors ===
=== Usages ===
v1916 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1878  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
result [v255|QWORD[.] + v253|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1322 
index: i826 
=== Succesors ===
=== Usages ===
i1881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1322 index: i826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1881 <|@
result v256|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1668 
address: v1916 
=== Succesors ===
next: i1882 
=== Usages ===
v831 v850 
=== Predecessor ===
v1680 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1668 address: v1916 #next: i1882  <|@  <|@
f <@~|@floating>@ <|@
tid v1917 <|@
result [v248|QWORD[.] + v254|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1305 
index: i829 
=== Succesors ===
=== Usages ===
i1882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1305 index: i829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1882 <|@
result v257|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1680 
address: v1917 
=== Succesors ===
next: v837 
=== Usages ===
v831 v850 
=== Predecessor ===
i1881 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1680 address: v1917 #next: v837  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1881 
y: i1882 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1881 y: i1882  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0073559460563955865
=== Inputs ===
condition: v831 
=== Succesors ===
trueSuccessor: v832 
falseSuccessor: v833 
=== Usages ===
=== Predecessor ===
i1882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v831 #trueSuccessor: v832 #falseSuccessor: v833  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v255|QWORD[.] = UNCOMPRESSPOINTER (input: v252|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v256|DWORD = MOV [v255|QWORD[.] + v253|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v257|DWORD = MOV [v248|QWORD[.] + v254|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v257|DWORD, y: v256|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0073559460563955865 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B157" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4570155365516302668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:963) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v838  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
loopBegin: v812 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v812  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v253|DWORD, v254|DWORD] destination: B175 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602115075873932936
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1881 
y: i1882 
=== Succesors ===
=== Usages ===
i851 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1881 y: i1882  <|@  <|@
f <@~|@floating>@ <|@
tid i851 <|@
result v258|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32 [-1 - 1] ⇊0000000000000001
=== Inputs ===
condition: v850 
trueValue: i17 
falseValue: i7 
=== Succesors ===
=== Usages ===
i855 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v850 trueValue: i17 falseValue: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v257|DWORD, y: v256|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v259|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v258|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v259|DWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v258|DWORD] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B153" "B155" "B176" "B166" "B162" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603713476072174464
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i855 <|@
result v260|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 1]
valueDescription: i32
=== Inputs ===
merge: v853 
values: i7 i17 i851 i17 i8 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v853 values: i7 i17 i851 i17 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v854 v856 v857 v858 v1092 
=== Succesors ===
next: i593 
=== Usages ===
i855 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v854 v856 v857 v858 v1092 #next: i593  <|@  <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@4f6bee2e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a485 a474 a584 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a485 a474 a584  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i855 
y: i8 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i855 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
result v261|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v589 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?594 ?1722 i552 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v589 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1722 <|@
d <@d|@=== Debug Properties ===
bci: 1340
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i593 <|@
result v262|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1340
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1351 
stateDuring: ?1722 
=== Succesors ===
next: a1883 
=== Usages ===
?594 v595 
=== Predecessor ===
v853 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1351 stateDuring: ?1722 #next: a1883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1883 <|@
result v263|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1900 
=== Succesors ===
next: i1884 
=== Usages ===
a1353 v1918 
=== Predecessor ===
i593 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1900 #next: i1884  <|@  <|@
tid ?594 <|@
d <@d|@=== Debug Properties ===
bci: 1343
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - i593 
=== Succesors ===
=== Usages ===
v1782 i1884 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - i593  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
result [v263|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1883 
=== Succesors ===
=== Usages ===
i1884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1884 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?594 
guard: - 
address: v1918 
=== Succesors ===
next: v1695 
=== Usages ===
v1359 
=== Predecessor ===
a1883 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?594 guard: - address: v1918 #next: v1695  <|@  <|@
f <@~|@floating>@ <|@
tid v1359 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i551 
y: i1884 
=== Succesors ===
=== Usages ===
v1695 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i551 y: i1884  <|@  <|@
f <@*|@fixed>@ <|@
tid v1695 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1359 
=== Succesors ===
trueSuccessor: v1691 
falseSuccessor: v1694 
=== Usages ===
=== Predecessor ===
i1884 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1359 #trueSuccessor: v1691 #falseSuccessor: v1694  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v260|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v260|DWORD, y: v260|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v261|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v220|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v239|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v261|DWORD - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr   -1  <|@ instruction v262|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v263|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v262|DWORD 
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v261|DWORD - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v234|DWORD, y: [v263|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B150" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603713476072174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1367 
=== Usages ===
v1367 
=== Predecessor ===
v1695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid a1353 <|@
result v264|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1883 
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1883  <|@  <|@
f <@~|@floating>@ <|@
tid v1919 <|@
result [v264|QWORD[.] + v234|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1353 
index: i551 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1353 index: i551  <|@  <|@
f <@~|@floating>@ <|@
tid i600 <|@
result v265|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1366]
stamp: i32
=== Inputs ===
x: i580 
y: i234 
=== Succesors ===
=== Usages ===
i601 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i580 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i601 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1367]
resultBits: 16
stamp: i16
=== Inputs ===
value: i600 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1367 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1691 
address: v1919 
value: i601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v1691 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1691 address: v1919 value: i601 stateAfter: - lastLocationAccess: - #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i593 
y: i7 
=== Succesors ===
=== Usages ===
i596 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i593 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
result v266|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v595 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v595 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
result v267|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1359]
stamp: i32
=== Inputs ===
x: i551 
y: i7 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i551 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
loopBegin: v550 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|QWORD[.] = UNCOMPRESSPOINTER (input: v263|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v265|DWORD = LEA [v238|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v264|QWORD[.] + v234|DWORD * 2 + 16], y: v265|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v262|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v266|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v267|DWORD = INC v234|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v267|DWORD, v261|DWORD, v266|DWORD, v239|QWORD[.]] destination: B178 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1782 
=== Usages ===
=== Predecessor ===
v1695 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1782  <|@  <|@
f <@~|@floating>@ <|@
tid i1784 <|@
result int[-348187|0xfffffffffffaafe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -348187
stableDimension: 0
stamp: i32 [-348187] ⇊00000000fffaafe5 ⇈00000000fffaafe5
stampKind: i32
value: int[-348187|0xfffffffffffaafe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?594 
actionAndReason: i1784 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1694 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?594 actionAndReason: i1784 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -348187 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v262|DWORD 
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v261|DWORD - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1684 
=== Usages ===
=== Predecessor ===
v1685 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1684  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1799 
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1799  <|@  <|@
f <@~|@floating>@ <|@
tid i1800 <|@
result int[-344091|0xfffffffffffabfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -344091
stableDimension: 0
stamp: i32 [-344091] ⇊00000000fffabfe5 ⇈00000000fffabfe5
stampKind: i32
value: int[-344091|0xfffffffffffabfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1785 
=== Predecessor ===
v1684 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-344091|0xfffffffffffabfe5]] destination: B181 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1672 
=== Usages ===
=== Predecessor ===
v1673 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1672  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1795 
=== Usages ===
=== Predecessor ===
v1671 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1795  <|@  <|@
f <@~|@floating>@ <|@
tid i1796 <|@
result int[-340251|0xfffffffffffacee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -340251
stableDimension: 0
stamp: i32 [-340251] ⇊00000000fffacee5 ⇈00000000fffacee5
stampKind: i32
value: int[-340251|0xfffffffffffacee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1785 
=== Predecessor ===
v1672 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-340251|0xfffffffffffacee5]] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B159" "B171" "B183" "B181" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1788 <|@
result v268|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-344091 - -333075] ⇊00000000fffa80e5 ⇈00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v1785 
values: i1787 i1792 i1796 i1800 
=== Succesors ===
=== Usages ===
v1790 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1785 values: i1787 i1792 i1796 i1800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1786 v1791 v1795 v1799 
=== Succesors ===
next: v1790 
=== Usages ===
i1788 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1786 v1791 v1795 v1799 #next: v1790  <|@  <|@
f <@*|@fixed>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?815 
actionAndReason: i1788 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1785 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?815 actionAndReason: i1788 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v268|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v268|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v214|QWORD[.] v239|QWORD[.] - - v245|DWORD v246|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:46, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B187" 
    xhandlers
    flags 
    probability 4571887012805861801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v569  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B185 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B187" 
    xhandlers
    flags 
    probability 4585324882773055691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v567 v569 
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v567 v569 #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1374]
stamp: void
trueSuccessorProbability: 0.056102655923604895
=== Inputs ===
condition: v565 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v565 #trueSuccessor: v608 #falseSuccessor: v609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v236|DWORD, y: v236|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.056102655923604895 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B192" 
    xhandlers
    flags 
    probability 4567369521956602247
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v214|QWORD[.]] destination: B188 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    probability 4585653062890184936
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1377]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1379]
stamp: void
trueSuccessorProbability: 0.11919064179576351
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v615 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v616 #falseSuccessor: v615  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v235|DWORD, y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.11919064179576351 condition: = trueDestination: B189 -> B190 falseDestination: B189 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    probability 4571887012805861812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v214|QWORD[.]] destination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    probability 4584998439058662577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a619 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a619  <|@  <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@3bfdcee6
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a474 i7 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 i7  <|@  <|@
tid ?1723 <|@
d <@d|@=== Debug Properties ===
bci: 1385
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a619 <|@
result v269|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1385
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1374 
stateDuring: ?1723 
=== Succesors ===
next: v1932 
=== Usages ===
v1378 a1476 ?1724 v1932 
=== Predecessor ===
v615 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1374 stateDuring: ?1723 #next: v1932  <|@  <|@
tid ?620 <|@
d <@d|@=== Debug Properties ===
bci: 1388
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - a1743 
=== Succesors ===
=== Usages ===
v1932 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?620 
object: a619 
=== Succesors ===
next: i622 
=== Usages ===
=== Predecessor ===
a619 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?620 object: a619 #next: i622  <|@  <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@4c617063
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a619 a485 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a619 a485  <|@  <|@
tid ?1724 <|@
d <@d|@=== Debug Properties ===
bci: 1394
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 754
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - a619 - - - - - 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - a619 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i622 <|@
result v270|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1394
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1378 
stateDuring: ?1724 
=== Succesors ===
next: v627 
=== Usages ===
j624 
=== Predecessor ===
v1932 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1378 stateDuring: ?1724 #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid j624 <|@
result v271|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1397]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
j630 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i622  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
i622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v235|DWORD v236|DWORD - - - - - - - - - v220|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr   -1  <|@ instruction v269|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v235|DWORD v236|DWORD - - - - - - - - - v220|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v269|QWORD[.]] state [bci:1388] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v269|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v220|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v235|DWORD v236|DWORD - - - - - - - v269|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr   -1  <|@ instruction v270|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v271|QWORD = MOVSXD v270|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v271|QWORD, v269|QWORD[.]] destination: B191 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" "B188" "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j630 <|@
result v272|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v628 
values: j624 j278 j278 
=== Succesors ===
=== Usages ===
?1725 ?636 j461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: j624 j278 j278  <|@  <|@
f <@~|@floating>@ <|@
tid a1476 <|@
result v273|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: a!# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v628 
values: a619 a474 a474 
=== Succesors ===
=== Usages ===
v1371 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: a619 a474 a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v627 v629 v697 
=== Succesors ===
next: i635 
=== Usages ===
j630 a1476 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v627 v629 v697 #next: i635  <|@  <|@
f <@~|@floating>@ <|@
tid a633 <|@
result v274|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1409]
rawvalue: FDBigInteger@241972498
stableDimension: 0
stamp: a!# Lsun/misc/FDBigInteger;
stampKind: a -
value: Object[FDBigInteger@241972498]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1d0df03f
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a1476 a633 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1476 a633  <|@  <|@
tid ?1725 <|@
d <@d|@=== Debug Properties ===
bci: 1412
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i635 <|@
result v275|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1412
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1371 
stateDuring: ?1725 
=== Succesors ===
next: v1703 
=== Usages ===
v637 
=== Predecessor ===
v628 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1371 stateDuring: ?1725 #next: v1703  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i635 
y: i8 
=== Succesors ===
=== Usages ===
v1703 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i635 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v637 
=== Succesors ===
trueSuccessor: v1702 
falseSuccessor: v1700 
=== Usages ===
=== Predecessor ===
i635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v637 #trueSuccessor: v1702 #falseSuccessor: v1700  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v272|QWORD, v273|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v274|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v273|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v274|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v235|DWORD v236|DWORD v272|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr   -1  <|@ instruction v275|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v275|DWORD, y: v275|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B192 -> B193 falseDestination: B192 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1701 
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1701  <|@  <|@
tid ?636 <|@
d <@d|@=== Debug Properties ===
bci: 1415
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 i8 
=== Succesors ===
=== Usages ===
v1701 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1471
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?636 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1702 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -376595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: v0|QWORD[.] int[0|0x0] 
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v235|DWORD v236|DWORD v272|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v229|DWORD, v234|DWORD, v235|DWORD, v236|DWORD, v272|QWORD, byte[0|0x0]] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B92" "B128" "B194" "B127" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4605327053094328613
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i457 <|@
result v276|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v455 
values: i777 i1018 i524 i1018 
=== Succesors ===
=== Usages ===
?650 i644 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i777 i1018 i524 i1018  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
result v277|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v455 
values: i702 i376 i551 i376 
=== Succesors ===
=== Usages ===
?650 v1398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i702 i376 i551 i376  <|@  <|@
f <@~|@floating>@ <|@
tid i459 <|@
result v278|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v455 
values: i7 i377 i552 i377 
=== Succesors ===
=== Usages ===
v655 ?650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i7 i377 i552 i377  <|@  <|@
f <@~|@floating>@ <|@
tid i460 <|@
result v279|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v455 
values: i8 i378 i553 i378 
=== Succesors ===
=== Usages ===
v651 ?650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i8 i378 i553 i378  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
result v280|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v455 
values: j301 j447 j630 j1849 
=== Succesors ===
=== Usages ===
v660 v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: j301 j447 j630 j1849  <|@  <|@
f <@~|@floating>@ <|@
tid i1731 <|@
result v281|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i8 [0 - 1] ⇈0000000000000001
valueDescription: i8
=== Inputs ===
merge: v455 
values: i1204 i1250 i1405 i1851 
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i1204 i1250 i1405 i1851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v454 v456 v642 v1847 
=== Succesors ===
next: v1733 
=== Usages ===
i457 i458 i459 i460 j461 i1731 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v454 v456 v642 v1847 #next: v1733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 722]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1891 
value: i1731 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1393 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1891 value: i1731 stateAfter: - lastLocationAccess: - #next: v1393  <|@  <|@
f <@~|@floating>@ <|@
tid v1922 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i644 <|@
result v282|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1430]
stamp: i32
=== Inputs ===
x: i457 
y: i7 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i457 y: i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1431]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1922 
value: i644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1395 
=== Usages ===
=== Predecessor ===
v1733 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1922 value: i644 stateAfter: - lastLocationAccess: - #next: v1395  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:761) [bci: 1436]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1923 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1398 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1923 value: i8 stateAfter: - lastLocationAccess: - #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid v1924 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1924 
value: i458 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1924 value: i458 stateAfter: - lastLocationAccess: - #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i460 
y: i8 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i460 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
trueSuccessorProbability: 0.5799198372453163
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v652 
falseSuccessor: v653 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v652 #falseSuccessor: v653  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v276|DWORD, v277|DWORD, v278|DWORD, v279|DWORD, v280|QWORD, v281|DWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: v281|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v282|DWORD = INC v276|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v282|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v277|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v279|DWORD, y: v279|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5799198372453163 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors 
    xhandlers
    flags 
    probability 4601966600213449805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4599680306720466429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1450]
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i459 
y: i8 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i459 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
trueSuccessorProbability: 0.7217825002710615
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v656 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v656 #falseSuccessor: v657  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v278|DWORD, y: v278|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7217825002710615 condition: = trueDestination: B197 -> B198 falseDestination: B197 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors 
    xhandlers
    flags 
    probability 4597841950257931132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1504]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@d87672e
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1726 <|@
d <@d|@=== Debug Properties ===
bci: 1505
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
bci: 1505
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1399 
stateDuring: ?1726 
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1399 stateDuring: ?1726 #next: v701  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B200" "B201" 
    xhandlers
    flags 
    probability 4591351307938615547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1455]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1707 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1707  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j278 
=== Succesors ===
=== Usages ===
v1707 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j461 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v1706 
falseSuccessor: v1704 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v1706 #falseSuccessor: v1704  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v280|QWORD, y: v280|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1705 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1705  <|@  <|@
tid ?650 <|@
d <@d|@=== Debug Properties ===
bci: 1445
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 766
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i457 - - - - - - - i458 i459 i460 j278 - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i457 - - - - - - - i458 i459 i460 j278 - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1400
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?650 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?650  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -358419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: v0|QWORD[.] - - - - - - - - v276|DWORD - - - - - - - v277|DWORD v278|DWORD v279|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B202" "B203" 
    xhandlers
    flags 
    probability 4591351307938615547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j280 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j461 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
stamp: void
trueSuccessorProbability: 0.37802026500389707
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v667 #falseSuccessor: v666  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v280|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.37802026500389707 condition: < trueDestination: B201 -> B202 falseDestination: B201 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 4585216378835628493
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 4588479037786861609
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1497]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@58d81286
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1727 <|@
d <@d|@=== Debug Properties ===
bci: 1498
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 775
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
bci: 1498
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1401 
stateDuring: ?1727 
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1401 stateDuring: ?1727 #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1757 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1757  <|@  <|@
f <@~|@floating>@ <|@
tid i1758 <|@
result int[-359187|0xfffffffffffa84ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -359187
stableDimension: 0
stamp: i32 [-359187] ⇊00000000fffa84ed ⇈00000000fffa84ed
stampKind: i32
value: int[-359187|0xfffffffffffa84ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
v1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-359187|0xfffffffffffa84ed]] destination: B204 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B30" "B204" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1754 <|@
result v283|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-359443 - -358931] ⇊00000000fffa80ed ⇈00000000fffa87ed
valueDescription: i32
=== Inputs ===
merge: v1751 
values: i1753 i1758 i1760 
=== Succesors ===
=== Usages ===
v1756 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1751 values: i1753 i1758 i1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1752 v1757 v1759 
=== Succesors ===
next: v1756 
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1752 v1757 v1759 #next: v1756  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 174
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 515
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i1044 - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1756 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i1044 - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?90 
actionAndReason: i1754 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?90 actionAndReason: i1754 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v283|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v283|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD v25|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1ffd8396 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = TZCNT v2|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v8|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604721403427327083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9996262583639761 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604718956845853292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607179052434631948
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -21 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 6.874510040402823E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607172862740671949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5135895145912284 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602796314746464677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v8|DWORD, ~y: [v5|QWORD[.] + v11|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9987311433807979 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602790451239230686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4020092226613966 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599191351894436866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605327053094328611
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND (x: v2|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = OR (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMOVQ v29|QWORD nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VSUBSD (x: v30|DOUBLE, y: v32|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v31|DOUBLE, y: v34|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v36|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr   -1  <|@ instruction v35|DOUBLE = VADDSD (x: v33|DOUBLE, y: v36|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v37|DOUBLE = VCVTSI2SD v1|DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = VMULSD (x: v37|DOUBLE, y: v39|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v40|DOUBLE = VADDSD (x: v35|DOUBLE, y: v38|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = VMOVQ v40|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND (x: v41|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = SHR v44|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV v45|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA [v46|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603905584622184487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603905584622184487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: v50|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NEG v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603372974827671461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v25|DWORD, int[0|0x0], int[1|0x1]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD, v69|DWORD, v70|DWORD, v71|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603372974827671461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v25|DWORD, int[1|0x1], int[3|0x3]] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|DWORD, v78|DWORD, v79|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ADD (x: v69|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = SUB (x: v81|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v80|DWORD, ~y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SUB (x: v80|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4463098071277339 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4601591420112236029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v77|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v84|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3376150132094379 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598917576665011161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, int[0|0x0], v87|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD, v94|DWORD, v95|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998329866541154 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605325858642678375
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = SUB (x: v95|DWORD, ~y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = SUB (x: v94|DWORD, ~y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|DWORD, v96|DWORD, int[0|0x0]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD, v99|DWORD, v100|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = ADD (x: v98|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998329714381159 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605325858533856079
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v5|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v101|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998329739743084 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605324664191044661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD, v104|DWORD] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4605325858551994506
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4605325858551994506
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v107|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9842400133610677 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    probability 4605213164576788801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOV [v5|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|DWORD, v107|DWORD] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B63" 
    successors "B70" "B132" 
    xhandlers
    flags 
    probability 4605214340293151682
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC v99|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ADD (x: v112|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9643485236493783 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B99" 
    xhandlers
    flags 
    probability 4604963385246279636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v111|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 8.798732982450153E-4 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B100" "B130" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B99 -> B100 falseDestination: B99 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B129" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B107" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOV [v151|QWORD[.] + v68|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOV [v151|QWORD[.] + v76|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = IMUL (x: v152|QWORD, y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = SHL (x: v154|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = SHL (x: v153|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v155|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v156|QWORD) size: QWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = SHL v156|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = SHL v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = ADD (x: v159|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = SHL (x: v152|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = SHL v162|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = SHL v162|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = ADD (x: v163|QWORD, y: v164|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = SHL v158|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = SHL v158|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = ADD (x: v166|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = ADD (x: v165|QWORD, y: v168|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = MOV v157|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v170|DWORD, y: v170|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1394488655468913 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4604011643404215320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction CMP [v114|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604011643404215320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|DWORD = LEA [v170|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|DWORD[.] * 8 + 16], y: v172|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011112534426439506 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4603946785943155568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[1|0x1]] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4604882045167610941
    begin_IR
      LIR
      nr   -1  <|@ instruction [v173|DWORD, v174|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v165|QWORD, y: v168|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP (x: v169|QWORD, y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP v173|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604882045167610941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v173|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9996761815326328 condition: < trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4604879873373617018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v175|DWORD, v176|DWORD, v173|DWORD, v174|DWORD] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" "B105" "B116" "B110" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr   -1  <|@ instruction [v177|DWORD, v178|DWORD, v179|DWORD, v180|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD[.], y: v114|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|DWORD = MOV [v114|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v180|DWORD, v177|DWORD, v178|DWORD, v168|QWORD, v165|QWORD] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B124" "B125" 
    successors "B121" "B128" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618510354942738279
    begin_IR
      LIR
      nr   -1  <|@ instruction [v184|DWORD, v185|DWORD, v186|DWORD, v187|QWORD, v188|QWORD] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v185|DWORD, y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9147424652848216 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617928528835372735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|DWORD, y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9573972653370932 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617662580820830923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v182|DWORD, y: v184|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617662580820830923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v187|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v179|DWORD - - - - - - - v184|DWORD int[0|0x0] int[0|0x0] - - - - - v187|QWORD - v156|QWORD - v188|QWORD - v161|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v156|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v190|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = MOV v189|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v192|DWORD = LEA [v191|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v183|QWORD[.] + v184|DWORD * 2 + 16], y: v192|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = SHL v190|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v194|QWORD = SHL v190|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v195|QWORD = ADD (x: v193|QWORD, y: v194|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v196|DWORD = INC v184|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = SHL v188|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = SHL v188|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v199|QWORD = ADD (x: v197|QWORD, y: v198|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v199|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.497146646258553E-4 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B120" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617660490729317885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v199|QWORD, y: v195|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v200|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = ADD (x: v199|QWORD, y: v195|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v201|QWORD, y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v179|DWORD - - - - - - - v196|DWORD v200|DWORD v202|DWORD - - v191|DWORD - - v195|QWORD - v156|QWORD - v199|QWORD - v161|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v196|DWORD, v200|DWORD, v202|DWORD, v195|QWORD, v199|QWORD] destination: B125 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B120" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566203837736347339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v179|DWORD - - - - - - - v196|DWORD int[1|0x1] int[1|0x1] - - v191|DWORD - - v195|QWORD - v156|QWORD - v199|QWORD - v161|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v196|DWORD, int[1|0x1], int[1|0x1], v195|QWORD, v199|QWORD] destination: B124 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B195" 
    xhandlers
    flags 
    probability 4602829828404200769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|QWORD = SHL v187|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = SUB (x: v206|QWORD, ~y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v187|QWORD, y: v187|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v208|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|DWORD, v184|DWORD, v185|DWORD, v186|DWORD, v207|QWORD, v208|DWORD] destination: B128 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B92" "B128" "B194" "B127" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4605327053094328613
    begin_IR
      LIR
      nr   -1  <|@ instruction [v276|DWORD, v277|DWORD, v278|DWORD, v279|DWORD, v280|QWORD, v281|DWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: v281|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v282|DWORD = INC v276|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v282|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v277|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v279|DWORD, y: v279|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5799198372453163 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors 
    xhandlers
    flags 
    probability 4601966600213449805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602424715906320465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4600055486821680204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = SUB (x: v83|DWORD, ~y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v84|DWORD, ~y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3376150132094379 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597625175479993896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD, v85|DWORD, int[0|0x0]] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4599680306720466429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v278|DWORD, y: v278|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7217825002710615 condition: = trueDestination: B197 -> B198 falseDestination: B197 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors 
    xhandlers
    flags 
    probability 4597841950257931132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B27" 
    xhandlers
    flags 
    probability 4598593650663286570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9996262583639761 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4598591811095463232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B195" 
    xhandlers
    flags 
    probability 4597678356755873395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v203|QWORD = SHL v187|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v204|QWORD = SUB (x: v203|QWORD, ~y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v187|QWORD, y: v187|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|DWORD, v184|DWORD, v185|DWORD, v186|DWORD, v204|QWORD, v205|DWORD] destination: B127 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596984333357164028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = ADD (x: v73|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v61|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, v75|DWORD, v72|DWORD, v74|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596984333357164028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SUB (x: v63|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v65|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = SUB (x: v25|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|DWORD, v67|DWORD, v66|DWORD, v64|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596589483113290611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596589483113290611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0011119564581260066 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596581230769776106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596589483113290610
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B204" 
    xhandlers
    flags 
    probability 4594853894179111922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594853894179111922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND (x: v41|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = OR (x: v51|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SHR (x: v53|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOV v56|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594805903683832922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHR (x: v26|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594805903683832922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|DWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4594515707184985161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, int[0|0x0], v87|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598500752674175837
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|DWORD, v91|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = DEC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, v90|DWORD, v91|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593285577899345121
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD, v85|DWORD, int[0|0x0]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4592230573593724458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v169|QWORD, y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4592230573593724458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011112534426439506 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B112" 
    xhandlers
    flags 
    probability 4592146494458807909
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v171|DWORD, int[0|0x0]] destination: B106 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B200" "B201" 
    xhandlers
    flags 
    probability 4591351307938615547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v280|QWORD, y: v280|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B202" "B203" 
    xhandlers
    flags 
    probability 4591351307938615547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v280|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.37802026500389707 condition: < trueDestination: B201 -> B202 falseDestination: B201 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 4588479037786861609
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 4585216378835628493
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B134" 
    xhandlers
    flags 
    probability 4583687782908329398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B132" "B64" 
    successors "B135" "B138" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v210|QWORD[.]] state [bci:1077] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v210|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v211|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - v211|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr   -1  <|@ instruction v212|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = ADD (x: v211|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v213|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v212|QWORD[.] v211|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v212|QWORD[.] v211|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [v214|QWORD[.]] state [bci:1106] <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = ADD (x: v211|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v216|DWORD = INC v215|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v216|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD - - - - - - - - - - - v212|QWORD[.] v211|DWORD v214|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = ADD (x: v99|DWORD, y: v211|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v219|DWORD = INC v218|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v78|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v219|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - - - - - - - - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr   -1  <|@ instruction v220|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - - - - - - - - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v220|QWORD[.]] state [bci:1138] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v212|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] - - - - - - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr   -1  <|@ instruction v221|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] - - - - v221|DWORD - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v222|DWORD, y: v222|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v220|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v223|DWORD - - - v221|DWORD - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v221|DWORD, y: v221|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10331442221558673 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4585378352466984997
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B136" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4585595532429988267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v226|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v224|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v227|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v223|DWORD v227|DWORD - - v221|DWORD - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction CMP [v226|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4585595532429988267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = LEA [v221|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v226|DWORD[.] * 8 + 16], y: v228|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[1|0x1]] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B137" "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      LIR
      nr   -1  <|@ instruction [v229|DWORD, v230|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04001194386383995 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4585746689684238543
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v229|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2867807153965785 condition: < trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4583625119891087916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v229|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9952027911033581 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    probability 4583586896217599341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v224|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v231|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v223|DWORD, v231|DWORD] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" "B143" "B148" "B145" 
    successors "B150" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      LIR
      nr   -1  <|@ instruction [v232|DWORD, v233|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v230|DWORD, v232|DWORD, v233|DWORD, v217|QWORD[.]] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B185" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603754390061644612
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v236|DWORD, y: v236|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9926666536987687 condition: = trueDestination: B151 -> B152 falseDestination: B151 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603713476072174465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD int[0|0x0] int[0|0x0] - - - - - v212|QWORD[.] - v214|QWORD[.] Object[null] v220|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v237|QWORD[.]] state [bci:1268] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v212|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - - - - v212|QWORD[.] - v214|QWORD[.] v237|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr   -1  <|@ instruction v238|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v237|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] - v220|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr   -1  <|@ instruction v239|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: Object[null] 
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] - v220|QWORD[.] - - - 
>@ <|@ instruction v240|DWORD = MOV [v239|QWORD[.] + 12] size: DWORD state [bci:1315] <|@ <|@
      nr   -1  <|@ instruction v241|DWORD = MOV [v239|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v242|DWORD = MOV [v214|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v243|DWORD = ADD (x: v240|DWORD, y: v241|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v244|DWORD = ADD (x: v242|DWORD, ~y: [v214|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v244|DWORD, y: v243|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.23168656987595593 condition: > trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" "B156" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602181853656081750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v243|DWORD, y: v244|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.944535213690093E-4 condition: > trueDestination: B154 -> B155 falseDestination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602177645741042236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v242|DWORD, v241|DWORD] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B170" "B172" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v246|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B169 -> B170 falseDestination: B169 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B173" "B182" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v252|DWORD[.] = MOV [v214|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v253|DWORD = DEC v245|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v214|QWORD[.] v239|QWORD[.] - - v245|DWORD v246|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v253|DWORD, y: [v252|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B172 -> B173 falseDestination: B172 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B180" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v254|DWORD = DEC v246|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v214|QWORD[.] v239|QWORD[.] - - v245|DWORD v246|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v254|DWORD, y: [v247|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B173 -> B174 falseDestination: B173 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v255|QWORD[.] = UNCOMPRESSPOINTER (input: v252|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v256|DWORD = MOV [v255|QWORD[.] + v253|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v257|DWORD = MOV [v248|QWORD[.] + v254|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v257|DWORD, y: v256|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0073559460563955865 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B157" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4570155365516302668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v253|DWORD, v254|DWORD] destination: B175 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B175" 
    successors "B158" "B169" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4602240215608151533
    begin_IR
      LIR
      nr   -1  <|@ instruction [v245|DWORD, v246|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v247|DWORD[.] = MOV [v239|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v248|QWORD[.] = UNCOMPRESSPOINTER (input: v247|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v245|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007302231237322543 condition: < trueDestination: B157 -> B158 falseDestination: B157 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602115075873932936
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v257|DWORD, y: v256|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v259|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v258|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v259|DWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v258|DWORD] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B153" "B155" "B176" "B166" "B162" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603713476072174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [v260|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v260|DWORD, y: v260|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v261|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v220|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v239|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v261|DWORD - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr   -1  <|@ instruction v262|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v263|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v262|DWORD 
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v261|DWORD - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v234|DWORD, y: [v263|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B150" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603713476072174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|QWORD[.] = UNCOMPRESSPOINTER (input: v263|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v265|DWORD = LEA [v238|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v264|QWORD[.] + v234|DWORD * 2 + 16], y: v265|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v262|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v266|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v267|DWORD = INC v234|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v267|DWORD, v261|DWORD, v266|DWORD, v239|QWORD[.]] destination: B178 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" "B178" 
    successors "B151" "B186" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604077143920223441
    begin_IR
      LIR
      nr   -1  <|@ instruction [v234|DWORD, v235|DWORD, v236|DWORD, v237|QWORD[.]] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v235|DWORD, y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9453137929132266 condition: = trueDestination: B150 -> B151 falseDestination: B150 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594300578921775959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B153 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570155365516302698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v246|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570155365516302698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v246|DWORD] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" "B167" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567485717852972614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v250|DWORD = DEC v249|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: v248|QWORD[.] v249|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v250|DWORD, y: [v247|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140, 1321] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B163 -> B164 falseDestination: B163 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B165" "B166" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567485717852972614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v251|QWORD = MOVSXD v249|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v248|QWORD[.] + v251|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B161" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4562982118225602118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v250|DWORD] destination: B165 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B165" 
    successors "B162" "B163" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4571989317480343110
    begin_IR
      LIR
      nr   -1  <|@ instruction [v249|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v249|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567485717852972614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B162 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562982118225602118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff]] destination: B166 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4552749834017755928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff]] destination: B155 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B187" 
    xhandlers
    flags 
    probability 4585324882773055691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v236|DWORD, y: v236|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.056102655923604895 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    probability 4585653062890184936
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v235|DWORD, y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.11919064179576351 condition: = trueDestination: B189 -> B190 falseDestination: B189 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    probability 4584998439058662577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v235|DWORD v236|DWORD - - - - - - - - - v220|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr   -1  <|@ instruction v269|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v235|DWORD v236|DWORD - - - - - - - - - v220|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v269|QWORD[.]] state [bci:1388] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v269|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v220|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v235|DWORD v236|DWORD - - - - - - - v269|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr   -1  <|@ instruction v270|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v271|QWORD = MOVSXD v270|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v271|QWORD, v269|QWORD[.]] destination: B191 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" "B188" "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      LIR
      nr   -1  <|@ instruction [v272|QWORD, v273|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v274|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v273|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v274|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v235|DWORD v236|DWORD v272|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr   -1  <|@ instruction v275|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v275|DWORD, y: v275|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B192 -> B193 falseDestination: B192 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v229|DWORD, v234|DWORD, v235|DWORD, v236|DWORD, v272|QWORD, byte[0|0x0]] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B134" 
    xhandlers
    flags 
    probability 4578366036194218575
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    probability 4577561299409501925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B117" 
    xhandlers
    flags 
    probability 4574951777169331133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v61|DWORD, int[1|0x1]] destination: B110 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    probability 4571887012805861812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v214|QWORD[.]] destination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B187" 
    xhandlers
    flags 
    probability 4571887012805861801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B185 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4571459255254427360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v224|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3612716763005781 condition: < trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B142" 
    xhandlers
    flags 
    probability 4568290009319748956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|DWORD, int[0|0x0]] destination: B137 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B192" 
    xhandlers
    flags 
    probability 4567369521956602247
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v214|QWORD[.]] destination: B188 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    probability 4565092964349806135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B139" 
    xhandlers
    flags 
    probability 4564592581715046601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B136 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563785606294653927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B117" 
    xhandlers
    flags 
    probability 4563023887533601084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v171|DWORD, int[0|0x0]] destination: B105 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559477469886609793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B98" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B97" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B96" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v114|DWORD[.] * 8] state [bci:365] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B95" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOV [v115|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SHL (x: v116|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SHL v117|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = SHL v117|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ADD (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SHL v120|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = SHL v120|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = ADD (x: v121|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v123|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v114|DWORD[.] * 8 + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOV [v115|QWORD[.] + v76|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOV v102|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = IMUL (x: v125|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = SHL (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = SHL (x: v124|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v128|DWORD) size: DWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v129|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = SHL v130|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = SHL v130|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = ADD (x: v131|DWORD, y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v120|DWORD, y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = SHL v128|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = SHL v128|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ADD (x: v134|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = ADD (x: v133|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B93" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = LEA [v129|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|DWORD[.] * 8 + 16], y: v138|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v133|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - v133|DWORD v128|DWORD v120|DWORD v136|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v128|DWORD) size: DWORD state [bci:552] <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = SHL v140|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = SHL v140|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = ADD (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ADD (x: v123|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B195" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = LEA [v139|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|DWORD[.] * 8 + 18], y: v145|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = SHL v143|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = SUB (x: v146|DWORD, ~y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOVSXD v147|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v143|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[2|0x2], int[1|0x1], int[0|0x0], v148|QWORD, v149|DWORD] destination: B92 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559143454679177847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4553646222502524500
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B3 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4553027692215940194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v173|DWORD, v174|DWORD] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4552582423775683270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = DEC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4548078824148312774
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v15|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4549024943712324430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = ADD (x: v70|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998329739743084 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4549024126467393663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD, v105|DWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    probability 4549024654223368107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4549024497976202376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD, v95|DWORD, v93|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B67" 
    xhandlers
    flags 
    probability 4549024052172398913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B58 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B58" 
    successors "B68" "B133" 
    xhandlers
    flags 
    probability 4549024869417329680
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v109|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9842400133610677 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4548947758239191451
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|DWORD, v109|DWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4548078824148312774
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4547163294193854126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v18|QWORD[.] + v14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B134" 
    xhandlers
    flags 
    probability 4522045541653454144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4492280099333854477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -376595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: v0|QWORD[.] int[0|0x0] 
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v235|DWORD v236|DWORD v272|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -335899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: v248|QWORD[.] v249|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0, 140, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293907|0xfffffffffffb83ed]] destination: B98 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B103" "B98" "B97" "B96" "B75" "B130" "B129" "B77" "B108" "B80" "B95" "B82" "B84" "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v209|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v209|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:365] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-359443|0xfffffffffffa83ed]] destination: B36 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B30" "B204" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v283|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v283|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD v25|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-304659|0xfffffffffffb59ed]] destination: B95 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305427|0xfffffffffffb56ed]] destination: B91 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v150|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v150|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - v133|DWORD v128|DWORD v120|DWORD v136|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:552] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-304147|0xfffffffffffb5bed]] destination: B75 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-296731|0xfffffffffffb78e5]] destination: B96 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -378395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v179|DWORD - - - - - - - v184|DWORD int[0|0x0] int[0|0x0] - - - - - v187|QWORD - v156|QWORD - v188|QWORD - v161|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294683|0xfffffffffffb80e5]] destination: B97 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -348187 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v262|DWORD 
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD v261|DWORD - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-337683|0xfffffffffffad8ed]] destination: B171 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B159" "B171" "B183" "B181" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v268|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v268|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v214|QWORD[.] v239|QWORD[.] - - v245|DWORD v246|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v229|DWORD - - - - - - - v234|DWORD - - - - v238|DWORD - - v212|QWORD[.] - v214|QWORD[.] v239|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:46, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305171|0xfffffffffffb57ed]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284435|0xfffffffffffba8ed]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-344091|0xfffffffffffabfe5]] destination: B181 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-359187|0xfffffffffffa84ed]] destination: B204 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288283|0xfffffffffffb99e5]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -292123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stack: v101|DWORD v106|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-361499|0xfffffffffffa7be5]] destination: B82 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-308763|0xfffffffffffb49e5]] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-298771|0xfffffffffffb70ed]] destination: B86 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -358419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: v0|QWORD[.] - - - - - - - - v276|DWORD - - - - - - - v277|DWORD v278|DWORD v279|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-304403|0xfffffffffffb5aed]] destination: B77 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -364827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v223|DWORD v227|DWORD - - v221|DWORD - - v212|QWORD[.] - v214|QWORD[.] v217|QWORD[.] v220|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1227] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-358931|0xfffffffffffa85ed]] destination: B30 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@613009710] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -376075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v181|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v179|DWORD - - - - - - - v180|DWORD v177|DWORD v178|DWORD - - - - - v168|QWORD - v156|QWORD - v165|QWORD - v161|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -324115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v173|DWORD - - - - - - - v174|DWORD v175|DWORD v176|DWORD - - - - - v168|QWORD - v156|QWORD - v165|QWORD - v161|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-304915|0xfffffffffffb58ed]] destination: B80 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-340251|0xfffffffffffacee5]] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299283|0xfffffffffffb6eed]] destination: B84 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320531|0xfffffffffffb1bed]] destination: B103 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310811|0xfffffffffffb41e5]] destination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299027|0xfffffffffffb6fed]] destination: B88 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-363547|0xfffffffffffa73e5]] destination: B108 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333075|0xfffffffffffaeaed]] destination: B159 -> B184 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          20
     6: lload_2       
     7: lconst_0      
     8: lcmp          
     9: ifgt          20
    12: new           #21         // java.lang.AssertionError
    15: dup           
    16: invokespecial #16         // java.lang.AssertionError.<init>:()void
    19: athrow        
    20: getstatic     #15         // $assertionsDisabled:boolean
    23: ifne          44
    26: lload_2       
    27: ldc2_w        #31         // 4503599627370496
    30: land          
    31: lconst_0      
    32: lcmp          
    33: ifne          44
    36: new           #21         // java.lang.AssertionError
    39: dup           
    40: invokespecial #16         // java.lang.AssertionError.<init>:()void
    43: athrow        
    44: lload_2       
    45: invokestatic  #20         // java.lang.Long.numberOfTrailingZeros:(long)int
    48: istore        6
    50: bipush        53
    52: iload         6
    54: isub          
    55: istore        7
    57: aload_0       
    58: iconst_0      
    59: putfield      #5          // decimalDigitsRoundedUp:boolean
    62: aload_0       
    63: iconst_0      
    64: putfield      #4          // exactDecimalConversion:boolean
    67: iconst_0      
    68: iload         7
    70: iload_1       
    71: isub          
    72: iconst_1      
    73: isub          
    74: invokestatic  #21         // java.lang.Math.max:(int, int)int
    77: istore        8
    79: iload_1       
    80: bipush        62
    82: if_icmpgt     174
    85: iload_1       
    86: bipush        -21
    88: if_icmplt     174
    91: iload         8
    93: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
    96: arraylength   
    97: if_icmpge     174
   100: iload         7
   102: getstatic     #22         // N_5_BITS:int[]
   105: iload         8
   107: iaload        
   108: iadd          
   109: bipush        64
   111: if_icmpge     174
   114: iload         8
   116: ifne          174
   119: iload_1       
   120: iload         4
   122: if_icmple     139
   125: iload_1       
   126: iload         4
   128: isub          
   129: iconst_1      
   130: isub          
   131: invokestatic  #23         // insignificantDigitsForPow2:(int)int
   134: istore        9
   136: goto          142
   139: iconst_0      
   140: istore        9
   142: iload_1       
   143: bipush        52
   145: if_icmplt     158
   148: lload_2       
   149: iload_1       
   150: bipush        52
   152: isub          
   153: lshl          
   154: lstore_2      
   155: goto          165
   158: lload_2       
   159: bipush        52
   161: iload_1       
   162: isub          
   163: lushr         
   164: lstore_2      
   165: aload_0       
   166: iconst_0      
   167: lload_2       
   168: iload         9
   170: invokespecial #24         // developLongDigits:(int, long, int)void
   173: return        
   174: lload_2       
   175: iload_1       
   176: invokestatic  #25         // estimateDecExp:(long, int)int
   179: istore        9
   181: iconst_0      
   182: iload         9
   184: ineg          
   185: invokestatic  #21         // java.lang.Math.max:(int, int)int
   188: istore        11
   190: iload         11
   192: iload         8
   194: iadd          
   195: iload_1       
   196: iadd          
   197: istore        10
   199: iconst_0      
   200: iload         9
   202: invokestatic  #21         // java.lang.Math.max:(int, int)int
   205: istore        13
   207: iload         13
   209: iload         8
   211: iadd          
   212: istore        12
   214: iload         11
   216: istore        15
   218: iload         10
   220: iload         4
   222: isub          
   223: istore        14
   225: lload_2       
   226: iload         6
   228: lushr         
   229: lstore_2      
   230: iload         10
   232: iload         7
   234: iconst_1      
   235: isub          
   236: isub          
   237: istore        10
   239: iload         10
   241: iload         12
   243: invokestatic  #26         // java.lang.Math.min:(int, int)int
   246: istore        16
   248: iload         10
   250: iload         16
   252: isub          
   253: istore        10
   255: iload         12
   257: iload         16
   259: isub          
   260: istore        12
   262: iload         14
   264: iload         16
   266: isub          
   267: istore        14
   269: iload         7
   271: iconst_1      
   272: if_icmpne     278
   275: iinc          
   278: iload         14
   280: ifge          300
   283: iload         10
   285: iload         14
   287: isub          
   288: istore        10
   290: iload         12
   292: iload         14
   294: isub          
   295: istore        12
   297: iconst_0      
   298: istore        14
   300: iconst_0      
   301: istore        17
   303: iload         7
   305: iload         10
   307: iadd          
   308: iload         11
   310: getstatic     #22         // N_5_BITS:int[]
   313: arraylength   
   314: if_icmpge     326
   317: getstatic     #22         // N_5_BITS:int[]
   320: iload         11
   322: iaload        
   323: goto          330
   326: iload         11
   328: iconst_3      
   329: imul          
   330: iadd          
   331: istore        23
   333: iload         12
   335: iconst_1      
   336: iadd          
   337: iload         13
   339: iconst_1      
   340: iadd          
   341: getstatic     #22         // N_5_BITS:int[]
   344: arraylength   
   345: if_icmpge     359
   348: getstatic     #22         // N_5_BITS:int[]
   351: iload         13
   353: iconst_1      
   354: iadd          
   355: iaload        
   356: goto          365
   359: iload         13
   361: iconst_1      
   362: iadd          
   363: iconst_3      
   364: imul          
   365: iadd          
   366: istore        24
   368: iload         23
   370: bipush        64
   372: if_icmpge     1070
   375: iload         24
   377: bipush        64
   379: if_icmpge     1070
   382: iload         23
   384: bipush        32
   386: if_icmpge     728
   389: iload         24
   391: bipush        32
   393: if_icmpge     728
   396: lload_2       
   397: l2i           
   398: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   401: iload         11
   403: iaload        
   404: imul          
   405: iload         10
   407: ishl          
   408: istore        25
   410: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   413: iload         13
   415: iaload        
   416: iload         12
   418: ishl          
   419: istore        26
   421: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   424: iload         15
   426: iaload        
   427: iload         14
   429: ishl          
   430: istore        27
   432: iload         26
   434: bipush        10
   436: imul          
   437: istore        28
   439: iconst_0      
   440: istore        17
   442: iload         25
   444: iload         26
   446: idiv          
   447: istore        22
   449: bipush        10
   451: iload         25
   453: iload         26
   455: irem          
   456: imul          
   457: istore        25
   459: iload         27
   461: bipush        10
   463: imul          
   464: istore        27
   466: iload         25
   468: iload         27
   470: if_icmpge     477
   473: iconst_1      
   474: goto          478
   477: iconst_0      
   478: istore        18
   480: iload         25
   482: iload         27
   484: iadd          
   485: iload         28
   487: if_icmple     494
   490: iconst_1      
   491: goto          495
   494: iconst_0      
   495: istore        19
   497: getstatic     #15         // $assertionsDisabled:boolean
   500: ifne          520
   503: iload         22
   505: bipush        10
   507: if_icmplt     520
   510: new           #21         // java.lang.AssertionError
   513: dup           
   514: iload         22
   516: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   519: athrow        
   520: iload         22
   522: ifne          536
   525: iload         19
   527: ifne          536
   530: iinc          
   533: goto          552
   536: aload_0       
   537: getfield      #6          // digits:char[]
   540: iload         17
   542: iinc          
   545: bipush        48
   547: iload         22
   549: iadd          
   550: i2c           
   551: castore       
   552: iload         5
   554: ifeq          571
   557: iload         9
   559: bipush        -3
   561: if_icmplt     571
   564: iload         9
   566: bipush        8
   568: if_icmplt     577
   571: iconst_0      
   572: dup           
   573: istore        18
   575: istore        19
   577: iload         18
   579: ifne          701
   582: iload         19
   584: ifne          701
   587: iload         25
   589: iload         26
   591: idiv          
   592: istore        22
   594: bipush        10
   596: iload         25
   598: iload         26
   600: irem          
   601: imul          
   602: istore        25
   604: iload         27
   606: bipush        10
   608: imul          
   609: istore        27
   611: getstatic     #15         // $assertionsDisabled:boolean
   614: ifne          634
   617: iload         22
   619: bipush        10
   621: if_icmplt     634
   624: new           #21         // java.lang.AssertionError
   627: dup           
   628: iload         22
   630: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   633: athrow        
   634: iload         27
   636: i2l           
   637: lconst_0      
   638: lcmp          
   639: ifle          676
   642: iload         25
   644: iload         27
   646: if_icmpge     653
   649: iconst_1      
   650: goto          654
   653: iconst_0      
   654: istore        18
   656: iload         25
   658: iload         27
   660: iadd          
   661: iload         28
   663: if_icmple     670
   666: iconst_1      
   667: goto          671
   670: iconst_0      
   671: istore        19
   673: goto          682
   676: iconst_1      
   677: istore        18
   679: iconst_1      
   680: istore        19
   682: aload_0       
   683: getfield      #6          // digits:char[]
   686: iload         17
   688: iinc          
   691: bipush        48
   693: iload         22
   695: iadd          
   696: i2c           
   697: castore       
   698: goto          577
   701: iload         25
   703: iconst_1      
   704: ishl          
   705: iload         28
   707: isub          
   708: i2l           
   709: lstore        20
   711: aload_0       
   712: iload         25
   714: ifne          721
   717: iconst_1      
   718: goto          722
   721: iconst_0      
   722: putfield      #4          // exactDecimalConversion:boolean
   725: goto          1426
   728: lload_2       
   729: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   732: iload         11
   734: laload        
   735: lmul          
   736: iload         10
   738: lshl          
   739: lstore        25
   741: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   744: iload         13
   746: laload        
   747: iload         12
   749: lshl          
   750: lstore        27
   752: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   755: iload         15
   757: laload        
   758: iload         14
   760: lshl          
   761: lstore        29
   763: lload         27
   765: ldc2_w        #29         // 10
   768: lmul          
   769: lstore        31
   771: iconst_0      
   772: istore        17
   774: lload         25
   776: lload         27
   778: ldiv          
   779: l2i           
   780: istore        22
   782: ldc2_w        #29         // 10
   785: lload         25
   787: lload         27
   789: lrem          
   790: lmul          
   791: lstore        25
   793: lload         29
   795: ldc2_w        #29         // 10
   798: lmul          
   799: lstore        29
   801: lload         25
   803: lload         29
   805: lcmp          
   806: ifge          813
   809: iconst_1      
   810: goto          814
   813: iconst_0      
   814: istore        18
   816: lload         25
   818: lload         29
   820: ladd          
   821: lload         31
   823: lcmp          
   824: ifle          831
   827: iconst_1      
   828: goto          832
   831: iconst_0      
   832: istore        19
   834: getstatic     #15         // $assertionsDisabled:boolean
   837: ifne          857
   840: iload         22
   842: bipush        10
   844: if_icmplt     857
   847: new           #21         // java.lang.AssertionError
   850: dup           
   851: iload         22
   853: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   856: athrow        
   857: iload         22
   859: ifne          873
   862: iload         19
   864: ifne          873
   867: iinc          
   870: goto          889
   873: aload_0       
   874: getfield      #6          // digits:char[]
   877: iload         17
   879: iinc          
   882: bipush        48
   884: iload         22
   886: iadd          
   887: i2c           
   888: castore       
   889: iload         5
   891: ifeq          908
   894: iload         9
   896: bipush        -3
   898: if_icmplt     908
   901: iload         9
   903: bipush        8
   905: if_icmplt     914
   908: iconst_0      
   909: dup           
   910: istore        18
   912: istore        19
   914: iload         18
   916: ifne          1042
   919: iload         19
   921: ifne          1042
   924: lload         25
   926: lload         27
   928: ldiv          
   929: l2i           
   930: istore        22
   932: ldc2_w        #29         // 10
   935: lload         25
   937: lload         27
   939: lrem          
   940: lmul          
   941: lstore        25
   943: lload         29
   945: ldc2_w        #29         // 10
   948: lmul          
   949: lstore        29
   951: getstatic     #15         // $assertionsDisabled:boolean
   954: ifne          974
   957: iload         22
   959: bipush        10
   961: if_icmplt     974
   964: new           #21         // java.lang.AssertionError
   967: dup           
   968: iload         22
   970: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   973: athrow        
   974: lload         29
   976: lconst_0      
   977: lcmp          
   978: ifle          1017
   981: lload         25
   983: lload         29
   985: lcmp          
   986: ifge          993
   989: iconst_1      
   990: goto          994
   993: iconst_0      
   994: istore        18
   996: lload         25
   998: lload         29
  1000: ladd          
  1001: lload         31
  1003: lcmp          
  1004: ifle          1011
  1007: iconst_1      
  1008: goto          1012
  1011: iconst_0      
  1012: istore        19
  1014: goto          1023
  1017: iconst_1      
  1018: istore        18
  1020: iconst_1      
  1021: istore        19
  1023: aload_0       
  1024: getfield      #6          // digits:char[]
  1027: iload         17
  1029: iinc          
  1032: bipush        48
  1034: iload         22
  1036: iadd          
  1037: i2c           
  1038: castore       
  1039: goto          914
  1042: lload         25
  1044: iconst_1      
  1045: lshl          
  1046: lload         31
  1048: lsub          
  1049: lstore        20
  1051: aload_0       
  1052: lload         25
  1054: lconst_0      
  1055: lcmp          
  1056: ifne          1063
  1059: iconst_1      
  1060: goto          1064
  1063: iconst_0      
  1064: putfield      #4          // exactDecimalConversion:boolean
  1067: goto          1426
  1070: iload         13
  1072: iload         12
  1074: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1077: astore        25
  1079: aload         25
  1081: invokevirtual #30         // sun.misc.FDBigInteger.getNormalizationBias:()int
  1084: istore        26
  1086: aload         25
  1088: iload         26
  1090: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1093: astore        25
  1095: lload_2       
  1096: iload         11
  1098: iload         10
  1100: iload         26
  1102: iadd          
  1103: invokestatic  #32         // sun.misc.FDBigInteger.valueOfMulPow52:(long, int, int)sun.misc.FDBigInteger
  1106: astore        27
  1108: iload         15
  1110: iconst_1      
  1111: iadd          
  1112: iload         14
  1114: iload         26
  1116: iadd          
  1117: iconst_1      
  1118: iadd          
  1119: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1122: astore        28
  1124: iload         13
  1126: iconst_1      
  1127: iadd          
  1128: iload         12
  1130: iload         26
  1132: iadd          
  1133: iconst_1      
  1134: iadd          
  1135: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1138: astore        29
  1140: iconst_0      
  1141: istore        17
  1143: aload         27
  1145: aload         25
  1147: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1150: istore        22
  1152: aload         27
  1154: aload         28
  1156: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1159: ifge          1166
  1162: iconst_1      
  1163: goto          1167
  1166: iconst_0      
  1167: istore        18
  1169: aload         29
  1171: aload         27
  1173: aload         28
  1175: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1178: ifgt          1185
  1181: iconst_1      
  1182: goto          1186
  1185: iconst_0      
  1186: istore        19
  1188: getstatic     #15         // $assertionsDisabled:boolean
  1191: ifne          1211
  1194: iload         22
  1196: bipush        10
  1198: if_icmplt     1211
  1201: new           #21         // java.lang.AssertionError
  1204: dup           
  1205: iload         22
  1207: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1210: athrow        
  1211: iload         22
  1213: ifne          1227
  1216: iload         19
  1218: ifne          1227
  1221: iinc          
  1224: goto          1243
  1227: aload_0       
  1228: getfield      #6          // digits:char[]
  1231: iload         17
  1233: iinc          
  1236: bipush        48
  1238: iload         22
  1240: iadd          
  1241: i2c           
  1242: castore       
  1243: iload         5
  1245: ifeq          1262
  1248: iload         9
  1250: bipush        -3
  1252: if_icmplt     1262
  1255: iload         9
  1257: bipush        8
  1259: if_icmplt     1268
  1262: iconst_0      
  1263: dup           
  1264: istore        18
  1266: istore        19
  1268: iload         18
  1270: ifne          1372
  1273: iload         19
  1275: ifne          1372
  1278: aload         27
  1280: aload         25
  1282: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1285: istore        22
  1287: getstatic     #15         // $assertionsDisabled:boolean
  1290: ifne          1310
  1293: iload         22
  1295: bipush        10
  1297: if_icmplt     1310
  1300: new           #21         // java.lang.AssertionError
  1303: dup           
  1304: iload         22
  1306: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1309: athrow        
  1310: aload         28
  1312: invokevirtual #36         // sun.misc.FDBigInteger.multBy10:()sun.misc.FDBigInteger
  1315: astore        28
  1317: aload         27
  1319: aload         28
  1321: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1324: ifge          1331
  1327: iconst_1      
  1328: goto          1332
  1331: iconst_0      
  1332: istore        18
  1334: aload         29
  1336: aload         27
  1338: aload         28
  1340: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1343: ifgt          1350
  1346: iconst_1      
  1347: goto          1351
  1350: iconst_0      
  1351: istore        19
  1353: aload_0       
  1354: getfield      #6          // digits:char[]
  1357: iload         17
  1359: iinc          
  1362: bipush        48
  1364: iload         22
  1366: iadd          
  1367: i2c           
  1368: castore       
  1369: goto          1268
  1372: iload         19
  1374: ifeq          1403
  1377: iload         18
  1379: ifeq          1403
  1382: aload         27
  1384: iconst_1      
  1385: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1388: astore        27
  1390: aload         27
  1392: aload         29
  1394: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1397: i2l           
  1398: lstore        20
  1400: goto          1406
  1403: lconst_0      
  1404: lstore        20
  1406: aload_0       
  1407: aload         27
  1409: getstatic     #37         // sun.misc.FDBigInteger.ZERO:sun.misc.FDBigInteger
  1412: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1415: ifne          1422
  1418: iconst_1      
  1419: goto          1423
  1422: iconst_0      
  1423: putfield      #4          // exactDecimalConversion:boolean
  1426: aload_0       
  1427: iload         9
  1429: iconst_1      
  1430: iadd          
  1431: putfield      #8          // decExponent:int
  1434: aload_0       
  1435: iconst_0      
  1436: putfield      #9          // firstDigitIndex:int
  1439: aload_0       
  1440: iload         17
  1442: putfield      #10         // nDigits:int
  1445: iload         19
  1447: ifeq          1508
  1450: iload         18
  1452: ifeq          1504
  1455: lload         20
  1457: lconst_0      
  1458: lcmp          
  1459: ifne          1490
  1462: aload_0       
  1463: getfield      #6          // digits:char[]
  1466: aload_0       
  1467: getfield      #9          // firstDigitIndex:int
  1470: aload_0       
  1471: getfield      #10         // nDigits:int
  1474: iadd          
  1475: iconst_1      
  1476: isub          
  1477: caload        
  1478: iconst_1      
  1479: iand          
  1480: ifeq          1508
  1483: aload_0       
  1484: invokespecial #38         // roundup:()void
  1487: goto          1508
  1490: lload         20
  1492: lconst_0      
  1493: lcmp          
  1494: ifle          1508
  1497: aload_0       
  1498: invokespecial #38         // roundup:()void
  1501: goto          1508
  1504: aload_0       
  1505: invokespecial #38         // roundup:()void
  1508: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1ffd8396 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   12  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   14  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   16  <|@ instruction rbx|DWORD = TZCNT r10|QWORD size: QWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604721403427327083
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.9996262583639761 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604718956845853292
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607179052434631948
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP rdx|DWORD y: -21 size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 6.874510040402823E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607172862740671949
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction CMP rcx|DWORD y: 27 size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.5135895145912284 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602796314746464677
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: rdi|DWORD, ~y: [r11|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP rax|DWORD y: 64 size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.9987311433807979 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602790451239230686
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.4020092226613966 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599191351894436866
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605327053094328611
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  228  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr  236  <|@ instruction rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM <|@ <|@
      nr  240  <|@ instruction xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  242  <|@ instruction xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  244  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr  246  <|@ instruction xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  248  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr  250  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  252  <|@ instruction xmm1|DOUBLE = VCVTSI2SD rdx|DWORD <|@ <|@
      nr  254  <|@ instruction xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr  256  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM <|@ <|@
      nr  258  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  260  <|@ instruction r13|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr  262  <|@ instruction r14|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr  266  <|@ instruction rcx|QWORD = AND (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603905584622184487
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rcx|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  282  <|@ instruction TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603905584622184487
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  302  <|@ instruction r9|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr  304  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rcx|DWORD = NEG r11|DWORD size: DWORD <|@ <|@
      nr  374  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603372974827671461
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction stack:44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  382  <|@ instruction stack:48|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  412  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  414  <|@ instruction BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603372974827671461
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction stack:52|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  420  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  422  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  446  <|@ instruction stack:56|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction r9|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 0.4463098071277339 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4601591420112236029
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.3376150132094379 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598917576665011161
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  514  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.9998329866541154 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605325858642678375
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  534  <|@ instruction r8|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  542  <|@ instruction stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction CMP rdi|DWORD y: 27 size: DWORD <|@ <|@
      nr  546  <|@ instruction BRANCH trueDestinationProbability: 0.9998329714381159 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605325858533856079
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr  552  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction rbx|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP r14|DWORD y: 27 size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.9998329739743084 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605324664191044661
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4605325858551994506
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  642  <|@ instruction CMP r14|DWORD y: 27 size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4605325858551994506
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction CMP rbx|DWORD y: 64 size: DWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.9842400133610677 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    probability 4605213164576788801
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B63" 
    successors "B70" "B132" 
    xhandlers
    flags 
    probability 4605214340293151682
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rdx|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  742  <|@ instruction rcx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction CMP rcx|DWORD y: 64 size: DWORD <|@ <|@
      nr  746  <|@ instruction BRANCH trueDestinationProbability: 0.9643485236493783 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B99" 
    xhandlers
    flags 
    probability 4604963385246279636
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r14|DWORD[.] = MOV [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  754  <|@ instruction CMP rbx|DWORD y: 32 size: DWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 8.798732982450153E-4 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B100" "B130" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1284  <|@ instruction CMP rdi|DWORD y: 27 size: DWORD <|@ <|@
      nr 1286  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B99 -> B100 falseDestination: B99 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B129" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1290  <|@ instruction CMP r13|DWORD y: 27 size: DWORD <|@ <|@
      nr 1292  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B107" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1302  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr 1304  <|@ instruction r8|QWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1306  <|@ instruction rcx|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1308  <|@ instruction rbx|QWORD = IMUL (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1310  <|@ instruction r13|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1318  <|@ instruction r13|QWORD = SHL (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1320  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction rax|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr 1326  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rbp|QWORD[.] - r10|QWORD - - stack:28|DWORD - - - r11|DWORD r9|DWORD rdi|DWORD rcx|DWORD stack:56|DWORD rsi|DWORD rdi|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:365] <|@ <|@
      nr 1328  <|@ instruction rbx|QWORD = SHL r13|QWORD y: 3 size: QWORD <|@ <|@
      nr 1330  <|@ instruction r10|QWORD = SHL r13|QWORD size: QWORD <|@ <|@
      nr 1332  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1338  <|@ instruction r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1340  <|@ instruction rcx|QWORD = SHL r8|QWORD y: 3 size: QWORD <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = SHL r8|QWORD size: QWORD <|@ <|@
      nr 1344  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1346  <|@ instruction r8|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr 1348  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr 1350  <|@ instruction r8|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1352  <|@ instruction rdx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1356  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1358  <|@ instruction BRANCH trueDestinationProbability: 0.1394488655468913 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4604011643404215320
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rbp|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - r11|DWORD r9|DWORD rdi|DWORD r10|DWORD stack:56|DWORD rsi|DWORD rdi|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction CMP [r14|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365] <|@ <|@
      nr 1420  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604011643404215320
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1448  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1452  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1454  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1456  <|@ instruction BRANCH trueDestinationProbability: 0.011112534426439506 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4603946785943155568
    begin_IR
      LIR
      nr 1468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1470  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1472  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1474  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4604882045167610941
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1478  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1480  <|@ instruction r9|DWORD = SETCC condition: > <|@ <|@
      nr 1482  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1484  <|@ instruction rdi|DWORD = SETCC condition: > <|@ <|@
      nr 1486  <|@ instruction CMP r11|DWORD y: -3 size: DWORD <|@ <|@
      nr 1488  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604882045167610941
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1504  <|@ instruction CMP r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1506  <|@ instruction BRANCH trueDestinationProbability: 0.9996761815326328 condition: < trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4604879873373617018
    begin_IR
      LIR
      nr 1508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1510  <|@ instruction JUMP ~[] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" "B105" "B116" "B110" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1522  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1540  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1542  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr 1544  <|@ instruction stack:92|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1546  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ instruction rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1550  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B124" "B125" 
    successors "B121" "B128" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618510354942738279
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr 1558  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1560  <|@ instruction BRANCH trueDestinationProbability: 0.9147424652848216 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617928528835372735
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1564  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1566  <|@ instruction BRANCH trueDestinationProbability: 0.9573972653370932 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617662580820830923
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1570  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1572  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617662580820830923
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1576  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1578  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr 1580  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rcx|QWORD - r13|QWORD - rdi|QWORD - rbx|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr 1582  <|@ instruction r8|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction r9|DWORD = LEA [r8|DWORD + 48] size: DWORD <|@ <|@
      nr 1586  <|@ instruction MOV (x: [r14|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr 1588  <|@ instruction r9|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr 1590  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr 1592  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1594  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD = SHL rdi|QWORD y: 3 size: QWORD <|@ <|@
      nr 1598  <|@ instruction rdi|QWORD = SHL rdi|QWORD size: QWORD <|@ <|@
      nr 1600  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1602  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1604  <|@ instruction BRANCH trueDestinationProbability: 3.497146646258553E-4 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B120" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617660490729317885
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1622  <|@ instruction CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1624  <|@ instruction rcx|DWORD = SETCC condition: > <|@ <|@
      nr 1626  <|@ instruction rdi|QWORD = ADD (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ instruction CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1630  <|@ instruction rdi|DWORD = SETCC condition: > <|@ <|@
      nr 1632  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD rcx|DWORD rdi|DWORD - - r8|DWORD - - r9|QWORD - r13|QWORD - rdx|QWORD - rbx|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr 1634  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1638  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1642  <|@ instruction JUMP ~[] destination: B125 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B120" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566203837736347339
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1608  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[1|0x1] int[1|0x1] - - r8|DWORD - - r9|QWORD - r13|QWORD - rdx|QWORD - rbx|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr 1610  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1612  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1614  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1616  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~[] destination: B124 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B195" 
    xhandlers
    flags 
    probability 4602829828404200769
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1672  <|@ instruction rsi|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr 1674  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1676  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1678  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr 1680  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1682  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction JUMP ~[] destination: B128 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B92" "B128" "B194" "B127" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4605327053094328613
    begin_IR
      LIR
      nr 2496  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr 2498  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: rdx|DWORD) size: BYTE <|@ <|@
      nr 2500  <|@ instruction rbx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 2502  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 2504  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2506  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2508  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2510  <|@ instruction BRANCH trueDestinationProbability: 0.5799198372453163 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors 
    xhandlers
    flags 
    probability 4601966600213449805
    begin_IR
      LIR
      nr 2512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2514  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602424715906320465
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4600055486821680204
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.3376150132094379 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597625175479993896
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4599680306720466429
    begin_IR
      LIR
      nr 2516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2518  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2520  <|@ instruction BRANCH trueDestinationProbability: 0.7217825002710615 condition: = trueDestination: B197 -> B198 falseDestination: B197 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors 
    xhandlers
    flags 
    probability 4597841950257931132
    begin_IR
      LIR
      nr 2522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2524  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr 2526  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B27" 
    xhandlers
    flags 
    probability 4598593650663286570
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.9996262583639761 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4598591811095463232
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B195" 
    xhandlers
    flags 
    probability 4597678356755873395
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1656  <|@ instruction rsi|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr 1658  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1660  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr 1664  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1668  <|@ instruction JUMP ~[] destination: B127 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596984333357164028
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction r13|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  432  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction rax|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596984333357164028
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction r9|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rbp|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596589483113290611
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP rdx|DWORD y: 52 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596589483113290611
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.0011119564581260066 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596581230769776106
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596589483113290610
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rcx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr  182  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B204" 
    xhandlers
    flags 
    probability 4594853894179111922
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP r9|DWORD y: 52 size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594853894179111922
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr  324  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = SHR (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOV rsi|QWORD size: DWORD <|@ <|@
      nr  332  <|@ instruction TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594805903683832922
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction rbp|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction TEST (x: rbp|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594805903683832922
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  364  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4594515707184985161
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598500752674175837
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593285577899345121
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4592230573593724458
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1362  <|@ instruction rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1366  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4592230573593724458
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1396  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1398  <|@ instruction BRANCH trueDestinationProbability: 0.011112534426439506 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B112" 
    xhandlers
    flags 
    probability 4592146494458807909
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1414  <|@ instruction JUMP ~[] destination: B106 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B200" "B201" 
    xhandlers
    flags 
    probability 4591351307938615547
    begin_IR
      LIR
      nr 2528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2530  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2532  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B202" "B203" 
    xhandlers
    flags 
    probability 4591351307938615547
    begin_IR
      LIR
      nr 2544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2546  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr 2548  <|@ instruction BRANCH trueDestinationProbability: 0.37802026500389707 condition: < trueDestination: B201 -> B202 falseDestination: B201 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 4588479037786861609
    begin_IR
      LIR
      nr 2554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2556  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr 2558  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 4585216378835628493
    begin_IR
      LIR
      nr 2550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2552  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B134" 
    xhandlers
    flags 
    probability 4583687782908329398
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1732  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1738  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1740  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1744  <|@ instruction JUMP ~[] destination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B132" "B64" 
    successors "B135" "B138" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1758  <|@ instruction rsi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1760  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1762  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr 1766  <|@ st <@st|@reference-map: [rax:0, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1077] <|@ <|@
      nr 1768  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1770  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@reference-map: [stack:24, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - stack:104|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr 1774  <|@ instruction rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1776  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - - stack:92|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr 1782  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1784  <|@ instruction rcx|DWORD = ADD (x: stack:92|DWORD, y: stack:76|DWORD) size: DWORD <|@ <|@
      nr 1786  <|@ instruction rsi|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ st <@st|@reference-map: [stack:24, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr 1792  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1794  <|@ st <@st|@reference-map: [stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1106] <|@ <|@
      nr 1796  <|@ instruction rsi|DWORD = ADD (x: stack:92|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr 1798  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ st <@st|@reference-map: [stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:56|DWORD - - - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr 1804  <|@ instruction rsi|DWORD = ADD (x: stack:72|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1808  <|@ instruction rsi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1810  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - - - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr 1814  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1816  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - - - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1138] <|@ <|@
      nr 1818  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1820  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1822  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr 1824  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1826  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1828  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr 1832  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1834  <|@ instruction r10|DWORD = SETCC condition: < <|@ <|@
      nr 1836  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1838  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1840  <|@ instruction rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1842  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1844  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] stack:92|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr 1846  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1850  <|@ instruction BRANCH trueDestinationProbability: 0.10331442221558673 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4585378352466984997
    begin_IR
      LIR
      nr 1874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1876  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1878  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B136" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4585595532429988267
    begin_IR
      LIR
      nr 1880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1884  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1886  <|@ instruction r11|DWORD = SETCC condition: < <|@ <|@
      nr 1888  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: rsi|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] stack:92|DWORD r11|DWORD - - r10|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227] <|@ <|@
      nr 1890  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4585595532429988267
    begin_IR
      LIR
      nr 1914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1916  <|@ instruction r10|DWORD = LEA [r10|DWORD + 48] size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr 1920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1922  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1924  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1926  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B137" "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1930  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1932  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1934  <|@ instruction BRANCH trueDestinationProbability: 0.04001194386383995 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4585746689684238543
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1946  <|@ instruction CMP r11|DWORD y: -3 size: DWORD <|@ <|@
      nr 1948  <|@ instruction BRANCH trueDestinationProbability: 0.2867807153965785 condition: < trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4583625119891087916
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1960  <|@ instruction CMP r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1962  <|@ instruction BRANCH trueDestinationProbability: 0.9952027911033581 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    probability 4583586896217599341
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1966  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1968  <|@ instruction rdx|DWORD = SETCC condition: < <|@ <|@
      nr 1970  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1972  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1974  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" "B143" "B148" "B145" 
    successors "B150" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      LIR
      nr 1984  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1986  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1988  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1996  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~[] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B185" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603754390061644612
    begin_IR
      LIR
      nr 2006  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2008  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2010  <|@ instruction BRANCH trueDestinationProbability: 0.9926666536987687 condition: = trueDestination: B151 -> B152 falseDestination: B151 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603713476072174465
    begin_IR
      LIR
      nr 2012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2014  <|@ st <@st|@reference-map: [rax:0, rbx:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD int[0|0x0] int[0|0x0] - - - - - r10|QWORD[.] - rax|QWORD[.] Object[null] stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:1268] <|@ <|@
      nr 2016  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2018  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2020  <|@ instruction stack:112|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2022  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr 2024  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2026  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2028  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr 2030  <|@ st <@st|@reference-map: [rax:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:1315] <|@ <|@
      nr 2032  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2034  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2036  <|@ instruction rcx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2038  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2040  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 2042  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2044  <|@ instruction BRANCH trueDestinationProbability: 0.23168656987595593 condition: > trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" "B156" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602181853656081750
    begin_IR
      LIR
      nr 2052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2054  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 2056  <|@ instruction BRANCH trueDestinationProbability: 4.944535213690093E-4 condition: > trueDestination: B154 -> B155 falseDestination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602177645741042236
    begin_IR
      LIR
      nr 2064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2066  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2068  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2070  <|@ instruction JUMP ~[] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B170" "B172" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      LIR
      nr 2178  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2180  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr 2182  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B169 -> B170 falseDestination: B169 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B173" "B182" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      LIR
      nr 2202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2204  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 2206  <|@ instruction rdx|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 2208  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, r9:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: r10|QWORD[.] rax|QWORD[.] - - r11|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - r10|QWORD[.] rax|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr 2210  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B172 -> B173 falseDestination: B172 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B180" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2214  <|@ instruction rbx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr 2216  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: r10|QWORD[.] rax|QWORD[.] - - r11|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - r10|QWORD[.] rax|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr 2218  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B173 -> B174 falseDestination: B173 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr 2224  <|@ instruction rsi|DWORD = MOV [rsi|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2226  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2228  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2230  <|@ instruction BRANCH trueDestinationProbability: 0.0073559460563955865 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B157" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4570155365516302668
    begin_IR
      LIR
      nr 2232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2234  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 2236  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2238  <|@ instruction JUMP ~[] destination: B175 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B175" 
    successors "B158" "B169" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4602240215608151533
    begin_IR
      LIR
      nr 2072  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2074  <|@ instruction r9|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr 2078  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr 2080  <|@ instruction BRANCH trueDestinationProbability: 0.007302231237322543 condition: < trueDestination: B157 -> B158 falseDestination: B157 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602115075873932936
    begin_IR
      LIR
      nr 2240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2242  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2244  <|@ instruction rsi|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 2246  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rsi|DWORD) condition: |>| <|@ <|@
      nr 2248  <|@ instruction JUMP ~[] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B153" "B155" "B176" "B166" "B162" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603713476072174464
    begin_IR
      LIR
      nr 2250  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2252  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2254  <|@ instruction r9|DWORD = SETCC condition: < <|@ <|@
      nr 2256  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2258  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2260  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2262  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2264  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2266  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr 2268  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2270  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 2272  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2274  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - r10|DWORD stack:72|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr 2276  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B150" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603713476072174464
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2280  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2282  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr 2284  <|@ instruction r11|DWORD = LEA [rbx|DWORD + 48] size: DWORD <|@ <|@
      nr 2286  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr 2288  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 2290  <|@ instruction rcx|DWORD = SETCC condition: < <|@ <|@
      nr 2292  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 2294  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2296  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2298  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2300  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2302  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2304  <|@ instruction JUMP ~[] destination: B178 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" "B178" 
    successors "B151" "B186" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604077143920223441
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 2002  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2004  <|@ instruction BRANCH trueDestinationProbability: 0.9453137929132266 condition: = trueDestination: B150 -> B151 falseDestination: B150 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594300578921775959
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2048  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 2050  <|@ instruction JUMP ~[] destination: B153 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570155365516302698
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2084  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2086  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2088  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2090  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2092  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr 2094  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570155365516302698
    begin_IR
      LIR
      nr 2106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2108  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 2110  <|@ instruction JUMP ~[] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" "B167" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567485717852972614
    begin_IR
      LIR
      nr 2130  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2132  <|@ instruction rdx|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 2134  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r9:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: rcx|QWORD[.] r11|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - r10|DWORD - - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140, 1321] <|@ <|@
      nr 2136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B163 -> B164 falseDestination: B163 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B165" "B166" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567485717852972614
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2140  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 2142  <|@ instruction CMP [rcx|QWORD[.] + r11|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr 2144  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B161" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4562982118225602118
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2148  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2150  <|@ instruction JUMP ~[] destination: B165 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B165" 
    successors "B162" "B163" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4571989317480343110
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2114  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr 2116  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567485717852972614
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2120  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2122  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2124  <|@ instruction stack:80|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 2126  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2128  <|@ instruction JUMP ~[] destination: B162 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562982118225602118
    begin_IR
      LIR
      nr 2152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2154  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 2156  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2158  <|@ instruction stack:80|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 2160  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2162  <|@ instruction JUMP ~[] destination: B166 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4552749834017755928
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2060  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 2062  <|@ instruction JUMP ~[] destination: B155 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B187" 
    xhandlers
    flags 
    probability 4585324882773055691
    begin_IR
      LIR
      nr 2372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2374  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2376  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2378  <|@ instruction JUMP ~[] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      LIR
      nr 2380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2382  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2384  <|@ instruction BRANCH trueDestinationProbability: 0.056102655923604895 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    probability 4585653062890184936
    begin_IR
      LIR
      nr 2398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2400  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2402  <|@ instruction BRANCH trueDestinationProbability: 0.11919064179576351 condition: = trueDestination: B189 -> B190 falseDestination: B189 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    probability 4584998439058662577
    begin_IR
      LIR
      nr 2416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2418  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2420  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2422  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2424  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2426  <|@ st <@st|@reference-map: [stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr 2428  <|@ st <@st|@reference-map: [rax:0, stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1388] <|@ <|@
      nr 2430  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2432  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2434  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2436  <|@ st <@st|@reference-map: [stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - stack:120|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr 2438  <|@ instruction rsi|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 2440  <|@ instruction rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2442  <|@ instruction stack:104|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2444  <|@ instruction JUMP ~[] destination: B191 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" "B188" "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      LIR
      nr 2446  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2448  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr 2450  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2452  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD stack:104|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr 2454  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2456  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B192 -> B193 falseDestination: B192 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      LIR
      nr 2478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2480  <|@ instruction rdx|DWORD = MOVE input: byte[0|0x0] <|@ <|@
      nr 2482  <|@ instruction rcx|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 2484  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2486  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2488  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2490  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2492  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2494  <|@ instruction JUMP ~[] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B134" 
    xhandlers
    flags 
    probability 4578366036194218575
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B64 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    probability 4577561299409501925
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1952  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1954  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1956  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B117" 
    xhandlers
    flags 
    probability 4574951777169331133
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1462  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction JUMP ~[] destination: B110 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    probability 4571887012805861812
    begin_IR
      LIR
      nr 2404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2406  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2408  <|@ instruction stack:104|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2410  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2412  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2414  <|@ instruction JUMP ~[] destination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B187" 
    xhandlers
    flags 
    probability 4571887012805861801
    begin_IR
      LIR
      nr 2364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2366  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2368  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2370  <|@ instruction JUMP ~[] destination: B185 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4571459255254427360
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1854  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1856  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1860  <|@ instruction BRANCH trueDestinationProbability: 0.3612716763005781 condition: < trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B142" 
    xhandlers
    flags 
    probability 4568290009319748956
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1868  <|@ instruction r11|DWORD = DEC stack:84|DWORD size: DWORD <|@ <|@
      nr 1870  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1872  <|@ instruction JUMP ~[] destination: B137 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B192" 
    xhandlers
    flags 
    probability 4567369521956602247
    begin_IR
      LIR
      nr 2386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2388  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2390  <|@ instruction stack:104|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2392  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2394  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2396  <|@ instruction JUMP ~[] destination: B188 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    probability 4565092964349806135
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1938  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1940  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1942  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B139" 
    xhandlers
    flags 
    probability 4564592581715046601
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1864  <|@ instruction JUMP ~[] destination: B136 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563785606294653927
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B117" 
    xhandlers
    flags 
    probability 4563023887533601084
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1404  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1406  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1408  <|@ instruction JUMP ~[] destination: B105 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559477469886609793
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B7 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B98" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  770  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction CMP rcx|DWORD y: 32 size: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B97" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction CMP stack:48|DWORD y: 14 size: DWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B96" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction CMP stack:56|DWORD y: 14 size: DWORD <|@ <|@
      nr  794  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:365] <|@ <|@
      nr  800  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction CMP stack:84|DWORD y: -3 size: DWORD <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B95" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction CMP stack:84|DWORD y: 8 size: DWORD <|@ <|@
      nr  870  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r10|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  886  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction r10|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  892  <|@ instruction r11|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  894  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  896  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  898  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction CMP [r14|DWORD[.] * 8 + 12] y: 2 size: DWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  964  <|@ instruction rcx|DWORD = MOV stack:64|QWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction rdx|DWORD = IMUL (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r8|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  980  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD r13|DWORD stack:72|DWORD r9|DWORD stack:68|DWORD r13|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:365] <|@ <|@
      nr  982  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1016  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1020  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = SHL r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1054  <|@ instruction rbx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr 1056  <|@ instruction rbx|DWORD = ADD (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1058  <|@ instruction rdx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1062  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B93" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1096  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1098  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr 1100  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: rsi|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - rcx|DWORD r8|DWORD r10|DWORD rbx|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:552] <|@ <|@
      nr 1102  <|@ instruction r9|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1104  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1106  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1116  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B195" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1130  <|@ instruction r10|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 18], y: r10|DWORD) size: WORD <|@ <|@
      nr 1134  <|@ instruction r10|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction rcx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1140  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr 1144  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1146  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1148  <|@ instruction r10|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1150  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~[] destination: B92 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559143454679177847
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4553646222502524500
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B3 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4553027692215940194
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1514  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1516  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1518  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4552582423775683270
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4548078824148312774
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr  124  <|@ instruction r9|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [rsi:0, r9:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: rsi|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74] <|@ <|@
      nr  128  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4549024943712324430
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr  604  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|DWORD = ADD (x: stack:48|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  610  <|@ instruction CMP stack:80|DWORD y: 27 size: DWORD <|@ <|@
      nr  612  <|@ instruction BRANCH trueDestinationProbability: 0.9998329739743084 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4549024126467393663
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    probability 4549024654223368107
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1978  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1980  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1982  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4549024497976202376
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B67" 
    xhandlers
    flags 
    probability 4549024052172398913
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B58 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B58" 
    successors "B68" "B133" 
    xhandlers
    flags 
    probability 4549024869417329680
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  712  <|@ instruction CMP rbx|DWORD y: 64 size: DWORD <|@ <|@
      nr  714  <|@ instruction BRANCH trueDestinationProbability: 0.9842400133610677 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4548947758239191451
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  732  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4548078824148312774
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4547163294193854126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B134" 
    xhandlers
    flags 
    probability 4522045541653454144
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1748  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1750  <|@ instruction stack:48|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1752  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1754  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4492280099333854477
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2460  <|@ instruction r10|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 2462  <|@ instruction rcx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2464  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2466  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2468  <|@ instruction r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2470  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2472  <|@ instruction MOV [r15|QWORD + 668] y: -376595 size: DWORD <|@ <|@
      nr 2474  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2476  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: r14|QWORD[.] int[0|0x0] 
locals: r14|QWORD[.] - - - - - - - - r8|DWORD - - - - - - - r11|DWORD r9|DWORD rcx|DWORD r10|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2166  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2168  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2172  <|@ instruction MOV [r15|QWORD + 668] y: -335899 size: DWORD <|@ <|@
      nr 2174  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2176  <|@ st <@st|@reference-map: [rcx:0, r14:0, stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: rcx|QWORD[.] r11|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: r14|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0, 140, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-293907|0xfffffffffffb83ed] <|@ <|@
      nr 1258  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1266  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1280  <|@ instruction JUMP ~[] destination: B98 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B103" "B98" "B97" "B96" "B75" "B130" "B129" "B77" "B108" "B80" "B95" "B82" "B84" "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1724  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1726  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1728  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: rdx|DWORD rdi|DWORD 
locals: r14|QWORD[.] - r8|QWORD - - rbp|DWORD - - - r11|DWORD r9|DWORD r13|DWORD rax|DWORD rcx|DWORD rsi|DWORD r13|DWORD - - - - - - - rbx|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:365] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: int[-359443|0xfffffffffffa83ed] <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B30" "B204" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2570  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2572  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2574  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2576  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: r14|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD rax|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction r10|DWORD = MOVE input: int[-304659|0xfffffffffffb59ed] <|@ <|@
      nr 1174  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1176  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1178  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1182  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1190  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction JUMP ~[] destination: B95 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction r11|DWORD = MOVE input: int[-305427|0xfffffffffffb56ed] <|@ <|@
      nr 1124  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction JUMP ~[] destination: B91 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1164  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: r14|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - rcx|DWORD r8|DWORD r10|DWORD rbx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:552] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-304147|0xfffffffffffb5bed] <|@ <|@
      nr  808  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B75 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1200  <|@ instruction r10|DWORD = MOVE input: int[-296731|0xfffffffffffb78e5] <|@ <|@
      nr 1202  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1206  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1216  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~[] destination: B96 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1646  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction MOV [r15|QWORD + 668] y: -378395 size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1652  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: r14|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rcx|QWORD - r13|QWORD - rdi|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1228  <|@ instruction r10|DWORD = MOVE input: int[-294683|0xfffffffffffb80e5] <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1234  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1236  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~[] destination: B97 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2308  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2310  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2312  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2314  <|@ instruction MOV [r15|QWORD + 668] y: -348187 size: DWORD <|@ <|@
      nr 2316  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2318  <|@ st <@st|@reference-map: [r14:0, stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: r14|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD r9|DWORD - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2186  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2188  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2190  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2192  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2196  <|@ instruction r10|DWORD = MOVE input: int[-337683|0xfffffffffffad8ed] <|@ <|@
      nr 2198  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2200  <|@ instruction JUMP ~[] destination: B171 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B159" "B171" "B183" "B181" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2358  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2360  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2362  <|@ st <@st|@reference-map: [rax:0, r14:0, stack:8, stack:24, stack:64]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: stack:64|QWORD[.] rax|QWORD[.] - - r11|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: r14|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] rax|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:46, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction r11|DWORD = MOVE input: int[-305171|0xfffffffffffb57ed] <|@ <|@
      nr 1158  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: int[-284435|0xfffffffffffba8ed] <|@ <|@
      nr  188  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: r14|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2322  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2324  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2326  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2328  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2332  <|@ instruction r10|DWORD = MOVE input: int[-344091|0xfffffffffffabfe5] <|@ <|@
      nr 2334  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2336  <|@ instruction JUMP ~[] destination: B181 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2562  <|@ instruction r11|DWORD = MOVE input: int[-359187|0xfffffffffffa84ed] <|@ <|@
      nr 2564  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 2566  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2568  <|@ instruction JUMP ~[] destination: B204 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r11|DWORD = MOVE input: int[-288283|0xfffffffffffb99e5] <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 668] y: -292123 size: DWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  698  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stack: r8|DWORD rdx|DWORD 
locals: r14|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD r13|DWORD stack:72|DWORD rcx|DWORD stack:68|DWORD r13|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction r10|DWORD = MOVE input: int[-361499|0xfffffffffffa7be5] <|@ <|@
      nr  936  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  940  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B82 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1706  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1710  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1712  <|@ instruction rdi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1714  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1716  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1718  <|@ instruction r10|DWORD = MOVE input: int[-308763|0xfffffffffffb49e5] <|@ <|@
      nr 1720  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r10|DWORD = MOVE input: int[-298771|0xfffffffffffb70ed] <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1030  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B86 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2536  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2538  <|@ instruction MOV [r15|QWORD + 668] y: -358419 size: DWORD <|@ <|@
      nr 2540  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2542  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: r14|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD r8|DWORD r9|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction r10|DWORD = MOVE input: int[-304403|0xfffffffffffb5aed] <|@ <|@
      nr  842  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B77 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1894  <|@ instruction rcx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1898  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1900  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1904  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1906  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1908  <|@ instruction MOV [r15|QWORD + 668] y: -364827 size: DWORD <|@ <|@
      nr 1910  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1912  <|@ st <@st|@reference-map: [rax:0, rbx:0, r8:0, r9:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: r14|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] rcx|DWORD r11|DWORD - - r10|DWORD - - r8|QWORD[.] - rax|QWORD[.] rbx|QWORD[.] r9|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1227] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction r11|DWORD = MOVE input: int[-358931|0xfffffffffffa85ed] <|@ <|@
      nr  290  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B30 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1528  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@613009710] <|@ <|@
      nr 1532  <|@ instruction MOV [r15|QWORD + 668] y: -376075 size: DWORD <|@ <|@
      nr 1534  <|@ instruction MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr 1536  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: r14|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD r9|DWORD rdi|DWORD - - - - - r8|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1492  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction rbp|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1496  <|@ instruction MOV [r15|QWORD + 668] y: -324115 size: DWORD <|@ <|@
      nr 1498  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1500  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: r14|QWORD[.] - - - - rbp|DWORD - - - r11|DWORD - - - - - - - r10|DWORD r9|DWORD rdi|DWORD - - - - - r8|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-304915|0xfffffffffffb58ed] <|@ <|@
      nr  904  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B80 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2340  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2342  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2344  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2346  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2350  <|@ instruction r10|DWORD = MOVE input: int[-340251|0xfffffffffffacee5] <|@ <|@
      nr 2352  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2354  <|@ instruction JUMP ~[] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction r10|DWORD = MOVE input: int[-299283|0xfffffffffffb6eed] <|@ <|@
      nr  990  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B84 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1374  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1384  <|@ instruction rbp|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1386  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction r10|DWORD = MOVE input: int[-320531|0xfffffffffffb1bed] <|@ <|@
      nr 1390  <|@ instruction JUMP ~[] destination: B103 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1688  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1690  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1692  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1694  <|@ instruction rdi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1696  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1698  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1700  <|@ instruction r10|DWORD = MOVE input: int[-310811|0xfffffffffffb41e5] <|@ <|@
      nr 1702  <|@ instruction JUMP ~[] destination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-299027|0xfffffffffffb6fed] <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B88 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1424  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1432  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1436  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-363547|0xfffffffffffa73e5] <|@ <|@
      nr 1440  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1442  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1444  <|@ instruction JUMP ~[] destination: B108 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2098  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2100  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2102  <|@ instruction r10|DWORD = MOVE input: int[-333075|0xfffffffffffaeaed] <|@ <|@
      nr 2104  <|@ instruction JUMP ~[] destination: B159 -> B184 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          20
     6: lload_2       
     7: lconst_0      
     8: lcmp          
     9: ifgt          20
    12: new           #21         // java.lang.AssertionError
    15: dup           
    16: invokespecial #16         // java.lang.AssertionError.<init>:()void
    19: athrow        
    20: getstatic     #15         // $assertionsDisabled:boolean
    23: ifne          44
    26: lload_2       
    27: ldc2_w        #31         // 4503599627370496
    30: land          
    31: lconst_0      
    32: lcmp          
    33: ifne          44
    36: new           #21         // java.lang.AssertionError
    39: dup           
    40: invokespecial #16         // java.lang.AssertionError.<init>:()void
    43: athrow        
    44: lload_2       
    45: invokestatic  #20         // java.lang.Long.numberOfTrailingZeros:(long)int
    48: istore        6
    50: bipush        53
    52: iload         6
    54: isub          
    55: istore        7
    57: aload_0       
    58: iconst_0      
    59: putfield      #5          // decimalDigitsRoundedUp:boolean
    62: aload_0       
    63: iconst_0      
    64: putfield      #4          // exactDecimalConversion:boolean
    67: iconst_0      
    68: iload         7
    70: iload_1       
    71: isub          
    72: iconst_1      
    73: isub          
    74: invokestatic  #21         // java.lang.Math.max:(int, int)int
    77: istore        8
    79: iload_1       
    80: bipush        62
    82: if_icmpgt     174
    85: iload_1       
    86: bipush        -21
    88: if_icmplt     174
    91: iload         8
    93: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
    96: arraylength   
    97: if_icmpge     174
   100: iload         7
   102: getstatic     #22         // N_5_BITS:int[]
   105: iload         8
   107: iaload        
   108: iadd          
   109: bipush        64
   111: if_icmpge     174
   114: iload         8
   116: ifne          174
   119: iload_1       
   120: iload         4
   122: if_icmple     139
   125: iload_1       
   126: iload         4
   128: isub          
   129: iconst_1      
   130: isub          
   131: invokestatic  #23         // insignificantDigitsForPow2:(int)int
   134: istore        9
   136: goto          142
   139: iconst_0      
   140: istore        9
   142: iload_1       
   143: bipush        52
   145: if_icmplt     158
   148: lload_2       
   149: iload_1       
   150: bipush        52
   152: isub          
   153: lshl          
   154: lstore_2      
   155: goto          165
   158: lload_2       
   159: bipush        52
   161: iload_1       
   162: isub          
   163: lushr         
   164: lstore_2      
   165: aload_0       
   166: iconst_0      
   167: lload_2       
   168: iload         9
   170: invokespecial #24         // developLongDigits:(int, long, int)void
   173: return        
   174: lload_2       
   175: iload_1       
   176: invokestatic  #25         // estimateDecExp:(long, int)int
   179: istore        9
   181: iconst_0      
   182: iload         9
   184: ineg          
   185: invokestatic  #21         // java.lang.Math.max:(int, int)int
   188: istore        11
   190: iload         11
   192: iload         8
   194: iadd          
   195: iload_1       
   196: iadd          
   197: istore        10
   199: iconst_0      
   200: iload         9
   202: invokestatic  #21         // java.lang.Math.max:(int, int)int
   205: istore        13
   207: iload         13
   209: iload         8
   211: iadd          
   212: istore        12
   214: iload         11
   216: istore        15
   218: iload         10
   220: iload         4
   222: isub          
   223: istore        14
   225: lload_2       
   226: iload         6
   228: lushr         
   229: lstore_2      
   230: iload         10
   232: iload         7
   234: iconst_1      
   235: isub          
   236: isub          
   237: istore        10
   239: iload         10
   241: iload         12
   243: invokestatic  #26         // java.lang.Math.min:(int, int)int
   246: istore        16
   248: iload         10
   250: iload         16
   252: isub          
   253: istore        10
   255: iload         12
   257: iload         16
   259: isub          
   260: istore        12
   262: iload         14
   264: iload         16
   266: isub          
   267: istore        14
   269: iload         7
   271: iconst_1      
   272: if_icmpne     278
   275: iinc          
   278: iload         14
   280: ifge          300
   283: iload         10
   285: iload         14
   287: isub          
   288: istore        10
   290: iload         12
   292: iload         14
   294: isub          
   295: istore        12
   297: iconst_0      
   298: istore        14
   300: iconst_0      
   301: istore        17
   303: iload         7
   305: iload         10
   307: iadd          
   308: iload         11
   310: getstatic     #22         // N_5_BITS:int[]
   313: arraylength   
   314: if_icmpge     326
   317: getstatic     #22         // N_5_BITS:int[]
   320: iload         11
   322: iaload        
   323: goto          330
   326: iload         11
   328: iconst_3      
   329: imul          
   330: iadd          
   331: istore        23
   333: iload         12
   335: iconst_1      
   336: iadd          
   337: iload         13
   339: iconst_1      
   340: iadd          
   341: getstatic     #22         // N_5_BITS:int[]
   344: arraylength   
   345: if_icmpge     359
   348: getstatic     #22         // N_5_BITS:int[]
   351: iload         13
   353: iconst_1      
   354: iadd          
   355: iaload        
   356: goto          365
   359: iload         13
   361: iconst_1      
   362: iadd          
   363: iconst_3      
   364: imul          
   365: iadd          
   366: istore        24
   368: iload         23
   370: bipush        64
   372: if_icmpge     1070
   375: iload         24
   377: bipush        64
   379: if_icmpge     1070
   382: iload         23
   384: bipush        32
   386: if_icmpge     728
   389: iload         24
   391: bipush        32
   393: if_icmpge     728
   396: lload_2       
   397: l2i           
   398: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   401: iload         11
   403: iaload        
   404: imul          
   405: iload         10
   407: ishl          
   408: istore        25
   410: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   413: iload         13
   415: iaload        
   416: iload         12
   418: ishl          
   419: istore        26
   421: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   424: iload         15
   426: iaload        
   427: iload         14
   429: ishl          
   430: istore        27
   432: iload         26
   434: bipush        10
   436: imul          
   437: istore        28
   439: iconst_0      
   440: istore        17
   442: iload         25
   444: iload         26
   446: idiv          
   447: istore        22
   449: bipush        10
   451: iload         25
   453: iload         26
   455: irem          
   456: imul          
   457: istore        25
   459: iload         27
   461: bipush        10
   463: imul          
   464: istore        27
   466: iload         25
   468: iload         27
   470: if_icmpge     477
   473: iconst_1      
   474: goto          478
   477: iconst_0      
   478: istore        18
   480: iload         25
   482: iload         27
   484: iadd          
   485: iload         28
   487: if_icmple     494
   490: iconst_1      
   491: goto          495
   494: iconst_0      
   495: istore        19
   497: getstatic     #15         // $assertionsDisabled:boolean
   500: ifne          520
   503: iload         22
   505: bipush        10
   507: if_icmplt     520
   510: new           #21         // java.lang.AssertionError
   513: dup           
   514: iload         22
   516: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   519: athrow        
   520: iload         22
   522: ifne          536
   525: iload         19
   527: ifne          536
   530: iinc          
   533: goto          552
   536: aload_0       
   537: getfield      #6          // digits:char[]
   540: iload         17
   542: iinc          
   545: bipush        48
   547: iload         22
   549: iadd          
   550: i2c           
   551: castore       
   552: iload         5
   554: ifeq          571
   557: iload         9
   559: bipush        -3
   561: if_icmplt     571
   564: iload         9
   566: bipush        8
   568: if_icmplt     577
   571: iconst_0      
   572: dup           
   573: istore        18
   575: istore        19
   577: iload         18
   579: ifne          701
   582: iload         19
   584: ifne          701
   587: iload         25
   589: iload         26
   591: idiv          
   592: istore        22
   594: bipush        10
   596: iload         25
   598: iload         26
   600: irem          
   601: imul          
   602: istore        25
   604: iload         27
   606: bipush        10
   608: imul          
   609: istore        27
   611: getstatic     #15         // $assertionsDisabled:boolean
   614: ifne          634
   617: iload         22
   619: bipush        10
   621: if_icmplt     634
   624: new           #21         // java.lang.AssertionError
   627: dup           
   628: iload         22
   630: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   633: athrow        
   634: iload         27
   636: i2l           
   637: lconst_0      
   638: lcmp          
   639: ifle          676
   642: iload         25
   644: iload         27
   646: if_icmpge     653
   649: iconst_1      
   650: goto          654
   653: iconst_0      
   654: istore        18
   656: iload         25
   658: iload         27
   660: iadd          
   661: iload         28
   663: if_icmple     670
   666: iconst_1      
   667: goto          671
   670: iconst_0      
   671: istore        19
   673: goto          682
   676: iconst_1      
   677: istore        18
   679: iconst_1      
   680: istore        19
   682: aload_0       
   683: getfield      #6          // digits:char[]
   686: iload         17
   688: iinc          
   691: bipush        48
   693: iload         22
   695: iadd          
   696: i2c           
   697: castore       
   698: goto          577
   701: iload         25
   703: iconst_1      
   704: ishl          
   705: iload         28
   707: isub          
   708: i2l           
   709: lstore        20
   711: aload_0       
   712: iload         25
   714: ifne          721
   717: iconst_1      
   718: goto          722
   721: iconst_0      
   722: putfield      #4          // exactDecimalConversion:boolean
   725: goto          1426
   728: lload_2       
   729: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   732: iload         11
   734: laload        
   735: lmul          
   736: iload         10
   738: lshl          
   739: lstore        25
   741: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   744: iload         13
   746: laload        
   747: iload         12
   749: lshl          
   750: lstore        27
   752: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   755: iload         15
   757: laload        
   758: iload         14
   760: lshl          
   761: lstore        29
   763: lload         27
   765: ldc2_w        #29         // 10
   768: lmul          
   769: lstore        31
   771: iconst_0      
   772: istore        17
   774: lload         25
   776: lload         27
   778: ldiv          
   779: l2i           
   780: istore        22
   782: ldc2_w        #29         // 10
   785: lload         25
   787: lload         27
   789: lrem          
   790: lmul          
   791: lstore        25
   793: lload         29
   795: ldc2_w        #29         // 10
   798: lmul          
   799: lstore        29
   801: lload         25
   803: lload         29
   805: lcmp          
   806: ifge          813
   809: iconst_1      
   810: goto          814
   813: iconst_0      
   814: istore        18
   816: lload         25
   818: lload         29
   820: ladd          
   821: lload         31
   823: lcmp          
   824: ifle          831
   827: iconst_1      
   828: goto          832
   831: iconst_0      
   832: istore        19
   834: getstatic     #15         // $assertionsDisabled:boolean
   837: ifne          857
   840: iload         22
   842: bipush        10
   844: if_icmplt     857
   847: new           #21         // java.lang.AssertionError
   850: dup           
   851: iload         22
   853: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   856: athrow        
   857: iload         22
   859: ifne          873
   862: iload         19
   864: ifne          873
   867: iinc          
   870: goto          889
   873: aload_0       
   874: getfield      #6          // digits:char[]
   877: iload         17
   879: iinc          
   882: bipush        48
   884: iload         22
   886: iadd          
   887: i2c           
   888: castore       
   889: iload         5
   891: ifeq          908
   894: iload         9
   896: bipush        -3
   898: if_icmplt     908
   901: iload         9
   903: bipush        8
   905: if_icmplt     914
   908: iconst_0      
   909: dup           
   910: istore        18
   912: istore        19
   914: iload         18
   916: ifne          1042
   919: iload         19
   921: ifne          1042
   924: lload         25
   926: lload         27
   928: ldiv          
   929: l2i           
   930: istore        22
   932: ldc2_w        #29         // 10
   935: lload         25
   937: lload         27
   939: lrem          
   940: lmul          
   941: lstore        25
   943: lload         29
   945: ldc2_w        #29         // 10
   948: lmul          
   949: lstore        29
   951: getstatic     #15         // $assertionsDisabled:boolean
   954: ifne          974
   957: iload         22
   959: bipush        10
   961: if_icmplt     974
   964: new           #21         // java.lang.AssertionError
   967: dup           
   968: iload         22
   970: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   973: athrow        
   974: lload         29
   976: lconst_0      
   977: lcmp          
   978: ifle          1017
   981: lload         25
   983: lload         29
   985: lcmp          
   986: ifge          993
   989: iconst_1      
   990: goto          994
   993: iconst_0      
   994: istore        18
   996: lload         25
   998: lload         29
  1000: ladd          
  1001: lload         31
  1003: lcmp          
  1004: ifle          1011
  1007: iconst_1      
  1008: goto          1012
  1011: iconst_0      
  1012: istore        19
  1014: goto          1023
  1017: iconst_1      
  1018: istore        18
  1020: iconst_1      
  1021: istore        19
  1023: aload_0       
  1024: getfield      #6          // digits:char[]
  1027: iload         17
  1029: iinc          
  1032: bipush        48
  1034: iload         22
  1036: iadd          
  1037: i2c           
  1038: castore       
  1039: goto          914
  1042: lload         25
  1044: iconst_1      
  1045: lshl          
  1046: lload         31
  1048: lsub          
  1049: lstore        20
  1051: aload_0       
  1052: lload         25
  1054: lconst_0      
  1055: lcmp          
  1056: ifne          1063
  1059: iconst_1      
  1060: goto          1064
  1063: iconst_0      
  1064: putfield      #4          // exactDecimalConversion:boolean
  1067: goto          1426
  1070: iload         13
  1072: iload         12
  1074: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1077: astore        25
  1079: aload         25
  1081: invokevirtual #30         // sun.misc.FDBigInteger.getNormalizationBias:()int
  1084: istore        26
  1086: aload         25
  1088: iload         26
  1090: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1093: astore        25
  1095: lload_2       
  1096: iload         11
  1098: iload         10
  1100: iload         26
  1102: iadd          
  1103: invokestatic  #32         // sun.misc.FDBigInteger.valueOfMulPow52:(long, int, int)sun.misc.FDBigInteger
  1106: astore        27
  1108: iload         15
  1110: iconst_1      
  1111: iadd          
  1112: iload         14
  1114: iload         26
  1116: iadd          
  1117: iconst_1      
  1118: iadd          
  1119: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1122: astore        28
  1124: iload         13
  1126: iconst_1      
  1127: iadd          
  1128: iload         12
  1130: iload         26
  1132: iadd          
  1133: iconst_1      
  1134: iadd          
  1135: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1138: astore        29
  1140: iconst_0      
  1141: istore        17
  1143: aload         27
  1145: aload         25
  1147: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1150: istore        22
  1152: aload         27
  1154: aload         28
  1156: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1159: ifge          1166
  1162: iconst_1      
  1163: goto          1167
  1166: iconst_0      
  1167: istore        18
  1169: aload         29
  1171: aload         27
  1173: aload         28
  1175: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1178: ifgt          1185
  1181: iconst_1      
  1182: goto          1186
  1185: iconst_0      
  1186: istore        19
  1188: getstatic     #15         // $assertionsDisabled:boolean
  1191: ifne          1211
  1194: iload         22
  1196: bipush        10
  1198: if_icmplt     1211
  1201: new           #21         // java.lang.AssertionError
  1204: dup           
  1205: iload         22
  1207: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1210: athrow        
  1211: iload         22
  1213: ifne          1227
  1216: iload         19
  1218: ifne          1227
  1221: iinc          
  1224: goto          1243
  1227: aload_0       
  1228: getfield      #6          // digits:char[]
  1231: iload         17
  1233: iinc          
  1236: bipush        48
  1238: iload         22
  1240: iadd          
  1241: i2c           
  1242: castore       
  1243: iload         5
  1245: ifeq          1262
  1248: iload         9
  1250: bipush        -3
  1252: if_icmplt     1262
  1255: iload         9
  1257: bipush        8
  1259: if_icmplt     1268
  1262: iconst_0      
  1263: dup           
  1264: istore        18
  1266: istore        19
  1268: iload         18
  1270: ifne          1372
  1273: iload         19
  1275: ifne          1372
  1278: aload         27
  1280: aload         25
  1282: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1285: istore        22
  1287: getstatic     #15         // $assertionsDisabled:boolean
  1290: ifne          1310
  1293: iload         22
  1295: bipush        10
  1297: if_icmplt     1310
  1300: new           #21         // java.lang.AssertionError
  1303: dup           
  1304: iload         22
  1306: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1309: athrow        
  1310: aload         28
  1312: invokevirtual #36         // sun.misc.FDBigInteger.multBy10:()sun.misc.FDBigInteger
  1315: astore        28
  1317: aload         27
  1319: aload         28
  1321: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1324: ifge          1331
  1327: iconst_1      
  1328: goto          1332
  1331: iconst_0      
  1332: istore        18
  1334: aload         29
  1336: aload         27
  1338: aload         28
  1340: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1343: ifgt          1350
  1346: iconst_1      
  1347: goto          1351
  1350: iconst_0      
  1351: istore        19
  1353: aload_0       
  1354: getfield      #6          // digits:char[]
  1357: iload         17
  1359: iinc          
  1362: bipush        48
  1364: iload         22
  1366: iadd          
  1367: i2c           
  1368: castore       
  1369: goto          1268
  1372: iload         19
  1374: ifeq          1403
  1377: iload         18
  1379: ifeq          1403
  1382: aload         27
  1384: iconst_1      
  1385: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1388: astore        27
  1390: aload         27
  1392: aload         29
  1394: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1397: i2l           
  1398: lstore        20
  1400: goto          1406
  1403: lconst_0      
  1404: lstore        20
  1406: aload_0       
  1407: aload         27
  1409: getstatic     #37         // sun.misc.FDBigInteger.ZERO:sun.misc.FDBigInteger
  1412: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1415: ifne          1422
  1418: iconst_1      
  1419: goto          1423
  1422: iconst_0      
  1423: putfield      #4          // exactDecimalConversion:boolean
  1426: aload_0       
  1427: iload         9
  1429: iconst_1      
  1430: iadd          
  1431: putfield      #8          // decExponent:int
  1434: aload_0       
  1435: iconst_0      
  1436: putfield      #9          // firstDigitIndex:int
  1439: aload_0       
  1440: iload         17
  1442: putfield      #10         // nDigits:int
  1445: iload         19
  1447: ifeq          1508
  1450: iload         18
  1452: ifeq          1504
  1455: lload         20
  1457: lconst_0      
  1458: lcmp          
  1459: ifne          1490
  1462: aload_0       
  1463: getfield      #6          // digits:char[]
  1466: aload_0       
  1467: getfield      #9          // firstDigitIndex:int
  1470: aload_0       
  1471: getfield      #10         // nDigits:int
  1474: iadd          
  1475: iconst_1      
  1476: isub          
  1477: caload        
  1478: iconst_1      
  1479: iand          
  1480: ifeq          1508
  1483: aload_0       
  1484: invokespecial #38         // roundup:()void
  1487: goto          1508
  1490: lload         20
  1492: lconst_0      
  1493: lcmp          
  1494: ifle          1508
  1497: aload_0       
  1498: invokespecial #38         // roundup:()void
  1501: goto          1508
  1504: aload_0       
  1505: invokespecial #38         // roundup:()void
  1508: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1ffd8396 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   12  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   14  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   16  <|@ instruction rbx|DWORD = TZCNT r10|QWORD size: QWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604721403427327083
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.9996262583639761 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604718956845853292
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607179052434631948
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP rdx|DWORD y: -21 size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 6.874510040402823E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607172862740671949
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction CMP rcx|DWORD y: 27 size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.5135895145912284 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602796314746464677
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: rdi|DWORD, ~y: [r11|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP rax|DWORD y: 64 size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.9987311433807979 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602790451239230686
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.4020092226613966 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599191351894436866
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605327053094328611
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  228  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr  236  <|@ instruction rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM <|@ <|@
      nr  240  <|@ instruction xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  242  <|@ instruction xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  244  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr  246  <|@ instruction xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  248  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr  250  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  252  <|@ instruction xmm1|DOUBLE = VCVTSI2SD rdx|DWORD <|@ <|@
      nr  254  <|@ instruction xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr  256  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM <|@ <|@
      nr  258  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  260  <|@ instruction r13|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr  262  <|@ instruction r14|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr  266  <|@ instruction rcx|QWORD = AND (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603905584622184487
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rcx|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  282  <|@ instruction TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603905584622184487
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  302  <|@ instruction r9|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr  304  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B33" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rcx|DWORD = NEG r11|DWORD size: DWORD <|@ <|@
      nr  374  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603372974827671461
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction stack:44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  382  <|@ instruction stack:48|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  412  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  414  <|@ instruction BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603372974827671461
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction stack:52|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  420  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  422  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  446  <|@ instruction stack:56|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction r9|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 0.4463098071277339 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" "B52" 
    xhandlers
    flags 
    probability 4601591420112236029
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  496  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.3376150132094379 condition: = trueDestination: B48 -> B50 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B45" "B50" "B48" 
    successors "B53" "B55" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  514  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.9998329866541154 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605325858642678375
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B52" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605327053094328612
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  534  <|@ instruction r8|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  542  <|@ instruction stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction CMP rdi|DWORD y: 27 size: DWORD <|@ <|@
      nr  546  <|@ instruction BRANCH trueDestinationProbability: 0.9998329714381159 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" "B58" 
    xhandlers
    flags 
    probability 4605325858533856079
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr  552  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction rbx|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP r14|DWORD y: 27 size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.9998329739743084 condition: < trueDestination: B56 -> B61 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B56" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4605325858551994506
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  642  <|@ instruction CMP r14|DWORD y: 27 size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4605325858551994506
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction CMP rbx|DWORD y: 64 size: DWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.9842400133610677 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    probability 4605213164576788801
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B63" 
    successors "B70" "B132" 
    xhandlers
    flags 
    probability 4605214340293151682
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rdx|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  742  <|@ instruction rcx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction CMP rcx|DWORD y: 64 size: DWORD <|@ <|@
      nr  746  <|@ instruction BRANCH trueDestinationProbability: 0.9643485236493783 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B99" 
    xhandlers
    flags 
    probability 4604963385246279636
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r14|DWORD[.] = MOV [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  754  <|@ instruction CMP rbx|DWORD y: 32 size: DWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 8.798732982450153E-4 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B100" "B130" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1284  <|@ instruction CMP rdi|DWORD y: 27 size: DWORD <|@ <|@
      nr 1286  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B99 -> B100 falseDestination: B99 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B129" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1290  <|@ instruction CMP r13|DWORD y: 27 size: DWORD <|@ <|@
      nr 1292  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B107" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1302  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr 1304  <|@ instruction r8|QWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1306  <|@ instruction rcx|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1308  <|@ instruction rbx|QWORD = IMUL (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1310  <|@ instruction r13|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1318  <|@ instruction r13|QWORD = SHL (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1322  <|@ instruction rax|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr 1326  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rbp|QWORD[.] - r10|QWORD - - stack:28|DWORD - - - r11|DWORD r9|DWORD rdi|DWORD rcx|DWORD stack:56|DWORD rsi|DWORD rdi|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:365] <|@ <|@
      nr 1328  <|@ instruction rbx|QWORD = SHL r13|QWORD y: 3 size: QWORD <|@ <|@
      nr 1330  <|@ instruction r10|QWORD = SHL r13|QWORD size: QWORD <|@ <|@
      nr 1332  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1338  <|@ instruction r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1340  <|@ instruction rcx|QWORD = SHL r8|QWORD y: 3 size: QWORD <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = SHL r8|QWORD size: QWORD <|@ <|@
      nr 1344  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1346  <|@ instruction r8|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr 1348  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr 1350  <|@ instruction r8|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1352  <|@ instruction rdx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1356  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1358  <|@ instruction BRANCH trueDestinationProbability: 0.1394488655468913 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4604011643404215320
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rbp|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - r11|DWORD r9|DWORD rdi|DWORD r10|DWORD stack:56|DWORD rsi|DWORD rdi|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction CMP [r14|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365] <|@ <|@
      nr 1420  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604011643404215320
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1448  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1452  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1454  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1456  <|@ instruction BRANCH trueDestinationProbability: 0.011112534426439506 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4603946785943155568
    begin_IR
      LIR
      nr 1468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1472  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1474  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B104" "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4604882045167610941
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1478  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1480  <|@ instruction r9|DWORD = SETCC condition: > <|@ <|@
      nr 1482  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1484  <|@ instruction rdi|DWORD = SETCC condition: > <|@ <|@
      nr 1486  <|@ instruction CMP r11|DWORD y: -3 size: DWORD <|@ <|@
      nr 1488  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B117" "B116" 
    xhandlers
    flags 
    probability 4604882045167610941
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1504  <|@ instruction CMP r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1506  <|@ instruction BRANCH trueDestinationProbability: 0.9996761815326328 condition: < trueDestination: B114 -> B117 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B114" "B105" "B116" "B110" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1522  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1524  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" 
    xhandlers
    flags 
    probability 4604957412520535261
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1540  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1542  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr 1544  <|@ instruction stack:92|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1546  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ instruction rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1550  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B124" "B125" 
    successors "B121" "B128" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618510354942738279
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr 1558  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1560  <|@ instruction BRANCH trueDestinationProbability: 0.9147424652848216 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617928528835372735
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1564  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1566  <|@ instruction BRANCH trueDestinationProbability: 0.9573972653370932 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617662580820830923
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1570  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1572  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617662580820830923
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1576  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1578  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr 1580  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rcx|QWORD - r13|QWORD - rdi|QWORD - rbx|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr 1582  <|@ instruction r8|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1584  <|@ instruction r9|DWORD = LEA [r8|DWORD + 48] size: DWORD <|@ <|@
      nr 1586  <|@ instruction MOV (x: [r14|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr 1588  <|@ instruction r9|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr 1590  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr 1592  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1594  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD = SHL rdi|QWORD y: 3 size: QWORD <|@ <|@
      nr 1598  <|@ instruction rdi|QWORD = SHL rdi|QWORD size: QWORD <|@ <|@
      nr 1600  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1602  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1604  <|@ instruction BRANCH trueDestinationProbability: 3.497146646258553E-4 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B120" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617660490729317885
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1622  <|@ instruction CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1624  <|@ instruction rcx|DWORD = SETCC condition: > <|@ <|@
      nr 1626  <|@ instruction rdi|QWORD = ADD (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ instruction CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1630  <|@ instruction rdi|DWORD = SETCC condition: > <|@ <|@
      nr 1632  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD rcx|DWORD rdi|DWORD - - r8|DWORD - - r9|QWORD - r13|QWORD - rdx|QWORD - rbx|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr 1634  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1638  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1642  <|@ instruction JUMP ~[] destination: B125 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B120" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566203837736347339
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1608  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[1|0x1] int[1|0x1] - - r8|DWORD - - r9|QWORD - r13|QWORD - rdx|QWORD - rbx|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr 1610  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1612  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1614  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1616  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~[] destination: B124 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B195" 
    xhandlers
    flags 
    probability 4602829828404200769
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1672  <|@ instruction rsi|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr 1674  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1676  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1678  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr 1680  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1682  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction JUMP ~[] destination: B128 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B92" "B128" "B194" "B127" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4605327053094328613
    begin_IR
      LIR
      nr 2496  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr 2498  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: rdx|DWORD) size: BYTE <|@ <|@
      nr 2500  <|@ instruction rbx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 2502  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 2504  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2506  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2508  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2510  <|@ instruction BRANCH trueDestinationProbability: 0.5799198372453163 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors 
    xhandlers
    flags 
    probability 4601966600213449805
    begin_IR
      LIR
      nr 2512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2514  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602424715906320465
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" "B52" 
    xhandlers
    flags 
    probability 4600055486821680204
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  474  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.3376150132094379 condition: = trueDestination: B45 -> B50 falseDestination: B45 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4599680306720466429
    begin_IR
      LIR
      nr 2516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2518  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2520  <|@ instruction BRANCH trueDestinationProbability: 0.7217825002710615 condition: = trueDestination: B197 -> B198 falseDestination: B197 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors 
    xhandlers
    flags 
    probability 4597841950257931132
    begin_IR
      LIR
      nr 2522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2524  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr 2526  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B27" 
    xhandlers
    flags 
    probability 4598593650663286570
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.9996262583639761 condition: < trueDestination: B4 -> B6 falseDestination: B4 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B195" 
    xhandlers
    flags 
    probability 4597678356755873395
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1656  <|@ instruction rsi|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr 1658  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1660  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr 1664  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1668  <|@ instruction JUMP ~[] destination: B127 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596984333357164028
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction r13|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  432  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction rax|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596984333357164028
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction r9|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rbp|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596589483113290611
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP rdx|DWORD y: 52 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596589483113290611
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.0011119564581260066 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596581230769776106
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596589483113290610
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rcx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr  182  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B204" 
    xhandlers
    flags 
    probability 4594853894179111922
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP r9|DWORD y: 52 size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" "B35" 
    xhandlers
    flags 
    probability 4594853894179111922
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr  324  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = SHR (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOV rsi|QWORD size: DWORD <|@ <|@
      nr  332  <|@ instruction TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594805903683832922
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction rbp|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction TEST (x: rbp|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594805903683832922
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  364  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B45" "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598500752674175837
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4592230573593724458
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1362  <|@ instruction rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1366  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B112" 
    xhandlers
    flags 
    probability 4592230573593724458
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1396  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1398  <|@ instruction BRANCH trueDestinationProbability: 0.011112534426439506 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B200" "B201" 
    xhandlers
    flags 
    probability 4591351307938615547
    begin_IR
      LIR
      nr 2528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2530  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2532  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B202" "B203" 
    xhandlers
    flags 
    probability 4591351307938615547
    begin_IR
      LIR
      nr 2544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2546  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr 2548  <|@ instruction BRANCH trueDestinationProbability: 0.37802026500389707 condition: < trueDestination: B201 -> B202 falseDestination: B201 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 4588479037786861609
    begin_IR
      LIR
      nr 2554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2556  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr 2558  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 4585216378835628493
    begin_IR
      LIR
      nr 2550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2552  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B134" 
    xhandlers
    flags 
    probability 4583687782908329398
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1732  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1736  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1738  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1740  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1744  <|@ instruction JUMP ~[] destination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B132" "B64" 
    successors "B135" "B138" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1758  <|@ instruction rsi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1760  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1762  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr 1766  <|@ st <@st|@reference-map: [rax:0, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1077] <|@ <|@
      nr 1768  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1770  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@reference-map: [stack:24, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - stack:104|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr 1774  <|@ instruction rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1776  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - - stack:92|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr 1782  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1784  <|@ instruction rcx|DWORD = ADD (x: stack:92|DWORD, y: stack:76|DWORD) size: DWORD <|@ <|@
      nr 1786  <|@ instruction rsi|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ st <@st|@reference-map: [stack:24, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr 1792  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1794  <|@ st <@st|@reference-map: [stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1106] <|@ <|@
      nr 1796  <|@ instruction rsi|DWORD = ADD (x: stack:92|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr 1798  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1800  <|@ instruction rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ st <@st|@reference-map: [stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:56|DWORD - - - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr 1804  <|@ instruction rsi|DWORD = ADD (x: stack:72|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr 1806  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1808  <|@ instruction rsi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1810  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - - - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr 1814  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1816  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - - - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1138] <|@ <|@
      nr 1818  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1820  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1822  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr 1824  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1826  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1828  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr 1832  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1834  <|@ instruction r10|DWORD = SETCC condition: < <|@ <|@
      nr 1836  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1838  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1840  <|@ instruction rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1842  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1844  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] stack:92|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr 1846  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1850  <|@ instruction BRANCH trueDestinationProbability: 0.10331442221558673 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4585378352466984997
    begin_IR
      LIR
      nr 1874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1876  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1878  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B135" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4585595532429988267
    begin_IR
      LIR
      nr 1880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1884  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1886  <|@ instruction r11|DWORD = SETCC condition: < <|@ <|@
      nr 1888  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: rsi|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] stack:92|DWORD r11|DWORD - - r10|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227] <|@ <|@
      nr 1890  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4585595532429988267
    begin_IR
      LIR
      nr 1914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1916  <|@ instruction r10|DWORD = LEA [r10|DWORD + 48] size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr 1920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1922  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1924  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1926  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B137" "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1930  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1932  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1934  <|@ instruction BRANCH trueDestinationProbability: 0.04001194386383995 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4585746689684238543
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1946  <|@ instruction CMP r11|DWORD y: -3 size: DWORD <|@ <|@
      nr 1948  <|@ instruction BRANCH trueDestinationProbability: 0.2867807153965785 condition: < trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4583625119891087916
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1960  <|@ instruction CMP r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1962  <|@ instruction BRANCH trueDestinationProbability: 0.9952027911033581 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    probability 4583586896217599341
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1966  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1968  <|@ instruction rdx|DWORD = SETCC condition: < <|@ <|@
      nr 1970  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1972  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1974  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" "B143" "B148" "B145" 
    successors "B150" 
    xhandlers
    flags 
    probability 4585979506604578049
    begin_IR
      LIR
      nr 1984  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1986  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1988  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~[] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B187" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603754390061644612
    begin_IR
      LIR
      nr 2006  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2008  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2010  <|@ instruction BRANCH trueDestinationProbability: 0.9926666536987687 condition: = trueDestination: B151 -> B152 falseDestination: B151 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603713476072174465
    begin_IR
      LIR
      nr 2012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2014  <|@ st <@st|@reference-map: [rax:0, rbx:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD int[0|0x0] int[0|0x0] - - - - - r10|QWORD[.] - rax|QWORD[.] Object[null] stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:1268] <|@ <|@
      nr 2016  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2018  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2020  <|@ instruction stack:112|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2022  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr 2024  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2026  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2028  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr 2030  <|@ st <@st|@reference-map: [rax:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:1315] <|@ <|@
      nr 2032  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2034  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2036  <|@ instruction rcx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2038  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2040  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 2042  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2044  <|@ instruction BRANCH trueDestinationProbability: 0.23168656987595593 condition: > trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" "B156" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602181853656081750
    begin_IR
      LIR
      nr 2052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2054  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 2056  <|@ instruction BRANCH trueDestinationProbability: 4.944535213690093E-4 condition: > trueDestination: B154 -> B155 falseDestination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602177645741042236
    begin_IR
      LIR
      nr 2064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2066  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2068  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2070  <|@ instruction JUMP ~[] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B170" "B172" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      LIR
      nr 2178  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2180  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr 2182  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B169 -> B170 falseDestination: B169 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B173" "B182" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      LIR
      nr 2202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2204  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 2206  <|@ instruction rdx|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 2208  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, r9:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: r10|QWORD[.] rax|QWORD[.] - - r11|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - r10|QWORD[.] rax|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr 2210  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B172 -> B173 falseDestination: B172 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B180" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2214  <|@ instruction rbx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr 2216  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: r10|QWORD[.] rax|QWORD[.] - - r11|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - r10|QWORD[.] rax|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr 2218  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B173 -> B174 falseDestination: B173 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4602177645741042234
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr 2224  <|@ instruction rsi|DWORD = MOV [rsi|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2226  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2228  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2230  <|@ instruction BRANCH trueDestinationProbability: 0.0073559460563955865 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B157" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4570155365516302668
    begin_IR
      LIR
      nr 2232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2234  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 2236  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2238  <|@ instruction JUMP ~[] destination: B175 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B175" 
    successors "B158" "B169" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4602240215608151533
    begin_IR
      LIR
      nr 2072  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2074  <|@ instruction r9|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr 2078  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr 2080  <|@ instruction BRANCH trueDestinationProbability: 0.007302231237322543 condition: < trueDestination: B157 -> B158 falseDestination: B157 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602115075873932936
    begin_IR
      LIR
      nr 2240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2242  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2244  <|@ instruction rsi|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 2246  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rsi|DWORD) condition: |>| <|@ <|@
      nr 2248  <|@ instruction JUMP ~[] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B153" "B155" "B176" "B166" "B162" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603713476072174464
    begin_IR
      LIR
      nr 2250  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2252  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2254  <|@ instruction r9|DWORD = SETCC condition: < <|@ <|@
      nr 2256  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2258  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2260  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2262  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2264  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2266  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr 2268  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2270  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 2272  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2274  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - r10|DWORD stack:72|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr 2276  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B150" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603713476072174464
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2280  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2282  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr 2284  <|@ instruction r11|DWORD = LEA [rbx|DWORD + 48] size: DWORD <|@ <|@
      nr 2286  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr 2288  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 2290  <|@ instruction rcx|DWORD = SETCC condition: < <|@ <|@
      nr 2292  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 2294  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2296  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2304  <|@ instruction JUMP ~[] destination: B178 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" "B178" 
    successors "B151" "B187" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604077143920223441
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1992  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1996  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2002  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2004  <|@ instruction BRANCH trueDestinationProbability: 0.9453137929132266 condition: = trueDestination: B150 -> B151 falseDestination: B150 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594300578921775959
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2048  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 2050  <|@ instruction JUMP ~[] destination: B153 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B159" "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570155365516302698
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2084  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2086  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2088  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2090  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2092  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr 2094  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570155365516302698
    begin_IR
      LIR
      nr 2106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2108  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 2110  <|@ instruction JUMP ~[] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" "B167" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567485717852972614
    begin_IR
      LIR
      nr 2130  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2132  <|@ instruction rdx|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 2134  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r9:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: rcx|QWORD[.] r11|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - r10|DWORD - - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140, 1321] <|@ <|@
      nr 2136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B163 -> B164 falseDestination: B163 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B165" "B166" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567485717852972614
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2140  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 2142  <|@ instruction CMP [rcx|QWORD[.] + r11|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr 2144  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B161" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4562982118225602118
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2148  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2150  <|@ instruction JUMP ~[] destination: B165 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B165" 
    successors "B162" "B163" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4571989317480343110
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2114  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr 2116  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567485717852972614
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2120  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2122  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2128  <|@ instruction JUMP ~[] destination: B162 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562982118225602118
    begin_IR
      LIR
      nr 2152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2154  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 2156  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2160  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2162  <|@ instruction JUMP ~[] destination: B166 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4552749834017755928
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2060  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 2062  <|@ instruction JUMP ~[] destination: B155 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B150" "B151" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      LIR
      nr 2380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2374  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2376  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2382  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2384  <|@ instruction BRANCH trueDestinationProbability: 0.056102655923604895 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    probability 4585653062890184936
    begin_IR
      LIR
      nr 2398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2400  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2402  <|@ instruction BRANCH trueDestinationProbability: 0.11919064179576351 condition: = trueDestination: B189 -> B190 falseDestination: B189 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    probability 4584998439058662577
    begin_IR
      LIR
      nr 2416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2418  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2420  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2422  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2424  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2426  <|@ st <@st|@reference-map: [stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr 2428  <|@ st <@st|@reference-map: [rax:0, stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1388] <|@ <|@
      nr 2430  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2432  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2434  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2436  <|@ st <@st|@reference-map: [stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - stack:120|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr 2438  <|@ instruction rsi|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 2440  <|@ instruction rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2442  <|@ instruction stack:104|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2444  <|@ instruction JUMP ~[] destination: B191 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" "B188" "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      LIR
      nr 2446  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2448  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr 2450  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2452  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD stack:104|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr 2454  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2456  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B192 -> B193 falseDestination: B192 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4585979506604578048
    begin_IR
      LIR
      nr 2478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2480  <|@ instruction rdx|DWORD = MOVE input: byte[0|0x0] <|@ <|@
      nr 2482  <|@ instruction rcx|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 2484  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2486  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2488  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2490  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2492  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2494  <|@ instruction JUMP ~[] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B134" 
    xhandlers
    flags 
    probability 4578366036194218575
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B64 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    probability 4577561299409501925
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1952  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1954  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1956  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B117" 
    xhandlers
    flags 
    probability 4574951777169331133
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1462  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction JUMP ~[] destination: B110 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    probability 4571887012805861812
    begin_IR
      LIR
      nr 2404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2406  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2408  <|@ instruction stack:104|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2410  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2412  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2414  <|@ instruction JUMP ~[] destination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" "B137" 
    xhandlers
    flags 
    probability 4571459255254427360
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1854  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1856  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1860  <|@ instruction BRANCH trueDestinationProbability: 0.3612716763005781 condition: < trueDestination: B135 -> B139 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B142" 
    xhandlers
    flags 
    probability 4568290009319748956
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1868  <|@ instruction r11|DWORD = DEC stack:84|DWORD size: DWORD <|@ <|@
      nr 1870  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1872  <|@ instruction JUMP ~[] destination: B137 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B192" 
    xhandlers
    flags 
    probability 4567369521956602247
    begin_IR
      LIR
      nr 2386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2388  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2390  <|@ instruction stack:104|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2392  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2394  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2396  <|@ instruction JUMP ~[] destination: B188 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    probability 4565092964349806135
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1938  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1940  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1942  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B117" 
    xhandlers
    flags 
    probability 4563023887533601084
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1406  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1408  <|@ instruction JUMP ~[] destination: B105 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559477469886609793
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B7 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B98" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  770  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction CMP rcx|DWORD y: 32 size: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B97" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction CMP stack:48|DWORD y: 14 size: DWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B96" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction CMP stack:56|DWORD y: 14 size: DWORD <|@ <|@
      nr  794  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:365] <|@ <|@
      nr  800  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction CMP stack:84|DWORD y: -3 size: DWORD <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B95" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction CMP stack:84|DWORD y: 8 size: DWORD <|@ <|@
      nr  870  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r10|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  886  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction r10|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  892  <|@ instruction r11|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  894  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  896  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  898  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction CMP [r14|DWORD[.] * 8 + 12] y: 2 size: DWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  964  <|@ instruction rcx|DWORD = MOV stack:64|QWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction rdx|DWORD = IMUL (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r8|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  980  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD r13|DWORD stack:72|DWORD r9|DWORD stack:68|DWORD r13|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:365] <|@ <|@
      nr  982  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1016  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1020  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = SHL r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1054  <|@ instruction rbx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr 1056  <|@ instruction rbx|DWORD = ADD (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1058  <|@ instruction rdx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1062  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B93" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1096  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1098  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr 1100  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: rsi|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - rcx|DWORD r8|DWORD r10|DWORD rbx|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:552] <|@ <|@
      nr 1102  <|@ instruction r9|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1104  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1106  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1116  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B195" 
    xhandlers
    flags 
    probability 4559255294433811855
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1130  <|@ instruction r10|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 18], y: r10|DWORD) size: WORD <|@ <|@
      nr 1134  <|@ instruction r10|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction rcx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1140  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr 1144  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1146  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1148  <|@ instruction r10|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1150  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~[] destination: B92 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559143454679177847
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4553646222502524500
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B3 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4553027692215940194
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1514  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1516  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1518  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4552582423775683270
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4548078824148312774
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr  124  <|@ instruction r9|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [rsi:0, r9:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: rsi|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74] <|@ <|@
      nr  128  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4549024943712324430
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr  604  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|DWORD = ADD (x: stack:48|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  610  <|@ instruction CMP stack:80|DWORD y: 27 size: DWORD <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction BRANCH trueDestinationProbability: 0.9998329739743084 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4549024126467393663
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    probability 4549024654223368107
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1978  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1980  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1982  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B67" 
    xhandlers
    flags 
    probability 4549024052172398913
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B58 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B58" 
    successors "B68" "B133" 
    xhandlers
    flags 
    probability 4549024869417329680
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  712  <|@ instruction CMP rbx|DWORD y: 64 size: DWORD <|@ <|@
      nr  714  <|@ instruction BRANCH trueDestinationProbability: 0.9842400133610677 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4548947758239191451
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  732  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4548078824148312774
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4547163294193854126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4543575224520942278
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B134" 
    xhandlers
    flags 
    probability 4522045541653454144
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1748  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1750  <|@ instruction stack:48|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1752  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1754  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4492280099333854477
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2460  <|@ instruction r10|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 2462  <|@ instruction rcx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2464  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2466  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2468  <|@ instruction r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2470  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2472  <|@ instruction MOV [r15|QWORD + 668] y: -376595 size: DWORD <|@ <|@
      nr 2474  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2476  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: r14|QWORD[.] int[0|0x0] 
locals: r14|QWORD[.] - - - - - - - - r8|DWORD - - - - - - - r11|DWORD r9|DWORD rcx|DWORD r10|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2166  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2168  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2172  <|@ instruction MOV [r15|QWORD + 668] y: -335899 size: DWORD <|@ <|@
      nr 2174  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2176  <|@ st <@st|@reference-map: [rcx:0, r14:0, stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: rcx|QWORD[.] r11|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: r14|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0, 140, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-293907|0xfffffffffffb83ed] <|@ <|@
      nr 1260  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1280  <|@ instruction JUMP ~[] destination: B98 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B103" "B98" "B97" "B96" "B75" "B130" "B129" "B77" "B108" "B80" "B95" "B82" "B84" "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1724  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1726  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1728  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: rdx|DWORD rdi|DWORD 
locals: r14|QWORD[.] - r8|QWORD - - rbp|DWORD - - - r11|DWORD r9|DWORD r13|DWORD rax|DWORD rcx|DWORD rsi|DWORD r13|DWORD - - - - - - - rbx|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:365] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: int[-359443|0xfffffffffffa83ed] <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B30" "B204" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2570  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2572  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2574  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2576  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: r14|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD rax|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction r10|DWORD = MOVE input: int[-304659|0xfffffffffffb59ed] <|@ <|@
      nr 1176  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1178  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction JUMP ~[] destination: B95 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction r11|DWORD = MOVE input: int[-305427|0xfffffffffffb56ed] <|@ <|@
      nr 1126  <|@ instruction JUMP ~[] destination: B91 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1124  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1164  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: r14|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - rcx|DWORD r8|DWORD r10|DWORD rbx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:552] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-304147|0xfffffffffffb5bed] <|@ <|@
      nr  810  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B75 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1200  <|@ instruction r10|DWORD = MOVE input: int[-296731|0xfffffffffffb78e5] <|@ <|@
      nr 1204  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1206  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1214  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1216  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~[] destination: B96 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1646  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction MOV [r15|QWORD + 668] y: -378395 size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1652  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: r14|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rcx|QWORD - r13|QWORD - rdi|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1228  <|@ instruction r10|DWORD = MOVE input: int[-294683|0xfffffffffffb80e5] <|@ <|@
      nr 1232  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1234  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1236  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~[] destination: B97 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2308  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2310  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2312  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2314  <|@ instruction MOV [r15|QWORD + 668] y: -348187 size: DWORD <|@ <|@
      nr 2316  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2318  <|@ st <@st|@reference-map: [r14:0, stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: r14|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD r9|DWORD - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2186  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2188  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2190  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2192  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2196  <|@ instruction r10|DWORD = MOVE input: int[-337683|0xfffffffffffad8ed] <|@ <|@
      nr 2198  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2200  <|@ instruction JUMP ~[] destination: B171 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B159" "B171" "B183" "B181" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2358  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2360  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2362  <|@ st <@st|@reference-map: [rax:0, r14:0, stack:8, stack:24, stack:64]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: stack:64|QWORD[.] rax|QWORD[.] - - r11|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: r14|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] rax|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:46, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction r11|DWORD = MOVE input: int[-305171|0xfffffffffffb57ed] <|@ <|@
      nr 1160  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: int[-284435|0xfffffffffffba8ed] <|@ <|@
      nr  188  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: r14|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2322  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2324  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2326  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2328  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2332  <|@ instruction r10|DWORD = MOVE input: int[-344091|0xfffffffffffabfe5] <|@ <|@
      nr 2336  <|@ instruction JUMP ~[] destination: B181 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2562  <|@ instruction r11|DWORD = MOVE input: int[-359187|0xfffffffffffa84ed] <|@ <|@
      nr 2564  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 2566  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2568  <|@ instruction JUMP ~[] destination: B204 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r11|DWORD = MOVE input: int[-288283|0xfffffffffffb99e5] <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 668] y: -292123 size: DWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  698  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stack: r8|DWORD rdx|DWORD 
locals: r14|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD r13|DWORD stack:72|DWORD rcx|DWORD stack:68|DWORD r13|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction r10|DWORD = MOVE input: int[-361499|0xfffffffffffa7be5] <|@ <|@
      nr  936  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  940  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B82 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1706  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1710  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1712  <|@ instruction rdi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1714  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1716  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1718  <|@ instruction r10|DWORD = MOVE input: int[-308763|0xfffffffffffb49e5] <|@ <|@
      nr 1720  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r10|DWORD = MOVE input: int[-298771|0xfffffffffffb70ed] <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1030  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B86 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2536  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2538  <|@ instruction MOV [r15|QWORD + 668] y: -358419 size: DWORD <|@ <|@
      nr 2540  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2542  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: r14|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD r8|DWORD r9|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction r10|DWORD = MOVE input: int[-304403|0xfffffffffffb5aed] <|@ <|@
      nr  844  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B77 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1894  <|@ instruction rcx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1898  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1900  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1904  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1906  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1908  <|@ instruction MOV [r15|QWORD + 668] y: -364827 size: DWORD <|@ <|@
      nr 1910  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1912  <|@ st <@st|@reference-map: [rax:0, rbx:0, r8:0, r9:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: r14|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] rcx|DWORD r11|DWORD - - r10|DWORD - - r8|QWORD[.] - rax|QWORD[.] rbx|QWORD[.] r9|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1227] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B205" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction r11|DWORD = MOVE input: int[-358931|0xfffffffffffa85ed] <|@ <|@
      nr  290  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B30 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1528  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@613009710] <|@ <|@
      nr 1532  <|@ instruction MOV [r15|QWORD + 668] y: -376075 size: DWORD <|@ <|@
      nr 1534  <|@ instruction MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr 1536  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: r14|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD r9|DWORD rdi|DWORD - - - - - r8|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1492  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction rbp|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1496  <|@ instruction MOV [r15|QWORD + 668] y: -324115 size: DWORD <|@ <|@
      nr 1498  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1500  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: r14|QWORD[.] - - - - rbp|DWORD - - - r11|DWORD - - - - - - - r10|DWORD r9|DWORD rdi|DWORD - - - - - r8|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-304915|0xfffffffffffb58ed] <|@ <|@
      nr  904  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B80 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2340  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2342  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2344  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2346  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2350  <|@ instruction r10|DWORD = MOVE input: int[-340251|0xfffffffffffacee5] <|@ <|@
      nr 2354  <|@ instruction JUMP ~[] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction r10|DWORD = MOVE input: int[-299283|0xfffffffffffb6eed] <|@ <|@
      nr  990  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B84 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1374  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1384  <|@ instruction rbp|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1386  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction r10|DWORD = MOVE input: int[-320531|0xfffffffffffb1bed] <|@ <|@
      nr 1390  <|@ instruction JUMP ~[] destination: B103 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1688  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1690  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1692  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1694  <|@ instruction rdi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1696  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1698  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1700  <|@ instruction r10|DWORD = MOVE input: int[-310811|0xfffffffffffb41e5] <|@ <|@
      nr 1702  <|@ instruction JUMP ~[] destination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-299027|0xfffffffffffb6fed] <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B88 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B131" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1424  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1432  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1436  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-363547|0xfffffffffffa73e5] <|@ <|@
      nr 1440  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1442  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1444  <|@ instruction JUMP ~[] destination: B108 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2098  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2100  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2102  <|@ instruction r10|DWORD = MOVE input: int[-333075|0xfffffffffffaeaed] <|@ <|@
      nr 2104  <|@ instruction JUMP ~[] destination: B159 -> B184 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          20
     6: lload_2       
     7: lconst_0      
     8: lcmp          
     9: ifgt          20
    12: new           #21         // java.lang.AssertionError
    15: dup           
    16: invokespecial #16         // java.lang.AssertionError.<init>:()void
    19: athrow        
    20: getstatic     #15         // $assertionsDisabled:boolean
    23: ifne          44
    26: lload_2       
    27: ldc2_w        #31         // 4503599627370496
    30: land          
    31: lconst_0      
    32: lcmp          
    33: ifne          44
    36: new           #21         // java.lang.AssertionError
    39: dup           
    40: invokespecial #16         // java.lang.AssertionError.<init>:()void
    43: athrow        
    44: lload_2       
    45: invokestatic  #20         // java.lang.Long.numberOfTrailingZeros:(long)int
    48: istore        6
    50: bipush        53
    52: iload         6
    54: isub          
    55: istore        7
    57: aload_0       
    58: iconst_0      
    59: putfield      #5          // decimalDigitsRoundedUp:boolean
    62: aload_0       
    63: iconst_0      
    64: putfield      #4          // exactDecimalConversion:boolean
    67: iconst_0      
    68: iload         7
    70: iload_1       
    71: isub          
    72: iconst_1      
    73: isub          
    74: invokestatic  #21         // java.lang.Math.max:(int, int)int
    77: istore        8
    79: iload_1       
    80: bipush        62
    82: if_icmpgt     174
    85: iload_1       
    86: bipush        -21
    88: if_icmplt     174
    91: iload         8
    93: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
    96: arraylength   
    97: if_icmpge     174
   100: iload         7
   102: getstatic     #22         // N_5_BITS:int[]
   105: iload         8
   107: iaload        
   108: iadd          
   109: bipush        64
   111: if_icmpge     174
   114: iload         8
   116: ifne          174
   119: iload_1       
   120: iload         4
   122: if_icmple     139
   125: iload_1       
   126: iload         4
   128: isub          
   129: iconst_1      
   130: isub          
   131: invokestatic  #23         // insignificantDigitsForPow2:(int)int
   134: istore        9
   136: goto          142
   139: iconst_0      
   140: istore        9
   142: iload_1       
   143: bipush        52
   145: if_icmplt     158
   148: lload_2       
   149: iload_1       
   150: bipush        52
   152: isub          
   153: lshl          
   154: lstore_2      
   155: goto          165
   158: lload_2       
   159: bipush        52
   161: iload_1       
   162: isub          
   163: lushr         
   164: lstore_2      
   165: aload_0       
   166: iconst_0      
   167: lload_2       
   168: iload         9
   170: invokespecial #24         // developLongDigits:(int, long, int)void
   173: return        
   174: lload_2       
   175: iload_1       
   176: invokestatic  #25         // estimateDecExp:(long, int)int
   179: istore        9
   181: iconst_0      
   182: iload         9
   184: ineg          
   185: invokestatic  #21         // java.lang.Math.max:(int, int)int
   188: istore        11
   190: iload         11
   192: iload         8
   194: iadd          
   195: iload_1       
   196: iadd          
   197: istore        10
   199: iconst_0      
   200: iload         9
   202: invokestatic  #21         // java.lang.Math.max:(int, int)int
   205: istore        13
   207: iload         13
   209: iload         8
   211: iadd          
   212: istore        12
   214: iload         11
   216: istore        15
   218: iload         10
   220: iload         4
   222: isub          
   223: istore        14
   225: lload_2       
   226: iload         6
   228: lushr         
   229: lstore_2      
   230: iload         10
   232: iload         7
   234: iconst_1      
   235: isub          
   236: isub          
   237: istore        10
   239: iload         10
   241: iload         12
   243: invokestatic  #26         // java.lang.Math.min:(int, int)int
   246: istore        16
   248: iload         10
   250: iload         16
   252: isub          
   253: istore        10
   255: iload         12
   257: iload         16
   259: isub          
   260: istore        12
   262: iload         14
   264: iload         16
   266: isub          
   267: istore        14
   269: iload         7
   271: iconst_1      
   272: if_icmpne     278
   275: iinc          
   278: iload         14
   280: ifge          300
   283: iload         10
   285: iload         14
   287: isub          
   288: istore        10
   290: iload         12
   292: iload         14
   294: isub          
   295: istore        12
   297: iconst_0      
   298: istore        14
   300: iconst_0      
   301: istore        17
   303: iload         7
   305: iload         10
   307: iadd          
   308: iload         11
   310: getstatic     #22         // N_5_BITS:int[]
   313: arraylength   
   314: if_icmpge     326
   317: getstatic     #22         // N_5_BITS:int[]
   320: iload         11
   322: iaload        
   323: goto          330
   326: iload         11
   328: iconst_3      
   329: imul          
   330: iadd          
   331: istore        23
   333: iload         12
   335: iconst_1      
   336: iadd          
   337: iload         13
   339: iconst_1      
   340: iadd          
   341: getstatic     #22         // N_5_BITS:int[]
   344: arraylength   
   345: if_icmpge     359
   348: getstatic     #22         // N_5_BITS:int[]
   351: iload         13
   353: iconst_1      
   354: iadd          
   355: iaload        
   356: goto          365
   359: iload         13
   361: iconst_1      
   362: iadd          
   363: iconst_3      
   364: imul          
   365: iadd          
   366: istore        24
   368: iload         23
   370: bipush        64
   372: if_icmpge     1070
   375: iload         24
   377: bipush        64
   379: if_icmpge     1070
   382: iload         23
   384: bipush        32
   386: if_icmpge     728
   389: iload         24
   391: bipush        32
   393: if_icmpge     728
   396: lload_2       
   397: l2i           
   398: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   401: iload         11
   403: iaload        
   404: imul          
   405: iload         10
   407: ishl          
   408: istore        25
   410: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   413: iload         13
   415: iaload        
   416: iload         12
   418: ishl          
   419: istore        26
   421: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   424: iload         15
   426: iaload        
   427: iload         14
   429: ishl          
   430: istore        27
   432: iload         26
   434: bipush        10
   436: imul          
   437: istore        28
   439: iconst_0      
   440: istore        17
   442: iload         25
   444: iload         26
   446: idiv          
   447: istore        22
   449: bipush        10
   451: iload         25
   453: iload         26
   455: irem          
   456: imul          
   457: istore        25
   459: iload         27
   461: bipush        10
   463: imul          
   464: istore        27
   466: iload         25
   468: iload         27
   470: if_icmpge     477
   473: iconst_1      
   474: goto          478
   477: iconst_0      
   478: istore        18
   480: iload         25
   482: iload         27
   484: iadd          
   485: iload         28
   487: if_icmple     494
   490: iconst_1      
   491: goto          495
   494: iconst_0      
   495: istore        19
   497: getstatic     #15         // $assertionsDisabled:boolean
   500: ifne          520
   503: iload         22
   505: bipush        10
   507: if_icmplt     520
   510: new           #21         // java.lang.AssertionError
   513: dup           
   514: iload         22
   516: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   519: athrow        
   520: iload         22
   522: ifne          536
   525: iload         19
   527: ifne          536
   530: iinc          
   533: goto          552
   536: aload_0       
   537: getfield      #6          // digits:char[]
   540: iload         17
   542: iinc          
   545: bipush        48
   547: iload         22
   549: iadd          
   550: i2c           
   551: castore       
   552: iload         5
   554: ifeq          571
   557: iload         9
   559: bipush        -3
   561: if_icmplt     571
   564: iload         9
   566: bipush        8
   568: if_icmplt     577
   571: iconst_0      
   572: dup           
   573: istore        18
   575: istore        19
   577: iload         18
   579: ifne          701
   582: iload         19
   584: ifne          701
   587: iload         25
   589: iload         26
   591: idiv          
   592: istore        22
   594: bipush        10
   596: iload         25
   598: iload         26
   600: irem          
   601: imul          
   602: istore        25
   604: iload         27
   606: bipush        10
   608: imul          
   609: istore        27
   611: getstatic     #15         // $assertionsDisabled:boolean
   614: ifne          634
   617: iload         22
   619: bipush        10
   621: if_icmplt     634
   624: new           #21         // java.lang.AssertionError
   627: dup           
   628: iload         22
   630: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   633: athrow        
   634: iload         27
   636: i2l           
   637: lconst_0      
   638: lcmp          
   639: ifle          676
   642: iload         25
   644: iload         27
   646: if_icmpge     653
   649: iconst_1      
   650: goto          654
   653: iconst_0      
   654: istore        18
   656: iload         25
   658: iload         27
   660: iadd          
   661: iload         28
   663: if_icmple     670
   666: iconst_1      
   667: goto          671
   670: iconst_0      
   671: istore        19
   673: goto          682
   676: iconst_1      
   677: istore        18
   679: iconst_1      
   680: istore        19
   682: aload_0       
   683: getfield      #6          // digits:char[]
   686: iload         17
   688: iinc          
   691: bipush        48
   693: iload         22
   695: iadd          
   696: i2c           
   697: castore       
   698: goto          577
   701: iload         25
   703: iconst_1      
   704: ishl          
   705: iload         28
   707: isub          
   708: i2l           
   709: lstore        20
   711: aload_0       
   712: iload         25
   714: ifne          721
   717: iconst_1      
   718: goto          722
   721: iconst_0      
   722: putfield      #4          // exactDecimalConversion:boolean
   725: goto          1426
   728: lload_2       
   729: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   732: iload         11
   734: laload        
   735: lmul          
   736: iload         10
   738: lshl          
   739: lstore        25
   741: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   744: iload         13
   746: laload        
   747: iload         12
   749: lshl          
   750: lstore        27
   752: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   755: iload         15
   757: laload        
   758: iload         14
   760: lshl          
   761: lstore        29
   763: lload         27
   765: ldc2_w        #29         // 10
   768: lmul          
   769: lstore        31
   771: iconst_0      
   772: istore        17
   774: lload         25
   776: lload         27
   778: ldiv          
   779: l2i           
   780: istore        22
   782: ldc2_w        #29         // 10
   785: lload         25
   787: lload         27
   789: lrem          
   790: lmul          
   791: lstore        25
   793: lload         29
   795: ldc2_w        #29         // 10
   798: lmul          
   799: lstore        29
   801: lload         25
   803: lload         29
   805: lcmp          
   806: ifge          813
   809: iconst_1      
   810: goto          814
   813: iconst_0      
   814: istore        18
   816: lload         25
   818: lload         29
   820: ladd          
   821: lload         31
   823: lcmp          
   824: ifle          831
   827: iconst_1      
   828: goto          832
   831: iconst_0      
   832: istore        19
   834: getstatic     #15         // $assertionsDisabled:boolean
   837: ifne          857
   840: iload         22
   842: bipush        10
   844: if_icmplt     857
   847: new           #21         // java.lang.AssertionError
   850: dup           
   851: iload         22
   853: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   856: athrow        
   857: iload         22
   859: ifne          873
   862: iload         19
   864: ifne          873
   867: iinc          
   870: goto          889
   873: aload_0       
   874: getfield      #6          // digits:char[]
   877: iload         17
   879: iinc          
   882: bipush        48
   884: iload         22
   886: iadd          
   887: i2c           
   888: castore       
   889: iload         5
   891: ifeq          908
   894: iload         9
   896: bipush        -3
   898: if_icmplt     908
   901: iload         9
   903: bipush        8
   905: if_icmplt     914
   908: iconst_0      
   909: dup           
   910: istore        18
   912: istore        19
   914: iload         18
   916: ifne          1042
   919: iload         19
   921: ifne          1042
   924: lload         25
   926: lload         27
   928: ldiv          
   929: l2i           
   930: istore        22
   932: ldc2_w        #29         // 10
   935: lload         25
   937: lload         27
   939: lrem          
   940: lmul          
   941: lstore        25
   943: lload         29
   945: ldc2_w        #29         // 10
   948: lmul          
   949: lstore        29
   951: getstatic     #15         // $assertionsDisabled:boolean
   954: ifne          974
   957: iload         22
   959: bipush        10
   961: if_icmplt     974
   964: new           #21         // java.lang.AssertionError
   967: dup           
   968: iload         22
   970: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   973: athrow        
   974: lload         29
   976: lconst_0      
   977: lcmp          
   978: ifle          1017
   981: lload         25
   983: lload         29
   985: lcmp          
   986: ifge          993
   989: iconst_1      
   990: goto          994
   993: iconst_0      
   994: istore        18
   996: lload         25
   998: lload         29
  1000: ladd          
  1001: lload         31
  1003: lcmp          
  1004: ifle          1011
  1007: iconst_1      
  1008: goto          1012
  1011: iconst_0      
  1012: istore        19
  1014: goto          1023
  1017: iconst_1      
  1018: istore        18
  1020: iconst_1      
  1021: istore        19
  1023: aload_0       
  1024: getfield      #6          // digits:char[]
  1027: iload         17
  1029: iinc          
  1032: bipush        48
  1034: iload         22
  1036: iadd          
  1037: i2c           
  1038: castore       
  1039: goto          914
  1042: lload         25
  1044: iconst_1      
  1045: lshl          
  1046: lload         31
  1048: lsub          
  1049: lstore        20
  1051: aload_0       
  1052: lload         25
  1054: lconst_0      
  1055: lcmp          
  1056: ifne          1063
  1059: iconst_1      
  1060: goto          1064
  1063: iconst_0      
  1064: putfield      #4          // exactDecimalConversion:boolean
  1067: goto          1426
  1070: iload         13
  1072: iload         12
  1074: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1077: astore        25
  1079: aload         25
  1081: invokevirtual #30         // sun.misc.FDBigInteger.getNormalizationBias:()int
  1084: istore        26
  1086: aload         25
  1088: iload         26
  1090: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1093: astore        25
  1095: lload_2       
  1096: iload         11
  1098: iload         10
  1100: iload         26
  1102: iadd          
  1103: invokestatic  #32         // sun.misc.FDBigInteger.valueOfMulPow52:(long, int, int)sun.misc.FDBigInteger
  1106: astore        27
  1108: iload         15
  1110: iconst_1      
  1111: iadd          
  1112: iload         14
  1114: iload         26
  1116: iadd          
  1117: iconst_1      
  1118: iadd          
  1119: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1122: astore        28
  1124: iload         13
  1126: iconst_1      
  1127: iadd          
  1128: iload         12
  1130: iload         26
  1132: iadd          
  1133: iconst_1      
  1134: iadd          
  1135: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1138: astore        29
  1140: iconst_0      
  1141: istore        17
  1143: aload         27
  1145: aload         25
  1147: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1150: istore        22
  1152: aload         27
  1154: aload         28
  1156: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1159: ifge          1166
  1162: iconst_1      
  1163: goto          1167
  1166: iconst_0      
  1167: istore        18
  1169: aload         29
  1171: aload         27
  1173: aload         28
  1175: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1178: ifgt          1185
  1181: iconst_1      
  1182: goto          1186
  1185: iconst_0      
  1186: istore        19
  1188: getstatic     #15         // $assertionsDisabled:boolean
  1191: ifne          1211
  1194: iload         22
  1196: bipush        10
  1198: if_icmplt     1211
  1201: new           #21         // java.lang.AssertionError
  1204: dup           
  1205: iload         22
  1207: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1210: athrow        
  1211: iload         22
  1213: ifne          1227
  1216: iload         19
  1218: ifne          1227
  1221: iinc          
  1224: goto          1243
  1227: aload_0       
  1228: getfield      #6          // digits:char[]
  1231: iload         17
  1233: iinc          
  1236: bipush        48
  1238: iload         22
  1240: iadd          
  1241: i2c           
  1242: castore       
  1243: iload         5
  1245: ifeq          1262
  1248: iload         9
  1250: bipush        -3
  1252: if_icmplt     1262
  1255: iload         9
  1257: bipush        8
  1259: if_icmplt     1268
  1262: iconst_0      
  1263: dup           
  1264: istore        18
  1266: istore        19
  1268: iload         18
  1270: ifne          1372
  1273: iload         19
  1275: ifne          1372
  1278: aload         27
  1280: aload         25
  1282: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1285: istore        22
  1287: getstatic     #15         // $assertionsDisabled:boolean
  1290: ifne          1310
  1293: iload         22
  1295: bipush        10
  1297: if_icmplt     1310
  1300: new           #21         // java.lang.AssertionError
  1303: dup           
  1304: iload         22
  1306: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1309: athrow        
  1310: aload         28
  1312: invokevirtual #36         // sun.misc.FDBigInteger.multBy10:()sun.misc.FDBigInteger
  1315: astore        28
  1317: aload         27
  1319: aload         28
  1321: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1324: ifge          1331
  1327: iconst_1      
  1328: goto          1332
  1331: iconst_0      
  1332: istore        18
  1334: aload         29
  1336: aload         27
  1338: aload         28
  1340: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1343: ifgt          1350
  1346: iconst_1      
  1347: goto          1351
  1350: iconst_0      
  1351: istore        19
  1353: aload_0       
  1354: getfield      #6          // digits:char[]
  1357: iload         17
  1359: iinc          
  1362: bipush        48
  1364: iload         22
  1366: iadd          
  1367: i2c           
  1368: castore       
  1369: goto          1268
  1372: iload         19
  1374: ifeq          1403
  1377: iload         18
  1379: ifeq          1403
  1382: aload         27
  1384: iconst_1      
  1385: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1388: astore        27
  1390: aload         27
  1392: aload         29
  1394: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1397: i2l           
  1398: lstore        20
  1400: goto          1406
  1403: lconst_0      
  1404: lstore        20
  1406: aload_0       
  1407: aload         27
  1409: getstatic     #37         // sun.misc.FDBigInteger.ZERO:sun.misc.FDBigInteger
  1412: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1415: ifne          1422
  1418: iconst_1      
  1419: goto          1423
  1422: iconst_0      
  1423: putfield      #4          // exactDecimalConversion:boolean
  1426: aload_0       
  1427: iload         9
  1429: iconst_1      
  1430: iadd          
  1431: putfield      #8          // decExponent:int
  1434: aload_0       
  1435: iconst_0      
  1436: putfield      #9          // firstDigitIndex:int
  1439: aload_0       
  1440: iload         17
  1442: putfield      #10         // nDigits:int
  1445: iload         19
  1447: ifeq          1508
  1450: iload         18
  1452: ifeq          1504
  1455: lload         20
  1457: lconst_0      
  1458: lcmp          
  1459: ifne          1490
  1462: aload_0       
  1463: getfield      #6          // digits:char[]
  1466: aload_0       
  1467: getfield      #9          // firstDigitIndex:int
  1470: aload_0       
  1471: getfield      #10         // nDigits:int
  1474: iadd          
  1475: iconst_1      
  1476: isub          
  1477: caload        
  1478: iconst_1      
  1479: iand          
  1480: ifeq          1508
  1483: aload_0       
  1484: invokespecial #38         // roundup:()void
  1487: goto          1508
  1490: lload         20
  1492: lconst_0      
  1493: lcmp          
  1494: ifle          1508
  1497: aload_0       
  1498: invokespecial #38         // roundup:()void
  1501: goto          1508
  1504: aload_0       
  1505: invokespecial #38         // roundup:()void
  1508: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec7848896c24704c8bd144894c24644488661a4488661949bbaddeaddeaddeaddef3490fbcdab9350000008bf92bfb8bcf2bcaffc983f9010f8d4904000083fa3f0f8d500c0000b90000000083faeb0f8cab0a000083f91b0f83e50300008bc74103448b1083f8400f8d220c000085c90f84840400008bc1488974245848bdffffffffffff0f00498bca4823cd49bd000000000000f03f490bcdc4e1f96ec1c4c17b100d00000000c5fb5cc1c4c17b100d00000000c5fb59c1c4c17b100d00000000c5fb58c1c5f157c9c5f32acac4c17b101500000000c5f359cac5fb58c1c4c1f97ec549be000000000000008048b9000000000000f07f4923cd48c1e9348bc9448d8901fcffff4585c90f8d2e04000048b9ffffffffffffff7f4985cd0f84411000004d85f5b90000000041b9ffffffff440f44c9458bd9418bcbf7d983f9010f8d8d030000c744245401000000c7442450000000008bf0b9000000004183fb010f8d4a030000c744244c0300000041be0100000041bd0000000044896c244803f2ba340000002bd3448bce442bca412bf0443bc80f8fae020000412bc1412bf183ff0141b9000000000f84e503000085f60f8d0a0000002bc6442bcebe00000000458bc14403c78bf98bcb49d3ea4c8954244083ff1b0f83140b000048b9addeaddeaddeadde8b54b910418bd803da4183fe1b0f8d6f0b00004183fe1b0f832b0e000083fb400f8d36080000428b4cb110448bc18bd0ffc28bca4103c883f9400f8dda030000488b6c2458448b751c83fb200f8ccd08000083ff1b0f83560e00004183fd1b0f83141000008954244c895c2428448944242448b9addeaddeaddeadde4c8b44f9104a8b4ce910498bd8490fafda4c8be9418bc948d3e38bc849d3e5488bc3489949f7fd498bdd48c1e3034d8bd549d1e24903da448bd18bce49d3e0498bc848c1e10349d1e04903c84c8bc249c1e00348d1e24c03c2488bd14903d08bc085c00f84d002000042833cf50c000000000f84d70f0000448b4c24648d403066428904f5100000004585c941ba010000000f8477070000418bc1493bc8410f9fc1450fb6c9483bd3400f9fc7400fb6ff4183fbfd0f8c7d0e00004183fb080f8d780900004585f60f84450e0000428b34f50c00000049c1e60344894c2424448bcf488bf9498bc8448b442424660f1f4400004585c00f859c0000004585c90f852c010000413bf20f86ce0b0000488bc1489949f7fd448bc0458d48306647894c56104c8bca49c1e10348d1e24c03ca41ffc2488bd748c1e20348d1e74803d74883fa010f8c31000000493bd10f9fc10fb6c9488bfa4903f9483bfb400f9fc7400fb6ff850500000000448bc1498bc9448bcf488bfae978ffffff850500000000488bfa498bc941b90100000041b801000000e95bffffff488bf148d1e6482bf34885c90f94c20fb6d2488bce488bf5885619418bdbffc3895e0c44896610448956144585c90f8532000000488b6c24704883c478850500000000c5f877c38bc1e92efcffff442bc82bf083ff01b8000000000f8554fdffffe9340100004585c00f8555010000666690e80000000090488b6c24704883c478850500000000c5f877c383fa3f0f8cbcfbffffe934090000488bf148d1e6482bf34885c90f94c20fb6d2488bce488bf5e962ffffff458beb41ffc5458bf541d1e64503f54103c3448974244c458bf5458bebe9a8fcffffbe01000000412bf3448bc941d1e1452bcb8be8412beb8974245444894c24508bf5e964fcffff83fa340f8ddc0a0000413bd00f8fa507000041b800000000b9340000002bca49d3eaba00000000498bca6690e80000000090488b6c24704883c478850500000000c5f877c34183f9340f8dcd0a0000498bf54823f549bb0000000000001000490bf341bb33040000442bd9418bcb48d3ee448bde4d85f50f84c2fbffff418bc948d3ed4985ed0f8405090000b9ffffffff412bcb448bd9e9a3fbffffffcee914fcffff8b442464483bd30f8f8c0c000041ffcb85c041ba000000000f8544fdffffe9300500004885c90f84220b00004883f9010f8c1c000000666690e80000000090488b6c24704883c478850500000000c5f877c3488b6c24704883c478850500000000c5f877c38974243c448bd044894c24344489742430897c245044895c242c418bf5418bd244895424380f1f8000000000e800000000908500488bf04889442418e80000000090488b7424188bd0894424240f1f8000000000e8000000009048894424188b4c2424034c2434488b7424408b5424500f1f4000e80000000090488944244085008b7424240374243c8bd6ffc28b742454666690e800000000908b742438037424248bd6ffc28b74243048894424100f1f440000e8000000009048894424088500488b742440488b54241890e80000000090488b742440488b542410894424300f1f4000e8000000009085c0410f9cc2450fb6d2488b742408488b542440488b4c241044895424240f1f4000e80000000090448b5424304585d20f847d030000488b7424588b561c83f801410f9cc3450fb6db833cd50c000000000f84eb090000458d523066448914d51000000041ba01000000448b5c242c8b6c246444895c242c85ed0f84740300004183fbfd0f8ced0200004183fb080f8dda05000083f8010f9cc20fb6d2448bc28b542424488b5c2410418bc8448bcae9570100000f1f800000000085c90f85f50100008503488bf0498bd248895c24106690e80000000090488b7424108944243090e800000000908b700c8b50104c8b542440418b4a1003f2448bd945035a0c443bde0f8f1f010000413bf30f8f9c010000448bc2448bd9e95b0000000f1f80000000000f1f80000000004183f8010f8c86070000418b7218418bd3ffca3b14f50c0000000f83b2090000418bd8ffcb423b1ccd0c0000000f83b607000048c1e6038b7496108b4c99103bce0f851c000000448bc3448bda448b4818418bc948c1e1034183fb017da2e9a40000003bcebeffffffffba010000000f47d685d2410f9cc1450fb6c9488b742408498bd2488bc8488944241044894c2438660f1f440000e80000000090488b7424588b561c448b542424443b14d50c0000000f83b40600008b5c243048c1e203448d5b306646895c521083f8010f9cc10fb6c941ffc2488b5c2410448b4c24384489542424488b4424404c8b5424184585c90f8498feffffe990000000ba01000000e96bffffff48894424108b5c2430488b742458448b5424244183f8010f8ca5090000458bd8e9290000000f1f4000418bd3ffca423b14cd0c0000000f83df0400004d63db42837c990c000f851d000000448bda4183fb017dd5ba00000000488b4424104c8b542440e903ffffffbaffffffff488b4424104c8b542440e9effeffffbaffffffffe9e5feffff448b542424488b74245885c90f840e0100004585c90f84c4000000894c243044894c2438488b742440ba010000000f1f4000e800000000908500488bf0488b5424084889442408666690e800000000904863f0488b442408488974241848baaddeaddeaddeadde488bf0e8000000009085c00f84e8030000ba00000000488b4c2418448b4c2430448b442438448b542424448b5c242c488b742458e9d0f9ffff8974243c448bd044894c24344489742430897c245044895c242ce9b9fbffff41b800000000ba00000000e91dfdffffbf0000000041b900000000e9a6f8ffff488b44244048c744241800000000894c243044894c2438e962ffffff8b6c2464488b74245883f8010f8c76fcffff448b5c242c41ffcb41ba00000000e99bfcffff488b44244048c744241800000000894c243044894c2438e921ffffff41b800000000ba00000000e9a0fcffffbf0000000041b900000000e929f8ffff8bc1e971f5ffff8954244c895c242844894424248974243c8944243844894c2434897c245044895c242c488bf58b6c246483f9200f8d1a030000837c24500e0f8316040000837c24480e0f83c8030000438504f485ed0f8494030000837c242cfd0f8c9f050000837c242c080f8d3c030000448b6c245048b8addeaddeaddeadde428b54a8108b4c243c448bd241d3e2418bcac1e10341d1e24403d1418bcac1e103458bda41d1e34403d94183fb010f8c0406000042833cf50c000000020f82a5040000448b4c2448428b4488108b4c24400fafd18b4c2434d3e28b4c2438448bc041d3e08bc29941f7f885c00f840f0600008bcac1e103d1e203ca443bd10f8fb2040000418bd0c1e203418bd8d1e303da8bd14103d23bd30f8f600600008d403066428904f5100000008bc19941f7f8448bca41c1e103d1e24403ca453bd90f8e8e0300004503d9443bdb0f8f81020000448d503066468914f512000000458bd141d1e2442bd34963ca4585c90f94c20fb6d241b90000000041b80100000041ba02000000448b5c242ce984f7ffff8bc1e9e1f3ffffb800000000e9d7f3ffffbf0000000041b900000000e978f6ffff8b6c2464448bda452bd841ffcb4183fb020f8cf600000049b9addeaddeaddeadde458b4968428b0ccd0c000000413bcb0f8fe900000041b800000000e920f8ffff8974243c8944243844894c24344489742430458bcd448bef44895c242c49bbaddeaddeaddeadde8b6c2464488b742458448b5424504503d0837c24301b418bda0f8dc40000008b5424504c8b542440498bcb8b74243c458be9448b5c242c448b4c2434e9a1f4ffff41b800000000ba00000000e926faffff8974243c8944243844894c24344489742430418bcd448bef44895c242c8b6c24644c8b74245883fb400f8d51000000448b44244c4c8b5424408b74243c448b4c2434448b5c242c448b742430448be9e958f4ffff41b800000000e949f7ffff8bc1e9a8f2ffff4c8bf6413bcb0f864c02000049c1e103478b449910e928f7ffff448b54243844896c2450448be9e920f8ffff418bc94c8bf6eb8c4c8b5424188b4c2430448b4c2438448b5c2424448b44242c4c8b74245841c7879c020000ed40faff4d89a7a8020000e800000000904c8bf641c7879c020000e5dffaff4d89a7a8020000e8000000009041baed83fbff8b5c24288b7c24244c8b4424408b4c2448448b6c24504c8bf68b74243c4589979c0200004d89a7a8020000e8000000009041bbed83faff8b6c24644c8b74245845899f9c0200004d89a7a8020000e8000000009041baed59fbff8b5c24288b7c24244c8b4424408b4c2448448b6c24504c8bf68b74243ceba441bbed56fbff4c8bf645899f9c0200004d89a7a8020000e8000000009041baed5bfbff8b5c24288b7c24244c8b4424408b4c2448448b6c24504c8bf68b74243ce95fffffff41bae578fbff8b5c24288b7c24244c8b4424408b4c2448448b6c24504c8bf68b74243ce937ffffff4c8bf541c7879c020000e539faff4d89a7a8020000e8000000009041bae580fbff8b5c24288b7c24244c8b4424408b4c2448448b6c24504c8bf68b74243ce9f4feffff448b4c24388b5c24304c8bf641c7879c020000e5affaff4d89a7a8020000e8000000009048894424108b5c24304c8b74245841baedd8faff488b4424104589979c0200004d89a7a8020000e8000000009041bbed57fbffe9fafeffff41bbeda8fbff8b6c24644c8bf645899f9c0200004d89a7a8020000e8000000009048894424108b5c24304c8b74245841bae5bffaffebaa41bbed84faff8b6c24644c8bf6e972feffff41bbe599fbffebbc8974243c8944243844894c2434418bcd448bef44895c242c8b6c24644c8b74245841c7879c020000e58afbff4d89a7a8020000e8000000009041bae57bfaff8b54244c8b5c24288b7c24244c8b4424408b4424388b4c2448448b5c242c4c8bf68b74243ce9defdffff418bcd448bef4c8bf5418bf84d8bc28b6c246441bae549fbffe9c0fdffff41baed70fbff8b54244c8b5c24288b7c24244c8b4424408b442438418bc9448b5c242c4c8bf68b74243c448b4c2434e98cfdffff4c8bf641c7879c020000ed87faff4d89a7a8020000e8000000009041baed5afbff8b5c24288b7c24244c8b4424408b4c2448448b6c24504c8bf68b74243ce949fdffff8b4c24244c8b4c2408488b5c2410488b4424404c8b4424188b6c24644c8bf641c7879c020000e56efaff4d89a7a8020000e8000000009041bbed85faff8b6c24644c8bf6e923fdffff4c8bf548baaddeaddeaddeadde41c7879c020000f542faff498997a8020000e800000000904c8bf58be841c7879c020000ed0dfbff4d89a7a8020000e8000000009041baed58fbff8b54244c8b5c24288b7c24244c8b4424408b4424388b4c2448448b5c242c4c8bf68b74243ce98efcffff48894424108b5c24304c8b74245841bae5cefaffe9befdffff41baed6efbff8b54244c8b5c24288b7c24244c8b4424408b442438418bc9448b5c242c4c8bf68b74243c448b4c2434e941fcffff8b54244c8b5c24284c8b4424408b4c2448448bef4c8bf58b7c24248be8418bc241baed1bfbffe916fcffff418bcd448bef4c8bf5418bf84d8bc28b6c246441bae541fbffe9f8fbffff41baed6ffbff8b54244c8b5c24288b7c24244c8b4424408b442438418bc9448b5c242c4c8bf68b74243c448b4c2434e9c4fbffff8b54244c8b5c24284c8b442440418bc28b4c2448448bef4c8bf541bae573faff8b7c24248b6c2464e997fbffff488b4424104c8bf641baedeafaffe9cdfcffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1ffd8396 slotKind: QWORD  <||@
  Comment 48 6 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 51 8 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 56 10 MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 60 12 MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 64 14 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 64 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 74 16 rbx|DWORD = TZCNT r10|QWORD size: QWORD  <||@
  Comment 79 18 rcx|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 84 20 rdi|DWORD = SUB (x: rcx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 88 22 rcx|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 92 24 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 94 26 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 103 block B1 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 106 34 BRANCH trueDestinationProbability: 0.9996262583639761 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 112 block B2 null  <||@
  Comment 112 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 112 38 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 117 40 JUMP ~[] destination: B2 -> B6  <||@
  Comment 117 block B6 null  <||@
  Comment 117 58 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 117 60 CMP rdx|DWORD y: -21 size: DWORD  <||@
  Comment 120 62 BRANCH trueDestinationProbability: 6.874510040402823E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 126 block B8 null  <||@
  Comment 126 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 72 CMP rcx|DWORD y: 27 size: DWORD  <||@
  Comment 129 74 BRANCH trueDestinationProbability: 0.5135895145912284 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26  <||@
  Comment 135 block B9 null  <||@
  Comment 135 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 78 rax|DWORD = ADD (x: rdi|DWORD, ~y: [r11|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 142 80 CMP rax|DWORD y: 64 size: DWORD  <||@
  Comment 145 82 BRANCH trueDestinationProbability: 0.9987311433807979 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25  <||@
  Comment 151 block B10 null  <||@
  Comment 151 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 86 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 153 88 BRANCH trueDestinationProbability: 0.4020092226613966 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 159 block B24 null  <||@
  Comment 159 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 204 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 161 206 JUMP ~[] destination: B24 -> B28  <||@
  Comment 161 block B28 null  <||@
  Comment 161 226 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 161 228 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 166 230 rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 176 232 rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 182 234 r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000]  <||@
  Comment 192 236 rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 195 238 xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM  <||@
  Comment 200 240 xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 200 {DataSection[0x0]}  <||@
  Comment 209 242 xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 213 244 xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93]  <||@
  Comment 213 {DataSection[0x8]}  <||@
  Comment 222 246 xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 226 248 xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c]  <||@
  Comment 226 {DataSection[0x10]}  <||@
  Comment 235 250 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 239 252 xmm1|DOUBLE = VCVTSI2SD rdx|DWORD  <||@
  Comment 247 254 xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb]  <||@
  Comment 247 {DataSection[0x18]}  <||@
  Comment 256 256 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM  <||@
  Comment 260 258 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 264 260 r13|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 269 262 r14|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 279 264 rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 289 266 rcx|QWORD = AND (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 292 268 rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD  <||@
  Comment 296 270 rcx|DWORD = MOV rcx|QWORD size: DWORD  <||@
  Comment 298 272 r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD  <||@
  Comment 305 274 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 308 276 BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32  <||@
  Comment 314 block B29 null  <||@
  Comment 314 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 280 rcx|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff]  <||@
  Comment 324 282 TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 327 284 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 333 block B31 null  <||@
  Comment 333 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 298 TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 336 300 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 341 302 r9|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 351 304 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 354 306 JUMP ~[] destination: B31 -> B38  <||@
  Comment 354 block B38 null  <||@
  Comment 354 370 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 354 372 rcx|DWORD = NEG r11|DWORD size: DWORD  <||@
  Comment 359 374 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 362 376 BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 368 block B39 null  <||@
  Comment 368 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 380 stack:44|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 376 382 stack:48|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 384 384 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 386 386 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 391 388 JUMP ~[] destination: B39 -> B41  <||@
  Comment 391 block B41 null  <||@
  Comment 391 410 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 391 412 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 395 414 BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 401 block B42 null  <||@
  Comment 401 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 418 stack:52|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 409 420 r14|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 415 422 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 421 424 JUMP ~[] destination: B42 -> B44  <||@
  Comment 421 block B44 null  <||@
  Comment 421 444 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 421 446 stack:56|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 426 448 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 428 450 rdx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 433 452 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 435 454 r9|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 441 456 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 444 458 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 447 460 BRANCH trueDestinationProbability: 0.4463098071277339 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48  <||@
  Comment 453 block B48 null  <||@
  Comment 453 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 453 486 rax|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 456 488 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 459 490 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 462 496 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 468 492 BRANCH trueDestinationProbability: 0.3376150132094379 condition: = trueDestination: B48 -> B50 falseDestination: B48 -> B52  <||@
  Comment 474 block B52 null  <||@
  Comment 474 512 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 474 514 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 476 516 BRANCH trueDestinationProbability: 0.9998329866541154 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B55  <||@
  Comment 482 block B53 null  <||@
  Comment 482 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 482 520 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 484 522 r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 487 524 rsi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 492 526 JUMP ~[] destination: B53 -> B55  <||@
  Comment 492 block B55 null  <||@
  Comment 492 532 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 492 534 r8|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 498 536 rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 500 538 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 502 540 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 505 542 stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 510 544 CMP rdi|DWORD y: 27 size: DWORD  <||@
  Comment 513 546 BRANCH trueDestinationProbability: 0.9998329714381159 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59  <||@
  Comment 519 block B56 null  <||@
  Comment 519 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 519 550 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 519 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 529 552 rdx|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 533 554 rbx|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 538 556 CMP r14|DWORD y: 27 size: DWORD  <||@
  Comment 542 558 BRANCH trueDestinationProbability: 0.9998329739743084 condition: < trueDestination: B56 -> B61 falseDestination: B56 -> B58  <||@
  Comment 548 block B61 null  <||@
  Comment 548 640 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 548 642 CMP r14|DWORD y: 27 size: DWORD  <||@
  Comment 552 644 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B65  <||@
  Comment 558 block B62 null  <||@
  Comment 558 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 558 648 CMP rbx|DWORD y: 64 size: DWORD  <||@
  Comment 561 650 BRANCH trueDestinationProbability: 0.9842400133610677 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 567 block B63 null  <||@
  Comment 567 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 567 654 rcx|DWORD = MOV [rcx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 572 656 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 575 658 JUMP ~[] destination: B63 -> B69  <||@
  Comment 575 block B69 null  <||@
  Comment 575 738 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 575 740 rdx|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 579 742 rcx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 584 744 CMP rcx|DWORD y: 64 size: DWORD  <||@
  Comment 587 746 BRANCH trueDestinationProbability: 0.9643485236493783 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B132  <||@
  Comment 593 block B70 null  <||@
  Comment 593 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 593 750 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 598 752 r14|DWORD[.] = MOV [rbp|QWORD[.] + 28] size: DWORD  <||@
  Comment 602 754 CMP rbx|DWORD y: 32 size: DWORD  <||@
  Comment 605 756 BRANCH trueDestinationProbability: 8.798732982450153E-4 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B99  <||@
  Comment 611 block B99 null  <||@
  Comment 611 1282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 1284 CMP rdi|DWORD y: 27 size: DWORD  <||@
  Comment 614 1286 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B99 -> B100 falseDestination: B99 -> B130  <||@
  Comment 620 block B100 null  <||@
  Comment 620 1288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 620 1290 CMP r13|DWORD y: 27 size: DWORD  <||@
  Comment 624 1292 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B129  <||@
  Comment 630 block B101 null  <||@
  Comment 630 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 1296 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 634 1298 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 638 1300 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 643 1302 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 643 {Object[long[27]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 653 1304 r8|QWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 8 + 16] size: QWORD  <||@
  Comment 658 1306 rcx|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD  <||@
  Comment 663 1308 rbx|QWORD = IMUL (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 670 1310 r13|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 673 1312 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 676 1314 rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 679 1316 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 681 1318 r13|QWORD = SHL (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 684 1322 rax|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 687 1324 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 689 1326 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:365]  <||@
  Comment 689 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2          |3  |4  |5               |6  |7  |8  |9          |10        |11         |12         |13              |14         |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbp|QWORD[.]    |-               |r10|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |rdi|DWORD  |rcx|DWORD  |stack:56|DWORD  |rsi|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |           |   |   |                |   |   |   |           |          |           |           |                |           |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 689 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 692 1328 rbx|QWORD = SHL r13|QWORD y: 3 size: QWORD  <||@
  Comment 699 1330 r10|QWORD = SHL r13|QWORD size: QWORD  <||@
  Comment 705 1332 rbx|QWORD = ADD (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 708 1334 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 711 1336 rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 713 1338 r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 716 1340 rcx|QWORD = SHL r8|QWORD y: 3 size: QWORD  <||@
  Comment 723 1342 r8|QWORD = SHL r8|QWORD size: QWORD  <||@
  Comment 726 1344 rcx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 729 1346 r8|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 736 1348 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 739 1350 r8|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 742 1352 rdx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 748 1354 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 750 1356 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 752 1358 BRANCH trueDestinationProbability: 0.1394488655468913 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B107  <||@
  Comment 758 block B107 null  <||@
  Comment 758 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 758 1418 CMP [r14|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365]  <||@
  Comment 758 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5               |6  |7  |8  |9          |10        |11         |12         |13              |14         |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbp|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |rdi|DWORD  |r10|DWORD  |stack:56|DWORD  |rsi|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |                |   |   |                |   |   |   |           |          |           |           |                |           |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 758 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 767 1420 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B109  <||@
  Comment 773 block B109 null  <||@
  Comment 773 1446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 773 1448 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 778 1450 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 781 1452 MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 790 1454 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 793 1460 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 799 1456 BRANCH trueDestinationProbability: 0.011112534426439506 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 805 block B111 null  <||@
  Comment 805 1468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 805 1472 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 808 1474 JUMP ~[] destination: B111 -> B112  <||@
  Comment 808 block B112 null  <||@
  Comment 808 1476 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 808 1478 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 811 1480 r9|DWORD = SETCC condition: >  <||@
  Comment 819 1482 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 822 1484 rdi|DWORD = SETCC condition: >  <||@
  Comment 830 1486 CMP r11|DWORD y: -3 size: DWORD  <||@
  Comment 834 1488 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114  <||@
  Comment 840 block B114 null  <||@
  Comment 840 1502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 1504 CMP r11|DWORD y: 8 size: DWORD  <||@
  Comment 844 1506 BRANCH trueDestinationProbability: 0.9996761815326328 condition: < trueDestination: B114 -> B117 falseDestination: B114 -> B116  <||@
  Comment 850 block B117 null  <||@
  Comment 850 1520 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 850 1522 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 853 1524 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B119  <||@
  Comment 859 block B119 null  <||@
  Comment 859 1538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 1540 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 867 1542 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3  <||@
  Comment 871 1544 stack:92|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 876 1546 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 879 1548 rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 882 1550 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 885 1552 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 890 1554 JUMP ~[] destination: B119 -> B120  <||@
  Comment 890 block B120 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 890 1556 [] = LABEL numbPhis: 5 align: true label: ?  <||@
  Comment 896 1558 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 899 1560 BRANCH trueDestinationProbability: 0.9147424652848216 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B128  <||@
  Comment 905 block B121 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 905 1562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 1564 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 908 1566 BRANCH trueDestinationProbability: 0.9573972653370932 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B127  <||@
  Comment 914 block B122 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 914 1568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 914 1570 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 917 1572 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B126  <||@
  Comment 923 block B123 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 923 1574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 923 1576 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 926 1578 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 928 1580 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:914]  <||@
  Comment 928 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|QWORD  |-   |r13|QWORD  |-   |rdi|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 928 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 931 1582 r8|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 934 1584 r9|DWORD = LEA [r8|DWORD + 48] size: DWORD  <||@
  Comment 938 1586 MOV (x: [r14|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 944 1588 r9|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 951 1590 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 954 1592 r9|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 957 1594 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 960 1596 rdx|QWORD = SHL rdi|QWORD y: 3 size: QWORD  <||@
  Comment 967 1598 rdi|QWORD = SHL rdi|QWORD size: QWORD  <||@
  Comment 970 1600 rdx|QWORD = ADD (x: rdx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 973 1602 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 977 1604 BRANCH trueDestinationProbability: 3.497146646258553E-4 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B125  <||@
  Comment 983 block B125 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 983 1620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 1622 CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 986 1624 rcx|DWORD = SETCC condition: >  <||@
  Comment 992 1626 rdi|QWORD = ADD (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 998 1628 CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1001 1630 rdi|DWORD = SETCC condition: >  <||@
  Comment 1009 1632 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1009 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18         |19         |20  |21  |22        |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |rcx|DWORD  |rdi|DWORD  |-   |-   |r8|DWORD  |-   |-   |r9|QWORD  |-   |r13|QWORD  |-   |rdx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 1009 {infopoint: SAFEPOINT}  <||@
  Comment 1009 11  <||@
  Comment 1015 1634 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1018 1636 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1021 1638 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1024 1640 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1027 1642 JUMP ~[] destination: B125 -> B120  <||@
  Comment 1032 block B124 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 1032 1606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 1608 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1032 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22        |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[1|0x1]  |int[1|0x1]  |-   |-   |r8|DWORD  |-   |-   |r9|QWORD  |-   |r13|QWORD  |-   |rdx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 1032 {infopoint: SAFEPOINT}  <||@
  Comment 1032 11  <||@
  Comment 1038 1610 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1041 1612 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1044 1614 r9|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1050 1616 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1056 1618 JUMP ~[] destination: B124 -> B120  <||@
  Comment 1061 block B128 null  <||@
  Comment 1061 1670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 1672 rsi|QWORD = SHL rcx|QWORD size: QWORD  <||@
  Comment 1067 1674 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD  <||@
  Comment 1070 1676 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1073 1678 rdx|DWORD = SETCC condition: =  <||@
  Comment 1079 1680 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1082 1682 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1085 1684 JUMP ~[] destination: B128 -> B195  <||@
  Comment 1085 block B195 null  <||@
  Comment 1085 2496 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 1085 2498 MOVB (x: [rsi|QWORD[.] + 25], y: rdx|DWORD) size: BYTE  <||@
  Comment 1088 2500 rbx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1093 2502 MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 1096 2504 MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1100 2506 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 1104 2508 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1107 2510 BRANCH trueDestinationProbability: 0.5799198372453163 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B197  <||@
  Comment 1113 block B196 null  <||@
  Comment 1113 2512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 2514 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1122 12  <||@
  Comment 1132 block B26 null  <||@
  Comment 1132 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1132 216 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1134 218 JUMP ~[] destination: B26 -> B28  <||@
  Comment 1139 block B45 null  <||@
  Comment 1139 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1139 464 r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1142 466 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1144 468 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 1147 474 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1152 470 BRANCH trueDestinationProbability: 0.3376150132094379 condition: = trueDestination: B45 -> B50 falseDestination: B45 -> B52  <||@
  Comment 1163 block B197 null  <||@
  Comment 1163 2516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1163 2518 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1166 2520 BRANCH trueDestinationProbability: 0.7217825002710615 condition: = trueDestination: B197 -> B198 falseDestination: B197 -> B199  <||@
  Comment 1172 block B198 null  <||@
  Comment 1172 2522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1172 2524 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505]  <||@
  Comment 1172 9  <||@
  Comment 1175 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1180 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1181 2526 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1190 12  <||@
  Comment 1200 block B4 null  <||@
  Comment 1200 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1200 50 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 1203 52 BRANCH trueDestinationProbability: 0.9996262583639761 condition: < trueDestination: B4 -> B6 falseDestination: B4 -> B27  <||@
  Comment 1214 block B127 null  <||@
  Comment 1214 1654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1214 1656 rsi|QWORD = SHL rcx|QWORD size: QWORD  <||@
  Comment 1220 1658 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD  <||@
  Comment 1223 1660 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1226 1662 rdx|DWORD = SETCC condition: =  <||@
  Comment 1232 1664 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1235 1666 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1238 1668 JUMP ~[] destination: B127 -> B195  <||@
  Comment 1243 block B43 null  <||@
  Comment 1243 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1243 428 r13|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1249 430 r14|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 1255 432 r14|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1258 434 rax|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1261 436 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1266 438 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1269 440 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1272 442 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1277 block B40 null  <||@
  Comment 1277 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1277 392 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1282 394 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1285 396 r9|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 1291 398 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1294 400 rbp|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1299 402 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1303 404 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1308 406 rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1310 408 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1315 block B11 null  <||@
  Comment 1315 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1315 92 CMP rdx|DWORD y: 52 size: DWORD  <||@
  Comment 1318 94 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22  <||@
  Comment 1324 block B12 null  <||@
  Comment 1324 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1324 98 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1327 100 BRANCH trueDestinationProbability: 0.0011119564581260066 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20  <||@
  Comment 1333 block B20 null  <||@
  Comment 1333 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1333 164 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1339 166 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1339 block B21 null  <||@
  Comment 1339 168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1339 170 rcx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 1344 172 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 1346 174 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1349 176 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1354 178 rcx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1357 180 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170]  <||@
  Comment 1357 9  <||@
  Comment 1359 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>}  <||@
  Comment 1364 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1365 182 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1374 12  <||@
  Comment 1384 block B32 null  <||@
  Comment 1384 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 310 CMP r9|DWORD y: 52 size: DWORD  <||@
  Comment 1388 312 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B204  <||@
  Comment 1394 block B33 null  <||@
  Comment 1394 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1394 316 rsi|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1400 318 r11|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 1410 320 rsi|QWORD = OR (x: rsi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1413 322 r11|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 1419 324 r11|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1422 326 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1425 328 rsi|QWORD = SHR (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1428 330 r11|DWORD = MOV rsi|QWORD size: DWORD  <||@
  Comment 1431 332 TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1434 334 BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B35  <||@
  Comment 1440 block B35 null  <||@
  Comment 1440 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1440 342 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1443 344 rbp|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1446 346 TEST (x: rbp|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1449 348 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 1455 block B37 null  <||@
  Comment 1455 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1455 362 rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1460 364 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1463 366 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1466 368 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1471 block B50 null  <||@
  Comment 1471 500 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1471 502 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 1473 504 JUMP ~[] destination: B50 -> B52  <||@
  Comment 1478 block B102 null  <||@
  Comment 1478 1360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1478 1362 rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1482 1364 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1485 1366 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B104  <||@
  Comment 1491 block B104 null  <||@
  Comment 1491 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1491 1394 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 1494 1396 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1496 1402 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1502 1398 BRANCH trueDestinationProbability: 0.011112534426439506 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B112  <||@
  Comment 1513 block B199 null  <||@
  Comment 1513 2528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1513 2530 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1516 2532 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B201  <||@
  Comment 1522 block B201 null  <||@
  Comment 1522 2544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 2546 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 1526 2548 BRANCH trueDestinationProbability: 0.37802026500389707 condition: < trueDestination: B201 -> B202 falseDestination: B201 -> B203  <||@
  Comment 1532 block B203 null  <||@
  Comment 1532 2554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1532 2556 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498]  <||@
  Comment 1532 9  <||@
  Comment 1535 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1540 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1541 2558 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1550 12  <||@
  Comment 1560 block B202 null  <||@
  Comment 1560 2550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1560 2552 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1569 12  <||@
  Comment 1579 block B132 null  <||@
  Comment 1579 1730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1579 1732 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1583 1734 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1586 1736 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1591 1738 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1596 1740 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1600 1742 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1605 1744 JUMP ~[] destination: B132 -> B134  <||@
  Comment 1605 block B134 null  <||@
  Comment 1605 1756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1605 1758 rsi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1608 1760 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1611 1762 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1616 1764 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074]  <||@
  Comment 1616 8  <||@
  Comment 1623 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1628 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1629 1766 NULLCHECK [rax|QWORD[.]] state [bci:1077]  <||@
  Comment 1629 [rax:0, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |                |   |   |                |   |   |   |                |                |                |                |                |                |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 1629 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1631 1768 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 1770 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 1772 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081]  <||@
  Comment 1639 {HotSpotMethod<FDBigInteger.getNormalizationBias()>}  <||@
  Comment 1639 9  <||@
  Comment 1644 [stack:24, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1645 1774 rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1650 1776 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1652 1778 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1656 1780 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090]  <||@
  Comment 1656 9  <||@
  Comment 1663 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 1668 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1669 1782 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1674 1784 rcx|DWORD = ADD (x: stack:92|DWORD, y: stack:76|DWORD) size: DWORD  <||@
  Comment 1682 1786 rsi|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1687 1788 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1691 1790 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103]  <||@
  Comment 1691 8  <||@
  Comment 1695 {HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>}  <||@
  Comment 1700 [stack:24, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1701 1792 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1706 1794 NULLCHECK [rax|QWORD[.]] state [bci:1106]  <||@
  Comment 1706 [stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |                |                |                |                |    |    |    |    |    |    |    |    |    |                    |                |    |    |    |    |    |     <||@
  Comment 1706 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1708 1796 rsi|DWORD = ADD (x: stack:92|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1716 1798 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1720 1800 rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1724 1802 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119]  <||@
  Comment 1724 8  <||@
  Comment 1727 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1732 [stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27                 |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:56|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |stack:64|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 1733 1804 rsi|DWORD = ADD (x: stack:72|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1741 1806 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1745 1808 rsi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1749 1810 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 1812 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135]  <||@
  Comment 1754 8  <||@
  Comment 1759 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1764 [stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-    <||@
  Comment 1765 1814 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1770 1816 NULLCHECK [rax|QWORD[.]] state [bci:1138]  <||@
  Comment 1770 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |                    |    |                   |                    |    |    |    |     <||@
  Comment 1770 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1772 1818 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1777 1820 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1782 1822 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147]  <||@
  Comment 1782 9  <||@
  Comment 1783 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 1788 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1789 1824 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1794 1826 rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 1828 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1803 1830 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156]  <||@
  Comment 1803 9  <||@
  Comment 1807 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 1812 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1813 1832 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1815 1834 r10|DWORD = SETCC condition: <  <||@
  Comment 1823 1836 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1828 1838 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1833 1840 rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1838 1842 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1843 1844 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175]  <||@
  Comment 1843 9  <||@
  Comment 1847 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 1852 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |stack:92|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1853 1846 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1858 1848 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1861 1850 BRANCH trueDestinationProbability: 0.10331442221558673 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B138  <||@
  Comment 1867 block B138 null  <||@
  Comment 1867 1874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1867 1876 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1872 1878 JUMP ~[] destination: B138 -> B139  <||@
  Comment 1872 block B139 null  <||@
  Comment 1872 1880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1872 1882 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 1875 1884 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1878 1886 r11|DWORD = SETCC condition: <  <||@
  Comment 1886 1888 CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227]  <||@
  Comment 1886 [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18              |19         |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |stack:92|DWORD  |r11|DWORD  |-   |-   |r10|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1886 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1894 1890 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141  <||@
  Comment 1900 block B141 null  <||@
  Comment 1900 1914 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1900 1916 r10|DWORD = LEA [r10|DWORD + 48] size: DWORD  <||@
  Comment 1904 1918 MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 1913 1920 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1919 1922 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1924 1924 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1928 1926 JUMP ~[] destination: B141 -> B142  <||@
  Comment 1928 block B142 null  <||@
  Comment 1928 1928 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1928 1930 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1933 1932 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1935 1934 BRANCH trueDestinationProbability: 0.04001194386383995 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144  <||@
  Comment 1941 block B144 null  <||@
  Comment 1941 1944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1941 1946 CMP r11|DWORD y: -3 size: DWORD  <||@
  Comment 1945 1948 BRANCH trueDestinationProbability: 0.2867807153965785 condition: < trueDestination: B144 -> B145 falseDestination: B144 -> B146  <||@
  Comment 1951 block B146 null  <||@
  Comment 1951 1958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1951 1960 CMP r11|DWORD y: 8 size: DWORD  <||@
  Comment 1955 1962 BRANCH trueDestinationProbability: 0.9952027911033581 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B148  <||@
  Comment 1961 block B147 null  <||@
  Comment 1961 1964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1961 1966 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1964 1968 rdx|DWORD = SETCC condition: <  <||@
  Comment 1970 1970 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1973 1972 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1977 1974 JUMP ~[] destination: B147 -> B149  <||@
  Comment 1977 block B149 null  <||@
  Comment 1977 1984 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1977 1986 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1982 1988 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1985 1990 r9|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1988 1998 JUMP ~[] destination: B149 -> B150  <||@
  Comment 1993 block B151 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 1993 2006 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2000 2008 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2002 2010 BRANCH trueDestinationProbability: 0.9926666536987687 condition: = trueDestination: B151 -> B152 falseDestination: B151 -> B187  <||@
  Comment 2008 block B152 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2008 2012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2008 2014 NULLCHECK [rbx|QWORD[.]] state [bci:1268]  <||@
  Comment 2008 [rax:0, rbx:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18          |19          |20  |21  |22  |23  |24  |25            |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |r10|QWORD[.]  |-   |rax|QWORD[.]  |Object[null]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2008 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2010 2016 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2013 2018 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2016 2020 stack:112|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2021 2022 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282]  <||@
  Comment 2021 9  <||@
  Comment 2023 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 2028 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2029 2024 rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2034 2026 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2038 2028 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312]  <||@
  Comment 2038 9  <||@
  Comment 2039 {HotSpotMethod<FDBigInteger.multBy10()>}  <||@
  Comment 2044 [stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2045 2030 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:1315]  <||@
  Comment 2045 [rax:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |    |    |    |    |                |    |    |                    |    |                   |    |                    |    |    |     <||@
  Comment 2045 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2048 2032 rdx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 2051 2034 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2056 2036 rcx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 2060 2038 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2062 2040 r11|DWORD = ADD (x: rcx|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2069 2042 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2072 2044 BRANCH trueDestinationProbability: 0.23168656987595593 condition: > trueDestination: B152 -> B153 falseDestination: B152 -> B154  <||@
  Comment 2078 block B154 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2078 2052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2078 2054 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2081 2056 BRANCH trueDestinationProbability: 4.944535213690093E-4 condition: > trueDestination: B154 -> B155 falseDestination: B154 -> B156  <||@
  Comment 2087 block B156 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2087 2064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2087 2066 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2090 2068 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2093 2070 JUMP ~[] destination: B156 -> B157  <||@
  Comment 2098 block B169 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2098 2178 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2112 2180 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 2116 2182 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B169 -> B170 falseDestination: B169 -> B172  <||@
  Comment 2122 block B172 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2122 2202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2122 2204 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 2126 2206 rdx|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2131 2208 CMP (x: rdx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321]  <||@
  Comment 2131 [rax:0, rcx:0, rsi:0, r9:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5         |6  |7 
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |r10|QWORD[.]  |rax|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2131 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2138 2210 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B172 -> B173 falseDestination: B172 -> B182  <||@
  Comment 2144 block B173 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2144 2212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2144 2214 rbx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 2149 2216 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321]  <||@
  Comment 2149 [rax:0, rcx:0, rsi:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5         |6  |7 
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |r10|QWORD[.]  |rax|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2149 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2157 2218 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B173 -> B174 falseDestination: B173 -> B180  <||@
  Comment 2163 block B174 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2163 2220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2163 2222 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3  <||@
  Comment 2167 2224 rsi|DWORD = MOV [rsi|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2171 2226 rcx|DWORD = MOV [rcx|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2175 2228 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2177 2230 BRANCH trueDestinationProbability: 0.0073559460563955865 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176  <||@
  Comment 2183 block B175 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2183 2232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2183 2234 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2186 2236 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2189 2238 JUMP ~[] destination: B175 -> B157  <||@
  Comment 2189 block B157 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2189 2072 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2189 2074 r9|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD  <||@
  Comment 2193 2076 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3  <||@
  Comment 2200 2078 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 2204 2080 BRANCH trueDestinationProbability: 0.007302231237322543 condition: < trueDestination: B157 -> B158 falseDestination: B157 -> B169  <||@
  Comment 2211 block B176 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2211 2240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2211 2242 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2213 2244 rsi|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2218 2246 rdx|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rsi|DWORD) condition: |>|  <||@
  Comment 2226 2248 JUMP ~[] destination: B176 -> B177  <||@
  Comment 2226 block B177 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2226 2250 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2226 2252 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2228 2254 r9|DWORD = SETCC condition: <  <||@
  Comment 2236 2256 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2241 2258 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2244 2260 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2247 2262 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2252 2264 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2257 2266 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340]  <||@
  Comment 2257 9  <||@
  Comment 2263 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 2268 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2269 2268 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2274 2270 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 2277 2272 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2282 2274 CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343]  <||@
  Comment 2282 [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |stack:72|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |           |                |    |    |    |                |    |    |                    |    |                   |                    |                    |    |    |     <||@
  Comment 2282 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2290 2276 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B177 -> B178 falseDestination: B177 -> B179  <||@
  Comment 2296 block B178 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2296 2278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2296 2280 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2300 2282 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3  <||@
  Comment 2304 2284 r11|DWORD = LEA [rbx|DWORD + 48] size: DWORD  <||@
  Comment 2308 2286 MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 2314 2288 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2317 2290 rcx|DWORD = SETCC condition: <  <||@
  Comment 2323 2292 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2326 2294 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2331 2296 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2336 2304 JUMP ~[] destination: B178 -> B150  <||@
  Comment 2336 block B150 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2336 2000 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 2336 1992 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2341 1994 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2346 1996 r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2351 2002 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2354 2004 BRANCH trueDestinationProbability: 0.9453137929132266 condition: = trueDestination: B150 -> B151 falseDestination: B150 -> B187  <||@
  Comment 2365 block B153 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2365 2046 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2365 2048 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2370 2050 JUMP ~[] destination: B153 -> B177  <||@
  Comment 2375 block B158 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2375 2082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2375 2084 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2380 2086 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2384 2088 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2389 2090 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2394 2092 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 2398 2094 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B158 -> B159 falseDestination: B158 -> B160  <||@
  Comment 2404 block B160 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2404 2106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2404 2108 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2407 2110 JUMP ~[] destination: B160 -> B161  <||@
  Comment 2412 block B163 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2412 2130 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2416 2132 rdx|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2421 2134 CMP (x: rdx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140, 1321]  <||@
  Comment 2421 [rcx:0, rsi:0, r9:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |r11|DWORD 
  at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18  |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2421 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2429 2136 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B163 -> B164 falseDestination: B163 -> B167  <||@
  Comment 2435 block B164 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2435 2138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2435 2140 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2438 2142 CMP [rcx|QWORD[.] + r11|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 2444 2144 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B164 -> B165 falseDestination: B164 -> B166  <||@
  Comment 2450 block B165 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2450 2146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2450 2148 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2453 2150 JUMP ~[] destination: B165 -> B161  <||@
  Comment 2453 block B161 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2453 2112 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2453 2114 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 2457 2116 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163  <||@
  Comment 2459 block B162 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2459 2118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2459 2120 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2464 2122 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2469 2126 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2474 2128 JUMP ~[] destination: B162 -> B177  <||@
  Comment 2479 block B166 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2479 2152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2479 2154 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2484 2156 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2489 2160 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2494 2162 JUMP ~[] destination: B166 -> B177  <||@
  Comment 2499 block B155 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2499 2058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2499 2060 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2504 2062 JUMP ~[] destination: B155 -> B177  <||@
  Comment 2509 block B187 null  <||@
  Comment 2509 2380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2509 2374 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2514 2376 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2519 2382 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2521 2384 BRANCH trueDestinationProbability: 0.056102655923604895 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B189  <||@
  Comment 2527 block B189 null  <||@
  Comment 2527 2398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2527 2400 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2530 2402 BRANCH trueDestinationProbability: 0.11919064179576351 condition: = trueDestination: B189 -> B190 falseDestination: B189 -> B191  <||@
  Comment 2536 block B191 null  <||@
  Comment 2536 2416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2536 2418 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2540 2420 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2545 2422 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2550 2424 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2555 2426 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385]  <||@
  Comment 2555 9  <||@
  Comment 2559 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 2564 [stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2565 2428 NULLCHECK [rax|QWORD[.]] state [bci:1388]  <||@
  Comment 2565 [rax:0, stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |                |                |    |    |    |    |    |    |    |    |    |                    |    |    |     <||@
  Comment 2565 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2567 2430 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2570 2432 rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2575 2434 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2580 2436 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394]  <||@
  Comment 2580 9  <||@
  Comment 2583 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2588 [stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27                  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 2589 2438 rsi|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2592 2440 rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2597 2442 stack:104|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2602 2444 JUMP ~[] destination: B191 -> B192  <||@
  Comment 2602 block B192 null  <||@
  Comment 2602 2446 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2602 2448 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498]  <||@
  Comment 2602 {Object[FDBigInteger@241972498]}  <||@
  Comment 2612 2450 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2615 2452 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412]  <||@
  Comment 2615 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2615 9  <||@
  Comment 2620 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20               |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |stack:104|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:40|QWORD[.]  |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |                |                |                 |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 2621 2454 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2623 2456 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B192 -> B193 falseDestination: B192 -> B194  <||@
  Comment 2629 block B194 null  <||@
  Comment 2629 2478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2629 2480 rdx|DWORD = MOVE input: byte[0|0x0]  <||@
  Comment 2634 2482 rcx|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 2639 2484 r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2644 2486 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2649 2488 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2654 2490 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2659 2492 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2664 2494 JUMP ~[] destination: B194 -> B195  <||@
  Comment 2669 block B64 null  <||@
  Comment 2669 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2669 662 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2673 664 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2676 666 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2681 668 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2686 670 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2690 672 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2695 674 JUMP ~[] destination: B64 -> B134  <||@
  Comment 2700 block B145 null  <||@
  Comment 2700 1950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2700 1952 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2706 1954 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2711 1956 JUMP ~[] destination: B145 -> B149  <||@
  Comment 2716 block B110 null  <||@
  Comment 2716 1458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2716 1462 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2721 1464 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2727 1466 JUMP ~[] destination: B110 -> B117  <||@
  Comment 2732 block B190 null  <||@
  Comment 2732 2404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2732 2406 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2737 2408 stack:104|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2746 2410 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2750 2412 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2755 2414 JUMP ~[] destination: B190 -> B192  <||@
  Comment 2760 block B135 null  <||@
  Comment 2760 1852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2760 1854 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2764 1856 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2769 1858 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2772 1860 BRANCH trueDestinationProbability: 0.3612716763005781 condition: < trueDestination: B135 -> B139 falseDestination: B135 -> B137  <||@
  Comment 2778 block B137 null  <||@
  Comment 2778 1866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2778 1868 r11|DWORD = DEC stack:84|DWORD size: DWORD  <||@
  Comment 2786 1870 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2792 1872 JUMP ~[] destination: B137 -> B142  <||@
  Comment 2797 block B188 null  <||@
  Comment 2797 2386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2797 2388 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2802 2390 stack:104|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2811 2392 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2815 2394 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2820 2396 JUMP ~[] destination: B188 -> B192  <||@
  Comment 2825 block B143 null  <||@
  Comment 2825 1936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2825 1938 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2831 1940 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2836 1942 JUMP ~[] destination: B143 -> B149  <||@
  Comment 2841 block B105 null  <||@
  Comment 2841 1400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2841 1404 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2846 1406 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2852 1408 JUMP ~[] destination: B105 -> B117  <||@
  Comment 2857 block B7 null  <||@
  Comment 2857 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2857 66 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2859 68 JUMP ~[] destination: B7 -> B28  <||@
  Comment 2864 block B71 null  <||@
  Comment 2864 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2864 760 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2868 762 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2872 764 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2877 766 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2881 768 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2885 770 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2890 772 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2894 774 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2899 776 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 2902 778 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2906 780 CMP rcx|DWORD y: 32 size: DWORD  <||@
  Comment 2909 782 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B98  <||@
  Comment 2915 block B72 null  <||@
  Comment 2915 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2915 786 CMP stack:48|DWORD y: 14 size: DWORD  <||@
  Comment 2920 788 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B97  <||@
  Comment 2926 block B73 null  <||@
  Comment 2926 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2926 792 CMP stack:56|DWORD y: 14 size: DWORD  <||@
  Comment 2931 794 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B96  <||@
  Comment 2937 block B74 null  <||@
  Comment 2937 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2937 798 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:365]  <||@
  Comment 2937 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5          |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |                |   |   |           |   |   |   |                |                |                |                |                |                |                |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 2937 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2941 800 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 2943 802 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 2949 block B76 null  <||@
  Comment 2949 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2949 834 CMP stack:84|DWORD y: -3 size: DWORD  <||@
  Comment 2954 836 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 2960 block B78 null  <||@
  Comment 2960 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2960 868 CMP stack:84|DWORD y: 8 size: DWORD  <||@
  Comment 2965 870 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B95  <||@
  Comment 2971 block B79 null  <||@
  Comment 2971 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2971 874 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2976 876 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 2976 {Object[int[14]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 2986 878 rdx|DWORD = MOV [rax|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2991 880 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2995 882 r10|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3001 884 rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 3007 886 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 3010 888 r10|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3013 890 rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 3019 892 r11|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 3025 894 r11|DWORD = ADD (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3028 896 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 3032 898 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B81  <||@
  Comment 3038 block B81 null  <||@
  Comment 3038 926 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3038 928 CMP [r14|DWORD[.] * 8 + 12] y: 2 size: DWORD  <||@
  Comment 3047 930 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 3053 block B83 null  <||@
  Comment 3053 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3053 960 r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3058 962 rax|DWORD = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3063 964 rcx|DWORD = MOV stack:64|QWORD size: DWORD  <||@
  Comment 3067 966 rdx|DWORD = IMUL (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3070 968 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3074 970 rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3076 972 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3080 974 r8|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3086 976 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3088 978 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 3089 980 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:365]  <||@
  Comment 3089 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5          |6  |7  |8  |9               |10              |11         |12              |13        |14              |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |r13|DWORD  |stack:72|DWORD  |r9|DWORD  |stack:68|DWORD  |r13|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |                |   |   |           |   |   |   |                |                |           |                |          |                |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 3089 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3092 982 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 3094 984 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 3100 block B85 null  <||@
  Comment 3100 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3100 1014 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3105 1016 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3107 1018 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3109 1020 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 3112 1022 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87  <||@
  Comment 3118 block B87 null  <||@
  Comment 3118 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3118 1052 rdx|DWORD = SHL r8|DWORD y: 3 size: DWORD  <||@
  Comment 3124 1054 rbx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 3129 1056 rbx|DWORD = ADD (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3131 1058 rdx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3136 1060 CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3138 1062 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 3144 block B89 null  <||@
  Comment 3144 1090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3144 1092 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 3147 1094 MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 3156 1096 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3158 1098 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 3159 1100 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:552]  <||@
  Comment 3159 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19          |20  |21  |22  |23  |24  |25         |26        |27         |28         |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[1|0x1]  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|DWORD  |r8|DWORD  |r10|DWORD  |rbx|DWORD  |-   |-   |-   |-    <||@
  Comment 3159 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3162 1102 r9|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3169 1104 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3171 1106 r9|DWORD = ADD (x: r9|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3174 1108 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3177 1110 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B93  <||@
  Comment 3183 block B90 null  <||@
  Comment 3183 1112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3183 1114 r11|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3186 1116 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3189 1118 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 3195 block B92 null  <||@
  Comment 3195 1128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3195 1130 r10|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 3199 1132 MOV (x: [r14|DWORD[.] * 8 + 18], y: r10|DWORD) size: WORD  <||@
  Comment 3208 1134 r10|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 3214 1136 r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 3217 1138 rcx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 3220 1140 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3223 1142 rdx|DWORD = SETCC condition: =  <||@
  Comment 3229 1144 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3235 1146 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3241 1148 r10|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3247 1150 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3252 1152 JUMP ~[] destination: B92 -> B195  <||@
  Comment 3257 block B25 null  <||@
  Comment 3257 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3257 210 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3259 212 JUMP ~[] destination: B25 -> B28  <||@
  Comment 3264 block B3 null  <||@
  Comment 3264 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3264 44 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3269 46 JUMP ~[] destination: B3 -> B28  <||@
  Comment 3274 block B116 null  <||@
  Comment 3274 1512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3274 1514 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3279 1516 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3285 1518 JUMP ~[] destination: B116 -> B117  <||@
  Comment 3290 block B13 null  <||@
  Comment 3290 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3290 104 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3294 106 r11|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 3300 108 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 3303 110 CMP r11|DWORD y: 2 size: DWORD  <||@
  Comment 3307 112 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 3313 block B15 null  <||@
  Comment 3313 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3313 122 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]  <||@
  Comment 3313 {Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]}  <||@
  Comment 3323 124 r9|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD  <||@
  Comment 3327 126 rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74]  <||@
  Comment 3327 [rsi:0, r9:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0           |1 
     locals:  |-           |- 
     stack:   |int[0|0x0]  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3327 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3335 128 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3338 130 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 3344 block B19 null  <||@
  Comment 3344 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3344 158 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3350 160 JUMP ~[] destination: B19 -> B21  <||@
  Comment 3355 block B59 null  <||@
  Comment 3355 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3355 588 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3359 590 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3363 592 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3368 594 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3373 596 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3376 598 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3379 600 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3384 602 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 3384 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 3394 604 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3398 606 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3403 608 r10|DWORD = ADD (x: stack:48|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 3411 610 CMP stack:80|DWORD y: 27 size: DWORD  <||@
  Comment 3416 616 rbx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3419 612 BRANCH trueDestinationProbability: 0.9998329739743084 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B66  <||@
  Comment 3425 block B60 null  <||@
  Comment 3425 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3425 618 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3429 620 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3434 628 rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3437 630 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3441 632 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3444 634 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3449 636 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3454 638 JUMP ~[] destination: B60 -> B61  <||@
  Comment 3459 block B148 null  <||@
  Comment 3459 1976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3459 1978 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3465 1980 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3470 1982 JUMP ~[] destination: B148 -> B149  <||@
  Comment 3475 block B58 null  <||@
  Comment 3475 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3475 566 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3479 568 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3483 570 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3488 572 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3493 574 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3496 576 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3499 578 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3504 580 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3508 582 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3513 584 JUMP ~[] destination: B58 -> B67  <||@
  Comment 3513 block B67 null  <||@
  Comment 3513 710 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3513 712 CMP rbx|DWORD y: 64 size: DWORD  <||@
  Comment 3516 714 BRANCH trueDestinationProbability: 0.9842400133610677 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B133  <||@
  Comment 3522 block B68 null  <||@
  Comment 3522 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3522 718 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3527 720 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3532 722 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3536 726 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3541 730 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3546 732 r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3551 734 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3554 736 JUMP ~[] destination: B68 -> B69  <||@
  Comment 3559 block B14 null  <||@
  Comment 3559 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3559 116 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3565 118 JUMP ~[] destination: B14 -> B21  <||@
  Comment 3570 block B27 null  <||@
  Comment 3570 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3570 222 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3572 224 JUMP ~[] destination: B27 -> B28  <||@
  Comment 3577 block B16 null  <||@
  Comment 3577 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3577 134 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3580 136 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3583 138 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 3589 block B17 null  <||@
  Comment 3589 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3589 142 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3  <||@
  Comment 3593 144 r8|DWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3598 148 JUMP ~[] destination: B17 -> B21  <||@
  Comment 3603 block B133 null  <||@
  Comment 3603 1746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3603 1748 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3608 1750 stack:48|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3613 1752 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3616 1754 JUMP ~[] destination: B133 -> B134  <||@
  Comment 3621 block B66 null  <||@
  Comment 3621 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3621 704 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3624 706 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3627 708 JUMP ~[] destination: B66 -> B67  <||@
  Comment 3629 block B193 null  <||@
  Comment 3629 2458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3629 2460 r10|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 3634 2462 rcx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3638 2464 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3643 2466 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3648 2468 r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3653 2470 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3658 2472 MOV [r15|QWORD + 668] y: -376595 size: DWORD  <||@
  Comment 3669 2474 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3676 2476 DEOPT info [bci:1415]  <||@
  Comment 3676 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3681 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415, duringCall: false, rethrow: false]
              |0             |1           |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20         |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-           |-  |-  |-  |-  |-  |-  |-  |r8|DWORD  |-   |-   |-   |-   |-   |-   |-   |r11|DWORD  |r9|DWORD  |rcx|DWORD  |r10|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |r14|QWORD[.]  |int[0|0x0]  |   |   |   |   |   |   |   |          |    |    |    |    |    |    |    |           |          |           |           |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 3682 block B167 null  <||@
  Comment 3682 2164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3682 2166 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3685 2168 JUMP ~[] destination: B167 -> B168  <||@
  Comment 3685 block B168 null  <||@
  Comment 3685 2170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3685 2172 MOV [r15|QWORD + 668] y: -335899 size: DWORD  <||@
  Comment 3696 2174 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3703 2176 DEOPT info [bci:0, 140, 1321]  <||@
  Comment 3703 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3708 [rcx:0, r14:0, stack:8, stack:16, stack:24, stack:64]at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |r11|DWORD 
  at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 3709 block B98 null  <||@
  Comment 3709 1254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3709 1256 r10|DWORD = MOVE input: int[-293907|0xfffffffffffb83ed]  <||@
  Comment 3715 1260 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3719 1262 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3723 1264 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3728 1270 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3732 1272 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3737 1276 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3740 1278 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3744 1280 JUMP ~[] destination: B98 -> B131  <||@
  Comment 3744 block B131 null  <||@
  Comment 3744 1722 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3744 1724 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3751 1726 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3758 1728 DEOPT info [bci:365]  <||@
  Comment 3758 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3763 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0             |1          |2         |3  |4  |5          |6  |7  |8  |9          |10        |11         |12         |13         |14         |15         |16  |17  |18  |19  |20  |21  |22  |23         |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-          |r8|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |r13|DWORD  |rax|DWORD  |rcx|DWORD  |rsi|DWORD  |r13|DWORD  |-   |-   |-   |-   |-   |-   |-   |rbx|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |rdx|DWORD     |rdi|DWORD  |          |   |   |           |   |   |   |           |          |           |           |           |           |           |    |    |    |    |    |    |    |           |    |    |    |    |    |    |    |    |     <||@
  Comment 3764 block B36 null  <||@
  Comment 3764 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3764 352 r11|DWORD = MOVE input: int[-359443|0xfffffffffffa83ed]  <||@
  Comment 3770 354 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3774 356 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3779 358 JUMP ~[] destination: B36 -> B205  <||@
  Comment 3779 block B205 null  <||@
  Comment 3779 2570 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3779 2572 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3786 2574 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3793 2576 DEOPT info [bci:174]  <||@
  Comment 3793 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3798 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8          |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |rax|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3799 block B95 null  <||@
  Comment 3799 1170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3799 1172 r10|DWORD = MOVE input: int[-304659|0xfffffffffffb59ed]  <||@
  Comment 3805 1176 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3809 1178 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3813 1180 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3818 1186 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3822 1188 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3827 1192 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3830 1194 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3834 1196 JUMP ~[] destination: B95 -> B131  <||@
  Comment 3836 block B91 null  <||@
  Comment 3836 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3836 1122 r11|DWORD = MOVE input: int[-305427|0xfffffffffffb56ed]  <||@
  Comment 3842 1126 JUMP ~[] destination: B91 -> B94  <||@
  Comment 3842 block B94 null  <||@
  Comment 3842 1162 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3842 1124 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3845 1164 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3852 1166 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3859 1168 DEOPT info [bci:552]  <||@
  Comment 3859 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3864 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19          |20  |21  |22  |23  |24  |25         |26        |27         |28         |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[1|0x1]  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|DWORD  |r8|DWORD  |r10|DWORD  |rbx|DWORD  |-   |-   |-   |-    <||@
  Comment 3865 block B75 null  <||@
  Comment 3865 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3865 806 r10|DWORD = MOVE input: int[-304147|0xfffffffffffb5bed]  <||@
  Comment 3871 810 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3875 812 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3879 814 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3884 820 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3888 822 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3893 826 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3896 828 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3900 830 JUMP ~[] destination: B75 -> B131  <||@
  Comment 3905 block B96 null  <||@
  Comment 3905 1198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3905 1200 r10|DWORD = MOVE input: int[-296731|0xfffffffffffb78e5]  <||@
  Comment 3911 1204 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3915 1206 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3919 1208 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3924 1214 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3928 1216 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3933 1220 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3936 1222 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3940 1224 JUMP ~[] destination: B96 -> B131  <||@
  Comment 3945 block B126 null  <||@
  Comment 3945 1644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3945 1646 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 3948 1648 MOV [r15|QWORD + 668] y: -378395 size: DWORD  <||@
  Comment 3959 1650 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3966 1652 DEOPT info [bci:914]  <||@
  Comment 3966 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3971 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|QWORD  |-   |r13|QWORD  |-   |rdi|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 3972 block B97 null  <||@
  Comment 3972 1226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3972 1228 r10|DWORD = MOVE input: int[-294683|0xfffffffffffb80e5]  <||@
  Comment 3978 1232 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3982 1234 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3986 1236 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3991 1242 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3995 1244 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4000 1248 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4003 1250 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4007 1252 JUMP ~[] destination: B97 -> B131  <||@
  Comment 4012 block B179 null  <||@
  Comment 4012 2306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4012 2308 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4017 2310 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4021 2312 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4024 2314 MOV [r15|QWORD + 668] y: -348187 size: DWORD  <||@
  Comment 4035 2316 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4042 2318 DEOPT info [bci:1343]  <||@
  Comment 4042 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4047 [r14:0, stack:8, stack:16, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18        |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |r9|DWORD  |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |          |    |    |    |           |    |    |                    |    |                   |                    |                    |    |    |     <||@
  Comment 4048 block B170 null  <||@
  Comment 4048 2184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4048 2186 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4053 2188 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4057 2190 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4062 2192 JUMP ~[] destination: B170 -> B171  <||@
  Comment 4062 block B171 null  <||@
  Comment 4062 2194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4062 2196 r10|DWORD = MOVE input: int[-337683|0xfffffffffffad8ed]  <||@
  Comment 4068 2198 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 4073 2200 JUMP ~[] destination: B171 -> B184  <||@
  Comment 4073 block B184 null  <||@
  Comment 4073 2356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4073 2358 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4080 2360 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4087 2362 DEOPT info [bci:46, 1321]  <||@
  Comment 4087 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4092 [rax:0, r14:0, stack:8, stack:24, stack:64]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4          |5         |6  |7 
     locals:  |stack:64|QWORD[.]  |rax|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28            |29                  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |rax|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 4093 block B93 null  <||@
  Comment 4093 1154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4093 1156 r11|DWORD = MOVE input: int[-305171|0xfffffffffffb57ed]  <||@
  Comment 4099 1160 JUMP ~[] destination: B93 -> B94  <||@
  Comment 4104 block B22 null  <||@
  Comment 4104 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4104 186 r11|DWORD = MOVE input: int[-284435|0xfffffffffffba8ed]  <||@
  Comment 4110 188 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4114 190 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4117 192 JUMP ~[] destination: B22 -> B23  <||@
  Comment 4117 block B23 null  <||@
  Comment 4117 194 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4117 196 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 4124 198 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4131 200 DEOPT info [bci:10, 74]  <||@
  Comment 4131 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4136 [r14:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0           |1 
     locals:  |-           |- 
     stack:   |int[0|0x0]  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 4137 block B180 null  <||@
  Comment 4137 2320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4137 2322 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4142 2324 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4146 2326 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4151 2328 JUMP ~[] destination: B180 -> B181  <||@
  Comment 4151 block B181 null  <||@
  Comment 4151 2330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4151 2332 r10|DWORD = MOVE input: int[-344091|0xfffffffffffabfe5]  <||@
  Comment 4157 2336 JUMP ~[] destination: B181 -> B184  <||@
  Comment 4159 block B204 null  <||@
  Comment 4159 2560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4159 2562 r11|DWORD = MOVE input: int[-359187|0xfffffffffffa84ed]  <||@
  Comment 4165 2564 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4169 2566 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4172 2568 JUMP ~[] destination: B204 -> B205  <||@
  Comment 4177 block B18 null  <||@
  Comment 4177 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4177 152 r11|DWORD = MOVE input: int[-288283|0xfffffffffffb99e5]  <||@
  Comment 4183 154 JUMP ~[] destination: B18 -> B23  <||@
  Comment 4185 block B65 null  <||@
  Comment 4185 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4185 678 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4189 680 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4193 682 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4198 684 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4201 686 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4204 688 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4209 690 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4213 692 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4218 694 MOV [r15|QWORD + 668] y: -292123 size: DWORD  <||@
  Comment 4229 696 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4236 698 DEOPT info [bci:330]  <||@
  Comment 4236 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4241 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330, duringCall: false, rethrow: false]
              |0             |1          |2               |3  |4  |5          |6  |7  |8  |9               |10              |11         |12              |13         |14              |15         |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-          |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |r13|DWORD  |stack:72|DWORD  |rcx|DWORD  |stack:68|DWORD  |r13|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |r8|DWORD      |rdx|DWORD  |                |   |   |           |   |   |   |                |                |           |                |           |                |           |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 4242 block B82 null  <||@
  Comment 4242 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4242 934 r10|DWORD = MOVE input: int[-361499|0xfffffffffffa7be5]  <||@
  Comment 4248 936 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4252 938 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4256 940 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4260 942 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4265 944 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4269 948 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4273 950 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4278 952 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4281 954 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4285 956 JUMP ~[] destination: B82 -> B131  <||@
  Comment 4290 block B130 null  <||@
  Comment 4290 1704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4290 1706 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4293 1708 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4296 1710 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4299 1712 rdi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 4302 1714 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 4305 1716 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4309 1718 r10|DWORD = MOVE input: int[-308763|0xfffffffffffb49e5]  <||@
  Comment 4315 1720 JUMP ~[] destination: B130 -> B131  <||@
  Comment 4320 block B86 null  <||@
  Comment 4320 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4320 1026 r10|DWORD = MOVE input: int[-298771|0xfffffffffffb70ed]  <||@
  Comment 4326 1028 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4330 1030 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4334 1032 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4338 1034 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4343 1036 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4347 1038 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4350 1040 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4355 1042 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4358 1044 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4362 1046 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4367 1048 JUMP ~[] destination: B86 -> B131  <||@
  Comment 4372 block B200 null  <||@
  Comment 4372 2534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4372 2536 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4375 2538 MOV [r15|QWORD + 668] y: -358419 size: DWORD  <||@
  Comment 4386 2540 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4393 2542 DEOPT info [bci:1445]  <||@
  Comment 4393 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4398 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19        |20           |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r8|DWORD  |r9|DWORD  |long[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 4399 block B77 null  <||@
  Comment 4399 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4399 840 r10|DWORD = MOVE input: int[-304403|0xfffffffffffb5aed]  <||@
  Comment 4405 844 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4409 846 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4413 848 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4418 854 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4422 856 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4427 860 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4430 862 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4434 864 JUMP ~[] destination: B77 -> B131  <||@
  Comment 4439 block B140 null  <||@
  Comment 4439 1892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4439 1894 rcx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4443 1896 r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 4448 1898 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 4453 1900 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4458 1902 r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 4463 1904 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4467 1906 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4470 1908 MOV [r15|QWORD + 668] y: -364827 size: DWORD  <||@
  Comment 4481 1910 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4488 1912 DEOPT info [bci:1227]  <||@
  Comment 4488 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4493 [rax:0, rbx:0, r8:0, r9:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18         |19         |20  |21  |22         |23  |24  |25           |26  |27            |28            |29           |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |rcx|DWORD  |r11|DWORD  |-   |-   |r10|DWORD  |-   |-   |r8|QWORD[.]  |-   |rax|QWORD[.]  |rbx|QWORD[.]  |r9|QWORD[.]  |-   |-   |-    <||@
  Comment 4494 block B30 null  <||@
  Comment 4494 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4494 288 r11|DWORD = MOVE input: int[-358931|0xfffffffffffa85ed]  <||@
  Comment 4500 290 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4504 292 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4507 294 JUMP ~[] destination: B30 -> B205  <||@
  Comment 4512 block B118 null  <||@
  Comment 4512 1526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4512 1528 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4515 1530 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@613009710]  <||@
  Comment 4515 {Object[d.a@613009710]}  <||@
  Comment 4525 1532 MOV [r15|QWORD + 668] y: -376075 size: DWORD  <||@
  Comment 4536 1534 MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 4543 1536 DEOPT info [bci:914]  <||@
  Comment 4543 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4548 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |r8|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 4549 block B113 null  <||@
  Comment 4549 1490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4549 1492 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4552 1494 rbp|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4554 1496 MOV [r15|QWORD + 668] y: -324115 size: DWORD  <||@
  Comment 4565 1498 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4572 1500 DEOPT info [bci:889]  <||@
  Comment 4572 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4577 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |r8|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 4578 block B80 null  <||@
  Comment 4578 900 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4578 902 r10|DWORD = MOVE input: int[-304915|0xfffffffffffb58ed]  <||@
  Comment 4584 904 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4588 906 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4592 908 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4596 910 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4601 912 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4605 916 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4609 918 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4614 920 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4617 922 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4621 924 JUMP ~[] destination: B80 -> B131  <||@
  Comment 4626 block B182 null  <||@
  Comment 4626 2338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4626 2340 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4631 2342 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4635 2344 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4640 2346 JUMP ~[] destination: B182 -> B183  <||@
  Comment 4640 block B183 null  <||@
  Comment 4640 2348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4640 2350 r10|DWORD = MOVE input: int[-340251|0xfffffffffffacee5]  <||@
  Comment 4646 2354 JUMP ~[] destination: B183 -> B184  <||@
  Comment 4651 block B84 null  <||@
  Comment 4651 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4651 988 r10|DWORD = MOVE input: int[-299283|0xfffffffffffb6eed]  <||@
  Comment 4657 990 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4661 992 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4665 994 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4669 996 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4674 998 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4678 1000 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4681 1002 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4686 1004 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4689 1006 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4693 1008 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4698 1010 JUMP ~[] destination: B84 -> B131  <||@
  Comment 4703 block B103 null  <||@
  Comment 4703 1368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4703 1370 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4707 1372 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4711 1374 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4716 1376 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4720 1378 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4723 1380 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4726 1382 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4730 1384 rbp|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4732 1386 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4735 1388 r10|DWORD = MOVE input: int[-320531|0xfffffffffffb1bed]  <||@
  Comment 4741 1390 JUMP ~[] destination: B103 -> B131  <||@
  Comment 4746 block B129 null  <||@
  Comment 4746 1686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4746 1688 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4749 1690 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4752 1692 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4755 1694 rdi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 4758 1696 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 4761 1698 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4765 1700 r10|DWORD = MOVE input: int[-310811|0xfffffffffffb41e5]  <||@
  Comment 4771 1702 JUMP ~[] destination: B129 -> B131  <||@
  Comment 4776 block B88 null  <||@
  Comment 4776 1064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4776 1066 r10|DWORD = MOVE input: int[-299027|0xfffffffffffb6fed]  <||@
  Comment 4782 1068 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4786 1070 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4790 1072 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4794 1074 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4799 1076 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4803 1078 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4806 1080 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4811 1082 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4814 1084 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4818 1086 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4823 1088 JUMP ~[] destination: B88 -> B131  <||@
  Comment 4828 block B108 null  <||@
  Comment 4828 1422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4828 1424 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4832 1426 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4836 1428 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4841 1430 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4844 1432 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4848 1434 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4851 1436 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4854 1438 r10|DWORD = MOVE input: int[-363547|0xfffffffffffa73e5]  <||@
  Comment 4860 1440 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4864 1442 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4868 1444 JUMP ~[] destination: B108 -> B131  <||@
  Comment 4873 block B159 null  <||@
  Comment 4873 2096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4873 2098 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 4878 2100 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4881 2102 r10|DWORD = MOVE input: int[-333075|0xfffffffffffaeaed]  <||@
  Comment 4887 2104 JUMP ~[] destination: B159 -> B184  <||@
  Comment 4892 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4892 4  <||@
  Comment 4898 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4898 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10125[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  method "HotSpotCompilation-10125[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  date 1527005239906
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1075efda0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1ffd8396 slotKind: QWORD  <||@
  Comment 48 6 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 51 8 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 56 10 MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 60 12 MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 64 14 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 64 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 74 16 rbx|DWORD = TZCNT r10|QWORD size: QWORD  <||@
  Comment 79 18 rcx|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 84 20 rdi|DWORD = SUB (x: rcx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 88 22 rcx|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 92 24 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 94 26 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 103 block B1 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 106 34 BRANCH trueDestinationProbability: 0.9996262583639761 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 112 block B2 null  <||@
  Comment 112 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 112 38 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 117 40 JUMP ~[] destination: B2 -> B6  <||@
  Comment 117 block B6 null  <||@
  Comment 117 58 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 117 60 CMP rdx|DWORD y: -21 size: DWORD  <||@
  Comment 120 62 BRANCH trueDestinationProbability: 6.874510040402823E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 126 block B8 null  <||@
  Comment 126 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 72 CMP rcx|DWORD y: 27 size: DWORD  <||@
  Comment 129 74 BRANCH trueDestinationProbability: 0.5135895145912284 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26  <||@
  Comment 135 block B9 null  <||@
  Comment 135 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 78 rax|DWORD = ADD (x: rdi|DWORD, ~y: [r11|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 142 80 CMP rax|DWORD y: 64 size: DWORD  <||@
  Comment 145 82 BRANCH trueDestinationProbability: 0.9987311433807979 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25  <||@
  Comment 151 block B10 null  <||@
  Comment 151 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 86 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 153 88 BRANCH trueDestinationProbability: 0.4020092226613966 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 159 block B24 null  <||@
  Comment 159 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 204 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 161 206 JUMP ~[] destination: B24 -> B28  <||@
  Comment 161 block B28 null  <||@
  Comment 161 226 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 161 228 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 166 230 rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 176 232 rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 182 234 r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000]  <||@
  Comment 192 236 rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 195 238 xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM  <||@
  Comment 200 240 xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 200 {DataSection[0x0]}  <||@
  Comment 209 242 xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 213 244 xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93]  <||@
  Comment 213 {DataSection[0x8]}  <||@
  Comment 222 246 xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 226 248 xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c]  <||@
  Comment 226 {DataSection[0x10]}  <||@
  Comment 235 250 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 239 252 xmm1|DOUBLE = VCVTSI2SD rdx|DWORD  <||@
  Comment 247 254 xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb]  <||@
  Comment 247 {DataSection[0x18]}  <||@
  Comment 256 256 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM  <||@
  Comment 260 258 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 264 260 r13|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 269 262 r14|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 279 264 rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 289 266 rcx|QWORD = AND (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 292 268 rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD  <||@
  Comment 296 270 rcx|DWORD = MOV rcx|QWORD size: DWORD  <||@
  Comment 298 272 r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD  <||@
  Comment 305 274 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 308 276 BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32  <||@
  Comment 314 block B29 null  <||@
  Comment 314 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 280 rcx|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff]  <||@
  Comment 324 282 TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 327 284 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 333 block B31 null  <||@
  Comment 333 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 298 TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 336 300 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 341 302 r9|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 351 304 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 354 306 JUMP ~[] destination: B31 -> B38  <||@
  Comment 354 block B38 null  <||@
  Comment 354 370 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 354 372 rcx|DWORD = NEG r11|DWORD size: DWORD  <||@
  Comment 359 374 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 362 376 BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 368 block B39 null  <||@
  Comment 368 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 380 stack:44|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 376 382 stack:48|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 384 384 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 386 386 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 391 388 JUMP ~[] destination: B39 -> B41  <||@
  Comment 391 block B41 null  <||@
  Comment 391 410 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 391 412 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 395 414 BRANCH trueDestinationProbability: 0.726772406928274 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 401 block B42 null  <||@
  Comment 401 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 418 stack:52|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 409 420 r14|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 415 422 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 421 424 JUMP ~[] destination: B42 -> B44  <||@
  Comment 421 block B44 null  <||@
  Comment 421 444 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 421 446 stack:56|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 426 448 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 428 450 rdx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 433 452 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 435 454 r9|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 441 456 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 444 458 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 447 460 BRANCH trueDestinationProbability: 0.4463098071277339 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48  <||@
  Comment 453 block B48 null  <||@
  Comment 453 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 453 486 rax|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 456 488 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 459 490 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 462 496 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 468 492 BRANCH trueDestinationProbability: 0.3376150132094379 condition: = trueDestination: B48 -> B50 falseDestination: B48 -> B52  <||@
  Comment 474 block B52 null  <||@
  Comment 474 512 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 474 514 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 476 516 BRANCH trueDestinationProbability: 0.9998329866541154 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B55  <||@
  Comment 482 block B53 null  <||@
  Comment 482 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 482 520 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 484 522 r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 487 524 rsi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 492 526 JUMP ~[] destination: B53 -> B55  <||@
  Comment 492 block B55 null  <||@
  Comment 492 532 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 492 534 r8|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 498 536 rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 500 538 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 502 540 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 505 542 stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 510 544 CMP rdi|DWORD y: 27 size: DWORD  <||@
  Comment 513 546 BRANCH trueDestinationProbability: 0.9998329714381159 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59  <||@
  Comment 519 block B56 null  <||@
  Comment 519 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 519 550 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 519 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 529 552 rdx|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 533 554 rbx|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 538 556 CMP r14|DWORD y: 27 size: DWORD  <||@
  Comment 542 558 BRANCH trueDestinationProbability: 0.9998329739743084 condition: < trueDestination: B56 -> B61 falseDestination: B56 -> B58  <||@
  Comment 548 block B61 null  <||@
  Comment 548 640 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 548 642 CMP r14|DWORD y: 27 size: DWORD  <||@
  Comment 552 644 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B65  <||@
  Comment 558 block B62 null  <||@
  Comment 558 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 558 648 CMP rbx|DWORD y: 64 size: DWORD  <||@
  Comment 561 650 BRANCH trueDestinationProbability: 0.9842400133610677 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 567 block B63 null  <||@
  Comment 567 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 567 654 rcx|DWORD = MOV [rcx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 572 656 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 575 658 JUMP ~[] destination: B63 -> B69  <||@
  Comment 575 block B69 null  <||@
  Comment 575 738 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 575 740 rdx|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 579 742 rcx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 584 744 CMP rcx|DWORD y: 64 size: DWORD  <||@
  Comment 587 746 BRANCH trueDestinationProbability: 0.9643485236493783 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B132  <||@
  Comment 593 block B70 null  <||@
  Comment 593 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 593 750 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 598 752 r14|DWORD[.] = MOV [rbp|QWORD[.] + 28] size: DWORD  <||@
  Comment 602 754 CMP rbx|DWORD y: 32 size: DWORD  <||@
  Comment 605 756 BRANCH trueDestinationProbability: 8.798732982450153E-4 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B99  <||@
  Comment 611 block B99 null  <||@
  Comment 611 1282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 1284 CMP rdi|DWORD y: 27 size: DWORD  <||@
  Comment 614 1286 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B99 -> B100 falseDestination: B99 -> B130  <||@
  Comment 620 block B100 null  <||@
  Comment 620 1288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 620 1290 CMP r13|DWORD y: 27 size: DWORD  <||@
  Comment 624 1292 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B129  <||@
  Comment 630 block B101 null  <||@
  Comment 630 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 1296 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 634 1298 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 638 1300 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 643 1302 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 643 {Object[long[27]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 653 1304 r8|QWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 8 + 16] size: QWORD  <||@
  Comment 658 1306 rcx|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD  <||@
  Comment 663 1308 rbx|QWORD = IMUL (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 670 1310 r13|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 673 1312 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 676 1314 rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 679 1316 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 681 1318 r13|QWORD = SHL (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 684 1322 rax|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 687 1324 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 689 1326 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:365]  <||@
  Comment 689 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2          |3  |4  |5               |6  |7  |8  |9          |10        |11         |12         |13              |14         |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbp|QWORD[.]    |-               |r10|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |rdi|DWORD  |rcx|DWORD  |stack:56|DWORD  |rsi|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |           |   |   |                |   |   |   |           |          |           |           |                |           |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 689 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 692 1328 rbx|QWORD = SHL r13|QWORD y: 3 size: QWORD  <||@
  Comment 699 1330 r10|QWORD = SHL r13|QWORD size: QWORD  <||@
  Comment 705 1332 rbx|QWORD = ADD (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 708 1334 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 711 1336 rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 713 1338 r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 716 1340 rcx|QWORD = SHL r8|QWORD y: 3 size: QWORD  <||@
  Comment 723 1342 r8|QWORD = SHL r8|QWORD size: QWORD  <||@
  Comment 726 1344 rcx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 729 1346 r8|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 736 1348 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 739 1350 r8|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 742 1352 rdx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 748 1354 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 750 1356 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 752 1358 BRANCH trueDestinationProbability: 0.1394488655468913 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B107  <||@
  Comment 758 block B107 null  <||@
  Comment 758 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 758 1418 CMP [r14|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365]  <||@
  Comment 758 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5               |6  |7  |8  |9          |10        |11         |12         |13              |14         |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbp|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |rdi|DWORD  |r10|DWORD  |stack:56|DWORD  |rsi|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |                |   |   |                |   |   |   |           |          |           |           |                |           |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 758 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 767 1420 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B109  <||@
  Comment 773 block B109 null  <||@
  Comment 773 1446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 773 1448 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 778 1450 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 781 1452 MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 790 1454 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 793 1460 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 799 1456 BRANCH trueDestinationProbability: 0.011112534426439506 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 805 block B111 null  <||@
  Comment 805 1468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 805 1472 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 808 1474 JUMP ~[] destination: B111 -> B112  <||@
  Comment 808 block B112 null  <||@
  Comment 808 1476 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 808 1478 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 811 1480 r9|DWORD = SETCC condition: >  <||@
  Comment 819 1482 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 822 1484 rdi|DWORD = SETCC condition: >  <||@
  Comment 830 1486 CMP r11|DWORD y: -3 size: DWORD  <||@
  Comment 834 1488 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114  <||@
  Comment 840 block B114 null  <||@
  Comment 840 1502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 1504 CMP r11|DWORD y: 8 size: DWORD  <||@
  Comment 844 1506 BRANCH trueDestinationProbability: 0.9996761815326328 condition: < trueDestination: B114 -> B117 falseDestination: B114 -> B116  <||@
  Comment 850 block B117 null  <||@
  Comment 850 1520 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 850 1522 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 853 1524 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B119  <||@
  Comment 859 block B119 null  <||@
  Comment 859 1538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 1540 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 867 1542 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3  <||@
  Comment 871 1544 stack:92|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 876 1546 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 879 1548 rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 882 1550 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 885 1552 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 890 1554 JUMP ~[] destination: B119 -> B120  <||@
  Comment 890 block B120 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 890 1556 [] = LABEL numbPhis: 5 align: true label: ?  <||@
  Comment 896 1558 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 899 1560 BRANCH trueDestinationProbability: 0.9147424652848216 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B128  <||@
  Comment 905 block B121 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 905 1562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 1564 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 908 1566 BRANCH trueDestinationProbability: 0.9573972653370932 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B127  <||@
  Comment 914 block B122 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 914 1568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 914 1570 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 917 1572 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B126  <||@
  Comment 923 block B123 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 923 1574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 923 1576 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 926 1578 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 928 1580 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:914]  <||@
  Comment 928 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|QWORD  |-   |r13|QWORD  |-   |rdi|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 928 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 931 1582 r8|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 934 1584 r9|DWORD = LEA [r8|DWORD + 48] size: DWORD  <||@
  Comment 938 1586 MOV (x: [r14|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 944 1588 r9|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 951 1590 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 954 1592 r9|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 957 1594 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 960 1596 rdx|QWORD = SHL rdi|QWORD y: 3 size: QWORD  <||@
  Comment 967 1598 rdi|QWORD = SHL rdi|QWORD size: QWORD  <||@
  Comment 970 1600 rdx|QWORD = ADD (x: rdx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 973 1602 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 977 1604 BRANCH trueDestinationProbability: 3.497146646258553E-4 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B125  <||@
  Comment 983 block B125 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 983 1620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 1622 CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 986 1624 rcx|DWORD = SETCC condition: >  <||@
  Comment 992 1626 rdi|QWORD = ADD (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 998 1628 CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1001 1630 rdi|DWORD = SETCC condition: >  <||@
  Comment 1009 1632 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1009 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18         |19         |20  |21  |22        |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |rcx|DWORD  |rdi|DWORD  |-   |-   |r8|DWORD  |-   |-   |r9|QWORD  |-   |r13|QWORD  |-   |rdx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 1009 {infopoint: SAFEPOINT}  <||@
  Comment 1009 11  <||@
  Comment 1015 1634 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1018 1636 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1021 1638 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1024 1640 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1027 1642 JUMP ~[] destination: B125 -> B120  <||@
  Comment 1032 block B124 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 1032 1606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 1608 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1032 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22        |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[1|0x1]  |int[1|0x1]  |-   |-   |r8|DWORD  |-   |-   |r9|QWORD  |-   |r13|QWORD  |-   |rdx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 1032 {infopoint: SAFEPOINT}  <||@
  Comment 1032 11  <||@
  Comment 1038 1610 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1041 1612 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1044 1614 r9|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1050 1616 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1056 1618 JUMP ~[] destination: B124 -> B120  <||@
  Comment 1061 block B128 null  <||@
  Comment 1061 1670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 1672 rsi|QWORD = SHL rcx|QWORD size: QWORD  <||@
  Comment 1067 1674 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD  <||@
  Comment 1070 1676 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1073 1678 rdx|DWORD = SETCC condition: =  <||@
  Comment 1079 1680 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1082 1682 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1085 1684 JUMP ~[] destination: B128 -> B195  <||@
  Comment 1085 block B195 null  <||@
  Comment 1085 2496 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 1085 2498 MOVB (x: [rsi|QWORD[.] + 25], y: rdx|DWORD) size: BYTE  <||@
  Comment 1088 2500 rbx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1093 2502 MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 1096 2504 MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1100 2506 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 1104 2508 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1107 2510 BRANCH trueDestinationProbability: 0.5799198372453163 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B197  <||@
  Comment 1113 block B196 null  <||@
  Comment 1113 2512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 2514 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1122 12  <||@
  Comment 1132 block B26 null  <||@
  Comment 1132 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1132 216 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1134 218 JUMP ~[] destination: B26 -> B28  <||@
  Comment 1139 block B45 null  <||@
  Comment 1139 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1139 464 r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1142 466 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1144 468 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 1147 474 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1152 470 BRANCH trueDestinationProbability: 0.3376150132094379 condition: = trueDestination: B45 -> B50 falseDestination: B45 -> B52  <||@
  Comment 1163 block B197 null  <||@
  Comment 1163 2516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1163 2518 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1166 2520 BRANCH trueDestinationProbability: 0.7217825002710615 condition: = trueDestination: B197 -> B198 falseDestination: B197 -> B199  <||@
  Comment 1172 block B198 null  <||@
  Comment 1172 2522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1172 2524 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505]  <||@
  Comment 1172 9  <||@
  Comment 1175 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1180 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1181 2526 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1190 12  <||@
  Comment 1200 block B4 null  <||@
  Comment 1200 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1200 50 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 1203 52 BRANCH trueDestinationProbability: 0.9996262583639761 condition: < trueDestination: B4 -> B6 falseDestination: B4 -> B27  <||@
  Comment 1214 block B127 null  <||@
  Comment 1214 1654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1214 1656 rsi|QWORD = SHL rcx|QWORD size: QWORD  <||@
  Comment 1220 1658 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD  <||@
  Comment 1223 1660 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1226 1662 rdx|DWORD = SETCC condition: =  <||@
  Comment 1232 1664 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1235 1666 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1238 1668 JUMP ~[] destination: B127 -> B195  <||@
  Comment 1243 block B43 null  <||@
  Comment 1243 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1243 428 r13|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1249 430 r14|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 1255 432 r14|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1258 434 rax|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1261 436 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1266 438 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1269 440 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1272 442 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1277 block B40 null  <||@
  Comment 1277 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1277 392 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1282 394 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1285 396 r9|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 1291 398 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1294 400 rbp|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1299 402 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1303 404 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1308 406 rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1310 408 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1315 block B11 null  <||@
  Comment 1315 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1315 92 CMP rdx|DWORD y: 52 size: DWORD  <||@
  Comment 1318 94 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22  <||@
  Comment 1324 block B12 null  <||@
  Comment 1324 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1324 98 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1327 100 BRANCH trueDestinationProbability: 0.0011119564581260066 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20  <||@
  Comment 1333 block B20 null  <||@
  Comment 1333 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1333 164 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1339 166 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1339 block B21 null  <||@
  Comment 1339 168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1339 170 rcx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 1344 172 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 1346 174 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1349 176 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1354 178 rcx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1357 180 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170]  <||@
  Comment 1357 9  <||@
  Comment 1359 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>}  <||@
  Comment 1364 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1365 182 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1374 12  <||@
  Comment 1384 block B32 null  <||@
  Comment 1384 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 310 CMP r9|DWORD y: 52 size: DWORD  <||@
  Comment 1388 312 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B204  <||@
  Comment 1394 block B33 null  <||@
  Comment 1394 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1394 316 rsi|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1400 318 r11|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 1410 320 rsi|QWORD = OR (x: rsi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1413 322 r11|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 1419 324 r11|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1422 326 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1425 328 rsi|QWORD = SHR (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1428 330 r11|DWORD = MOV rsi|QWORD size: DWORD  <||@
  Comment 1431 332 TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1434 334 BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B35  <||@
  Comment 1440 block B35 null  <||@
  Comment 1440 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1440 342 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1443 344 rbp|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1446 346 TEST (x: rbp|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1449 348 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 1455 block B37 null  <||@
  Comment 1455 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1455 362 rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1460 364 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1463 366 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1466 368 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1471 block B50 null  <||@
  Comment 1471 500 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1471 502 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 1473 504 JUMP ~[] destination: B50 -> B52  <||@
  Comment 1478 block B102 null  <||@
  Comment 1478 1360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1478 1362 rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1482 1364 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1485 1366 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B104  <||@
  Comment 1491 block B104 null  <||@
  Comment 1491 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1491 1394 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 1494 1396 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1496 1402 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1502 1398 BRANCH trueDestinationProbability: 0.011112534426439506 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B112  <||@
  Comment 1513 block B199 null  <||@
  Comment 1513 2528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1513 2530 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1516 2532 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B201  <||@
  Comment 1522 block B201 null  <||@
  Comment 1522 2544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 2546 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 1526 2548 BRANCH trueDestinationProbability: 0.37802026500389707 condition: < trueDestination: B201 -> B202 falseDestination: B201 -> B203  <||@
  Comment 1532 block B203 null  <||@
  Comment 1532 2554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1532 2556 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498]  <||@
  Comment 1532 9  <||@
  Comment 1535 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1540 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1541 2558 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1550 12  <||@
  Comment 1560 block B202 null  <||@
  Comment 1560 2550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1560 2552 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1569 12  <||@
  Comment 1579 block B132 null  <||@
  Comment 1579 1730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1579 1732 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1583 1734 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1586 1736 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1591 1738 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1596 1740 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1600 1742 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1605 1744 JUMP ~[] destination: B132 -> B134  <||@
  Comment 1605 block B134 null  <||@
  Comment 1605 1756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1605 1758 rsi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1608 1760 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1611 1762 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1616 1764 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074]  <||@
  Comment 1616 8  <||@
  Comment 1623 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1628 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1629 1766 NULLCHECK [rax|QWORD[.]] state [bci:1077]  <||@
  Comment 1629 [rax:0, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |                |   |   |                |   |   |   |                |                |                |                |                |                |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 1629 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1631 1768 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 1770 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 1772 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081]  <||@
  Comment 1639 {HotSpotMethod<FDBigInteger.getNormalizationBias()>}  <||@
  Comment 1639 9  <||@
  Comment 1644 [stack:24, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1645 1774 rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1650 1776 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1652 1778 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1656 1780 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090]  <||@
  Comment 1656 9  <||@
  Comment 1663 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 1668 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1669 1782 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1674 1784 rcx|DWORD = ADD (x: stack:92|DWORD, y: stack:76|DWORD) size: DWORD  <||@
  Comment 1682 1786 rsi|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1687 1788 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1691 1790 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103]  <||@
  Comment 1691 8  <||@
  Comment 1695 {HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>}  <||@
  Comment 1700 [stack:24, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1701 1792 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1706 1794 NULLCHECK [rax|QWORD[.]] state [bci:1106]  <||@
  Comment 1706 [stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |                |                |                |                |    |    |    |    |    |    |    |    |    |                    |                |    |    |    |    |    |     <||@
  Comment 1706 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1708 1796 rsi|DWORD = ADD (x: stack:92|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1716 1798 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1720 1800 rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1724 1802 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119]  <||@
  Comment 1724 8  <||@
  Comment 1727 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1732 [stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27                 |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:56|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |stack:64|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 1733 1804 rsi|DWORD = ADD (x: stack:72|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1741 1806 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1745 1808 rsi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1749 1810 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 1812 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135]  <||@
  Comment 1754 8  <||@
  Comment 1759 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1764 [stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-    <||@
  Comment 1765 1814 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1770 1816 NULLCHECK [rax|QWORD[.]] state [bci:1138]  <||@
  Comment 1770 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |                    |    |                   |                    |    |    |    |     <||@
  Comment 1770 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1772 1818 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1777 1820 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1782 1822 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147]  <||@
  Comment 1782 9  <||@
  Comment 1783 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 1788 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1789 1824 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1794 1826 rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 1828 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1803 1830 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156]  <||@
  Comment 1803 9  <||@
  Comment 1807 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 1812 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1813 1832 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1815 1834 r10|DWORD = SETCC condition: <  <||@
  Comment 1823 1836 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1828 1838 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1833 1840 rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1838 1842 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1843 1844 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175]  <||@
  Comment 1843 9  <||@
  Comment 1847 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 1852 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |stack:92|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1853 1846 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1858 1848 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1861 1850 BRANCH trueDestinationProbability: 0.10331442221558673 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B138  <||@
  Comment 1867 block B138 null  <||@
  Comment 1867 1874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1867 1876 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1872 1878 JUMP ~[] destination: B138 -> B139  <||@
  Comment 1872 block B139 null  <||@
  Comment 1872 1880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1872 1882 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 1875 1884 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1878 1886 r11|DWORD = SETCC condition: <  <||@
  Comment 1886 1888 CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227]  <||@
  Comment 1886 [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18              |19         |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |stack:92|DWORD  |r11|DWORD  |-   |-   |r10|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1886 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1894 1890 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141  <||@
  Comment 1900 block B141 null  <||@
  Comment 1900 1914 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1900 1916 r10|DWORD = LEA [r10|DWORD + 48] size: DWORD  <||@
  Comment 1904 1918 MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 1913 1920 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1919 1922 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1924 1924 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1928 1926 JUMP ~[] destination: B141 -> B142  <||@
  Comment 1928 block B142 null  <||@
  Comment 1928 1928 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1928 1930 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1933 1932 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1935 1934 BRANCH trueDestinationProbability: 0.04001194386383995 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144  <||@
  Comment 1941 block B144 null  <||@
  Comment 1941 1944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1941 1946 CMP r11|DWORD y: -3 size: DWORD  <||@
  Comment 1945 1948 BRANCH trueDestinationProbability: 0.2867807153965785 condition: < trueDestination: B144 -> B145 falseDestination: B144 -> B146  <||@
  Comment 1951 block B146 null  <||@
  Comment 1951 1958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1951 1960 CMP r11|DWORD y: 8 size: DWORD  <||@
  Comment 1955 1962 BRANCH trueDestinationProbability: 0.9952027911033581 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B148  <||@
  Comment 1961 block B147 null  <||@
  Comment 1961 1964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1961 1966 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1964 1968 rdx|DWORD = SETCC condition: <  <||@
  Comment 1970 1970 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1973 1972 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1977 1974 JUMP ~[] destination: B147 -> B149  <||@
  Comment 1977 block B149 null  <||@
  Comment 1977 1984 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1977 1986 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1982 1988 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1985 1990 r9|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1988 1998 JUMP ~[] destination: B149 -> B150  <||@
  Comment 1993 block B151 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 1993 2006 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2000 2008 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2002 2010 BRANCH trueDestinationProbability: 0.9926666536987687 condition: = trueDestination: B151 -> B152 falseDestination: B151 -> B187  <||@
  Comment 2008 block B152 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2008 2012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2008 2014 NULLCHECK [rbx|QWORD[.]] state [bci:1268]  <||@
  Comment 2008 [rax:0, rbx:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18          |19          |20  |21  |22  |23  |24  |25            |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |r10|QWORD[.]  |-   |rax|QWORD[.]  |Object[null]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2008 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2010 2016 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2013 2018 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2016 2020 stack:112|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2021 2022 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282]  <||@
  Comment 2021 9  <||@
  Comment 2023 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 2028 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2029 2024 rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2034 2026 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2038 2028 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312]  <||@
  Comment 2038 9  <||@
  Comment 2039 {HotSpotMethod<FDBigInteger.multBy10()>}  <||@
  Comment 2044 [stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2045 2030 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:1315]  <||@
  Comment 2045 [rax:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |    |    |    |    |                |    |    |                    |    |                   |    |                    |    |    |     <||@
  Comment 2045 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2048 2032 rdx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 2051 2034 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2056 2036 rcx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 2060 2038 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2062 2040 r11|DWORD = ADD (x: rcx|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2069 2042 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2072 2044 BRANCH trueDestinationProbability: 0.23168656987595593 condition: > trueDestination: B152 -> B153 falseDestination: B152 -> B154  <||@
  Comment 2078 block B154 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2078 2052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2078 2054 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2081 2056 BRANCH trueDestinationProbability: 4.944535213690093E-4 condition: > trueDestination: B154 -> B155 falseDestination: B154 -> B156  <||@
  Comment 2087 block B156 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2087 2064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2087 2066 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2090 2068 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2093 2070 JUMP ~[] destination: B156 -> B157  <||@
  Comment 2098 block B169 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2098 2178 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2112 2180 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 2116 2182 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B169 -> B170 falseDestination: B169 -> B172  <||@
  Comment 2122 block B172 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2122 2202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2122 2204 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 2126 2206 rdx|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2131 2208 CMP (x: rdx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321]  <||@
  Comment 2131 [rax:0, rcx:0, rsi:0, r9:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5         |6  |7 
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |r10|QWORD[.]  |rax|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2131 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2138 2210 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B172 -> B173 falseDestination: B172 -> B182  <||@
  Comment 2144 block B173 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2144 2212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2144 2214 rbx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 2149 2216 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321]  <||@
  Comment 2149 [rax:0, rcx:0, rsi:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5         |6  |7 
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |r10|QWORD[.]  |rax|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2149 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2157 2218 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B173 -> B174 falseDestination: B173 -> B180  <||@
  Comment 2163 block B174 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2163 2220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2163 2222 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3  <||@
  Comment 2167 2224 rsi|DWORD = MOV [rsi|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2171 2226 rcx|DWORD = MOV [rcx|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2175 2228 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2177 2230 BRANCH trueDestinationProbability: 0.0073559460563955865 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176  <||@
  Comment 2183 block B175 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2183 2232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2183 2234 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2186 2236 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2189 2238 JUMP ~[] destination: B175 -> B157  <||@
  Comment 2189 block B157 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2189 2072 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2189 2074 r9|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD  <||@
  Comment 2193 2076 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3  <||@
  Comment 2200 2078 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 2204 2080 BRANCH trueDestinationProbability: 0.007302231237322543 condition: < trueDestination: B157 -> B158 falseDestination: B157 -> B169  <||@
  Comment 2211 block B176 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2211 2240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2211 2242 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2213 2244 rsi|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2218 2246 rdx|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rsi|DWORD) condition: |>|  <||@
  Comment 2226 2248 JUMP ~[] destination: B176 -> B177  <||@
  Comment 2226 block B177 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2226 2250 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2226 2252 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2228 2254 r9|DWORD = SETCC condition: <  <||@
  Comment 2236 2256 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2241 2258 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2244 2260 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2247 2262 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2252 2264 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2257 2266 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340]  <||@
  Comment 2257 9  <||@
  Comment 2263 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 2268 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2269 2268 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2274 2270 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 2277 2272 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2282 2274 CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343]  <||@
  Comment 2282 [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |stack:72|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |           |                |    |    |    |                |    |    |                    |    |                   |                    |                    |    |    |     <||@
  Comment 2282 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2290 2276 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B177 -> B178 falseDestination: B177 -> B179  <||@
  Comment 2296 block B178 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2296 2278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2296 2280 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2300 2282 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3  <||@
  Comment 2304 2284 r11|DWORD = LEA [rbx|DWORD + 48] size: DWORD  <||@
  Comment 2308 2286 MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 2314 2288 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2317 2290 rcx|DWORD = SETCC condition: <  <||@
  Comment 2323 2292 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2326 2294 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2331 2296 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2336 2304 JUMP ~[] destination: B178 -> B150  <||@
  Comment 2336 block B150 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2336 2000 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 2336 1992 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2341 1994 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2346 1996 r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2351 2002 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2354 2004 BRANCH trueDestinationProbability: 0.9453137929132266 condition: = trueDestination: B150 -> B151 falseDestination: B150 -> B187  <||@
  Comment 2365 block B153 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2365 2046 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2365 2048 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2370 2050 JUMP ~[] destination: B153 -> B177  <||@
  Comment 2375 block B158 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2375 2082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2375 2084 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2380 2086 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2384 2088 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2389 2090 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2394 2092 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 2398 2094 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B158 -> B159 falseDestination: B158 -> B160  <||@
  Comment 2404 block B160 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2404 2106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2404 2108 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2407 2110 JUMP ~[] destination: B160 -> B161  <||@
  Comment 2412 block B163 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2412 2130 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2416 2132 rdx|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2421 2134 CMP (x: rdx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140, 1321]  <||@
  Comment 2421 [rcx:0, rsi:0, r9:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |r11|DWORD 
  at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18  |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2421 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2429 2136 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B163 -> B164 falseDestination: B163 -> B167  <||@
  Comment 2435 block B164 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2435 2138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2435 2140 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2438 2142 CMP [rcx|QWORD[.] + r11|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 2444 2144 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B164 -> B165 falseDestination: B164 -> B166  <||@
  Comment 2450 block B165 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2450 2146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2450 2148 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2453 2150 JUMP ~[] destination: B165 -> B161  <||@
  Comment 2453 block B161 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2453 2112 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2453 2114 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 2457 2116 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163  <||@
  Comment 2459 block B162 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2459 2118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2459 2120 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2464 2122 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2469 2126 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2474 2128 JUMP ~[] destination: B162 -> B177  <||@
  Comment 2479 block B166 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2479 2152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2479 2154 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2484 2156 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2489 2160 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2494 2162 JUMP ~[] destination: B166 -> B177  <||@
  Comment 2499 block B155 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2499 2058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2499 2060 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2504 2062 JUMP ~[] destination: B155 -> B177  <||@
  Comment 2509 block B187 null  <||@
  Comment 2509 2380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2509 2374 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2514 2376 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2519 2382 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2521 2384 BRANCH trueDestinationProbability: 0.056102655923604895 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B189  <||@
  Comment 2527 block B189 null  <||@
  Comment 2527 2398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2527 2400 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2530 2402 BRANCH trueDestinationProbability: 0.11919064179576351 condition: = trueDestination: B189 -> B190 falseDestination: B189 -> B191  <||@
  Comment 2536 block B191 null  <||@
  Comment 2536 2416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2536 2418 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2540 2420 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2545 2422 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2550 2424 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2555 2426 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385]  <||@
  Comment 2555 9  <||@
  Comment 2559 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 2564 [stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2565 2428 NULLCHECK [rax|QWORD[.]] state [bci:1388]  <||@
  Comment 2565 [rax:0, stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |                |                |    |    |    |    |    |    |    |    |    |                    |    |    |     <||@
  Comment 2565 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2567 2430 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2570 2432 rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2575 2434 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2580 2436 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394]  <||@
  Comment 2580 9  <||@
  Comment 2583 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2588 [stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27                  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 2589 2438 rsi|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2592 2440 rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2597 2442 stack:104|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2602 2444 JUMP ~[] destination: B191 -> B192  <||@
  Comment 2602 block B192 null  <||@
  Comment 2602 2446 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2602 2448 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498]  <||@
  Comment 2602 {Object[FDBigInteger@241972498]}  <||@
  Comment 2612 2450 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2615 2452 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412]  <||@
  Comment 2615 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2615 9  <||@
  Comment 2620 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20               |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |stack:104|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:40|QWORD[.]  |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |                |                |                 |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 2621 2454 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2623 2456 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B192 -> B193 falseDestination: B192 -> B194  <||@
  Comment 2629 block B194 null  <||@
  Comment 2629 2478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2629 2480 rdx|DWORD = MOVE input: byte[0|0x0]  <||@
  Comment 2634 2482 rcx|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 2639 2484 r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2644 2486 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2649 2488 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2654 2490 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2659 2492 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2664 2494 JUMP ~[] destination: B194 -> B195  <||@
  Comment 2669 block B64 null  <||@
  Comment 2669 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2669 662 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2673 664 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2676 666 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2681 668 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2686 670 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2690 672 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2695 674 JUMP ~[] destination: B64 -> B134  <||@
  Comment 2700 block B145 null  <||@
  Comment 2700 1950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2700 1952 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2706 1954 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2711 1956 JUMP ~[] destination: B145 -> B149  <||@
  Comment 2716 block B110 null  <||@
  Comment 2716 1458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2716 1462 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2721 1464 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2727 1466 JUMP ~[] destination: B110 -> B117  <||@
  Comment 2732 block B190 null  <||@
  Comment 2732 2404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2732 2406 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2737 2408 stack:104|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2746 2410 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2750 2412 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2755 2414 JUMP ~[] destination: B190 -> B192  <||@
  Comment 2760 block B135 null  <||@
  Comment 2760 1852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2760 1854 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2764 1856 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2769 1858 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2772 1860 BRANCH trueDestinationProbability: 0.3612716763005781 condition: < trueDestination: B135 -> B139 falseDestination: B135 -> B137  <||@
  Comment 2778 block B137 null  <||@
  Comment 2778 1866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2778 1868 r11|DWORD = DEC stack:84|DWORD size: DWORD  <||@
  Comment 2786 1870 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2792 1872 JUMP ~[] destination: B137 -> B142  <||@
  Comment 2797 block B188 null  <||@
  Comment 2797 2386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2797 2388 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2802 2390 stack:104|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2811 2392 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2815 2394 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2820 2396 JUMP ~[] destination: B188 -> B192  <||@
  Comment 2825 block B143 null  <||@
  Comment 2825 1936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2825 1938 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2831 1940 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2836 1942 JUMP ~[] destination: B143 -> B149  <||@
  Comment 2841 block B105 null  <||@
  Comment 2841 1400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2841 1404 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2846 1406 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2852 1408 JUMP ~[] destination: B105 -> B117  <||@
  Comment 2857 block B7 null  <||@
  Comment 2857 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2857 66 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2859 68 JUMP ~[] destination: B7 -> B28  <||@
  Comment 2864 block B71 null  <||@
  Comment 2864 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2864 760 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2868 762 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2872 764 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2877 766 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2881 768 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2885 770 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2890 772 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2894 774 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2899 776 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 2902 778 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2906 780 CMP rcx|DWORD y: 32 size: DWORD  <||@
  Comment 2909 782 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B98  <||@
  Comment 2915 block B72 null  <||@
  Comment 2915 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2915 786 CMP stack:48|DWORD y: 14 size: DWORD  <||@
  Comment 2920 788 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B97  <||@
  Comment 2926 block B73 null  <||@
  Comment 2926 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2926 792 CMP stack:56|DWORD y: 14 size: DWORD  <||@
  Comment 2931 794 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B96  <||@
  Comment 2937 block B74 null  <||@
  Comment 2937 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2937 798 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:365]  <||@
  Comment 2937 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5          |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |                |   |   |           |   |   |   |                |                |                |                |                |                |                |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 2937 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2941 800 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 2943 802 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 2949 block B76 null  <||@
  Comment 2949 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2949 834 CMP stack:84|DWORD y: -3 size: DWORD  <||@
  Comment 2954 836 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 2960 block B78 null  <||@
  Comment 2960 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2960 868 CMP stack:84|DWORD y: 8 size: DWORD  <||@
  Comment 2965 870 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B95  <||@
  Comment 2971 block B79 null  <||@
  Comment 2971 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2971 874 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2976 876 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 2976 {Object[int[14]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 2986 878 rdx|DWORD = MOV [rax|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2991 880 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2995 882 r10|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3001 884 rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 3007 886 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 3010 888 r10|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3013 890 rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 3019 892 r11|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 3025 894 r11|DWORD = ADD (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3028 896 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 3032 898 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B81  <||@
  Comment 3038 block B81 null  <||@
  Comment 3038 926 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3038 928 CMP [r14|DWORD[.] * 8 + 12] y: 2 size: DWORD  <||@
  Comment 3047 930 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 3053 block B83 null  <||@
  Comment 3053 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3053 960 r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3058 962 rax|DWORD = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3063 964 rcx|DWORD = MOV stack:64|QWORD size: DWORD  <||@
  Comment 3067 966 rdx|DWORD = IMUL (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3070 968 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3074 970 rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3076 972 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3080 974 r8|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3086 976 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3088 978 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 3089 980 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:365]  <||@
  Comment 3089 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5          |6  |7  |8  |9               |10              |11         |12              |13        |14              |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |r13|DWORD  |stack:72|DWORD  |r9|DWORD  |stack:68|DWORD  |r13|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |                |   |   |           |   |   |   |                |                |           |                |          |                |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 3089 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3092 982 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 3094 984 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 3100 block B85 null  <||@
  Comment 3100 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3100 1014 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3105 1016 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3107 1018 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3109 1020 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 3112 1022 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87  <||@
  Comment 3118 block B87 null  <||@
  Comment 3118 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3118 1052 rdx|DWORD = SHL r8|DWORD y: 3 size: DWORD  <||@
  Comment 3124 1054 rbx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 3129 1056 rbx|DWORD = ADD (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3131 1058 rdx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3136 1060 CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3138 1062 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 3144 block B89 null  <||@
  Comment 3144 1090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3144 1092 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 3147 1094 MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 3156 1096 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3158 1098 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 3159 1100 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:552]  <||@
  Comment 3159 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19          |20  |21  |22  |23  |24  |25         |26        |27         |28         |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[1|0x1]  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|DWORD  |r8|DWORD  |r10|DWORD  |rbx|DWORD  |-   |-   |-   |-    <||@
  Comment 3159 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3162 1102 r9|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3169 1104 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3171 1106 r9|DWORD = ADD (x: r9|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3174 1108 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3177 1110 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B93  <||@
  Comment 3183 block B90 null  <||@
  Comment 3183 1112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3183 1114 r11|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3186 1116 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3189 1118 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 3195 block B92 null  <||@
  Comment 3195 1128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3195 1130 r10|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 3199 1132 MOV (x: [r14|DWORD[.] * 8 + 18], y: r10|DWORD) size: WORD  <||@
  Comment 3208 1134 r10|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 3214 1136 r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 3217 1138 rcx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 3220 1140 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3223 1142 rdx|DWORD = SETCC condition: =  <||@
  Comment 3229 1144 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3235 1146 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3241 1148 r10|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3247 1150 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3252 1152 JUMP ~[] destination: B92 -> B195  <||@
  Comment 3257 block B25 null  <||@
  Comment 3257 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3257 210 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3259 212 JUMP ~[] destination: B25 -> B28  <||@
  Comment 3264 block B3 null  <||@
  Comment 3264 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3264 44 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3269 46 JUMP ~[] destination: B3 -> B28  <||@
  Comment 3274 block B116 null  <||@
  Comment 3274 1512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3274 1514 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3279 1516 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3285 1518 JUMP ~[] destination: B116 -> B117  <||@
  Comment 3290 block B13 null  <||@
  Comment 3290 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3290 104 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3294 106 r11|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 3300 108 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 3303 110 CMP r11|DWORD y: 2 size: DWORD  <||@
  Comment 3307 112 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 3313 block B15 null  <||@
  Comment 3313 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3313 122 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]  <||@
  Comment 3313 {Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]}  <||@
  Comment 3323 124 r9|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD  <||@
  Comment 3327 126 rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74]  <||@
  Comment 3327 [rsi:0, r9:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0           |1 
     locals:  |-           |- 
     stack:   |int[0|0x0]  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3327 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3335 128 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3338 130 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 3344 block B19 null  <||@
  Comment 3344 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3344 158 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3350 160 JUMP ~[] destination: B19 -> B21  <||@
  Comment 3355 block B59 null  <||@
  Comment 3355 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3355 588 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3359 590 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3363 592 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3368 594 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3373 596 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3376 598 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3379 600 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3384 602 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 3384 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 3394 604 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3398 606 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3403 608 r10|DWORD = ADD (x: stack:48|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 3411 610 CMP stack:80|DWORD y: 27 size: DWORD  <||@
  Comment 3416 616 rbx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3419 612 BRANCH trueDestinationProbability: 0.9998329739743084 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B66  <||@
  Comment 3425 block B60 null  <||@
  Comment 3425 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3425 618 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3429 620 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3434 628 rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3437 630 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3441 632 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3444 634 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3449 636 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3454 638 JUMP ~[] destination: B60 -> B61  <||@
  Comment 3459 block B148 null  <||@
  Comment 3459 1976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3459 1978 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3465 1980 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3470 1982 JUMP ~[] destination: B148 -> B149  <||@
  Comment 3475 block B58 null  <||@
  Comment 3475 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3475 566 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3479 568 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3483 570 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3488 572 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3493 574 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3496 576 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3499 578 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3504 580 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3508 582 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3513 584 JUMP ~[] destination: B58 -> B67  <||@
  Comment 3513 block B67 null  <||@
  Comment 3513 710 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3513 712 CMP rbx|DWORD y: 64 size: DWORD  <||@
  Comment 3516 714 BRANCH trueDestinationProbability: 0.9842400133610677 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B133  <||@
  Comment 3522 block B68 null  <||@
  Comment 3522 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3522 718 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3527 720 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3532 722 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3536 726 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3541 730 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3546 732 r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3551 734 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3554 736 JUMP ~[] destination: B68 -> B69  <||@
  Comment 3559 block B14 null  <||@
  Comment 3559 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3559 116 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3565 118 JUMP ~[] destination: B14 -> B21  <||@
  Comment 3570 block B27 null  <||@
  Comment 3570 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3570 222 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3572 224 JUMP ~[] destination: B27 -> B28  <||@
  Comment 3577 block B16 null  <||@
  Comment 3577 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3577 134 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3580 136 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3583 138 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 3589 block B17 null  <||@
  Comment 3589 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3589 142 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6d83045e encoding: base: 0 shift: 3  <||@
  Comment 3593 144 r8|DWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3598 148 JUMP ~[] destination: B17 -> B21  <||@
  Comment 3603 block B133 null  <||@
  Comment 3603 1746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3603 1748 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3608 1750 stack:48|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3613 1752 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3616 1754 JUMP ~[] destination: B133 -> B134  <||@
  Comment 3621 block B66 null  <||@
  Comment 3621 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3621 704 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3624 706 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3627 708 JUMP ~[] destination: B66 -> B67  <||@
  Comment 3629 block B193 null  <||@
  Comment 3629 2458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3629 2460 r10|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 3634 2462 rcx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3638 2464 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3643 2466 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3648 2468 r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3653 2470 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3658 2472 MOV [r15|QWORD + 668] y: -376595 size: DWORD  <||@
  Comment 3669 2474 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3676 2476 DEOPT info [bci:1415]  <||@
  Comment 3676 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3681 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415, duringCall: false, rethrow: false]
              |0             |1           |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20         |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-           |-  |-  |-  |-  |-  |-  |-  |r8|DWORD  |-   |-   |-   |-   |-   |-   |-   |r11|DWORD  |r9|DWORD  |rcx|DWORD  |r10|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |r14|QWORD[.]  |int[0|0x0]  |   |   |   |   |   |   |   |          |    |    |    |    |    |    |    |           |          |           |           |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 3682 block B167 null  <||@
  Comment 3682 2164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3682 2166 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3685 2168 JUMP ~[] destination: B167 -> B168  <||@
  Comment 3685 block B168 null  <||@
  Comment 3685 2170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3685 2172 MOV [r15|QWORD + 668] y: -335899 size: DWORD  <||@
  Comment 3696 2174 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3703 2176 DEOPT info [bci:0, 140, 1321]  <||@
  Comment 3703 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3708 [rcx:0, r14:0, stack:8, stack:16, stack:24, stack:64]at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |r11|DWORD 
  at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 3709 block B98 null  <||@
  Comment 3709 1254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3709 1256 r10|DWORD = MOVE input: int[-293907|0xfffffffffffb83ed]  <||@
  Comment 3715 1260 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3719 1262 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3723 1264 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3728 1270 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3732 1272 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3737 1276 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3740 1278 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3744 1280 JUMP ~[] destination: B98 -> B131  <||@
  Comment 3744 block B131 null  <||@
  Comment 3744 1722 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3744 1724 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3751 1726 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3758 1728 DEOPT info [bci:365]  <||@
  Comment 3758 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3763 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0             |1          |2         |3  |4  |5          |6  |7  |8  |9          |10        |11         |12         |13         |14         |15         |16  |17  |18  |19  |20  |21  |22  |23         |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-          |r8|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |r13|DWORD  |rax|DWORD  |rcx|DWORD  |rsi|DWORD  |r13|DWORD  |-   |-   |-   |-   |-   |-   |-   |rbx|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |rdx|DWORD     |rdi|DWORD  |          |   |   |           |   |   |   |           |          |           |           |           |           |           |    |    |    |    |    |    |    |           |    |    |    |    |    |    |    |    |     <||@
  Comment 3764 block B36 null  <||@
  Comment 3764 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3764 352 r11|DWORD = MOVE input: int[-359443|0xfffffffffffa83ed]  <||@
  Comment 3770 354 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3774 356 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3779 358 JUMP ~[] destination: B36 -> B205  <||@
  Comment 3779 block B205 null  <||@
  Comment 3779 2570 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3779 2572 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3786 2574 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3793 2576 DEOPT info [bci:174]  <||@
  Comment 3793 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3798 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8          |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |rax|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3799 block B95 null  <||@
  Comment 3799 1170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3799 1172 r10|DWORD = MOVE input: int[-304659|0xfffffffffffb59ed]  <||@
  Comment 3805 1176 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3809 1178 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3813 1180 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3818 1186 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3822 1188 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3827 1192 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3830 1194 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3834 1196 JUMP ~[] destination: B95 -> B131  <||@
  Comment 3836 block B91 null  <||@
  Comment 3836 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3836 1122 r11|DWORD = MOVE input: int[-305427|0xfffffffffffb56ed]  <||@
  Comment 3842 1126 JUMP ~[] destination: B91 -> B94  <||@
  Comment 3842 block B94 null  <||@
  Comment 3842 1162 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3842 1124 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3845 1164 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3852 1166 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3859 1168 DEOPT info [bci:552]  <||@
  Comment 3859 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3864 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19          |20  |21  |22  |23  |24  |25         |26        |27         |28         |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[1|0x1]  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|DWORD  |r8|DWORD  |r10|DWORD  |rbx|DWORD  |-   |-   |-   |-    <||@
  Comment 3865 block B75 null  <||@
  Comment 3865 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3865 806 r10|DWORD = MOVE input: int[-304147|0xfffffffffffb5bed]  <||@
  Comment 3871 810 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3875 812 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3879 814 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3884 820 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3888 822 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3893 826 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3896 828 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3900 830 JUMP ~[] destination: B75 -> B131  <||@
  Comment 3905 block B96 null  <||@
  Comment 3905 1198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3905 1200 r10|DWORD = MOVE input: int[-296731|0xfffffffffffb78e5]  <||@
  Comment 3911 1204 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3915 1206 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3919 1208 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3924 1214 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3928 1216 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3933 1220 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3936 1222 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3940 1224 JUMP ~[] destination: B96 -> B131  <||@
  Comment 3945 block B126 null  <||@
  Comment 3945 1644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3945 1646 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 3948 1648 MOV [r15|QWORD + 668] y: -378395 size: DWORD  <||@
  Comment 3959 1650 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3966 1652 DEOPT info [bci:914]  <||@
  Comment 3966 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3971 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|QWORD  |-   |r13|QWORD  |-   |rdi|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 3972 block B97 null  <||@
  Comment 3972 1226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3972 1228 r10|DWORD = MOVE input: int[-294683|0xfffffffffffb80e5]  <||@
  Comment 3978 1232 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3982 1234 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3986 1236 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3991 1242 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3995 1244 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4000 1248 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4003 1250 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4007 1252 JUMP ~[] destination: B97 -> B131  <||@
  Comment 4012 block B179 null  <||@
  Comment 4012 2306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4012 2308 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4017 2310 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4021 2312 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4024 2314 MOV [r15|QWORD + 668] y: -348187 size: DWORD  <||@
  Comment 4035 2316 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4042 2318 DEOPT info [bci:1343]  <||@
  Comment 4042 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4047 [r14:0, stack:8, stack:16, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18        |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |r9|DWORD  |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |          |    |    |    |           |    |    |                    |    |                   |                    |                    |    |    |     <||@
  Comment 4048 block B170 null  <||@
  Comment 4048 2184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4048 2186 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4053 2188 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4057 2190 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4062 2192 JUMP ~[] destination: B170 -> B171  <||@
  Comment 4062 block B171 null  <||@
  Comment 4062 2194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4062 2196 r10|DWORD = MOVE input: int[-337683|0xfffffffffffad8ed]  <||@
  Comment 4068 2198 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 4073 2200 JUMP ~[] destination: B171 -> B184  <||@
  Comment 4073 block B184 null  <||@
  Comment 4073 2356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4073 2358 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4080 2360 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4087 2362 DEOPT info [bci:46, 1321]  <||@
  Comment 4087 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4092 [rax:0, r14:0, stack:8, stack:24, stack:64]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4          |5         |6  |7 
     locals:  |stack:64|QWORD[.]  |rax|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28            |29                  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |rax|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 4093 block B93 null  <||@
  Comment 4093 1154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4093 1156 r11|DWORD = MOVE input: int[-305171|0xfffffffffffb57ed]  <||@
  Comment 4099 1160 JUMP ~[] destination: B93 -> B94  <||@
  Comment 4104 block B22 null  <||@
  Comment 4104 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4104 186 r11|DWORD = MOVE input: int[-284435|0xfffffffffffba8ed]  <||@
  Comment 4110 188 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4114 190 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4117 192 JUMP ~[] destination: B22 -> B23  <||@
  Comment 4117 block B23 null  <||@
  Comment 4117 194 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4117 196 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 4124 198 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4131 200 DEOPT info [bci:10, 74]  <||@
  Comment 4131 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4136 [r14:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0           |1 
     locals:  |-           |- 
     stack:   |int[0|0x0]  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 4137 block B180 null  <||@
  Comment 4137 2320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4137 2322 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4142 2324 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4146 2326 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4151 2328 JUMP ~[] destination: B180 -> B181  <||@
  Comment 4151 block B181 null  <||@
  Comment 4151 2330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4151 2332 r10|DWORD = MOVE input: int[-344091|0xfffffffffffabfe5]  <||@
  Comment 4157 2336 JUMP ~[] destination: B181 -> B184  <||@
  Comment 4159 block B204 null  <||@
  Comment 4159 2560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4159 2562 r11|DWORD = MOVE input: int[-359187|0xfffffffffffa84ed]  <||@
  Comment 4165 2564 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4169 2566 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4172 2568 JUMP ~[] destination: B204 -> B205  <||@
  Comment 4177 block B18 null  <||@
  Comment 4177 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4177 152 r11|DWORD = MOVE input: int[-288283|0xfffffffffffb99e5]  <||@
  Comment 4183 154 JUMP ~[] destination: B18 -> B23  <||@
  Comment 4185 block B65 null  <||@
  Comment 4185 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4185 678 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4189 680 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4193 682 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4198 684 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4201 686 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4204 688 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4209 690 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4213 692 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4218 694 MOV [r15|QWORD + 668] y: -292123 size: DWORD  <||@
  Comment 4229 696 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4236 698 DEOPT info [bci:330]  <||@
  Comment 4236 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4241 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330, duringCall: false, rethrow: false]
              |0             |1          |2               |3  |4  |5          |6  |7  |8  |9               |10              |11         |12              |13         |14              |15         |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-          |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |r13|DWORD  |stack:72|DWORD  |rcx|DWORD  |stack:68|DWORD  |r13|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |r8|DWORD      |rdx|DWORD  |                |   |   |           |   |   |   |                |                |           |                |           |                |           |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 4242 block B82 null  <||@
  Comment 4242 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4242 934 r10|DWORD = MOVE input: int[-361499|0xfffffffffffa7be5]  <||@
  Comment 4248 936 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4252 938 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4256 940 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4260 942 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4265 944 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4269 948 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4273 950 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4278 952 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4281 954 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4285 956 JUMP ~[] destination: B82 -> B131  <||@
  Comment 4290 block B130 null  <||@
  Comment 4290 1704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4290 1706 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4293 1708 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4296 1710 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4299 1712 rdi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 4302 1714 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 4305 1716 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4309 1718 r10|DWORD = MOVE input: int[-308763|0xfffffffffffb49e5]  <||@
  Comment 4315 1720 JUMP ~[] destination: B130 -> B131  <||@
  Comment 4320 block B86 null  <||@
  Comment 4320 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4320 1026 r10|DWORD = MOVE input: int[-298771|0xfffffffffffb70ed]  <||@
  Comment 4326 1028 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4330 1030 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4334 1032 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4338 1034 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4343 1036 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4347 1038 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4350 1040 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4355 1042 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4358 1044 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4362 1046 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4367 1048 JUMP ~[] destination: B86 -> B131  <||@
  Comment 4372 block B200 null  <||@
  Comment 4372 2534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4372 2536 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4375 2538 MOV [r15|QWORD + 668] y: -358419 size: DWORD  <||@
  Comment 4386 2540 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4393 2542 DEOPT info [bci:1445]  <||@
  Comment 4393 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4398 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19        |20           |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r8|DWORD  |r9|DWORD  |long[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 4399 block B77 null  <||@
  Comment 4399 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4399 840 r10|DWORD = MOVE input: int[-304403|0xfffffffffffb5aed]  <||@
  Comment 4405 844 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4409 846 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4413 848 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4418 854 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4422 856 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4427 860 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4430 862 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4434 864 JUMP ~[] destination: B77 -> B131  <||@
  Comment 4439 block B140 null  <||@
  Comment 4439 1892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4439 1894 rcx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4443 1896 r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 4448 1898 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 4453 1900 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4458 1902 r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 4463 1904 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4467 1906 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4470 1908 MOV [r15|QWORD + 668] y: -364827 size: DWORD  <||@
  Comment 4481 1910 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4488 1912 DEOPT info [bci:1227]  <||@
  Comment 4488 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4493 [rax:0, rbx:0, r8:0, r9:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18         |19         |20  |21  |22         |23  |24  |25           |26  |27            |28            |29           |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |rcx|DWORD  |r11|DWORD  |-   |-   |r10|DWORD  |-   |-   |r8|QWORD[.]  |-   |rax|QWORD[.]  |rbx|QWORD[.]  |r9|QWORD[.]  |-   |-   |-    <||@
  Comment 4494 block B30 null  <||@
  Comment 4494 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4494 288 r11|DWORD = MOVE input: int[-358931|0xfffffffffffa85ed]  <||@
  Comment 4500 290 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4504 292 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4507 294 JUMP ~[] destination: B30 -> B205  <||@
  Comment 4512 block B118 null  <||@
  Comment 4512 1526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4512 1528 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4515 1530 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@613009710]  <||@
  Comment 4515 {Object[d.a@613009710]}  <||@
  Comment 4525 1532 MOV [r15|QWORD + 668] y: -376075 size: DWORD  <||@
  Comment 4536 1534 MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 4543 1536 DEOPT info [bci:914]  <||@
  Comment 4543 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4548 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |r8|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 4549 block B113 null  <||@
  Comment 4549 1490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4549 1492 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4552 1494 rbp|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4554 1496 MOV [r15|QWORD + 668] y: -324115 size: DWORD  <||@
  Comment 4565 1498 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4572 1500 DEOPT info [bci:889]  <||@
  Comment 4572 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4577 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |r8|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 4578 block B80 null  <||@
  Comment 4578 900 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4578 902 r10|DWORD = MOVE input: int[-304915|0xfffffffffffb58ed]  <||@
  Comment 4584 904 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4588 906 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4592 908 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4596 910 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4601 912 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4605 916 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4609 918 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4614 920 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4617 922 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4621 924 JUMP ~[] destination: B80 -> B131  <||@
  Comment 4626 block B182 null  <||@
  Comment 4626 2338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4626 2340 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4631 2342 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4635 2344 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4640 2346 JUMP ~[] destination: B182 -> B183  <||@
  Comment 4640 block B183 null  <||@
  Comment 4640 2348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4640 2350 r10|DWORD = MOVE input: int[-340251|0xfffffffffffacee5]  <||@
  Comment 4646 2354 JUMP ~[] destination: B183 -> B184  <||@
  Comment 4651 block B84 null  <||@
  Comment 4651 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4651 988 r10|DWORD = MOVE input: int[-299283|0xfffffffffffb6eed]  <||@
  Comment 4657 990 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4661 992 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4665 994 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4669 996 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4674 998 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4678 1000 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4681 1002 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4686 1004 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4689 1006 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4693 1008 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4698 1010 JUMP ~[] destination: B84 -> B131  <||@
  Comment 4703 block B103 null  <||@
  Comment 4703 1368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4703 1370 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4707 1372 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4711 1374 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4716 1376 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4720 1378 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4723 1380 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4726 1382 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4730 1384 rbp|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4732 1386 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4735 1388 r10|DWORD = MOVE input: int[-320531|0xfffffffffffb1bed]  <||@
  Comment 4741 1390 JUMP ~[] destination: B103 -> B131  <||@
  Comment 4746 block B129 null  <||@
  Comment 4746 1686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4746 1688 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4749 1690 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4752 1692 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4755 1694 rdi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 4758 1696 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 4761 1698 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4765 1700 r10|DWORD = MOVE input: int[-310811|0xfffffffffffb41e5]  <||@
  Comment 4771 1702 JUMP ~[] destination: B129 -> B131  <||@
  Comment 4776 block B88 null  <||@
  Comment 4776 1064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4776 1066 r10|DWORD = MOVE input: int[-299027|0xfffffffffffb6fed]  <||@
  Comment 4782 1068 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4786 1070 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4790 1072 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4794 1074 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4799 1076 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4803 1078 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4806 1080 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4811 1082 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4814 1084 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4818 1086 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4823 1088 JUMP ~[] destination: B88 -> B131  <||@
  Comment 4828 block B108 null  <||@
  Comment 4828 1422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4828 1424 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4832 1426 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4836 1428 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4841 1430 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4844 1432 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4848 1434 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4851 1436 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4854 1438 r10|DWORD = MOVE input: int[-363547|0xfffffffffffa73e5]  <||@
  Comment 4860 1440 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4864 1442 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4868 1444 JUMP ~[] destination: B108 -> B131  <||@
  Comment 4873 block B159 null  <||@
  Comment 4873 2096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4873 2098 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 4878 2100 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4881 2102 r10|DWORD = MOVE input: int[-333075|0xfffffffffffaeaed]  <||@
  Comment 4887 2104 JUMP ~[] destination: B159 -> B184  <||@
  Comment 4892 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4892 4  <||@
  Comment 4898 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4898 5  <||@
  HexCodeFile>>> <|@
end_nmethod
