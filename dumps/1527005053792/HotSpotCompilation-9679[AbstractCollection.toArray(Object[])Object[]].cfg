begin_compilation
  name " HotSpotCompilation-9679[java.util.AbstractCollection.toArray(Object[])]"
  method "HotSpotCompilation-9679[java.util.AbstractCollection.toArray(Object[])]"
  date 1527005220190
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v2473 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v2473  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v2414 v2415 v1154 ?68 ?719 ?761 ?105 ?573 v2425 v2416 a1675 ?574 v2412 v2418 a1607 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?76 ?761 v2473 a1273 ?105 ?1826 ?436 ?584 ?351 ?68 ?1827 v2426 v2381 a1272 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 176
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - 
=== Succesors ===
=== Usages ===
v1840 v2473 i2313 i2317 i2321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v2311 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v2311  <|@  <|@
f <@~|@floating>@ <|@
tid v2425 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v2311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2425 
=== Succesors ===
next: v115 
=== Usages ===
v2234 v2230 v2232 v2310 
=== Predecessor ===
v2473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2425 #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v2231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2232 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2232 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2311 
y: v2231 
=== Succesors ===
=== Usages ===
v786 v115 v445 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2311 y: v2231  <|@  <|@
f <@~|@floating>@ <|@
tid a1837 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1840 v1940 v1868 v1858 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2329 i2333 i2319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2229 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2230 v2310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2415 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2328 a2330 i2315 a2316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2327 i2332 i2314 i2318 a2320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2412 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2325 a2312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=size target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9440844134263875
=== Inputs ===
condition: v2232 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v2311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2232 #trueSuccessor: v111 #falseSuccessor: v114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=size target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2312 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2312 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2412 
=== Succesors ===
next: i2313 
=== Usages ===
v2422 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2412 #next: i2313  <|@  <|@
f <@~|@floating>@ <|@
tid v2422 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2312 
=== Succesors ===
=== Usages ===
i2313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2422 
=== Succesors ===
next: i2314 
=== Usages ===
v264 
=== Predecessor ===
a2312 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2422 #next: i2314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: v1312 
=== Usages ===
v264 
=== Predecessor ===
i2313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: v1312  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2313 
y: i2314 
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2313 y: i2314  <|@  <|@
f <@*|@fixed>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v1309 
falseSuccessor: v1311 
=== Usages ===
=== Predecessor ===
i2314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v1309 #falseSuccessor: v1311  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2315 
=== Usages ===
=== Predecessor ===
v1312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.size(ArrayList.java:1049) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: v112 
=== Usages ===
i107 
=== Predecessor ===
v1309 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1847 
=== Usages ===
=== Predecessor ===
v1312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1847  <|@  <|@
f <@~|@floating>@ <|@
tid i1848 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -298259
stableDimension: 0
stamp: i32 [-298259] ⇊00000000fffb72ed ⇈00000000fffb72ed
stampKind: i32
value: int[-298259|0xfffffffffffb72ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1834 
=== Predecessor ===
v1311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v2310 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2311 
y: v2229 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2311 y: v2229  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 0.8652798415056957
=== Inputs ===
condition: v2310 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2310 #trueSuccessor: v120 #falseSuccessor: v123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2316 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: i2317 
=== Usages ===
v2423 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: i2317  <|@  <|@
f <@~|@floating>@ <|@
tid v2423 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2316 
=== Succesors ===
=== Usages ===
i2317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2423 
=== Succesors ===
next: i2318 
=== Usages ===
v294 
=== Predecessor ===
a2316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2423 #next: i2318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2318 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: v1320 
=== Usages ===
v294 
=== Predecessor ===
i2317 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: v1320  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2317 
y: i2318 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2317 y: i2318  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v1317 
falseSuccessor: v1319 
=== Usages ===
=== Predecessor ===
i2318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v1317 #falseSuccessor: v1319  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2319 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.size(AbstractList.java:646) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2416 
=== Succesors ===
next: v121 
=== Usages ===
i107 
=== Predecessor ===
v1317 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2416 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1851 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1851  <|@  <|@
f <@~|@floating>@ <|@
tid i1852 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -301587
stableDimension: 0
stamp: i32 [-301587] ⇊00000000fffb65ed ⇈00000000fffb65ed
stampKind: i32
value: int[-301587|0xfffffffffffb65ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1834 
=== Predecessor ===
v1319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B122" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1324  <|@  <|@
f <@~|@floating>@ <|@
tid v2233 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2234 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2311 
y: v2233 
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2311 y: v2233  <|@  <|@
f <@*|@fixed>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2234 
=== Succesors ===
trueSuccessor: v1321 
falseSuccessor: v1323 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2234 #trueSuccessor: v1321 #falseSuccessor: v1323  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2320 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.map
nodeSourcePosition: at java.util.HashSet.size(HashSet.java:182) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: i2321 
=== Usages ===
v2424 
=== Predecessor ===
v1321 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: i2321  <|@  <|@
f <@~|@floating>@ <|@
tid v2424 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2320 
=== Succesors ===
=== Usages ===
i2321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.size(HashMap.java:526) [bci: 1]
at java.util.HashSet.size(HashSet.java:182) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2424 
=== Succesors ===
next: v130 
=== Usages ===
i107 
=== Predecessor ===
a2320 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2424 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v104 
values: i2315 i2319 i2321 
=== Succesors ===
=== Usages ===
?105 v8 v2064 a2033 i1993 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v104 values: i2315 i2319 i2321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v121 v130 
=== Succesors ===
next: i2322 
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v121 v130 #next: i2322  <|@  <|@
f <@~|@floating>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2381 
=== Succesors ===
next: v11 
=== Usages ===
v8 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2381 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2322 
y: i107 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2322 y: i107  <|@  <|@
f <@~|@floating>@ <|@
tid v2268 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2191 v2286 v2289 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2262 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2174 v2284 v2309 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 v2288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2250 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2251 v2287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2121 v2285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2082 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2096 a2150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:121) [bci: 6]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v527 i75 v1294 v2130 v2178 i825 v592 v641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:121) [bci: 6]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 i480 i331 v840 a2033 a2096 a2150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 8]
stamp: void
trueSuccessorProbability: 2.7694693696687716E-4
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
i2322 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2323 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2323  <|@  <|@
f <@~|@floating>@ <|@
tid v2426 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2426 
=== Succesors ===
next: a1095 
=== Usages ===
v1966 v2068 v2380 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2426 #next: a1095  <|@  <|@
f <@~|@floating>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2323 
=== Succesors ===
=== Usages ===
a1095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1095 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ArrayKlass::_component_mirror:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:124) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2380 
=== Succesors ===
next: v1973 
=== Usages ===
v1970 
=== Predecessor ===
v2323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2380 #next: v1973  <|@  <|@
f <@~|@floating>@ <|@
tid a1967 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: Class:void
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:void]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1970 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:120) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:369) [bci: 35]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1095 
y: a1967 
=== Succesors ===
=== Usages ===
v1973 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1095 y: a1967  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 176
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - i107 
=== Succesors ===
=== Usages ===
a2033 v1330 v1974 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:369) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1970 
=== Succesors ===
trueSuccessor: v1972 
falseSuccessor: v1971 
=== Usages ===
=== Predecessor ===
a1095 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1970 #trueSuccessor: v1972 #falseSuccessor: v1971  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:370) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1974 
=== Usages ===
=== Predecessor ===
v1973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1974  <|@  <|@
f <@*|@fixed>@ <|@
tid v1974 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:370) [bci: 58]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1972 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:373) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1999 
=== Usages ===
=== Predecessor ===
v1973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1999 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2059 
=== Usages ===
v2427 v2428 
=== Predecessor ===
v1971 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2059  <|@  <|@
f <@~|@floating>@ <|@
tid v2427 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1999 
index: - 
=== Succesors ===
=== Usages ===
j2059 v2063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1999 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2059 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2427 
=== Succesors ===
next: j2060 
=== Usages ===
j2003 v2429 v2430 v2436 v2431 a2032 v2432 v2433 v2434 v2435 
=== Predecessor ===
j1999 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2427 #next: j2060  <|@  <|@
f <@~|@floating>@ <|@
tid v2428 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1999 
index: - 
=== Succesors ===
=== Usages ===
j2060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1999 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2060 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2428 
=== Succesors ===
next: v2007 
=== Usages ===
v2004 
=== Predecessor ===
j2059 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2428 #next: v2007  <|@  <|@
f <@~|@floating>@ <|@
tid i924 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1993 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1993 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i107 
y: i924 
=== Succesors ===
=== Usages ===
i2299 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i107 y: i924  <|@  <|@
f <@~|@floating>@ <|@
tid i2298 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2299 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i1993 
y: i2298 
=== Succesors ===
=== Usages ===
i1998 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1993 y: i2298  <|@  <|@
f <@~|@floating>@ <|@
tid i1997 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1998 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1998 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2299 
y: i1997 
=== Succesors ===
=== Usages ===
j2002 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2299 y: i1997  <|@  <|@
f <@~|@floating>@ <|@
tid j2002 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1998 
=== Succesors ===
=== Usages ===
j2003 v2024 v2432 v2433 v2434 v2435 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1998  <|@  <|@
f <@~|@floating>@ <|@
tid j2003 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
=== Inputs ===
x: j2002 
y: j2059 
=== Succesors ===
=== Usages ===
v2004 v2063 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2002 y: j2059  <|@  <|@
f <@~|@floating>@ <|@
tid v2004 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2060 
y: j2003 
=== Succesors ===
=== Usages ===
v2007 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2060 y: j2003  <|@  <|@
f <@*|@fixed>@ <|@
tid v2007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2004 
=== Succesors ===
trueSuccessor: v2005 
falseSuccessor: v2006 
=== Usages ===
=== Predecessor ===
j2060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2004 #trueSuccessor: v2005 #falseSuccessor: v2006  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523649650915936459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2033 
=== Usages ===
=== Predecessor ===
v2007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2033  <|@  <|@
f <@~|@floating>@ <|@
tid v1966 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v2323 
=== Succesors ===
=== Usages ===
a2033 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v2323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2033 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?105 
arguments: v1966 i107 i20 
=== Succesors ===
next: v2036 
=== Usages ===
a2037 
=== Predecessor ===
v2005 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?105 arguments: v1966 i107 i20 #next: v2036  <|@  <|@
f <@*|@fixed>@ <|@
tid v2036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2035 
=== Predecessor ===
a2033 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553693305219744456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2063 
=== Usages ===
=== Predecessor ===
v2007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2063  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2063 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2427 
value: j2003 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2046 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2427 value: j2003 stateAfter: - lastLocationAccess: - #next: v2046  <|@  <|@
f <@~|@floating>@ <|@
tid v2432 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2002 
index: j2059 
=== Succesors ===
=== Usages ===
v2046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2002 index: j2059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2432 
=== Succesors ===
next: v2049 
=== Usages ===
=== Predecessor ===
v2063 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2432 #next: v2049  <|@  <|@
f <@~|@floating>@ <|@
tid v2433 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2002 
index: j2059 
=== Succesors ===
=== Usages ===
v2049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2002 index: j2059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2433 
=== Succesors ===
next: v2052 
=== Usages ===
=== Predecessor ===
v2046 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2433 #next: v2052  <|@  <|@
f <@~|@floating>@ <|@
tid v2434 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2002 
index: j2059 
=== Succesors ===
=== Usages ===
v2052 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2002 index: j2059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2434 
=== Succesors ===
next: v2055 
=== Usages ===
=== Predecessor ===
v2049 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2434 #next: v2055  <|@  <|@
f <@~|@floating>@ <|@
tid v2435 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2002 
index: j2059 
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2002 index: j2059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2435 
=== Succesors ===
next: v2064 
=== Usages ===
=== Predecessor ===
v2052 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2435 #next: v2064  <|@  <|@
f <@~|@floating>@ <|@
tid v2429 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2059 
index: - 
=== Succesors ===
=== Usages ===
v2064 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2059 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2064 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2429 
value: i107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2065 
=== Usages ===
=== Predecessor ===
v2055 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2429 value: i107 stateAfter: - lastLocationAccess: - #next: v2065  <|@  <|@
f <@~|@floating>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2059 
index: - 
=== Succesors ===
=== Usages ===
v2065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2059 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1968 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2065 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2065 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2430 
value: j1968 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2068 
=== Usages ===
=== Predecessor ===
v2064 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2430 value: j1968 stateAfter: - lastLocationAccess: - #next: v2068  <|@  <|@
f <@~|@floating>@ <|@
tid v2436 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2059 
index: - 
=== Succesors ===
=== Usages ===
v2068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2059 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2068 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2436 
value: v2323 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2021 
=== Usages ===
=== Predecessor ===
v2065 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2436 value: v2323 stateAfter: - lastLocationAccess: - #next: v2021  <|@  <|@
f <@~|@floating>@ <|@
tid j926 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2022 
=== Predecessor ===
v2068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558196904847114952
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2022 
values: j926 j2029 
=== Succesors ===
=== Usages ===
v2024 v2431 j2029 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2022 values: j926 j2029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2021 
=== Succesors ===
next: v2027 
=== Usages ===
j2023 v2026 v2030 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2021 #next: v2027  <|@  <|@
f <@~|@floating>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 241]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2023 
y: j2002 
=== Succesors ===
=== Usages ===
v2027 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2023 y: j2002  <|@  <|@
f <@*|@fixed>@ <|@
tid v2027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 241]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2024 
=== Succesors ===
trueSuccessor: v2025 
falseSuccessor: v2026 
=== Usages ===
=== Predecessor ===
v2022 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2024 #trueSuccessor: v2025 #falseSuccessor: v2026  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553693305219744456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 244]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2069 
=== Usages ===
=== Predecessor ===
v2027 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2069  <|@  <|@
f <@~|@floating>@ <|@
tid v2431 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2059 
index: j2023 
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2059 index: j2023  <|@  <|@
f <@~|@floating>@ <|@
tid j1602 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 251]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2431 
value: j1602 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2030 
=== Usages ===
=== Predecessor ===
v2025 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2431 value: j1602 stateAfter: - lastLocationAccess: - #next: v2030  <|@  <|@
f <@~|@floating>@ <|@
tid j1960 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2029 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2029 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 258]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
=== Inputs ===
x: j2023 
y: j1960 
=== Succesors ===
=== Usages ===
j2023 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2023 y: j1960  <|@  <|@
f <@*|@fixed>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
loopBegin: v2022 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2069 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2022  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553693305219744456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:493) [bci: 266]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2022 
=== Succesors ===
next: v2031 
=== Usages ===
=== Predecessor ===
v2027 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2022 #next: v2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2031 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2032 
=== Usages ===
=== Predecessor ===
v2026 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2032  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2059 
=== Succesors ===
next: v2034 
=== Usages ===
a2037 
=== Predecessor ===
v2031 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2059 #next: v2034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2035 
=== Predecessor ===
a2032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2035 
values: a2032 a2033 
=== Succesors ===
=== Usages ===
a1272 v2437 a1273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2035 values: a2032 a2033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2034 v2036 
=== Succesors ===
next: v2324 
=== Usages ===
a2037 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2034 v2036 #next: v2324  <|@  <|@
f <@~|@floating>@ <|@
tid v2437 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2037 
index: - 
=== Succesors ===
=== Usages ===
v2324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2037 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2437 
=== Succesors ===
next: v1332 
=== Usages ===
v2237 
=== Predecessor ===
v2035 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2437 #next: v1332  <|@  <|@
f <@~|@floating>@ <|@
tid v2236 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
rawvalue: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2237 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2324 
y: v2236 
=== Succesors ===
=== Usages ===
v1332 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2324 y: v2236  <|@  <|@
f <@*|@fixed>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2237 
=== Succesors ===
trueSuccessor: v1329 
falseSuccessor: v1331 
=== Usages ===
=== Predecessor ===
v2324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2237 #trueSuccessor: v1329 #falseSuccessor: v1331  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9440844134263875
=== Inputs ===
condition: v2232 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v444 
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2232 #trueSuccessor: v442 #falseSuccessor: v444  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553458733082124626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v757  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535191782419552387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v760  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
v444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1330 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1330  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1099
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1331 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B35" 
    xhandlers
    flags 
    probability 4607179924283773157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v786  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9440844134263875
=== Inputs ===
condition: v2232 
=== Succesors ===
trueSuccessor: v784 
falseSuccessor: v785 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2232 #trueSuccessor: v784 #falseSuccessor: v785  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606676420936397924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v758  <|@  <|@
f <@*|@fixed>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v784 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1272 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v756 
values: a2037 a2 
=== Succesors ===
=== Usages ===
?68 a766 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v756 values: a2037 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v757 v758 
=== Succesors ===
next: a2325 
=== Usages ===
a1272 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v757 v758 #next: a2325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2325 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2412 
=== Succesors ===
next: i2326 
=== Usages ===
v2413 
=== Predecessor ===
v756 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2412 #next: i2326  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 179
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - a1272 
=== Succesors ===
=== Usages ===
v1858 a2096 i2326 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - a1272  <|@  <|@
f <@~|@floating>@ <|@
tid v2413 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2325 
=== Succesors ===
=== Usages ===
i2326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?68 
guard: - 
address: v2413 
=== Succesors ===
next: i2327 
=== Usages ===
v523 v2128 
=== Predecessor ===
a2325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?68 guard: - address: v2413 #next: i2327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: v1340 
=== Usages ===
v523 
=== Predecessor ===
i2326 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: v1340  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2326 
y: i2327 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2326 y: i2327  <|@  <|@
f <@*|@fixed>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v523 
=== Succesors ===
trueSuccessor: v1337 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
i2327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v523 #trueSuccessor: v1337 #falseSuccessor: v1339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2328 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2328 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 6]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: v1344 
=== Usages ===
v527 
=== Predecessor ===
v1337 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2328 
y: i21 
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2328 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v527 
=== Succesors ===
trueSuccessor: v1343 
falseSuccessor: v1341 
=== Usages ===
=== Predecessor ===
i2328 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v527 #trueSuccessor: v1343 #falseSuccessor: v1341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1859 
=== Usages ===
=== Predecessor ===
v1344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1859  <|@  <|@
f <@~|@floating>@ <|@
tid i1860 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -285459
stableDimension: 0
stamp: i32 [-285459] ⇊00000000fffba4ed ⇈00000000fffba4ed
stampKind: i32
value: int[-285459|0xfffffffffffba4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1856 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v1343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2084 
=== Usages ===
=== Predecessor ===
v1344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2084 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2100 
=== Usages ===
v2438 v2439 
=== Predecessor ===
v1341 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2100  <|@  <|@
f <@~|@floating>@ <|@
tid v2438 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2084 
index: - 
=== Succesors ===
=== Usages ===
j2100 v2102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2084 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2438 
=== Succesors ===
next: j2101 
=== Usages ===
j2239 j2106 v2456 
=== Predecessor ===
j2084 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2438 #next: j2101  <|@  <|@
f <@~|@floating>@ <|@
tid v2439 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2084 
index: - 
=== Succesors ===
=== Usages ===
j2101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2084 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2439 
=== Succesors ===
next: v2092 
=== Usages ===
v2089 
=== Predecessor ===
j2100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2439 #next: v2092  <|@  <|@
f <@~|@floating>@ <|@
tid j2238 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2100 
y: j2238 
=== Succesors ===
=== Usages ===
v2089 v2102 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2100 y: j2238  <|@  <|@
f <@~|@floating>@ <|@
tid v2089 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2101 
y: j2239 
=== Succesors ===
=== Usages ===
v2092 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2101 y: j2239  <|@  <|@
f <@*|@fixed>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2089 
=== Succesors ===
trueSuccessor: v2090 
falseSuccessor: v2091 
=== Usages ===
=== Predecessor ===
j2101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2089 #trueSuccessor: v2090 #falseSuccessor: v2091  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576595897893070561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2096 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2096  <|@  <|@
f <@~|@floating>@ <|@
tid i2241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2096 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2096 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?68 
arguments: v2082 i2241 i20 
=== Succesors ===
next: j2097 
=== Usages ===
j2097 
=== Predecessor ===
v2090 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?68 arguments: v2082 i2241 i20 #next: j2097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2097 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2096 
=== Succesors ===
next: v2107 
=== Usages ===
j2106 
=== Predecessor ===
a2096 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2096 #next: v2107  <|@  <|@
f <@*|@fixed>@ <|@
tid v2107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2104 
=== Predecessor ===
j2097 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606593740406052892
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2102 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2438 
value: j2239 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2099 
=== Usages ===
=== Predecessor ===
v2091 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2438 value: j2239 stateAfter: - lastLocationAccess: - #next: v2099  <|@  <|@
f <@~|@floating>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j2100 
index: - 
=== Succesors ===
=== Usages ===
v2099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2100 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2456 
=== Succesors ===
next: v2105 
=== Usages ===
=== Predecessor ===
v2102 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2456 #next: v2105  <|@  <|@
f <@*|@fixed>@ <|@
tid v2105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2104 
=== Predecessor ===
v2099 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2106 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2104 
values: j2100 j2097 
=== Succesors ===
=== Usages ===
v2442 v2441 a1604 v2457 v2458 v2459 v2460 v2461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2104 values: j2100 j2097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2105 v2107 
=== Succesors ===
next: a1604 
=== Usages ===
j2106 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2105 v2107 #next: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1604 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2106 
=== Succesors ===
next: j2117 
=== Usages ===
a1610 
=== Predecessor ===
v2104 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2106 #next: j2117  <|@  <|@
f <@~|@floating>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2112 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1721 
=== Succesors ===
=== Usages ===
v2440 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1721  <|@  <|@
f <@~|@floating>@ <|@
tid v2440 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2112 
index: - 
=== Succesors ===
=== Usages ===
j2117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2440 
=== Succesors ===
next: v2118 
=== Usages ===
v2118 
=== Predecessor ===
a1604 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2440 #next: v2118  <|@  <|@
f <@~|@floating>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2441 
value: j2117 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2121 
=== Usages ===
=== Predecessor ===
j2117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2441 value: j2117 stateAfter: - lastLocationAccess: - #next: v2121  <|@  <|@
f <@~|@floating>@ <|@
tid v2442 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2442 
value: v2244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2126 
=== Usages ===
=== Predecessor ===
v2118 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2442 value: v2244 stateAfter: - lastLocationAccess: - #next: v2126  <|@  <|@
f <@~|@floating>@ <|@
tid v2457 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2457 
value: j2124 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2128 
=== Usages ===
=== Predecessor ===
v2121 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2457 value: j2124 stateAfter: - lastLocationAccess: - #next: v2128  <|@  <|@
f <@~|@floating>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2128 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2458 
value: i2326 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2130 
=== Usages ===
=== Predecessor ===
v2126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2458 value: i2326 stateAfter: - lastLocationAccess: - #next: v2130  <|@  <|@
f <@~|@floating>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2459 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2329 
=== Usages ===
=== Predecessor ===
v2128 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2459 value: i21 stateAfter: - lastLocationAccess: - #next: i2329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2329 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.offset
nodeSourcePosition: at java.util.ArrayList$SubList.listIterator(ArrayList.java:1101) [bci: 10]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2416 
=== Succesors ===
next: v2132 
=== Usages ===
v2132 
=== Predecessor ===
v2130 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2416 #next: v2132  <|@  <|@
f <@~|@floating>@ <|@
tid v2460 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2460 
value: i2329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2134 
=== Usages ===
=== Predecessor ===
i2329 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2460 value: i2329 stateAfter: - lastLocationAccess: - #next: v2134  <|@  <|@
f <@~|@floating>@ <|@
tid v2461 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1607 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2461 
value: a1607 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1610 
=== Usages ===
=== Predecessor ===
v2132 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2461 value: a1607 stateAfter: - lastLocationAccess: - #next: a1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1610 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1604 
=== Succesors ===
next: v1611 
=== Usages ===
a438 
=== Predecessor ===
v2134 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1604 #next: v1611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
a1610 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v443  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v1611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1861 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1861  <|@  <|@
f <@~|@floating>@ <|@
tid i1862 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284691
stableDimension: 0
stamp: i32 [-284691] ⇊00000000fffba7ed ⇈00000000fffba7ed
stampKind: i32
value: int[-284691|0xfffffffffffba7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1856 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v1339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1856 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-285459 - -283147] ⇊00000000fffba4e5 ⇈00000000fffbaffd
valueDescription: i32
=== Inputs ===
merge: v1853 
values: i1860 i1862 
=== Succesors ===
=== Usages ===
v1858 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1853 values: i1860 i1862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1859 v1861 
=== Succesors ===
next: v1858 
=== Usages ===
i1856 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1859 v1861 #next: v1858  <|@  <|@
f <@*|@fixed>@ <|@
tid v1858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?68 
actionAndReason: i1856 
speculation: a1837 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1853 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?68 actionAndReason: i1856 speculation: a1837  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588216874593798165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
v785 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B35" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1273 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v759 
values: a2037 a2 
=== Succesors ===
=== Usages ===
?1826 a766 a766 ?584 ?761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v759 values: a2037 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v760 v762 
=== Succesors ===
next: v569 
=== Usages ===
a1273 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v760 v762 #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid v2230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2311 
y: v2229 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2311 y: v2229  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=iterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.8652798415056957
=== Inputs ===
condition: v2230 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2230 #trueSuccessor: v566 #falseSuccessor: v568  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=iterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2330 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2330 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: i2331 
=== Usages ===
?649 v2201 v2417 v2420 v2443 v2203 ?822 v2475 
=== Predecessor ===
v566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: i2331  <|@  <|@
tid ?761 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 179
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - a1273 
=== Succesors ===
=== Usages ===
v1940 i2331 i2337 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - a1273  <|@  <|@
f <@~|@floating>@ <|@
tid v2417 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2330 
=== Succesors ===
=== Usages ===
i2331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2331 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?761 
guard: - 
address: v2417 
=== Succesors ===
next: i2332 
=== Usages ===
v588 v2199 
=== Predecessor ===
a2330 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?761 guard: - address: v2417 #next: i2332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2332 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: v1352 
=== Usages ===
v588 
=== Predecessor ===
i2331 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2331 
y: i2332 
=== Succesors ===
=== Usages ===
v1352 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2331 y: i2332  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v588 
=== Succesors ===
trueSuccessor: v1349 
falseSuccessor: v1351 
=== Usages ===
=== Predecessor ===
i2332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v588 #trueSuccessor: v1349 #falseSuccessor: v1351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2333 
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 6]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2416 
=== Succesors ===
next: v1356 
=== Usages ===
v592 
=== Predecessor ===
v1349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2416 #next: v1356  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2333 
y: i21 
=== Succesors ===
=== Usages ===
v1356 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2333 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v592 
=== Succesors ===
trueSuccessor: v1355 
falseSuccessor: v1353 
=== Usages ===
=== Predecessor ===
i2333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v592 #trueSuccessor: v1355 #falseSuccessor: v1353  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1941 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1941  <|@  <|@
f <@~|@floating>@ <|@
tid i1942 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -289555
stableDimension: 0
stamp: i32 [-289555] ⇊00000000fffb94ed ⇈00000000fffb94ed
stampKind: i32
value: int[-289555|0xfffffffffffb94ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2334 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2334  <|@  <|@
f <@~|@floating>@ <|@
tid v2418 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2334 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 30]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2418 
=== Succesors ===
next: v1360 
=== Usages ===
v2195 v840 v646 ?649 v641 v827 ?822 ?822 
=== Predecessor ===
v1353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2418 #next: v1360  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2334 
y: i21 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2334 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v641 
=== Succesors ===
trueSuccessor: v1359 
falseSuccessor: v1357 
=== Usages ===
=== Predecessor ===
i2334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v641 #trueSuccessor: v1359 #falseSuccessor: v1357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1945 
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1945  <|@  <|@
f <@~|@floating>@ <|@
tid i1946 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291603
stableDimension: 0
stamp: i32 [-291603] ⇊00000000fffb8ced ⇈00000000fffb8ced
stampKind: i32
value: int[-291603|0xfffffffffffb8ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1359 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2335 
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2335  <|@  <|@
f <@~|@floating>@ <|@
tid v2443 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2330 
=== Succesors ===
=== Usages ===
v2335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2443 
=== Succesors ===
next: v1137 
=== Usages ===
v2419 v2251 v2253 v2255 
=== Predecessor ===
v1357 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2443 #next: v1137  <|@  <|@
f <@~|@floating>@ <|@
tid v2419 <|@
d <@d|@=== Debug Properties ===
displacement: 696
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2335 
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v2419 
=== Succesors ===
next: v1364 
=== Usages ===
v628 
=== Predecessor ===
v2335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2419 #next: v1364  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotMethod<AbstractList.listIterator(int)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<AbstractList.listIterator(int)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1137 
y: v626 
=== Succesors ===
=== Usages ===
v1364 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1137 y: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v628 
=== Succesors ===
trueSuccessor: v1361 
falseSuccessor: v1363 
=== Usages ===
=== Predecessor ===
v1137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v628 #trueSuccessor: v1361 #falseSuccessor: v1363  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v2251 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2335 
y: v2250 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2335 y: v2250  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.5044648172401477
=== Inputs ===
condition: v2251 
=== Succesors ===
trueSuccessor: v668 
falseSuccessor: v671 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2251 #trueSuccessor: v668 #falseSuccessor: v671  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582692156624931946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2336 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2336  <|@  <|@
f <@~|@floating>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2330 
=== Succesors ===
=== Usages ===
a2336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2336 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2420 
=== Succesors ===
next: i2337 
=== Usages ===
v2421 
=== Predecessor ===
v668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2420 #next: i2337  <|@  <|@
f <@~|@floating>@ <|@
tid v2421 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2336 
=== Succesors ===
=== Usages ===
i2337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?761 
guard: - 
address: v2421 
=== Succesors ===
next: v1372 
=== Usages ===
i825 v827 
=== Predecessor ===
a2336 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?761 guard: - address: v2421 #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2337 
y: i2334 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2337 y: i2334  <|@  <|@
f <@*|@fixed>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v827 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1369 
=== Usages ===
=== Predecessor ===
i2337 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v827 #trueSuccessor: v1371 #falseSuccessor: v1369  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1951 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1951  <|@  <|@
f <@~|@floating>@ <|@
tid i1952 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293907
stableDimension: 0
stamp: i32 [-293907] ⇊00000000fffb83ed ⇈00000000fffb83ed
stampKind: i32
value: int[-293907|0xfffffffffffb83ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1951 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4582692156624931946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v823 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v823  <|@  <|@
f <@*|@fixed>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
v1369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4582567629803775914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid v2252 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2253 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2253 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2335 
y: v2252 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2335 y: v2252  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.5252282556463239
=== Inputs ===
condition: v2253 
=== Succesors ===
trueSuccessor: v677 
falseSuccessor: v680 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2253 #trueSuccessor: v677 #falseSuccessor: v680  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4578412705275642303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1376 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1376  <|@  <|@
f <@~|@floating>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2334 
y: i20 
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2334 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v840 
=== Succesors ===
trueSuccessor: v1373 
falseSuccessor: v1375 
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v840 #trueSuccessor: v1373 #falseSuccessor: v1375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578412705275642303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1955 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1955  <|@  <|@
f <@~|@floating>@ <|@
tid i1956 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294163
stableDimension: 0
stamp: i32 [-294163] ⇊00000000fffb82ed ⇈00000000fffb82ed
stampKind: i32
value: int[-294163|0xfffffffffffb82ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1380 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1380  <|@  <|@
f <@~|@floating>@ <|@
tid v2255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2335 
y: v2254 
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2335 y: v2254  <|@  <|@
f <@*|@fixed>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2255 
=== Succesors ===
trueSuccessor: v1377 
falseSuccessor: v1379 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2255 #trueSuccessor: v1377 #falseSuccessor: v1379  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2338 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2338  <|@  <|@
f <@~|@floating>@ <|@
tid v2475 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2330 
=== Succesors ===
=== Usages ===
i2338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2475 
=== Succesors ===
next: v1384 
=== Usages ===
v646 i825 
=== Predecessor ===
v1377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2475 #next: v1384  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2338 
y: i2334 
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2338 y: i2334  <|@  <|@
f <@*|@fixed>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v646 
=== Succesors ===
trueSuccessor: v1383 
falseSuccessor: v1381 
=== Usages ===
=== Predecessor ===
i2338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v646 #trueSuccessor: v1383 #falseSuccessor: v1381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1953 
=== Usages ===
=== Predecessor ===
v1384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid i1954 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -295187
stableDimension: 0
stamp: i32 [-295187] ⇊00000000fffb7eed ⇈00000000fffb7eed
stampKind: i32
value: int[-295187|0xfffffffffffb7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v1384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v820  <|@  <|@
f <@*|@fixed>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
v1381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i825 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v821 
values: i2338 i2337 i21 
=== Succesors ===
=== Usages ===
?822 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v821 values: i2338 i2337 i21  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v820 v823 v839 
=== Succesors ===
next: j2139 
=== Usages ===
i825 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v820 v823 v839 #next: j2139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2139 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2154 
=== Usages ===
v2444 v2445 
=== Predecessor ===
v821 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2154  <|@  <|@
f <@~|@floating>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2139 
index: - 
=== Succesors ===
=== Usages ===
j2154 v2156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2139 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2154 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2444 
=== Succesors ===
next: j2155 
=== Usages ===
j2257 j2160 v2462 
=== Predecessor ===
j2139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2444 #next: j2155  <|@  <|@
f <@~|@floating>@ <|@
tid v2445 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2139 
index: - 
=== Succesors ===
=== Usages ===
j2155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2139 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2445 
=== Succesors ===
next: v2147 
=== Usages ===
v2144 
=== Predecessor ===
j2154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2445 #next: v2147  <|@  <|@
f <@~|@floating>@ <|@
tid j2256 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2257 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2154 
y: j2256 
=== Succesors ===
=== Usages ===
v2144 v2156 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2154 y: j2256  <|@  <|@
f <@~|@floating>@ <|@
tid v2144 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2155 
y: j2257 
=== Succesors ===
=== Usages ===
v2147 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2155 y: j2257  <|@  <|@
f <@*|@fixed>@ <|@
tid v2147 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2144 
=== Succesors ===
trueSuccessor: v2145 
falseSuccessor: v2146 
=== Usages ===
=== Predecessor ===
j2155 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2144 #trueSuccessor: v2145 #falseSuccessor: v2146  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4557560643555791360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2150 
=== Usages ===
=== Predecessor ===
v2147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2150  <|@  <|@
tid ?584 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a1273 - - 
=== Succesors ===
=== Usages ===
?573 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1273 - -  <|@  <|@
tid ?573 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<SubList.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?584 
values: a1 
=== Succesors ===
=== Usages ===
?574 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?584 values: a1  <|@  <|@
tid ?574 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: ?573 
values: a1 
=== Succesors ===
=== Usages ===
?612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: a1  <|@  <|@
tid a716 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@724f57db
hasIdentity: true
objectId: 1
stamp: a!# Ljava/util/SubList$1;
type: HotSpotType<Ljava/util/SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?640 ?612 ?719 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?612 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<SubList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 698
stackSize: 1
=== Inputs ===
outerFrameState: ?574 
values: - - a716 
=== Succesors ===
=== Usages ===
?640 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?574 values: - - a716  <|@  <|@
tid ?640 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<SubList$1.<init>(SubList, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 699
stackSize: 1
=== Inputs ===
outerFrameState: ?612 
values: - - - a716 
=== Succesors ===
=== Usages ===
?649 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?612 values: - - - a716  <|@  <|@
tid ?649 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 325
stackSize: 0
=== Inputs ===
outerFrameState: ?640 
values: a2330 i2334 
=== Succesors ===
=== Usages ===
?822 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?640 values: a2330 i2334  <|@  <|@
tid ?719 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a716 
values: - - a1 
=== Succesors ===
=== Usages ===
?822 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a716 values: - - a1  <|@  <|@
tid ?822 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<AbstractList.rangeCheckForAdd(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 604
stackSize: 2
=== Inputs ===
outerFrameState: ?649 
values: a2330 i2334 i2334 i825 
virtualObjectMappings: ?719 
=== Succesors ===
=== Usages ===
a2150 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?649 values: a2330 i2334 i2334 i825 virtualObjectMappings: ?719  <|@  <|@
f <@~|@floating>@ <|@
tid i2259 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2150 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?822 
arguments: v2082 i2259 i20 
=== Succesors ===
next: j2151 
=== Usages ===
j2151 
=== Predecessor ===
v2145 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?822 arguments: v2082 i2259 i20 #next: j2151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2151 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2150 
=== Succesors ===
next: v2161 
=== Usages ===
j2160 
=== Predecessor ===
a2150 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2150 #next: v2161  <|@  <|@
f <@*|@fixed>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2158 
=== Predecessor ===
j2151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4587063766123665126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2156 
=== Usages ===
=== Predecessor ===
v2147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2444 
value: j2257 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2153 
=== Usages ===
=== Predecessor ===
v2146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2444 value: j2257 stateAfter: - lastLocationAccess: - #next: v2153  <|@  <|@
f <@~|@floating>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j2154 
index: - 
=== Succesors ===
=== Usages ===
v2153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2154 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2462 
=== Succesors ===
next: v2159 
=== Usages ===
=== Predecessor ===
v2156 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2462 #next: v2159  <|@  <|@
f <@*|@fixed>@ <|@
tid v2159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2158 
=== Predecessor ===
v2153 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2160 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2158 
values: j2154 j2151 
=== Succesors ===
=== Usages ===
v2472 v2447 j1670 a1668 v2448 v2463 v2464 v2465 v2466 v2467 v2468 v2469 v2470 v2471 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2158 values: j2154 j2151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2159 v2161 
=== Succesors ===
next: a1668 
=== Usages ===
j2160 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2159 v2161 #next: a1668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1668 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2160 
=== Succesors ===
next: a1671 
=== Usages ===
a1682 
=== Predecessor ===
v2158 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2160 #next: a1671  <|@  <|@
f <@~|@floating>@ <|@
tid j940 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1670 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1670 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2160 
y: j940 
=== Succesors ===
=== Usages ===
a1671 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2160 y: j940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1671 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1670 
=== Succesors ===
next: j2170 
=== Usages ===
a1683 a1674 
=== Predecessor ===
a1668 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1670 #next: j2170  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2166 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1703 
=== Succesors ===
=== Usages ===
v2446 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1703  <|@  <|@
f <@~|@floating>@ <|@
tid v2446 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2166 
index: - 
=== Succesors ===
=== Usages ===
j2170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2166 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2446 
=== Succesors ===
next: v2171 
=== Usages ===
v2171 
=== Predecessor ===
a1671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2446 #next: v2171  <|@  <|@
f <@~|@floating>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2447 
value: j2170 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2174 
=== Usages ===
=== Predecessor ===
j2170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2447 value: j2170 stateAfter: - lastLocationAccess: - #next: v2174  <|@  <|@
f <@~|@floating>@ <|@
tid v2448 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2448 
value: v2262 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2178 
=== Usages ===
=== Predecessor ===
v2171 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2448 value: v2262 stateAfter: - lastLocationAccess: - #next: v2178  <|@  <|@
f <@~|@floating>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2178 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2463 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2180 
=== Usages ===
=== Predecessor ===
v2174 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2463 value: i21 stateAfter: - lastLocationAccess: - #next: v2180  <|@  <|@
f <@~|@floating>@ <|@
tid v2464 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1674 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1671 
=== Succesors ===
=== Usages ===
v2180 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2464 
value: a1674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2182 
=== Usages ===
=== Predecessor ===
v2178 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2464 value: a1674 stateAfter: - lastLocationAccess: - #next: v2182  <|@  <|@
f <@~|@floating>@ <|@
tid v2465 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1675 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2465 
value: a1675 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2187 
=== Usages ===
=== Predecessor ===
v2180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2465 value: a1675 stateAfter: - lastLocationAccess: - #next: j2187  <|@  <|@
f <@~|@floating>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2183 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1739 
=== Succesors ===
=== Usages ===
v2449 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1739  <|@  <|@
f <@~|@floating>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2183 
index: - 
=== Succesors ===
=== Usages ===
j2187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2183 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2449 
=== Succesors ===
next: v2188 
=== Usages ===
v2188 
=== Predecessor ===
v2182 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2449 #next: v2188  <|@  <|@
f <@~|@floating>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2466 
value: j2187 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2191 
=== Usages ===
=== Predecessor ===
j2187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2466 value: j2187 stateAfter: - lastLocationAccess: - #next: v2191  <|@  <|@
f <@~|@floating>@ <|@
tid v2467 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2467 
value: v2268 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2195 
=== Usages ===
=== Predecessor ===
v2188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2467 value: v2268 stateAfter: - lastLocationAccess: - #next: v2195  <|@  <|@
f <@~|@floating>@ <|@
tid v2468 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2468 
value: i2334 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2197 
=== Usages ===
=== Predecessor ===
v2191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2468 value: i2334 stateAfter: - lastLocationAccess: - #next: v2197  <|@  <|@
f <@~|@floating>@ <|@
tid v2469 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i539 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.<init>(ArrayList.java:1105) [bci: 28]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1103) [bci: 21]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2469 
value: i539 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2199 
=== Usages ===
=== Predecessor ===
v2195 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2469 value: i539 stateAfter: - lastLocationAccess: - #next: v2199  <|@  <|@
f <@~|@floating>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2470 
value: i2331 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2201 
=== Usages ===
=== Predecessor ===
v2197 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2470 value: i2331 stateAfter: - lastLocationAccess: - #next: v2201  <|@  <|@
f <@~|@floating>@ <|@
tid v2471 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2471 
value: a2330 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2203 
=== Usages ===
=== Predecessor ===
v2199 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2471 value: a2330 stateAfter: - lastLocationAccess: - #next: v2203  <|@  <|@
f <@~|@floating>@ <|@
tid v2472 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2472 
value: a2330 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1682 
=== Usages ===
=== Predecessor ===
v2201 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2472 value: a2330 stateAfter: - lastLocationAccess: - #next: a1682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1682 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1668 
=== Succesors ===
next: a1683 
=== Usages ===
a438 
=== Predecessor ===
v2203 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1668 #next: a1683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1683 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1671 
=== Succesors ===
next: v1684 
=== Usages ===
=== Predecessor ===
a1682 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1671 #next: v1684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
a1683 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v712  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v1684 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1957 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1957  <|@  <|@
f <@~|@floating>@ <|@
tid i1958 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294451
stableDimension: 0
stamp: i32 [-294451] ⇊00000000fffb81cd ⇈00000000fffb81cd
stampKind: i32
value: int[-294451|0xfffffffffffb81cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1949 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1949  <|@  <|@
f <@~|@floating>@ <|@
tid i1950 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291379
stableDimension: 0
stamp: i32 [-291379] ⇊00000000fffb8dcd ⇈00000000fffb8dcd
stampKind: i32
value: int[-291379|0xfffffffffffb8dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1363 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1943 
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1943  <|@  <|@
f <@~|@floating>@ <|@
tid i1944 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288787
stableDimension: 0
stamp: i32 [-288787] ⇊00000000fffb97ed ⇈00000000fffb97ed
stampKind: i32
value: int[-288787|0xfffffffffffb97ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1938 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-295187 - -288787] ⇊00000000fffb00c5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1935 
values: i1942 i1944 i1946 i1950 i1952 i1954 i1956 i1958 
=== Succesors ===
=== Usages ===
v1940 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1935 values: i1942 i1944 i1946 i1950 i1952 i1954 i1956 i1958  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1941 v1943 v1945 v1949 v1951 v1953 v1955 v1957 
=== Succesors ===
next: v1940 
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1941 v1943 v1945 v1949 v1951 v1953 v1955 v1957 #next: v1940  <|@  <|@
f <@*|@fixed>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?761 
actionAndReason: i1938 
speculation: a1837 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1935 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?761 actionAndReason: i1938 speculation: a1837  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a70  <|@  <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
returnStamp: a - (unchecked=a Ljava/util/Iterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@4ba9af9d
stamp: void
targetMethod: HotSpotMethod<AbstractCollection.iterator()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1826 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a1273 - - 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1273 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
polymorphic: false
stamp: a -
targetMethod: Direct#AbstractCollection.iterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1154 
stateDuring: ?1826 
=== Succesors ===
next: v437 
=== Usages ===
a438 
=== Predecessor ===
v568 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1154 stateDuring: ?1826 #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
a70 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B120" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v435 
values: a70 a1610 a1682 
=== Succesors ===
=== Usages ===
?436 ?76 ?1827 v1059 ?351 v2384 v2451 v2393 v2387 v2385 v2391 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v435 values: a70 a1610 a1682  <|@  <|@
f <@~|@floating>@ <|@
tid a766 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v435 
values: a1273 a1272 a1273 
=== Succesors ===
=== Usages ===
?76 v2450 ?436 ?351 ?351 ?1827 ?1827 v2382 v2383 v875 v102 v790 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v435 values: a1273 a1272 a1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v437 v443 v712 
=== Succesors ===
next: v2339 
=== Usages ===
a438 a766 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v437 v443 v712 #next: v2339  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a766 
index: - 
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a766 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2450 
=== Succesors ===
next: v1388 
=== Usages ===
v2281 
=== Predecessor ===
v435 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2450 #next: v1388  <|@  <|@
f <@~|@floating>@ <|@
tid v2280 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2339 
y: v2280 
=== Succesors ===
=== Usages ===
v1388 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2339 y: v2280  <|@  <|@
tid ?436 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - a766 - - a438 
=== Succesors ===
=== Usages ===
v1928 v2341 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a766 - - a438  <|@  <|@
f <@*|@fixed>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2281 
=== Succesors ===
trueSuccessor: v1385 
falseSuccessor: v1387 
=== Usages ===
=== Predecessor ===
v2339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2281 #trueSuccessor: v1385 #falseSuccessor: v1387  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2340 
=== Usages ===
=== Predecessor ===
v1388 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2340  <|@  <|@
f <@~|@floating>@ <|@
tid v2382 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a766 
index: - 
=== Succesors ===
=== Usages ===
i2340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a766 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 45]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2382 
=== Succesors ===
next: v2307 
=== Usages ===
v78 j1280 v1294 
=== Predecessor ===
v1385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2382 #next: v2307  <|@  <|@
f <@~|@floating>@ <|@
tid j1280 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2340 
=== Succesors ===
=== Usages ===
j1284 v1286 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2340  <|@  <|@
f <@~|@floating>@ <|@
tid j1283 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1284 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j1280 
y: j1283 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1280 y: j1283  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1284 
y: j1280 
=== Succesors ===
=== Usages ===
v2307 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1284 y: j1280  <|@  <|@
f <@*|@fixed>@ <|@
tid v2307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1286 
=== Succesors ===
trueSuccessor: v2303 
falseSuccessor: v2306 
=== Usages ===
=== Predecessor ===
i2340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1286 #trueSuccessor: v2303 #falseSuccessor: v2306  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2301 
=== Usages ===
=== Predecessor ===
v2307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2301  <|@  <|@
f <@*|@fixed>@ <|@
tid v2301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2300 
=== Predecessor ===
v2303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B119" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2305 
=== Usages ===
=== Predecessor ===
v2307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2305  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2340 
y: i21 
=== Succesors ===
=== Usages ===
v2305 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2340 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1294 
=== Succesors ===
trueSuccessor: v2304 
falseSuccessor: v1391 
=== Usages ===
=== Predecessor ===
v2306 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1294 #trueSuccessor: v2304 #falseSuccessor: v1391  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2302 
=== Usages ===
=== Predecessor ===
v2305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2302  <|@  <|@
f <@*|@fixed>@ <|@
tid v2302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2300 
=== Predecessor ===
v2304 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" 
    successors "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2301 v2302 
=== Succesors ===
next: v2341 
=== Usages ===
v1292 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2301 v2302 #next: v2341  <|@  <|@
f <@~|@floating>@ <|@
tid v2451 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a438 
index: - 
=== Succesors ===
=== Usages ===
v2341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?436 
guard: - 
address: v2451 
=== Succesors ===
next: v73 
=== Usages ===
v2285 v2283 v2284 v2308 v2309 
=== Predecessor ===
v2300 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?436 guard: - address: v2451 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v2285 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2341 
y: v2244 
=== Succesors ===
=== Usages ===
v184 v150 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2341 y: v2244  <|@  <|@
f <@~|@floating>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a438 
index: - 
=== Succesors ===
=== Usages ===
v971 a2352 a2372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2391 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a438 
index: - 
=== Succesors ===
=== Usages ===
i2350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a438 
index: - 
=== Succesors ===
=== Usages ===
i2347 a2354 a2368 a2374 a2378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a438 
index: - 
=== Succesors ===
=== Usages ===
i2344 v969 i2371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2385 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a438 
index: - 
=== Succesors ===
=== Usages ===
a2342 a2369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i2223 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2222 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2217 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2221 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2282 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2283 v2308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v2341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B101" 
    successors "B71" "B103" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614630046498852763
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v74 
values: i21 i94 
=== Succesors ===
=== Usages ===
?76 v78 ?351 ?1827 ?1827 v2383 ?351 i94 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v74 values: i21 i94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.307411100033233
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v73 
=== Succesors ===
next: v83 
=== Usages ===
i75 v81 v95 v1455 v1490 v1485 v1430 v1475 v1435 v1465 v1405 v1445 v1415 v1420 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v73 #next: v83  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 182
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a766 a438 i75 
=== Succesors ===
=== Usages ===
v1868 i2370 i2343 i2346 i2349 v2353 i2355 i2359 i2363 i2366 v2474 v2373 i2375 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a766 a438 i75  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i75 
y: i2340 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i75 y: i2340  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
stamp: void
trueSuccessorProbability: 0.6976487138263665
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v79 #falseSuccessor: v81  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612378246685167515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
v1292 
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 0.9005485075074715
=== Inputs ===
condition: v2285 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2285 #trueSuccessor: v178 #falseSuccessor: v183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2342 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2385 
=== Succesors ===
next: i2343 
=== Usages ===
v2388 v2386 
=== Predecessor ===
v178 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2385 #next: i2343  <|@  <|@
f <@~|@floating>@ <|@
tid v2386 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2342 
=== Succesors ===
=== Usages ===
i2343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2386 
=== Succesors ===
next: i2344 
=== Usages ===
v245 v321 
=== Predecessor ===
a2342 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2386 #next: i2344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2384 
=== Succesors ===
next: v1406 
=== Usages ===
v245 v321 i327 i331 v971 
=== Predecessor ===
i2343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2384 #next: v1406  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2343 
y: i2344 
=== Succesors ===
=== Usages ===
v1406 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2343 y: i2344  <|@  <|@
f <@*|@fixed>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v1405 
falseSuccessor: v1402 
=== Usages ===
=== Predecessor ===
i2344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v1405 #falseSuccessor: v1402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1871 
=== Usages ===
=== Predecessor ===
v1406 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1871  <|@  <|@
f <@~|@floating>@ <|@
tid i1872 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -241427
stableDimension: 0
stamp: i32 [-241427] ⇊00000000fffc50ed ⇈00000000fffc50ed
stampKind: i32
value: int[-241427|0xfffffffffffc50ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1405 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2345 
=== Usages ===
=== Predecessor ===
v1406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2345  <|@  <|@
f <@~|@floating>@ <|@
tid v2388 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2342 
=== Succesors ===
=== Usages ===
a2345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2345 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 8]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2388 
=== Succesors ===
next: i2346 
=== Usages ===
v2390 v2389 
=== Predecessor ===
v1402 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2388 #next: i2346  <|@  <|@
f <@~|@floating>@ <|@
tid v2389 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2345 
=== Succesors ===
=== Usages ===
i2346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 11]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2389 
=== Succesors ===
next: i2347 
=== Usages ===
v390 
=== Predecessor ===
a2345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2389 #next: i2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.expectedModCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 1]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2387 
=== Succesors ===
next: v1416 
=== Usages ===
v390 
=== Predecessor ===
i2346 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2387 #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2346 
y: i2347 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2346 y: i2347  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v1412 
falseSuccessor: v1415 
=== Usages ===
=== Predecessor ===
i2347 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v1412 #falseSuccessor: v1415  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1421 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2344 
y: i2343 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2344 y: i2343  <|@  <|@
f <@*|@fixed>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v321 
=== Succesors ===
trueSuccessor: v1417 
falseSuccessor: v1420 
=== Usages ===
=== Predecessor ===
v1412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v321 #trueSuccessor: v1417 #falseSuccessor: v1420  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2348 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2348  <|@  <|@
f <@~|@floating>@ <|@
tid v2390 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2345 
=== Succesors ===
=== Usages ===
a2348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2390 
=== Succesors ===
next: i2349 
=== Usages ===
a959 v2392 
=== Predecessor ===
v1417 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2390 #next: i2349  <|@  <|@
f <@~|@floating>@ <|@
tid v2392 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2348 
=== Succesors ===
=== Usages ===
i2349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2392 
=== Succesors ===
next: i2350 
=== Usages ===
v329 v973 
=== Predecessor ===
a2348 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2392 #next: i2350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.val$offset
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 40]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2391 
=== Succesors ===
next: v1431 
=== Usages ===
i327 
=== Predecessor ===
i2349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2391 #next: v1431  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 44]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2344 
y: i2350 
=== Succesors ===
=== Usages ===
v329 v2394 v973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2344 y: i2350  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i327 
y: i2349 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i327 y: i2349  <|@  <|@
f <@*|@fixed>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v329 
=== Succesors ===
trueSuccessor: v1427 
falseSuccessor: v1430 
=== Usages ===
=== Predecessor ===
i2350 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v329 #trueSuccessor: v1427 #falseSuccessor: v1430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1436 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1436  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i327 
y: i2349 
=== Succesors ===
=== Usages ===
v1436 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i327 y: i2349  <|@  <|@
f <@*|@fixed>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v973 
=== Succesors ===
trueSuccessor: v1432 
falseSuccessor: v1435 
=== Usages ===
=== Predecessor ===
v1427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v973 #trueSuccessor: v1432 #falseSuccessor: v1435  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
a2351 
=== Predecessor ===
v1436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 61]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2344 
y: i20 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2344 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 62]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2384 
value: i331 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v971 
=== Usages ===
=== Predecessor ===
v1432 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2384 value: i331 stateAfter: - lastLocationAccess: - #next: v971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.lastRet
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 73]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2393 
value: i2344 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2351 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2393 value: i2344 stateAfter: - lastLocationAccess: - #next: a2351  <|@  <|@
f <@~|@floating>@ <|@
tid a959 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2348 
=== Succesors ===
=== Usages ===
v2394 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2348  <|@  <|@
f <@~|@floating>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a959 
index: i327 
=== Succesors ===
=== Usages ===
a2351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a959 index: i327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1432 
address: v2394 
=== Succesors ===
next: v275 
=== Usages ===
a1831 
=== Predecessor ===
v971 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1432 address: v2394 #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a2351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1883 
=== Usages ===
=== Predecessor ===
v1436 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1883  <|@  <|@
f <@~|@floating>@ <|@
tid i1884 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249371
stableDimension: 0
stamp: i32 [-249371] ⇊00000000fffc31e5 ⇈00000000fffc31e5
stampKind: i32
value: int[-249371|0xfffffffffffc31e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1881 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1881  <|@  <|@
f <@~|@floating>@ <|@
tid i1882 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -247827
stableDimension: 0
stamp: i32 [-247827] ⇊00000000fffc37ed ⇈00000000fffc37ed
stampKind: i32
value: int[-247827|0xfffffffffffc37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1881 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1877 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1877  <|@  <|@
f <@~|@floating>@ <|@
tid i1878 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244755
stableDimension: 0
stamp: i32 [-244755] ⇊00000000fffc43ed ⇈00000000fffc43ed
stampKind: i32
value: int[-244755|0xfffffffffffc43ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1875 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1875  <|@  <|@
f <@~|@floating>@ <|@
tid i1876 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244499
stableDimension: 0
stamp: i32 [-244499] ⇊00000000fffc44ed ⇈00000000fffc44ed
stampKind: i32
value: int[-244499|0xfffffffffffc44ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B84" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597435745697135041
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v2284 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2341 
y: v2262 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2341 y: v2262  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 0.9211923726768046
=== Inputs ===
condition: v2284 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2284 #trueSuccessor: v189 #falseSuccessor: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2352 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2393 
=== Succesors ===
next: v2353 
=== Usages ===
?1828 v2452 v2395 v2398 v2400 v2404 
=== Predecessor ===
v189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2393 #next: v2353  <|@  <|@
f <@~|@floating>@ <|@
tid v2452 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2352 
=== Succesors ===
=== Usages ===
v2353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2452 
=== Succesors ===
next: v1446 
=== Usages ===
v2286 
=== Predecessor ===
a2352 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2452 #next: v1446  <|@  <|@
f <@~|@floating>@ <|@
tid v2286 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2353 
y: v2268 
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2353 y: v2268  <|@  <|@
f <@*|@fixed>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2286 
=== Succesors ===
trueSuccessor: v1442 
falseSuccessor: v1445 
=== Usages ===
=== Predecessor ===
v2353 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2286 #trueSuccessor: v1442 #falseSuccessor: v1445  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2354 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2354 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2387 
=== Succesors ===
next: i2355 
=== Usages ===
v2397 v2396 
=== Predecessor ===
v1442 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2387 #next: i2355  <|@  <|@
f <@~|@floating>@ <|@
tid v2397 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2354 
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2397 
=== Succesors ===
next: i2356 
=== Usages ===
v253 
=== Predecessor ===
a2354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2397 #next: i2356  <|@  <|@
f <@~|@floating>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2354 
=== Succesors ===
=== Usages ===
i2356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2396 
=== Succesors ===
next: i2357 
=== Usages ===
i312 
=== Predecessor ===
i2355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2396 #next: i2357  <|@  <|@
f <@~|@floating>@ <|@
tid v2395 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2352 
=== Succesors ===
=== Usages ===
i2357 v1031 v1050 v1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2395 
=== Succesors ===
next: v1456 
=== Usages ===
i312 v1049 v1051 ?1828 v1052 v1040 i480 v1020 v2403 v2407 v1030 
=== Predecessor ===
i2356 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2395 #next: v1456  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: i32
=== Inputs ===
x: i2357 
y: i2356 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2357 y: i2356  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i312 
y: i2355 
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i312 y: i2355  <|@  <|@
f <@*|@fixed>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v1452 
falseSuccessor: v1455 
=== Usages ===
=== Predecessor ===
i2357 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v1452 #falseSuccessor: v1455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2358 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2358  <|@  <|@
f <@~|@floating>@ <|@
tid v2398 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2352 
=== Succesors ===
=== Usages ===
a2358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2398 
=== Succesors ===
next: i2359 
=== Usages ===
a1002 v2453 v2399 v2401 v2405 
=== Predecessor ===
v1452 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2398 #next: i2359  <|@  <|@
f <@~|@floating>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2358 
=== Succesors ===
=== Usages ===
i2359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2399 
=== Succesors ===
next: i2360 
=== Usages ===
v501 
=== Predecessor ===
a2358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2399 #next: i2360  <|@  <|@
f <@~|@floating>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2352 
=== Succesors ===
=== Usages ===
i2360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2400 
=== Succesors ===
next: v1466 
=== Usages ===
v501 
=== Predecessor ===
i2359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2400 #next: v1466  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2359 
y: i2360 
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2359 y: i2360  <|@  <|@
f <@*|@fixed>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v1462 
falseSuccessor: v1465 
=== Usages ===
=== Predecessor ===
i2360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v1462 #falseSuccessor: v1465  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2361 
=== Usages ===
=== Predecessor ===
v1466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2361  <|@  <|@
f <@~|@floating>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2358 
=== Succesors ===
=== Usages ===
v2361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2453 
=== Succesors ===
next: v518 
=== Usages ===
v2288 v2287 
=== Predecessor ===
v1462 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2453 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2361 
y: v2250 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2361 y: v2250  <|@  <|@
f <@~|@floating>@ <|@
tid i480 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2357 
y: i20 
=== Succesors ===
=== Usages ===
v1053 v1031 v1050 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2357 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2352 
=== Succesors ===
=== Usages ===
v1030 v1049 v1052 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2352  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v2287 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
v2361 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2287 #trueSuccessor: v511 #falseSuccessor: v517  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596254823255569644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2362 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2362  <|@  <|@
f <@~|@floating>@ <|@
tid v2401 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2358 
=== Succesors ===
=== Usages ===
a2362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2401 
=== Succesors ===
next: i2363 
=== Usages ===
a1014 v2402 
=== Predecessor ===
v511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2401 #next: i2363  <|@  <|@
f <@~|@floating>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2362 
=== Succesors ===
=== Usages ===
i2363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2402 
=== Succesors ===
next: v1476 
=== Usages ===
v1020 
=== Predecessor ===
a2362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2402 #next: v1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2357 
y: i2363 
=== Succesors ===
=== Usages ===
v1476 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2357 y: i2363  <|@  <|@
f <@*|@fixed>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1020 
=== Succesors ===
trueSuccessor: v1472 
falseSuccessor: v1475 
=== Usages ===
=== Predecessor ===
i2363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1020 #trueSuccessor: v1472 #falseSuccessor: v1475  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596254823255569644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1030 
=== Usages ===
a2364 
=== Predecessor ===
v1476 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2404 
value: i2357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v1472 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2404 value: i2357 stateAfter: - lastLocationAccess: - #next: v1031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2395 
value: i480 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2364 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2395 value: i480 stateAfter: - lastLocationAccess: - #next: a2364  <|@  <|@
f <@~|@floating>@ <|@
tid a1014 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2362 
=== Succesors ===
=== Usages ===
v2403 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2362  <|@  <|@
f <@~|@floating>@ <|@
tid v2403 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1014 
index: i2357 
=== Succesors ===
=== Usages ===
a2364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1014 index: i2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1472 
address: v2403 
=== Succesors ===
next: v801 
=== Usages ===
a1831 
=== Predecessor ===
v1031 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1472 address: v2403 #next: v801  <|@  <|@
f <@*|@fixed>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a2364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1899 
=== Usages ===
=== Predecessor ===
v1476 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1899  <|@  <|@
f <@~|@floating>@ <|@
tid i1900 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -261403
stableDimension: 0
stamp: i32 [-261403] ⇊00000000fffc02e5 ⇈00000000fffc02e5
stampKind: i32
value: int[-261403|0xfffffffffffc02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579623423683638738
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2361 
y: v2254 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2361 y: v2254  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.9931451844203525
=== Inputs ===
condition: v2288 
=== Succesors ===
trueSuccessor: v732 
falseSuccessor: v735 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2288 #trueSuccessor: v732 #falseSuccessor: v735  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579565364753600368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2365 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2365  <|@  <|@
f <@~|@floating>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2358 
=== Succesors ===
=== Usages ===
a2365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2405 
=== Succesors ===
next: i2366 
=== Usages ===
a1034 v2406 
=== Predecessor ===
v732 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2405 #next: i2366  <|@  <|@
f <@~|@floating>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2365 
=== Succesors ===
=== Usages ===
i2366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2406 
=== Succesors ===
next: v1486 
=== Usages ===
v1040 
=== Predecessor ===
a2365 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2406 #next: v1486  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2357 
y: i2366 
=== Succesors ===
=== Usages ===
v1486 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2357 y: i2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1040 
=== Succesors ===
trueSuccessor: v1482 
falseSuccessor: v1485 
=== Usages ===
=== Predecessor ===
i2366 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1040 #trueSuccessor: v1482 #falseSuccessor: v1485  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579565364753600368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1049 
=== Usages ===
a2367 
=== Predecessor ===
v1486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2404 
value: i2357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
v1482 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2404 value: i2357 stateAfter: - lastLocationAccess: - #next: v1050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2395 
value: i480 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2367 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2395 value: i480 stateAfter: - lastLocationAccess: - #next: a2367  <|@  <|@
f <@~|@floating>@ <|@
tid a1034 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2365 
=== Succesors ===
=== Usages ===
v2407 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2365  <|@  <|@
f <@~|@floating>@ <|@
tid v2407 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1034 
index: i2357 
=== Succesors ===
=== Usages ===
a2367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1034 index: i2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v1482 
address: v2407 
=== Succesors ===
next: v871 
=== Usages ===
a1831 
=== Predecessor ===
v1050 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1482 address: v2407 #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a2367 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1903 
=== Usages ===
=== Predecessor ===
v1486 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1903  <|@  <|@
f <@~|@floating>@ <|@
tid i1904 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266523
stableDimension: 0
stamp: i32 [-266523] ⇊00000000fffbeee5 ⇈00000000fffbeee5
stampKind: i32
value: int[-266523|0xfffffffffffbeee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4547059967434371306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a476 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a476  <|@  <|@
f <@~|@floating>@ <|@
tid a1002 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a2358 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2358  <|@  <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@56c8722c
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a1002 i2357 
=== Succesors ===
=== Usages ===
a476 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1002 i2357  <|@  <|@
tid ?351 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a2 - a766 a438 i75 a766 i75 
=== Succesors ===
=== Usages ===
?484 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a766 a438 i75 a766 i75  <|@  <|@
tid ?484 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 707
stackSize: 0
=== Inputs ===
outerFrameState: ?351 
values: - 
=== Succesors ===
=== Usages ===
?1828 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?351 values: -  <|@  <|@
tid ?1828 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?484 
values: a2352 i2357 - 
=== Succesors ===
=== Usages ===
a476 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?484 values: a2352 i2357 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a476 <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1051 
stateDuring: ?1828 
=== Succesors ===
next: v1052 
=== Usages ===
a1830 
=== Predecessor ===
v735 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1051 stateDuring: ?1828 #next: v1052  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2404 
value: i2357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
a476 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2404 value: i2357 stateAfter: - lastLocationAccess: - #next: v1053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2395 
value: i480 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v1052 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2395 value: i480 stateAfter: - lastLocationAccess: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid a1830 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: Compress
stamp: n -
=== Inputs ===
value: a476 
=== Succesors ===
=== Usages ===
a1831 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a476  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v1053 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1895 
=== Usages ===
=== Predecessor ===
v1466 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid i1896 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -258579
stableDimension: 0
stamp: i32 [-258579] ⇊00000000fffc0ded ⇈00000000fffc0ded
stampKind: i32
value: int[-258579|0xfffffffffffc0ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1891 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1891  <|@  <|@
f <@~|@floating>@ <|@
tid i1892 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -255763
stableDimension: 0
stamp: i32 [-255763] ⇊00000000fffc18ed ⇈00000000fffc18ed
stampKind: i32
value: int[-255763|0xfffffffffffc18ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1887 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1887  <|@  <|@
f <@~|@floating>@ <|@
tid i1888 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -252467
stableDimension: 0
stamp: i32 [-252467] ⇊00000000fffc25cd ⇈00000000fffc25cd
stampKind: i32
value: int[-252467|0xfffffffffffc25cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B100" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580869699989654467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1491  <|@  <|@
f <@~|@floating>@ <|@
tid v2283 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2341 
y: v2282 
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2341 y: v2282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2283 
=== Succesors ===
trueSuccessor: v1487 
falseSuccessor: v1490 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2283 #trueSuccessor: v1487 #falseSuccessor: v1490  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580869699989654467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2368 
=== Usages ===
=== Predecessor ===
v1491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2387 
=== Succesors ===
next: v2474 
=== Usages ===
v2474 
=== Predecessor ===
v1487 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2387 #next: v2474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
object: a2368 
=== Succesors ===
next: a90 
=== Usages ===
=== Predecessor ===
a2368 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?76 object: a2368 #next: a90  <|@  <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@45972359
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a438 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a438  <|@  <|@
tid ?1827 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a2 - a766 a438 i75 a766 i75 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a766 a438 i75 a766 i75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a90 <|@
d <@d|@=== Debug Properties ===
bci: 114
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1059 
stateDuring: ?1827 
=== Succesors ===
next: v269 
=== Usages ===
a1829 
=== Predecessor ===
v2474 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1059 stateDuring: ?1827 #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid a1829 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: Compress
stamp: n -
=== Inputs ===
value: a90 
=== Succesors ===
=== Usages ===
a1831 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a90  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a90 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B78" "B95" "B89" "B93" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612378246685167515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1831 <|@
d <@d|@=== Debug Properties ===
stamp: n -
valueDescription: n -
=== Inputs ===
merge: v267 
values: a1829 a2351 a1830 a2364 a2367 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v267 values: a1829 a2351 a1830 a2364 a2367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v269 v275 v286 v801 v871 
=== Succesors ===
next: v930 
=== Usages ===
a1831 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v269 v275 v286 v801 v871 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v2300 v79 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v2300 v79  <|@  <|@
f <@~|@floating>@ <|@
tid v2383 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a766 
index: i75 
=== Succesors ===
=== Usages ===
v930 j2216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a766 index: i75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1292 
address: v2383 
value: a1831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2216 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1292 address: v2383 value: a1831 stateAfter: - lastLocationAccess: - #next: j2216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2383 
=== Succesors ===
next: v2222 
=== Usages ===
j2218 
=== Predecessor ===
v930 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2383 #next: v2222  <|@  <|@
f <@~|@floating>@ <|@
tid j2218 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2216 
y: i2217 
=== Succesors ===
=== Usages ===
v2454 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2216 y: i2217  <|@  <|@
f <@~|@floating>@ <|@
tid v2454 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2218 
index: j2221 
=== Succesors ===
=== Usages ===
v2222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2218 index: j2221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2454 
value: i2223 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
j2216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2454 value: i2223 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120]
stamp: i32
=== Inputs ===
x: i75 
y: i20 
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i75 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
stamp: void
=== Inputs ===
loopBegin: v74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2222 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1905 
=== Usages ===
=== Predecessor ===
v1491 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1905  <|@  <|@
f <@~|@floating>@ <|@
tid i1906 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -269875
stableDimension: 0
stamp: i32 [-269875] ⇊00000000fffbe1cd ⇈00000000fffbe1cd
stampKind: i32
value: int[-269875|0xfffffffffffbe1cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 0.9440844134263875
=== Inputs ===
condition: v2285 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2285 #trueSuccessor: v143 #falseSuccessor: v149  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2369 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2385 
=== Succesors ===
next: i2370 
=== Usages ===
v2408 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2385 #next: i2370  <|@  <|@
f <@~|@floating>@ <|@
tid v2408 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2369 
=== Succesors ===
=== Usages ===
i2370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2408 
=== Succesors ===
next: i2371 
=== Usages ===
v226 
=== Predecessor ===
a2369 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2408 #next: i2371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2384 
=== Succesors ===
next: v1504 
=== Usages ===
v226 
=== Predecessor ===
i2370 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2384 #next: v1504  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2370 
y: i2371 
=== Succesors ===
=== Usages ===
v1504 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2370 y: i2371  <|@  <|@
f <@*|@fixed>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1501 
falseSuccessor: v1503 
=== Usages ===
=== Predecessor ===
i2371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1501 #falseSuccessor: v1503  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a766 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1501 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a766 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1913 
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1913  <|@  <|@
f <@~|@floating>@ <|@
tid i1914 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274195
stableDimension: 0
stamp: i32 [-274195] ⇊00000000fffbd0ed ⇈00000000fffbd0ed
stampKind: i32
value: int[-274195|0xfffffffffffbd0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1503 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" "B113" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2341 
y: v2262 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2341 y: v2262  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 0.8652798415056957
=== Inputs ===
condition: v2309 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2309 #trueSuccessor: v155 #falseSuccessor: v158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B112" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2372 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2393 
=== Succesors ===
next: v2373 
=== Usages ===
v2455 v2409 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2393 #next: v2373  <|@  <|@
f <@~|@floating>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2372 
=== Succesors ===
=== Usages ===
v2373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2455 
=== Succesors ===
next: v1512 
=== Usages ===
v2289 
=== Predecessor ===
a2372 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2455 #next: v1512  <|@  <|@
f <@~|@floating>@ <|@
tid v2289 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2373 
y: v2268 
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2373 y: v2268  <|@  <|@
f <@*|@fixed>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2289 
=== Succesors ===
trueSuccessor: v1509 
falseSuccessor: v1511 
=== Usages ===
=== Predecessor ===
v2373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2289 #trueSuccessor: v1509 #falseSuccessor: v1511  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2374 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2374 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2387 
=== Succesors ===
next: i2375 
=== Usages ===
v2411 v2410 
=== Predecessor ===
v1509 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2387 #next: i2375  <|@  <|@
f <@~|@floating>@ <|@
tid v2411 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2374 
=== Succesors ===
=== Usages ===
i2375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2411 
=== Succesors ===
next: i2376 
=== Usages ===
v234 
=== Predecessor ===
a2374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2411 #next: i2376  <|@  <|@
f <@~|@floating>@ <|@
tid v2410 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2374 
=== Succesors ===
=== Usages ===
i2376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2410 
=== Succesors ===
next: i2377 
=== Usages ===
i303 
=== Predecessor ===
i2375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2410 #next: i2377  <|@  <|@
f <@~|@floating>@ <|@
tid v2409 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2372 
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2409 
=== Succesors ===
next: v1520 
=== Usages ===
i303 
=== Predecessor ===
i2376 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2409 #next: v1520  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: i32
=== Inputs ===
x: i2377 
y: i2376 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2377 y: i2376  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i2375 
=== Succesors ===
=== Usages ===
v1520 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i303 y: i2375  <|@  <|@
f <@*|@fixed>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v1519 
falseSuccessor: v1517 
=== Usages ===
=== Predecessor ===
i2377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v1519 #falseSuccessor: v1517  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1921 
=== Usages ===
=== Predecessor ===
v1520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1921  <|@  <|@
f <@~|@floating>@ <|@
tid i1922 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278803
stableDimension: 0
stamp: i32 [-278803] ⇊00000000fffbbeed ⇈00000000fffbbeed
stampKind: i32
value: int[-278803|0xfffffffffffbbeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1519 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v1520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a766 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1517 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a766 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid i1920 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -275507
stableDimension: 0
stamp: i32 [-275507] ⇊00000000fffbcbcd ⇈00000000fffbcbcd
stampKind: i32
value: int[-275507|0xfffffffffffbcbcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B114" "B117" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1524 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1524  <|@  <|@
f <@~|@floating>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2341 
y: v2282 
=== Succesors ===
=== Usages ===
v1524 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2341 y: v2282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2308 
=== Succesors ===
trueSuccessor: v1521 
falseSuccessor: v1523 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2308 #trueSuccessor: v1521 #falseSuccessor: v1523  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2378 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2387 
=== Succesors ===
next: v1528 
=== Usages ===
v1195 
=== Predecessor ===
v1521 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2387 #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
value: a2378 
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1195 
=== Succesors ===
trueSuccessor: v1525 
falseSuccessor: v1527 
=== Usages ===
=== Predecessor ===
a2378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1195 #trueSuccessor: v1525 #falseSuccessor: v1527  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a766 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1525 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a766 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1917 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1917  <|@  <|@
f <@~|@floating>@ <|@
tid i1918 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -280083
stableDimension: 0
stamp: i32 [-280083] ⇊00000000fffbb9ed ⇈00000000fffbb9ed
stampKind: i32
value: int[-280083|0xfffffffffffbb9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1915 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1915  <|@  <|@
f <@~|@floating>@ <|@
tid i1916 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279091
stableDimension: 0
stamp: i32 [-279091] ⇊00000000fffbbdcd ⇈00000000fffbbdcd
stampKind: i32
value: int[-279091|0xfffffffffffbbdcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1523 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B73" "B82" "B81" "B80" "B79" "B98" "B97" "B96" "B90" "B94" "B102" "B106" "B117" "B116" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 2373397003624251392
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1866 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-280083 - -240139] ⇊00000000fff800c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1863 
values: i1872 i1876 i1878 i1882 i1884 i1888 i1892 i1896 i1900 i1904 i1906 i1914 i1916 i1918 i1920 i1922 
=== Succesors ===
=== Usages ===
v1868 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1863 values: i1872 i1876 i1878 i1882 i1884 i1888 i1892 i1896 i1900 i1904 i1906 i1914 i1916 i1918 i1920 i1922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1871 v1875 v1877 v1881 v1883 v1887 v1891 v1895 v1899 v1903 v1905 v1913 v1915 v1917 v1919 v1921 
=== Succesors ===
next: v1868 
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1871 v1875 v1877 v1881 v1883 v1887 v1891 v1895 v1899 v1903 v1905 v1913 v1915 v1917 v1919 v1921 #next: v1868  <|@  <|@
f <@*|@fixed>@ <|@
tid v1868 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
actionAndReason: i1866 
speculation: a1837 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1863 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?76 actionAndReason: i1866 speculation: a1837  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1932 
=== Usages ===
=== Predecessor ===
v2305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1932  <|@  <|@
f <@~|@floating>@ <|@
tid a1934 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1127995644
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1127995644]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1927 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1933 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235803
stableDimension: 0
stamp: i32 [-235803] ⇊00000000fffc66e5 ⇈00000000fffc66e5
stampKind: i32
value: int[-235803|0xfffffffffffc66e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1926 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1923 
=== Predecessor ===
v1391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1929 
=== Usages ===
=== Predecessor ===
v1388 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1929  <|@  <|@
f <@~|@floating>@ <|@
tid a1931 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@764582310
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@764582310]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1927 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1930 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -234812
stableDimension: 0
stamp: i32 [-234812] ⇊00000000fffc6ac4 ⇈00000000fffc6ac4
stampKind: i32
value: int[-234812|0xfffffffffffc6ac4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1926 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1923 
=== Predecessor ===
v1387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1926 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-325387 - -234812] ⇊00000000fff800c4 ⇈00000000ffff6ef5
valueDescription: i32
=== Inputs ===
merge: v1923 
values: i1930 i1933 
=== Succesors ===
=== Usages ===
v1928 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1923 values: i1930 i1933  <|@  <|@
f <@~|@floating>@ <|@
tid a1927 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1923 
values: a1931 a1934 
=== Succesors ===
=== Usages ===
v1928 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1923 values: a1931 a1934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1929 v1932 
=== Succesors ===
next: v1928 
=== Usages ===
i1926 a1927 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1929 v1932 #next: v1928  <|@  <|@
f <@*|@fixed>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?436 
actionAndReason: i1926 
speculation: a1927 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1923 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?436 actionAndReason: i1926 speculation: a1927  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1849 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1849  <|@  <|@
f <@~|@floating>@ <|@
tid i1850 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302387
stableDimension: 0
stamp: i32 [-302387] ⇊00000000fffb62cd ⇈00000000fffb62cd
stampKind: i32
value: int[-302387|0xfffffffffffb62cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1834 
=== Predecessor ===
v1323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B3" "B122" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1838 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-303371 - -232203] ⇊00000000fff840c5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v1834 
values: i1848 i1850 i1852 
=== Succesors ===
=== Usages ===
v1840 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1834 values: i1848 i1850 i1852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1847 v1849 v1851 
=== Succesors ===
next: v1840 
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1847 v1849 v1851 #next: v1840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1838 
speculation: a1837 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1834 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1838 speculation: a1837  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v2473 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v2473  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v2414 v2415 v1154 ?68 ?719 ?761 ?105 ?573 v2425 v2416 a1675 ?574 v2412 v2418 a1607 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?76 ?761 v2473 a1273 ?105 ?1826 ?436 ?584 ?351 ?68 ?1827 v2426 v2381 a1272 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 176
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - 
=== Succesors ===
=== Usages ===
v1840 v2473 i2313 i2317 i2321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v2311 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v2311  <|@  <|@
f <@~|@floating>@ <|@
tid v2425 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v2311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2311 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2425 
=== Succesors ===
next: v115 
=== Usages ===
v2234 v2230 v2232 v2310 
=== Predecessor ===
v2473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2425 #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v2231 <|@
result meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2232 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2232 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2311 
y: v2231 
=== Succesors ===
=== Usages ===
v786 v115 v445 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2311 y: v2231  <|@  <|@
f <@~|@floating>@ <|@
tid a1837 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1840 v1940 v1868 v1858 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2416 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2329 i2333 i2319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2229 <|@
result meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2230 v2310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2415 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2328 a2330 i2315 a2316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2414 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2327 i2332 i2314 i2318 a2320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2412 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2325 a2312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=size target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9440844134263875
=== Inputs ===
condition: v2232 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v2311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2232 #trueSuccessor: v111 #falseSuccessor: v114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4d6e45bf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=size target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2312 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2312 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2412 
=== Succesors ===
next: i2313 
=== Usages ===
v2422 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2412 #next: i2313  <|@  <|@
f <@~|@floating>@ <|@
tid v2422 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2312 
=== Succesors ===
=== Usages ===
i2313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2313 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2422 
=== Succesors ===
next: i2314 
=== Usages ===
v264 
=== Predecessor ===
a2312 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2422 #next: i2314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2314 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: v1312 
=== Usages ===
v264 
=== Predecessor ===
i2313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: v1312  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2313 
y: i2314 
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2313 y: i2314  <|@  <|@
f <@*|@fixed>@ <|@
tid v1312 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v1309 
falseSuccessor: v1311 
=== Usages ===
=== Predecessor ===
i2314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v1309 #falseSuccessor: v1311  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2315 
=== Usages ===
=== Predecessor ===
v1312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2315 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.size(ArrayList.java:1049) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: v112 
=== Usages ===
i107 
=== Predecessor ===
v1309 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|DWORD] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1847 
=== Usages ===
=== Predecessor ===
v1312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1847  <|@  <|@
f <@~|@floating>@ <|@
tid i1848 <|@
result int[-298259|0xfffffffffffb72ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -298259
stableDimension: 0
stamp: i32 [-298259] ⇊00000000fffb72ed ⇈00000000fffb72ed
stampKind: i32
value: int[-298259|0xfffffffffffb72ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1834 
=== Predecessor ===
v1311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-298259|0xfffffffffffb72ed]] destination: B3 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v2310 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2311 
y: v2229 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2311 y: v2229  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 0.8652798415056957
=== Inputs ===
condition: v2310 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2310 #trueSuccessor: v120 #falseSuccessor: v123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2316 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2316 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: i2317 
=== Usages ===
v2423 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: i2317  <|@  <|@
f <@~|@floating>@ <|@
tid v2423 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2316 
=== Succesors ===
=== Usages ===
i2317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2317 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2423 
=== Succesors ===
next: i2318 
=== Usages ===
v294 
=== Predecessor ===
a2316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2423 #next: i2318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2318 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: v1320 
=== Usages ===
v294 
=== Predecessor ===
i2317 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: v1320  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2317 
y: i2318 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2317 y: i2318  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v1317 
falseSuccessor: v1319 
=== Usages ===
=== Predecessor ===
i2318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v1317 #falseSuccessor: v1319  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2319 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2319 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.size(AbstractList.java:646) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2416 
=== Succesors ===
next: v121 
=== Usages ===
i107 
=== Predecessor ===
v1317 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2416 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1851 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1851  <|@  <|@
f <@~|@floating>@ <|@
tid i1852 <|@
result int[-301587|0xfffffffffffb65ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -301587
stableDimension: 0
stamp: i32 [-301587] ⇊00000000fffb65ed ⇈00000000fffb65ed
stampKind: i32
value: int[-301587|0xfffffffffffb65ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1834 
=== Predecessor ===
v1319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-301587|0xfffffffffffb65ed]] destination: B7 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B122" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1324  <|@  <|@
f <@~|@floating>@ <|@
tid v2233 <|@
result meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2234 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2311 
y: v2233 
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2311 y: v2233  <|@  <|@
f <@*|@fixed>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2234 
=== Succesors ===
trueSuccessor: v1321 
falseSuccessor: v1323 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2234 #trueSuccessor: v1321 #falseSuccessor: v1323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2320 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2320 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.map
nodeSourcePosition: at java.util.HashSet.size(HashSet.java:182) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: i2321 
=== Usages ===
v2424 
=== Predecessor ===
v1321 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: i2321  <|@  <|@
f <@~|@floating>@ <|@
tid v2424 <|@
result [v9|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2320 
=== Succesors ===
=== Usages ===
i2321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2321 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.size(HashMap.java:526) [bci: 1]
at java.util.HashSet.size(HashSet.java:182) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2424 
=== Succesors ===
next: v130 
=== Usages ===
i107 
=== Predecessor ===
a2320 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2424 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v10|DWORD = MOV [v9|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i107 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v104 
values: i2315 i2319 i2321 
=== Succesors ===
=== Usages ===
?105 v8 v2064 a2033 i1993 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v104 values: i2315 i2319 i2321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v121 v130 
=== Succesors ===
next: i2322 
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v121 v130 #next: i2322  <|@  <|@
f <@~|@floating>@ <|@
tid v2381 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2322 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2381 
=== Succesors ===
next: v11 
=== Usages ===
v8 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2381 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2322 
y: i107 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2322 y: i107  <|@  <|@
f <@~|@floating>@ <|@
tid v2268 <|@
result meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2191 v2286 v2289 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2262 <|@
result meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2174 v2284 v2309 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2254 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 v2288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2250 <|@
result meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2251 v2287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2244 <|@
result meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2121 v2285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2082 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2096 a2150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:121) [bci: 6]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v527 i75 v1294 v2130 v2178 i825 v592 v641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:121) [bci: 6]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 i480 i331 v840 a2033 a2096 a2150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 8]
stamp: void
trueSuccessorProbability: 2.7694693696687716E-4
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
i2322 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 2.7694693696687716E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2323 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2323  <|@  <|@
f <@~|@floating>@ <|@
tid v2426 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2323 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2426 
=== Succesors ===
next: a1095 
=== Usages ===
v1966 v2068 v2380 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2426 #next: a1095  <|@  <|@
f <@~|@floating>@ <|@
tid v2380 <|@
result [v13|DWORD * 8 + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2323 
=== Succesors ===
=== Usages ===
a1095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1095 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ArrayKlass::_component_mirror:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:124) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2380 
=== Succesors ===
next: v1973 
=== Usages ===
v1970 
=== Predecessor ===
v2323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2380 #next: v1973  <|@  <|@
f <@~|@floating>@ <|@
tid a1967 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: Class:void
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:void]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1970 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:120) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:369) [bci: 35]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1095 
y: a1967 
=== Succesors ===
=== Usages ===
v1973 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1095 y: a1967  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 176
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - i107 
=== Succesors ===
=== Usages ===
a2033 v1330 v1974 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:369) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1970 
=== Succesors ===
trueSuccessor: v1972 
falseSuccessor: v1971 
=== Usages ===
=== Predecessor ===
a1095 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1970 #trueSuccessor: v1972 #falseSuccessor: v1971  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOV [v13|DWORD * 8 + 224] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD[.], y: v14|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:370) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1974 
=== Usages ===
=== Predecessor ===
v1973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1974  <|@  <|@
f <@*|@fixed>@ <|@
tid v1974 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:370) [bci: 58]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1972 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -505441 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:373) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1999 
=== Usages ===
=== Predecessor ===
v1973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1999 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2059 
=== Usages ===
v2427 v2428 
=== Predecessor ===
v1971 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2059  <|@  <|@
f <@~|@floating>@ <|@
tid v2427 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1999 
index: - 
=== Succesors ===
=== Usages ===
j2059 v2063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1999 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2059 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2427 
=== Succesors ===
next: j2060 
=== Usages ===
j2003 v2429 v2430 v2436 v2431 a2032 v2432 v2433 v2434 v2435 
=== Predecessor ===
j1999 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2427 #next: j2060  <|@  <|@
f <@~|@floating>@ <|@
tid v2428 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1999 
index: - 
=== Succesors ===
=== Usages ===
j2060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1999 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2060 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2428 
=== Succesors ===
next: v2007 
=== Usages ===
v2004 
=== Predecessor ===
j2059 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2428 #next: v2007  <|@  <|@
f <@~|@floating>@ <|@
tid i924 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1993 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1993 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i107 
y: i924 
=== Succesors ===
=== Usages ===
i2299 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i107 y: i924  <|@  <|@
f <@~|@floating>@ <|@
tid i2298 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2299 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i1993 
y: i2298 
=== Succesors ===
=== Usages ===
i1998 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1993 y: i2298  <|@  <|@
f <@~|@floating>@ <|@
tid i1997 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1998 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1998 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2299 
y: i1997 
=== Succesors ===
=== Usages ===
j2002 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2299 y: i1997  <|@  <|@
f <@~|@floating>@ <|@
tid j2002 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1998 
=== Succesors ===
=== Usages ===
j2003 v2024 v2432 v2433 v2434 v2435 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1998  <|@  <|@
f <@~|@floating>@ <|@
tid j2003 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
=== Inputs ===
x: j2002 
y: j2059 
=== Succesors ===
=== Usages ===
v2004 v2063 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2002 y: j2059  <|@  <|@
f <@~|@floating>@ <|@
tid v2004 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2060 
y: j2003 
=== Succesors ===
=== Usages ===
v2007 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2060 y: j2003  <|@  <|@
f <@*|@fixed>@ <|@
tid v2007 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2004 
=== Succesors ===
trueSuccessor: v2005 
falseSuccessor: v2006 
=== Usages ===
=== Predecessor ===
j2060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2004 #trueSuccessor: v2005 #falseSuccessor: v2006  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL v11|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND v18|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = ADD (x: v20|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523649650915936459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2033 
=== Usages ===
=== Predecessor ===
v2007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2033  <|@  <|@
f <@~|@floating>@ <|@
tid v1966 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v2323 
=== Succesors ===
=== Usages ===
a2033 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v2323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2033 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?105 
arguments: v1966 i107 i20 
=== Succesors ===
next: v2036 
=== Usages ===
a2037 
=== Predecessor ===
v2005 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?105 arguments: v1966 i107 i20 #next: v2036  <|@  <|@
f <@*|@fixed>@ <|@
tid v2036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2035 
=== Predecessor ===
a2033 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553693305219744456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2063 
=== Usages ===
=== Predecessor ===
v2007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2063  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2063 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2427 
value: j2003 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2046 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2427 value: j2003 stateAfter: - lastLocationAccess: - #next: v2046  <|@  <|@
f <@~|@floating>@ <|@
tid v2432 <|@
result [v20|QWORD + v16|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2002 
index: j2059 
=== Succesors ===
=== Usages ===
v2046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2002 index: j2059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2432 
=== Succesors ===
next: v2049 
=== Usages ===
=== Predecessor ===
v2063 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2432 #next: v2049  <|@  <|@
f <@~|@floating>@ <|@
tid v2433 <|@
result [v20|QWORD + v16|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2002 
index: j2059 
=== Succesors ===
=== Usages ===
v2049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2002 index: j2059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2433 
=== Succesors ===
next: v2052 
=== Usages ===
=== Predecessor ===
v2046 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2433 #next: v2052  <|@  <|@
f <@~|@floating>@ <|@
tid v2434 <|@
result [v20|QWORD + v16|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2002 
index: j2059 
=== Succesors ===
=== Usages ===
v2052 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2002 index: j2059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2434 
=== Succesors ===
next: v2055 
=== Usages ===
=== Predecessor ===
v2049 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2434 #next: v2055  <|@  <|@
f <@~|@floating>@ <|@
tid v2435 <|@
result [v20|QWORD + v16|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2002 
index: j2059 
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2002 index: j2059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2435 
=== Succesors ===
next: v2064 
=== Usages ===
=== Predecessor ===
v2052 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2435 #next: v2064  <|@  <|@
f <@~|@floating>@ <|@
tid v2429 <|@
result [v16|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2059 
index: - 
=== Succesors ===
=== Usages ===
v2064 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2059 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2064 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2429 
value: i107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2065 
=== Usages ===
=== Predecessor ===
v2055 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2429 value: i107 stateAfter: - lastLocationAccess: - #next: v2065  <|@  <|@
f <@~|@floating>@ <|@
tid v2430 <|@
result [v16|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2059 
index: - 
=== Succesors ===
=== Usages ===
v2065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2059 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1968 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2065 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2065 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2430 
value: j1968 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2068 
=== Usages ===
=== Predecessor ===
v2064 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2430 value: j1968 stateAfter: - lastLocationAccess: - #next: v2068  <|@  <|@
f <@~|@floating>@ <|@
tid v2436 <|@
result [v16|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2059 
index: - 
=== Succesors ===
=== Usages ===
v2068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2059 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2068 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2436 
value: v2323 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2021 
=== Usages ===
=== Predecessor ===
v2065 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2436 value: v2323 stateAfter: - lastLocationAccess: - #next: v2021  <|@  <|@
f <@~|@floating>@ <|@
tid j926 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2022 
=== Predecessor ===
v2068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 8], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[16|0x10]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558196904847114952
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2023 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2022 
values: j926 j2029 
=== Succesors ===
=== Usages ===
v2024 v2431 j2029 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2022 values: j926 j2029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2021 
=== Succesors ===
next: v2027 
=== Usages ===
j2023 v2026 v2030 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2021 #next: v2027  <|@  <|@
f <@~|@floating>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 241]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2023 
y: j2002 
=== Succesors ===
=== Usages ===
v2027 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2023 y: j2002  <|@  <|@
f <@*|@fixed>@ <|@
tid v2027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 241]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2024 
=== Succesors ===
trueSuccessor: v2025 
falseSuccessor: v2026 
=== Usages ===
=== Predecessor ===
v2022 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2024 #trueSuccessor: v2025 #falseSuccessor: v2026  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553693305219744456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 244]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2069 
=== Usages ===
=== Predecessor ===
v2027 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2069  <|@  <|@
f <@~|@floating>@ <|@
tid v2431 <|@
result [v16|QWORD + v24|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2059 
index: j2023 
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2059 index: j2023  <|@  <|@
f <@~|@floating>@ <|@
tid j1602 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 251]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2431 
value: j1602 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2030 
=== Usages ===
=== Predecessor ===
v2025 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2431 value: j1602 stateAfter: - lastLocationAccess: - #next: v2030  <|@  <|@
f <@~|@floating>@ <|@
tid j1960 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2029 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2029 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 258]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
=== Inputs ===
x: j2023 
y: j1960 
=== Succesors ===
=== Usages ===
j2023 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2023 y: j1960  <|@  <|@
f <@*|@fixed>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
loopBegin: v2022 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2069 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2022  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + v24|QWORD * 1], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553693305219744456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:493) [bci: 266]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2022 
=== Succesors ===
next: v2031 
=== Usages ===
=== Predecessor ===
v2027 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2022 #next: v2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2031 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2032 
=== Usages ===
=== Predecessor ===
v2026 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2032  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2032 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2059 
=== Succesors ===
next: v2034 
=== Usages ===
a2037 
=== Predecessor ===
v2031 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2059 #next: v2034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2035 
=== Predecessor ===
a2032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2037 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2035 
values: a2032 a2033 
=== Succesors ===
=== Usages ===
a1272 v2437 a1273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2035 values: a2032 a2033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2034 v2036 
=== Succesors ===
next: v2324 
=== Usages ===
a2037 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2034 v2036 #next: v2324  <|@  <|@
f <@~|@floating>@ <|@
tid v2437 <|@
result [v27|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2037 
index: - 
=== Succesors ===
=== Usages ===
v2324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2037 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2324 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2437 
=== Succesors ===
next: v1332 
=== Usages ===
v2237 
=== Predecessor ===
v2035 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2437 #next: v1332  <|@  <|@
f <@~|@floating>@ <|@
tid v2236 <|@
result meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
rawvalue: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2237 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2324 
y: v2236 
=== Succesors ===
=== Usages ===
v1332 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2324 y: v2236  <|@  <|@
f <@*|@fixed>@ <|@
tid v1332 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2237 
=== Succesors ===
trueSuccessor: v1329 
falseSuccessor: v1331 
=== Usages ===
=== Predecessor ===
v2324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2237 #trueSuccessor: v1329 #falseSuccessor: v1331  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v27|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9440844134263875
=== Inputs ===
condition: v2232 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v444 
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2232 #trueSuccessor: v442 #falseSuccessor: v444  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553458733082124626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v757  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535191782419552387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v760  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
v444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1330 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1330  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1099
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1331 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -281395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B35" 
    xhandlers
    flags 
    probability 4607179924283773157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v786  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9440844134263875
=== Inputs ===
condition: v2232 
=== Succesors ===
trueSuccessor: v784 
falseSuccessor: v785 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2232 #trueSuccessor: v784 #falseSuccessor: v785  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606676420936397924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v758  <|@  <|@
f <@*|@fixed>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v784 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1272 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v756 
values: a2037 a2 
=== Succesors ===
=== Usages ===
?68 a766 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v756 values: a2037 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v757 v758 
=== Succesors ===
next: a2325 
=== Usages ===
a1272 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v757 v758 #next: a2325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2325 <|@
result v29|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2412 
=== Succesors ===
next: i2326 
=== Usages ===
v2413 
=== Predecessor ===
v756 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2412 #next: i2326  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 179
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - a1272 
=== Succesors ===
=== Usages ===
v1858 a2096 i2326 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - a1272  <|@  <|@
f <@~|@floating>@ <|@
tid v2413 <|@
result [v29|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2325 
=== Succesors ===
=== Usages ===
i2326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2326 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?68 
guard: - 
address: v2413 
=== Succesors ===
next: i2327 
=== Usages ===
v523 v2128 
=== Predecessor ===
a2325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?68 guard: - address: v2413 #next: i2327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2327 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: v1340 
=== Usages ===
v523 
=== Predecessor ===
i2326 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: v1340  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2326 
y: i2327 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2326 y: i2327  <|@  <|@
f <@*|@fixed>@ <|@
tid v1340 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v523 
=== Succesors ===
trueSuccessor: v1337 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
i2327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v523 #trueSuccessor: v1337 #falseSuccessor: v1339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v30|DWORD = MOV [v29|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2328 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2328 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 6]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: v1344 
=== Usages ===
v527 
=== Predecessor ===
v1337 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2328 
y: i21 
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2328 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v527 
=== Succesors ===
trueSuccessor: v1343 
falseSuccessor: v1341 
=== Usages ===
=== Predecessor ===
i2328 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v527 #trueSuccessor: v1343 #falseSuccessor: v1341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1859 
=== Usages ===
=== Predecessor ===
v1344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1859  <|@  <|@
f <@~|@floating>@ <|@
tid i1860 <|@
result int[-285459|0xfffffffffffba4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -285459
stableDimension: 0
stamp: i32 [-285459] ⇊00000000fffba4ed ⇈00000000fffba4ed
stampKind: i32
value: int[-285459|0xfffffffffffba4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1856 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v1343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-285459|0xfffffffffffba4ed]] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2084 
=== Usages ===
=== Predecessor ===
v1344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2084 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2100 
=== Usages ===
v2438 v2439 
=== Predecessor ===
v1341 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2100  <|@  <|@
f <@~|@floating>@ <|@
tid v2438 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2084 
index: - 
=== Succesors ===
=== Usages ===
j2100 v2102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2084 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2100 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2438 
=== Succesors ===
next: j2101 
=== Usages ===
j2239 j2106 v2456 
=== Predecessor ===
j2084 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2438 #next: j2101  <|@  <|@
f <@~|@floating>@ <|@
tid v2439 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2084 
index: - 
=== Succesors ===
=== Usages ===
j2101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2084 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2101 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2439 
=== Succesors ===
next: v2092 
=== Usages ===
v2089 
=== Predecessor ===
j2100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2439 #next: v2092  <|@  <|@
f <@~|@floating>@ <|@
tid j2238 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2239 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2100 
y: j2238 
=== Succesors ===
=== Usages ===
v2089 v2102 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2100 y: j2238  <|@  <|@
f <@~|@floating>@ <|@
tid v2089 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2101 
y: j2239 
=== Succesors ===
=== Usages ===
v2092 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2101 y: j2239  <|@  <|@
f <@*|@fixed>@ <|@
tid v2092 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2089 
=== Succesors ===
trueSuccessor: v2090 
falseSuccessor: v2091 
=== Usages ===
=== Predecessor ===
j2101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2089 #trueSuccessor: v2090 #falseSuccessor: v2091  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576595897893070561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2096 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2096  <|@  <|@
f <@~|@floating>@ <|@
tid i2241 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2096 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2096 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?68 
arguments: v2082 i2241 i20 
=== Succesors ===
next: j2097 
=== Usages ===
j2097 
=== Predecessor ===
v2090 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?68 arguments: v2082 i2241 i20 #next: j2097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2097 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2096 
=== Succesors ===
next: v2107 
=== Usages ===
j2106 
=== Predecessor ===
a2096 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2096 #next: v2107  <|@  <|@
f <@*|@fixed>@ <|@
tid v2107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2104 
=== Predecessor ===
j2097 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606593740406052892
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2102 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2438 
value: j2239 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2099 
=== Usages ===
=== Predecessor ===
v2091 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2438 value: j2239 stateAfter: - lastLocationAccess: - #next: v2099  <|@  <|@
f <@~|@floating>@ <|@
tid v2456 <|@
result [v31|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j2100 
index: - 
=== Succesors ===
=== Usages ===
v2099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2100 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2456 
=== Succesors ===
next: v2105 
=== Usages ===
=== Predecessor ===
v2102 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2456 #next: v2105  <|@  <|@
f <@*|@fixed>@ <|@
tid v2105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2104 
=== Predecessor ===
v2099 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2106 <|@
result v34|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2104 
values: j2100 j2097 
=== Succesors ===
=== Usages ===
v2442 v2441 a1604 v2457 v2458 v2459 v2460 v2461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2104 values: j2100 j2097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2105 v2107 
=== Succesors ===
next: a1604 
=== Usages ===
j2106 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2105 v2107 #next: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1604 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2106 
=== Succesors ===
next: j2117 
=== Usages ===
a1610 
=== Predecessor ===
v2104 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2106 #next: j2117  <|@  <|@
f <@~|@floating>@ <|@
tid v1721 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2112 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1721 
=== Succesors ===
=== Usages ===
v2440 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1721  <|@  <|@
f <@~|@floating>@ <|@
tid v2440 <|@
result [v36|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2112 
index: - 
=== Succesors ===
=== Usages ===
j2117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2117 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2440 
=== Succesors ===
next: v2118 
=== Usages ===
v2118 
=== Predecessor ===
a1604 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2440 #next: v2118  <|@  <|@
f <@~|@floating>@ <|@
tid v2441 <|@
result [v34|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2441 
value: j2117 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2121 
=== Usages ===
=== Predecessor ===
j2117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2441 value: j2117 stateAfter: - lastLocationAccess: - #next: v2121  <|@  <|@
f <@~|@floating>@ <|@
tid v2442 <|@
result [v34|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2442 
value: v2244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2126 
=== Usages ===
=== Predecessor ===
v2118 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2442 value: v2244 stateAfter: - lastLocationAccess: - #next: v2126  <|@  <|@
f <@~|@floating>@ <|@
tid v2457 <|@
result [v34|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2124 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2457 
value: j2124 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2128 
=== Usages ===
=== Predecessor ===
v2121 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2457 value: j2124 stateAfter: - lastLocationAccess: - #next: v2128  <|@  <|@
f <@~|@floating>@ <|@
tid v2458 <|@
result [v34|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2128 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2458 
value: i2326 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2130 
=== Usages ===
=== Predecessor ===
v2126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2458 value: i2326 stateAfter: - lastLocationAccess: - #next: v2130  <|@  <|@
f <@~|@floating>@ <|@
tid v2459 <|@
result [v34|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2459 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2329 
=== Usages ===
=== Predecessor ===
v2128 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2459 value: i21 stateAfter: - lastLocationAccess: - #next: i2329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2329 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.offset
nodeSourcePosition: at java.util.ArrayList$SubList.listIterator(ArrayList.java:1101) [bci: 10]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2416 
=== Succesors ===
next: v2132 
=== Usages ===
v2132 
=== Predecessor ===
v2130 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2416 #next: v2132  <|@  <|@
f <@~|@floating>@ <|@
tid v2460 <|@
result [v34|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2460 
value: i2329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2134 
=== Usages ===
=== Predecessor ===
i2329 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2460 value: i2329 stateAfter: - lastLocationAccess: - #next: v2134  <|@  <|@
f <@~|@floating>@ <|@
tid v2461 <|@
result [v34|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1607 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2461 
value: a1607 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1610 
=== Usages ===
=== Predecessor ===
v2132 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2461 value: a1607 stateAfter: - lastLocationAccess: - #next: a1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1610 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1604 
=== Succesors ===
next: v1611 
=== Usages ===
a438 
=== Predecessor ===
v2134 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1604 #next: v1611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
a1610 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v443  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v1611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE v34|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v36|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*]], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v34|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 12], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 20], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 28], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 32], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.], v28|QWORD[.]] destination: B32 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1861 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1861  <|@  <|@
f <@~|@floating>@ <|@
tid i1862 <|@
result int[-284691|0xfffffffffffba7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284691
stableDimension: 0
stamp: i32 [-284691] ⇊00000000fffba7ed ⇈00000000fffba7ed
stampKind: i32
value: int[-284691|0xfffffffffffba7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1856 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v1339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284691|0xfffffffffffba7ed]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1856 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-285459 - -283147] ⇊00000000fffba4e5 ⇈00000000fffbaffd
valueDescription: i32
=== Inputs ===
merge: v1853 
values: i1860 i1862 
=== Succesors ===
=== Usages ===
v1858 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1853 values: i1860 i1862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1859 v1861 
=== Succesors ===
next: v1858 
=== Usages ===
i1856 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1859 v1861 #next: v1858  <|@  <|@
f <@*|@fixed>@ <|@
tid v1858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?68 
actionAndReason: i1856 
speculation: a1837 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1853 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?68 actionAndReason: i1856 speculation: a1837  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588216874593798165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
v785 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B35" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1273 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v759 
values: a2037 a2 
=== Succesors ===
=== Usages ===
?1826 a766 a766 ?584 ?761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v759 values: a2037 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v760 v762 
=== Succesors ===
next: v569 
=== Usages ===
a1273 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v760 v762 #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid v2230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2311 
y: v2229 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2311 y: v2229  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=iterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.8652798415056957
=== Inputs ===
condition: v2230 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2230 #trueSuccessor: v566 #falseSuccessor: v568  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=iterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2330 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2330 <|@
result v43|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: i2331 
=== Usages ===
?649 v2201 v2417 v2420 v2443 v2203 ?822 v2475 
=== Predecessor ===
v566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: i2331  <|@  <|@
tid ?761 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 179
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - a1273 
=== Succesors ===
=== Usages ===
v1940 i2331 i2337 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - a1273  <|@  <|@
f <@~|@floating>@ <|@
tid v2417 <|@
result [v43|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2330 
=== Succesors ===
=== Usages ===
i2331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2331 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?761 
guard: - 
address: v2417 
=== Succesors ===
next: i2332 
=== Usages ===
v588 v2199 
=== Predecessor ===
a2330 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?761 guard: - address: v2417 #next: i2332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2332 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: v1352 
=== Usages ===
v588 
=== Predecessor ===
i2331 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2331 
y: i2332 
=== Succesors ===
=== Usages ===
v1352 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2331 y: i2332  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v588 
=== Succesors ===
trueSuccessor: v1349 
falseSuccessor: v1351 
=== Usages ===
=== Predecessor ===
i2332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v588 #trueSuccessor: v1349 #falseSuccessor: v1351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2333 
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2333 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 6]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2416 
=== Succesors ===
next: v1356 
=== Usages ===
v592 
=== Predecessor ===
v1349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2416 #next: v1356  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2333 
y: i21 
=== Succesors ===
=== Usages ===
v1356 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2333 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1356 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v592 
=== Succesors ===
trueSuccessor: v1355 
falseSuccessor: v1353 
=== Usages ===
=== Predecessor ===
i2333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v592 #trueSuccessor: v1355 #falseSuccessor: v1353  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1941 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1941  <|@  <|@
f <@~|@floating>@ <|@
tid i1942 <|@
result int[-289555|0xfffffffffffb94ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -289555
stableDimension: 0
stamp: i32 [-289555] ⇊00000000fffb94ed ⇈00000000fffb94ed
stampKind: i32
value: int[-289555|0xfffffffffffb94ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-289555|0xfffffffffffb94ed]] destination: B39 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2334 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2334  <|@  <|@
f <@~|@floating>@ <|@
tid v2418 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2334 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 30]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2418 
=== Succesors ===
next: v1360 
=== Usages ===
v2195 v840 v646 ?649 v641 v827 ?822 ?822 
=== Predecessor ===
v1353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2418 #next: v1360  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2334 
y: i21 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2334 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v641 
=== Succesors ===
trueSuccessor: v1359 
falseSuccessor: v1357 
=== Usages ===
=== Predecessor ===
i2334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v641 #trueSuccessor: v1359 #falseSuccessor: v1357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1945 
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1945  <|@  <|@
f <@~|@floating>@ <|@
tid i1946 <|@
result int[-291603|0xfffffffffffb8ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291603
stableDimension: 0
stamp: i32 [-291603] ⇊00000000fffb8ced ⇈00000000fffb8ced
stampKind: i32
value: int[-291603|0xfffffffffffb8ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1359 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291603|0xfffffffffffb8ced]] destination: B41 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2335 
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2335  <|@  <|@
f <@~|@floating>@ <|@
tid v2443 <|@
result [v43|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2330 
=== Succesors ===
=== Usages ===
v2335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2335 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2443 
=== Succesors ===
next: v1137 
=== Usages ===
v2419 v2251 v2253 v2255 
=== Predecessor ===
v1357 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2443 #next: v1137  <|@  <|@
f <@~|@floating>@ <|@
tid v2419 <|@
result [v46|DWORD * 8 + 696] <|@
d <@d|@=== Debug Properties ===
displacement: 696
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2335 
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1137 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v2419 
=== Succesors ===
next: v1364 
=== Usages ===
v628 
=== Predecessor ===
v2335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2419 #next: v1364  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotMethod<AbstractList.listIterator(int)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<AbstractList.listIterator(int)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1137 
y: v626 
=== Succesors ===
=== Usages ===
v1364 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1137 y: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v628 
=== Succesors ===
trueSuccessor: v1361 
falseSuccessor: v1363 
=== Usages ===
=== Predecessor ===
v1137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v628 #trueSuccessor: v1361 #falseSuccessor: v1363  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v43|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: [v46|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v2251 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2335 
y: v2250 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2335 y: v2250  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.5044648172401477
=== Inputs ===
condition: v2251 
=== Succesors ===
trueSuccessor: v668 
falseSuccessor: v671 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2251 #trueSuccessor: v668 #falseSuccessor: v671  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582692156624931946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2336 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2336  <|@  <|@
f <@~|@floating>@ <|@
tid v2420 <|@
result [v43|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2330 
=== Succesors ===
=== Usages ===
a2336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2336 <|@
result v48|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2420 
=== Succesors ===
next: i2337 
=== Usages ===
v2421 
=== Predecessor ===
v668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2420 #next: i2337  <|@  <|@
f <@~|@floating>@ <|@
tid v2421 <|@
result [v48|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2336 
=== Succesors ===
=== Usages ===
i2337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2337 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?761 
guard: - 
address: v2421 
=== Succesors ===
next: v1372 
=== Usages ===
i825 v827 
=== Predecessor ===
a2336 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?761 guard: - address: v2421 #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2337 
y: i2334 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2337 y: i2334  <|@  <|@
f <@*|@fixed>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v827 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1369 
=== Usages ===
=== Predecessor ===
i2337 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v827 #trueSuccessor: v1371 #falseSuccessor: v1369  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1951 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1951  <|@  <|@
f <@~|@floating>@ <|@
tid i1952 <|@
result int[-293907|0xfffffffffffb83ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293907
stableDimension: 0
stamp: i32 [-293907] ⇊00000000fffb83ed ⇈00000000fffb83ed
stampKind: i32
value: int[-293907|0xfffffffffffb83ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1951 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293907|0xfffffffffffb83ed]] destination: B45 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4582692156624931946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v823 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v823  <|@  <|@
f <@*|@fixed>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
v1369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B46 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4582567629803775914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid v2252 <|@
result meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2253 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2253 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2335 
y: v2252 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2335 y: v2252  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.5252282556463239
=== Inputs ===
condition: v2253 
=== Succesors ===
trueSuccessor: v677 
falseSuccessor: v680 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2253 #trueSuccessor: v677 #falseSuccessor: v680  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5252282556463239 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4578412705275642303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1376 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1376  <|@  <|@
f <@~|@floating>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2334 
y: i20 
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2334 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v840 
=== Succesors ===
trueSuccessor: v1373 
falseSuccessor: v1375 
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v840 #trueSuccessor: v1373 #falseSuccessor: v1375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578412705275642303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1955 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1955  <|@  <|@
f <@~|@floating>@ <|@
tid i1956 <|@
result int[-294163|0xfffffffffffb82ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294163
stableDimension: 0
stamp: i32 [-294163] ⇊00000000fffb82ed ⇈00000000fffb82ed
stampKind: i32
value: int[-294163|0xfffffffffffb82ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294163|0xfffffffffffb82ed]] destination: B50 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1380 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1380  <|@  <|@
f <@~|@floating>@ <|@
tid v2255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2335 
y: v2254 
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2335 y: v2254  <|@  <|@
f <@*|@fixed>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2255 
=== Succesors ===
trueSuccessor: v1377 
falseSuccessor: v1379 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2255 #trueSuccessor: v1377 #falseSuccessor: v1379  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2338 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2338  <|@  <|@
f <@~|@floating>@ <|@
tid v2475 <|@
result [v43|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2330 
=== Succesors ===
=== Usages ===
i2338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2338 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2475 
=== Succesors ===
next: v1384 
=== Usages ===
v646 i825 
=== Predecessor ===
v1377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2475 #next: v1384  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2338 
y: i2334 
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2338 y: i2334  <|@  <|@
f <@*|@fixed>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v646 
=== Succesors ===
trueSuccessor: v1383 
falseSuccessor: v1381 
=== Usages ===
=== Predecessor ===
i2338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v646 #trueSuccessor: v1383 #falseSuccessor: v1381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1953 
=== Usages ===
=== Predecessor ===
v1384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid i1954 <|@
result int[-295187|0xfffffffffffb7eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -295187
stableDimension: 0
stamp: i32 [-295187] ⇊00000000fffb7eed ⇈00000000fffb7eed
stampKind: i32
value: int[-295187|0xfffffffffffb7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-295187|0xfffffffffffb7eed]] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v1384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v820  <|@  <|@
f <@*|@fixed>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
v1381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i825 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v821 
values: i2338 i2337 i21 
=== Succesors ===
=== Usages ===
?822 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v821 values: i2338 i2337 i21  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v820 v823 v839 
=== Succesors ===
next: j2139 
=== Usages ===
i825 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v820 v823 v839 #next: j2139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2139 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2154 
=== Usages ===
v2444 v2445 
=== Predecessor ===
v821 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2154  <|@  <|@
f <@~|@floating>@ <|@
tid v2444 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2139 
index: - 
=== Succesors ===
=== Usages ===
j2154 v2156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2139 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2154 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2444 
=== Succesors ===
next: j2155 
=== Usages ===
j2257 j2160 v2462 
=== Predecessor ===
j2139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2444 #next: j2155  <|@  <|@
f <@~|@floating>@ <|@
tid v2445 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2139 
index: - 
=== Succesors ===
=== Usages ===
j2155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2139 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2155 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2445 
=== Succesors ===
next: v2147 
=== Usages ===
v2144 
=== Predecessor ===
j2154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2445 #next: v2147  <|@  <|@
f <@~|@floating>@ <|@
tid j2256 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2257 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2154 
y: j2256 
=== Succesors ===
=== Usages ===
v2144 v2156 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2154 y: j2256  <|@  <|@
f <@~|@floating>@ <|@
tid v2144 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2155 
y: j2257 
=== Succesors ===
=== Usages ===
v2147 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2155 y: j2257  <|@  <|@
f <@*|@fixed>@ <|@
tid v2147 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2144 
=== Succesors ===
trueSuccessor: v2145 
falseSuccessor: v2146 
=== Usages ===
=== Predecessor ===
j2155 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2144 #trueSuccessor: v2145 #falseSuccessor: v2146  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4557560643555791360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2150 
=== Usages ===
=== Predecessor ===
v2147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2150  <|@  <|@
tid ?584 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a1273 - - 
=== Succesors ===
=== Usages ===
?573 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1273 - -  <|@  <|@
tid ?573 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<SubList.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?584 
values: a1 
=== Succesors ===
=== Usages ===
?574 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?584 values: a1  <|@  <|@
tid ?574 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: ?573 
values: a1 
=== Succesors ===
=== Usages ===
?612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: a1  <|@  <|@
tid a716 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@724f57db
hasIdentity: true
objectId: 1
stamp: a!# Ljava/util/SubList$1;
type: HotSpotType<Ljava/util/SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?640 ?612 ?719 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?612 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<SubList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 698
stackSize: 1
=== Inputs ===
outerFrameState: ?574 
values: - - a716 
=== Succesors ===
=== Usages ===
?640 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?574 values: - - a716  <|@  <|@
tid ?640 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<SubList$1.<init>(SubList, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 699
stackSize: 1
=== Inputs ===
outerFrameState: ?612 
values: - - - a716 
=== Succesors ===
=== Usages ===
?649 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?612 values: - - - a716  <|@  <|@
tid ?649 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 325
stackSize: 0
=== Inputs ===
outerFrameState: ?640 
values: a2330 i2334 
=== Succesors ===
=== Usages ===
?822 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?640 values: a2330 i2334  <|@  <|@
tid ?719 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a716 
values: - - a1 
=== Succesors ===
=== Usages ===
?822 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a716 values: - - a1  <|@  <|@
tid ?822 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<AbstractList.rangeCheckForAdd(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 604
stackSize: 2
=== Inputs ===
outerFrameState: ?649 
values: a2330 i2334 i2334 i825 
virtualObjectMappings: ?719 
=== Succesors ===
=== Usages ===
a2150 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?649 values: a2330 i2334 i2334 i825 virtualObjectMappings: ?719  <|@  <|@
f <@~|@floating>@ <|@
tid i2259 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2150 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?822 
arguments: v2082 i2259 i20 
=== Succesors ===
next: j2151 
=== Usages ===
j2151 
=== Predecessor ===
v2145 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?822 arguments: v2082 i2259 i20 #next: j2151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2151 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2150 
=== Succesors ===
next: v2161 
=== Usages ===
j2160 
=== Predecessor ===
a2150 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2150 #next: v2161  <|@  <|@
f <@*|@fixed>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2158 
=== Predecessor ===
j2151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: v45|DWORD v51|DWORD 
locals: v43|DWORD[.] v45|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: v43|DWORD[.] v45|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: v0|QWORD[.] 
java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
locals: v0|QWORD[.] 
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - v1|QWORD[.] - v42|QWORD[.] - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4587063766123665126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2156 
=== Usages ===
=== Predecessor ===
v2147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2444 
value: j2257 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2153 
=== Usages ===
=== Predecessor ===
v2146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2444 value: j2257 stateAfter: - lastLocationAccess: - #next: v2153  <|@  <|@
f <@~|@floating>@ <|@
tid v2462 <|@
result [v52|QWORD + 248] <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j2154 
index: - 
=== Succesors ===
=== Usages ===
v2153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2154 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2462 
=== Succesors ===
next: v2159 
=== Usages ===
=== Predecessor ===
v2156 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2462 #next: v2159  <|@  <|@
f <@*|@fixed>@ <|@
tid v2159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2158 
=== Predecessor ===
v2153 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v52|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2160 <|@
result v55|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2158 
values: j2154 j2151 
=== Succesors ===
=== Usages ===
v2472 v2447 j1670 a1668 v2448 v2463 v2464 v2465 v2466 v2467 v2468 v2469 v2470 v2471 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2158 values: j2154 j2151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2159 v2161 
=== Succesors ===
next: a1668 
=== Usages ===
j2160 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2159 v2161 #next: a1668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1668 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2160 
=== Succesors ===
next: a1671 
=== Usages ===
a1682 
=== Predecessor ===
v2158 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2160 #next: a1671  <|@  <|@
f <@~|@floating>@ <|@
tid j940 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1670 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1670 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2160 
y: j940 
=== Succesors ===
=== Usages ===
a1671 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2160 y: j940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1671 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1670 
=== Succesors ===
next: j2170 
=== Usages ===
a1683 a1674 
=== Predecessor ===
a1668 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1670 #next: j2170  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2166 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1703 
=== Succesors ===
=== Usages ===
v2446 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1703  <|@  <|@
f <@~|@floating>@ <|@
tid v2446 <|@
result [v59|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2166 
index: - 
=== Succesors ===
=== Usages ===
j2170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2166 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2170 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2446 
=== Succesors ===
next: v2171 
=== Usages ===
v2171 
=== Predecessor ===
a1671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2446 #next: v2171  <|@  <|@
f <@~|@floating>@ <|@
tid v2447 <|@
result [v55|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2447 
value: j2170 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2174 
=== Usages ===
=== Predecessor ===
j2170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2447 value: j2170 stateAfter: - lastLocationAccess: - #next: v2174  <|@  <|@
f <@~|@floating>@ <|@
tid v2448 <|@
result [v55|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2448 
value: v2262 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2178 
=== Usages ===
=== Predecessor ===
v2171 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2448 value: v2262 stateAfter: - lastLocationAccess: - #next: v2178  <|@  <|@
f <@~|@floating>@ <|@
tid v2463 <|@
result [v55|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2178 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2463 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2180 
=== Usages ===
=== Predecessor ===
v2174 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2463 value: i21 stateAfter: - lastLocationAccess: - #next: v2180  <|@  <|@
f <@~|@floating>@ <|@
tid v2464 <|@
result [v55|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1674 <|@
result v61|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1671 
=== Succesors ===
=== Usages ===
v2180 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2464 
value: a1674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2182 
=== Usages ===
=== Predecessor ===
v2178 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2464 value: a1674 stateAfter: - lastLocationAccess: - #next: v2182  <|@  <|@
f <@~|@floating>@ <|@
tid v2465 <|@
result [v55|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1675 <|@
result v62|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2465 
value: a1675 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2187 
=== Usages ===
=== Predecessor ===
v2180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2465 value: a1675 stateAfter: - lastLocationAccess: - #next: j2187  <|@  <|@
f <@~|@floating>@ <|@
tid v1739 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2183 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1739 
=== Succesors ===
=== Usages ===
v2449 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1739  <|@  <|@
f <@~|@floating>@ <|@
tid v2449 <|@
result [v63|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2183 
index: - 
=== Succesors ===
=== Usages ===
j2187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2183 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2187 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2449 
=== Succesors ===
next: v2188 
=== Usages ===
v2188 
=== Predecessor ===
v2182 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2449 #next: v2188  <|@  <|@
f <@~|@floating>@ <|@
tid v2466 <|@
result [v55|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2466 
value: j2187 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2191 
=== Usages ===
=== Predecessor ===
j2187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2466 value: j2187 stateAfter: - lastLocationAccess: - #next: v2191  <|@  <|@
f <@~|@floating>@ <|@
tid v2467 <|@
result [v55|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2467 
value: v2268 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2195 
=== Usages ===
=== Predecessor ===
v2188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2467 value: v2268 stateAfter: - lastLocationAccess: - #next: v2195  <|@  <|@
f <@~|@floating>@ <|@
tid v2468 <|@
result [v55|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2468 
value: i2334 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2197 
=== Usages ===
=== Predecessor ===
v2191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2468 value: i2334 stateAfter: - lastLocationAccess: - #next: v2197  <|@  <|@
f <@~|@floating>@ <|@
tid v2469 <|@
result [v55|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i539 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.<init>(ArrayList.java:1105) [bci: 28]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1103) [bci: 21]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2469 
value: i539 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2199 
=== Usages ===
=== Predecessor ===
v2195 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2469 value: i539 stateAfter: - lastLocationAccess: - #next: v2199  <|@  <|@
f <@~|@floating>@ <|@
tid v2470 <|@
result [v55|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2470 
value: i2331 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2201 
=== Usages ===
=== Predecessor ===
v2197 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2470 value: i2331 stateAfter: - lastLocationAccess: - #next: v2201  <|@  <|@
f <@~|@floating>@ <|@
tid v2471 <|@
result [v55|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2471 
value: a2330 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2203 
=== Usages ===
=== Predecessor ===
v2199 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2471 value: a2330 stateAfter: - lastLocationAccess: - #next: v2203  <|@  <|@
f <@~|@floating>@ <|@
tid v2472 <|@
result [v55|QWORD[*] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j2160 
index: - 
=== Succesors ===
=== Usages ===
v2203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2472 
value: a2330 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1682 
=== Usages ===
=== Predecessor ===
v2201 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2472 value: a2330 stateAfter: - lastLocationAccess: - #next: a1682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1682 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1668 
=== Succesors ===
next: a1683 
=== Usages ===
a438 
=== Predecessor ===
v2203 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1668 #next: a1683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1683 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1671 
=== Succesors ===
next: v1684 
=== Usages ===
=== Predecessor ===
a1682 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1671 #next: v1684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
a1683 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v712  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v1684 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = LEA [v55|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v57|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [v59|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*]], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = COMPRESSPOINTER (input: v58|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 16], y: v61|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 20], y: v62|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [v63|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 24], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 36], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 44], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 48], y: v43|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 52], y: v43|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v42|QWORD[.]] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1957 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1957  <|@  <|@
f <@~|@floating>@ <|@
tid i1958 <|@
result int[-294451|0xfffffffffffb81cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294451
stableDimension: 0
stamp: i32 [-294451] ⇊00000000fffb81cd ⇈00000000fffb81cd
stampKind: i32
value: int[-294451|0xfffffffffffb81cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294451|0xfffffffffffb81cd]] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1949 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1949  <|@  <|@
f <@~|@floating>@ <|@
tid i1950 <|@
result int[-291379|0xfffffffffffb8dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291379
stableDimension: 0
stamp: i32 [-291379] ⇊00000000fffb8dcd ⇈00000000fffb8dcd
stampKind: i32
value: int[-291379|0xfffffffffffb8dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1363 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291379|0xfffffffffffb8dcd]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1943 
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1943  <|@  <|@
f <@~|@floating>@ <|@
tid i1944 <|@
result int[-288787|0xfffffffffffb97ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288787
stableDimension: 0
stamp: i32 [-288787] ⇊00000000fffb97ed ⇈00000000fffb97ed
stampKind: i32
value: int[-288787|0xfffffffffffb97ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288787|0xfffffffffffb97ed]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1938 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-295187 - -288787] ⇊00000000fffb00c5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1935 
values: i1942 i1944 i1946 i1950 i1952 i1954 i1956 i1958 
=== Succesors ===
=== Usages ===
v1940 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1935 values: i1942 i1944 i1946 i1950 i1952 i1954 i1956 i1958  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1941 v1943 v1945 v1949 v1951 v1953 v1955 v1957 
=== Succesors ===
next: v1940 
=== Usages ===
i1938 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1941 v1943 v1945 v1949 v1951 v1953 v1955 v1957 #next: v1940  <|@  <|@
f <@*|@fixed>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?761 
actionAndReason: i1938 
speculation: a1837 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1935 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?761 actionAndReason: i1938 speculation: a1837  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a70  <|@  <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
returnStamp: a - (unchecked=a Ljava/util/Iterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@4ba9af9d
stamp: void
targetMethod: HotSpotMethod<AbstractCollection.iterator()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1826 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a1273 - - 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1273 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
polymorphic: false
stamp: a -
targetMethod: Direct#AbstractCollection.iterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1154 
stateDuring: ?1826 
=== Succesors ===
next: v437 
=== Usages ===
a438 
=== Predecessor ===
v568 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1154 stateDuring: ?1826 #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
a70 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - v1|QWORD[.] - v42|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v42|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B120" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a438 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v435 
values: a70 a1610 a1682 
=== Succesors ===
=== Usages ===
?436 ?76 ?1827 v1059 ?351 v2384 v2451 v2393 v2387 v2385 v2391 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v435 values: a70 a1610 a1682  <|@  <|@
f <@~|@floating>@ <|@
tid a766 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v435 
values: a1273 a1272 a1273 
=== Succesors ===
=== Usages ===
?76 v2450 ?436 ?351 ?351 ?1827 ?1827 v2382 v2383 v875 v102 v790 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v435 values: a1273 a1272 a1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v437 v443 v712 
=== Succesors ===
next: v2339 
=== Usages ===
a438 a766 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v437 v443 v712 #next: v2339  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
result [v68|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a766 
index: - 
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a766 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2339 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2450 
=== Succesors ===
next: v1388 
=== Usages ===
v2281 
=== Predecessor ===
v435 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2450 #next: v1388  <|@  <|@
f <@~|@floating>@ <|@
tid v2280 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2339 
y: v2280 
=== Succesors ===
=== Usages ===
v1388 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2339 y: v2280  <|@  <|@
tid ?436 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - a766 - - a438 
=== Succesors ===
=== Usages ===
v1928 v2341 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a766 - - a438  <|@  <|@
f <@*|@fixed>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2281 
=== Succesors ===
trueSuccessor: v1385 
falseSuccessor: v1387 
=== Usages ===
=== Predecessor ===
v2339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2281 #trueSuccessor: v1385 #falseSuccessor: v1387  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD[.], v68|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV [v68|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v69|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2340 
=== Usages ===
=== Predecessor ===
v1388 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2340  <|@  <|@
f <@~|@floating>@ <|@
tid v2382 <|@
result [v68|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a766 
index: - 
=== Succesors ===
=== Usages ===
i2340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a766 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2340 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 45]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2382 
=== Succesors ===
next: v2307 
=== Usages ===
v78 j1280 v1294 
=== Predecessor ===
v1385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2382 #next: v2307  <|@  <|@
f <@~|@floating>@ <|@
tid j1280 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2340 
=== Succesors ===
=== Usages ===
j1284 v1286 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2340  <|@  <|@
f <@~|@floating>@ <|@
tid j1283 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1284 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j1280 
y: j1283 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1280 y: j1283  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1284 
y: j1280 
=== Succesors ===
=== Usages ===
v2307 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1284 y: j1280  <|@  <|@
f <@*|@fixed>@ <|@
tid v2307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1286 
=== Succesors ===
trueSuccessor: v2303 
falseSuccessor: v2306 
=== Usages ===
=== Predecessor ===
i2340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1286 #trueSuccessor: v2303 #falseSuccessor: v2306  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOV [v68|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV v70|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = DEC v71|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2301 
=== Usages ===
=== Predecessor ===
v2307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2301  <|@  <|@
f <@*|@fixed>@ <|@
tid v2301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2300 
=== Predecessor ===
v2303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B119" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2305 
=== Usages ===
=== Predecessor ===
v2307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2305  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2340 
y: i21 
=== Succesors ===
=== Usages ===
v2305 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2340 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1294 
=== Succesors ===
trueSuccessor: v2304 
falseSuccessor: v1391 
=== Usages ===
=== Predecessor ===
v2306 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1294 #trueSuccessor: v2304 #falseSuccessor: v1391  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v70|DWORD, y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2302 
=== Usages ===
=== Predecessor ===
v2305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2302  <|@  <|@
f <@*|@fixed>@ <|@
tid v2302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2300 
=== Predecessor ===
v2304 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" 
    successors "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2301 v2302 
=== Succesors ===
next: v2341 
=== Usages ===
v1292 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2301 v2302 #next: v2341  <|@  <|@
f <@~|@floating>@ <|@
tid v2451 <|@
result [v67|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a438 
index: - 
=== Succesors ===
=== Usages ===
v2341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2341 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?436 
guard: - 
address: v2451 
=== Succesors ===
next: v73 
=== Usages ===
v2285 v2283 v2284 v2308 v2309 
=== Predecessor ===
v2300 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?436 guard: - address: v2451 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v2285 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2341 
y: v2244 
=== Succesors ===
=== Usages ===
v184 v150 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2341 y: v2244  <|@  <|@
f <@~|@floating>@ <|@
tid v2393 <|@
result [v67|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a438 
index: - 
=== Succesors ===
=== Usages ===
v971 a2352 a2372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2391 <|@
result [v67|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a438 
index: - 
=== Succesors ===
=== Usages ===
i2350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2387 <|@
result [v67|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a438 
index: - 
=== Succesors ===
=== Usages ===
i2347 a2354 a2368 a2374 a2378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2384 <|@
result [v67|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a438 
index: - 
=== Succesors ===
=== Usages ===
i2344 v969 i2371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2385 <|@
result [v67|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a438 
index: - 
=== Succesors ===
=== Usages ===
a2342 a2369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i2223 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2222 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2217 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2221 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2282 <|@
result meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2283 v2308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v2341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: v67|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] - - 
>@ <|@ instruction v73|DWORD = MOV [v67|QWORD[.] + 8] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B101" 
    successors "B71" "B103" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614630046498852763
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v74 
values: i21 i94 
=== Succesors ===
=== Usages ===
?76 v78 ?351 ?1827 ?1827 v2383 ?351 i94 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v74 values: i21 i94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.307411100033233
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v73 
=== Succesors ===
next: v83 
=== Usages ===
i75 v81 v95 v1455 v1490 v1485 v1430 v1475 v1435 v1465 v1405 v1445 v1415 v1420 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v73 #next: v83  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 182
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a766 a438 i75 
=== Succesors ===
=== Usages ===
v1868 i2370 i2343 i2346 i2349 v2353 i2355 i2359 i2363 i2366 v2474 v2373 i2375 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a766 a438 i75  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i75 
y: i2340 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i75 y: i2340  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
stamp: void
trueSuccessorProbability: 0.6976487138263665
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v79 #falseSuccessor: v81  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6976487138263665 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612378246685167515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
v1292 
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 0.9005485075074715
=== Inputs ===
condition: v2285 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2285 #trueSuccessor: v178 #falseSuccessor: v183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9005485075074715 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2342 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2342 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2385 
=== Succesors ===
next: i2343 
=== Usages ===
v2388 v2386 
=== Predecessor ===
v178 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2385 #next: i2343  <|@  <|@
f <@~|@floating>@ <|@
tid v2386 <|@
result [v76|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2342 
=== Succesors ===
=== Usages ===
i2343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2343 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2386 
=== Succesors ===
next: i2344 
=== Usages ===
v245 v321 
=== Predecessor ===
a2342 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2386 #next: i2344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2344 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2384 
=== Succesors ===
next: v1406 
=== Usages ===
v245 v321 i327 i331 v971 
=== Predecessor ===
i2343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2384 #next: v1406  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2343 
y: i2344 
=== Succesors ===
=== Usages ===
v1406 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2343 y: i2344  <|@  <|@
f <@*|@fixed>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v1405 
falseSuccessor: v1402 
=== Usages ===
=== Predecessor ===
i2344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v1405 #falseSuccessor: v1402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v67|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v67|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1871 
=== Usages ===
=== Predecessor ===
v1406 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1871  <|@  <|@
f <@~|@floating>@ <|@
tid i1872 <|@
result int[-241427|0xfffffffffffc50ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -241427
stableDimension: 0
stamp: i32 [-241427] ⇊00000000fffc50ed ⇈00000000fffc50ed
stampKind: i32
value: int[-241427|0xfffffffffffc50ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1405 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-241427|0xfffffffffffc50ed]] destination: B73 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2345 
=== Usages ===
=== Predecessor ===
v1406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2345  <|@  <|@
f <@~|@floating>@ <|@
tid v2388 <|@
result [v76|DWORD[.] * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2342 
=== Succesors ===
=== Usages ===
a2345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2345 <|@
result v79|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 8]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2388 
=== Succesors ===
next: i2346 
=== Usages ===
v2390 v2389 
=== Predecessor ===
v1402 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2388 #next: i2346  <|@  <|@
f <@~|@floating>@ <|@
tid v2389 <|@
result [v79|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2345 
=== Succesors ===
=== Usages ===
i2346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2346 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 11]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2389 
=== Succesors ===
next: i2347 
=== Usages ===
v390 
=== Predecessor ===
a2345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2389 #next: i2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2347 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.expectedModCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 1]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2387 
=== Succesors ===
next: v1416 
=== Usages ===
v390 
=== Predecessor ===
i2346 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2387 #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2346 
y: i2347 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2346 y: i2347  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v1412 
falseSuccessor: v1415 
=== Usages ===
=== Predecessor ===
i2347 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v1412 #falseSuccessor: v1415  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v76|DWORD[.] * 8 + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v80|DWORD = MOV [v79|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: [v67|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1421 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2344 
y: i2343 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2344 y: i2343  <|@  <|@
f <@*|@fixed>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v321 
=== Succesors ===
trueSuccessor: v1417 
falseSuccessor: v1420 
=== Usages ===
=== Predecessor ===
v1412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v321 #trueSuccessor: v1417 #falseSuccessor: v1420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2348 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2348  <|@  <|@
f <@~|@floating>@ <|@
tid v2390 <|@
result [v79|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2345 
=== Succesors ===
=== Usages ===
a2348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2348 <|@
result v81|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2390 
=== Succesors ===
next: i2349 
=== Usages ===
a959 v2392 
=== Predecessor ===
v1417 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2390 #next: i2349  <|@  <|@
f <@~|@floating>@ <|@
tid v2392 <|@
result [v81|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2348 
=== Succesors ===
=== Usages ===
i2349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2349 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2392 
=== Succesors ===
next: i2350 
=== Usages ===
v329 v973 
=== Predecessor ===
a2348 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2392 #next: i2350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2350 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.val$offset
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 40]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2391 
=== Succesors ===
next: v1431 
=== Usages ===
i327 
=== Predecessor ===
i2349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2391 #next: v1431  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 44]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2344 
y: i2350 
=== Succesors ===
=== Usages ===
v329 v2394 v973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2344 y: i2350  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i327 
y: i2349 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i327 y: i2349  <|@  <|@
f <@*|@fixed>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v329 
=== Succesors ===
trueSuccessor: v1427 
falseSuccessor: v1430 
=== Usages ===
=== Predecessor ===
i2350 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v329 #trueSuccessor: v1427 #falseSuccessor: v1430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = MOV [v79|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v82|DWORD = MOV [v81|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = ADD (x: v78|DWORD, ~y: [v67|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1436 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1436  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i327 
y: i2349 
=== Succesors ===
=== Usages ===
v1436 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i327 y: i2349  <|@  <|@
f <@*|@fixed>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v973 
=== Succesors ===
trueSuccessor: v1432 
falseSuccessor: v1435 
=== Usages ===
=== Predecessor ===
v1427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v973 #trueSuccessor: v1432 #falseSuccessor: v1435  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
a2351 
=== Predecessor ===
v1436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 61]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2344 
y: i20 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2344 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 62]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2384 
value: i331 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v971 
=== Usages ===
=== Predecessor ===
v1432 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2384 value: i331 stateAfter: - lastLocationAccess: - #next: v971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.lastRet
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 73]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2393 
value: i2344 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2351 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2393 value: i2344 stateAfter: - lastLocationAccess: - #next: a2351  <|@  <|@
f <@~|@floating>@ <|@
tid a959 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2348 
=== Succesors ===
=== Usages ===
v2394 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2348  <|@  <|@
f <@~|@floating>@ <|@
tid v2394 <|@
result [v85|QWORD[.] + v83|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a959 
index: i327 
=== Succesors ===
=== Usages ===
a2351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a959 index: i327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2351 <|@
result v86|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1432 
address: v2394 
=== Succesors ===
next: v275 
=== Usages ===
a1831 
=== Predecessor ===
v971 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1432 address: v2394 #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a2351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 12], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 16], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[.] = MOV [v85|QWORD[.] + v83|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD[.]] destination: B78 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1883 
=== Usages ===
=== Predecessor ===
v1436 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1883  <|@  <|@
f <@~|@floating>@ <|@
tid i1884 <|@
result int[-249371|0xfffffffffffc31e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249371
stableDimension: 0
stamp: i32 [-249371] ⇊00000000fffc31e5 ⇈00000000fffc31e5
stampKind: i32
value: int[-249371|0xfffffffffffc31e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249371|0xfffffffffffc31e5]] destination: B79 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1881 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1881  <|@  <|@
f <@~|@floating>@ <|@
tid i1882 <|@
result int[-247827|0xfffffffffffc37ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -247827
stableDimension: 0
stamp: i32 [-247827] ⇊00000000fffc37ed ⇈00000000fffc37ed
stampKind: i32
value: int[-247827|0xfffffffffffc37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1881 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-247827|0xfffffffffffc37ed]] destination: B80 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1877 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1877  <|@  <|@
f <@~|@floating>@ <|@
tid i1878 <|@
result int[-244755|0xfffffffffffc43ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244755
stableDimension: 0
stamp: i32 [-244755] ⇊00000000fffc43ed ⇈00000000fffc43ed
stampKind: i32
value: int[-244755|0xfffffffffffc43ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-244755|0xfffffffffffc43ed]] destination: B81 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1875 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1875  <|@  <|@
f <@~|@floating>@ <|@
tid i1876 <|@
result int[-244499|0xfffffffffffc44ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244499
stableDimension: 0
stamp: i32 [-244499] ⇊00000000fffc44ed ⇈00000000fffc44ed
stampKind: i32
value: int[-244499|0xfffffffffffc44ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-244499|0xfffffffffffc44ed]] destination: B82 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B84" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597435745697135041
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v2284 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2341 
y: v2262 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2341 y: v2262  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 0.9211923726768046
=== Inputs ===
condition: v2284 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2284 #trueSuccessor: v189 #falseSuccessor: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9211923726768046 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2352 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2352 <|@
result v87|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2393 
=== Succesors ===
next: v2353 
=== Usages ===
?1828 v2452 v2395 v2398 v2400 v2404 
=== Predecessor ===
v189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2393 #next: v2353  <|@  <|@
f <@~|@floating>@ <|@
tid v2452 <|@
result [v87|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2352 
=== Succesors ===
=== Usages ===
v2353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2353 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2452 
=== Succesors ===
next: v1446 
=== Usages ===
v2286 
=== Predecessor ===
a2352 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2452 #next: v1446  <|@  <|@
f <@~|@floating>@ <|@
tid v2286 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2353 
y: v2268 
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2353 y: v2268  <|@  <|@
f <@*|@fixed>@ <|@
tid v1446 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2286 
=== Succesors ===
trueSuccessor: v1442 
falseSuccessor: v1445 
=== Usages ===
=== Predecessor ===
v2353 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2286 #trueSuccessor: v1442 #falseSuccessor: v1445  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD[.] = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP [v87|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2354 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2354 <|@
result v88|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2387 
=== Succesors ===
next: i2355 
=== Usages ===
v2397 v2396 
=== Predecessor ===
v1442 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2387 #next: i2355  <|@  <|@
f <@~|@floating>@ <|@
tid v2397 <|@
result [v88|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2354 
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2355 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2397 
=== Succesors ===
next: i2356 
=== Usages ===
v253 
=== Predecessor ===
a2354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2397 #next: i2356  <|@  <|@
f <@~|@floating>@ <|@
tid v2396 <|@
result [v88|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2354 
=== Succesors ===
=== Usages ===
i2356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2356 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2396 
=== Succesors ===
next: i2357 
=== Usages ===
i312 
=== Predecessor ===
i2355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2396 #next: i2357  <|@  <|@
f <@~|@floating>@ <|@
tid v2395 <|@
result [v87|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2352 
=== Succesors ===
=== Usages ===
i2357 v1031 v1050 v1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2357 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2395 
=== Succesors ===
next: v1456 
=== Usages ===
i312 v1049 v1051 ?1828 v1052 v1040 i480 v1020 v2403 v2407 v1030 
=== Predecessor ===
i2356 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2395 #next: v1456  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: i32
=== Inputs ===
x: i2357 
y: i2356 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2357 y: i2356  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i312 
y: i2355 
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i312 y: i2355  <|@  <|@
f <@*|@fixed>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v1452 
falseSuccessor: v1455 
=== Usages ===
=== Predecessor ===
i2357 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v1452 #falseSuccessor: v1455  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v89|DWORD = MOV [v88|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOV [v88|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v87|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SUB (x: v91|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2358 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2358  <|@  <|@
f <@~|@floating>@ <|@
tid v2398 <|@
result [v87|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2352 
=== Succesors ===
=== Usages ===
a2358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2358 <|@
result v93|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2398 
=== Succesors ===
next: i2359 
=== Usages ===
a1002 v2453 v2399 v2401 v2405 
=== Predecessor ===
v1452 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2398 #next: i2359  <|@  <|@
f <@~|@floating>@ <|@
tid v2399 <|@
result [v93|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2358 
=== Succesors ===
=== Usages ===
i2359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2359 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2399 
=== Succesors ===
next: i2360 
=== Usages ===
v501 
=== Predecessor ===
a2358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2399 #next: i2360  <|@  <|@
f <@~|@floating>@ <|@
tid v2400 <|@
result [v87|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2352 
=== Succesors ===
=== Usages ===
i2360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2360 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2400 
=== Succesors ===
next: v1466 
=== Usages ===
v501 
=== Predecessor ===
i2359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2400 #next: v1466  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2359 
y: i2360 
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2359 y: i2360  <|@  <|@
f <@*|@fixed>@ <|@
tid v1466 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v1462 
falseSuccessor: v1465 
=== Usages ===
=== Predecessor ===
i2360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v1462 #falseSuccessor: v1465  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[.] = MOV [v87|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v93|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|DWORD, y: [v87|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2361 
=== Usages ===
=== Predecessor ===
v1466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2361  <|@  <|@
f <@~|@floating>@ <|@
tid v2453 <|@
result [v93|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2358 
=== Succesors ===
=== Usages ===
v2361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2361 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2453 
=== Succesors ===
next: v518 
=== Usages ===
v2288 v2287 
=== Predecessor ===
v1462 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2453 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2361 
y: v2250 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2361 y: v2250  <|@  <|@
f <@~|@floating>@ <|@
tid i480 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2357 
y: i20 
=== Succesors ===
=== Usages ===
v1053 v1031 v1050 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2357 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v2404 <|@
result [v87|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2352 
=== Succesors ===
=== Usages ===
v1030 v1049 v1052 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2352  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v2287 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
v2361 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2287 #trueSuccessor: v511 #falseSuccessor: v517  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOV [v93|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = INC v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596254823255569644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2362 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2362  <|@  <|@
f <@~|@floating>@ <|@
tid v2401 <|@
result [v93|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2358 
=== Succesors ===
=== Usages ===
a2362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2362 <|@
result v97|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2401 
=== Succesors ===
next: i2363 
=== Usages ===
a1014 v2402 
=== Predecessor ===
v511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2401 #next: i2363  <|@  <|@
f <@~|@floating>@ <|@
tid v2402 <|@
result [v97|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2362 
=== Succesors ===
=== Usages ===
i2363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2363 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2402 
=== Succesors ===
next: v1476 
=== Usages ===
v1020 
=== Predecessor ===
a2362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2402 #next: v1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2357 
y: i2363 
=== Succesors ===
=== Usages ===
v1476 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2357 y: i2363  <|@  <|@
f <@*|@fixed>@ <|@
tid v1476 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1020 
=== Succesors ===
trueSuccessor: v1472 
falseSuccessor: v1475 
=== Usages ===
=== Predecessor ===
i2363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1020 #trueSuccessor: v1472 #falseSuccessor: v1475  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[.] = MOV [v93|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP (x: v91|DWORD, y: [v97|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596254823255569644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1030 
=== Usages ===
a2364 
=== Predecessor ===
v1476 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2404 
value: i2357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v1472 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2404 value: i2357 stateAfter: - lastLocationAccess: - #next: v1031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2395 
value: i480 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2364 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2395 value: i480 stateAfter: - lastLocationAccess: - #next: a2364  <|@  <|@
f <@~|@floating>@ <|@
tid a1014 <|@
result v98|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2362 
=== Succesors ===
=== Usages ===
v2403 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2362  <|@  <|@
f <@~|@floating>@ <|@
tid v2403 <|@
result [v98|QWORD[.] + v91|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1014 
index: i2357 
=== Succesors ===
=== Usages ===
a2364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1014 index: i2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2364 <|@
result v99|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1472 
address: v2403 
=== Succesors ===
next: v801 
=== Usages ===
a1831 
=== Predecessor ===
v1031 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1472 address: v2403 #next: v801  <|@  <|@
f <@*|@fixed>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a2364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = MOV [v98|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|DWORD[.]] destination: B89 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1899 
=== Usages ===
=== Predecessor ===
v1476 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1899  <|@  <|@
f <@~|@floating>@ <|@
tid i1900 <|@
result int[-261403|0xfffffffffffc02e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -261403
stableDimension: 0
stamp: i32 [-261403] ⇊00000000fffc02e5 ⇈00000000fffc02e5
stampKind: i32
value: int[-261403|0xfffffffffffc02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-261403|0xfffffffffffc02e5]] destination: B90 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579623423683638738
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2361 
y: v2254 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2361 y: v2254  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.9931451844203525
=== Inputs ===
condition: v2288 
=== Succesors ===
trueSuccessor: v732 
falseSuccessor: v735 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2288 #trueSuccessor: v732 #falseSuccessor: v735  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203525 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579565364753600368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2365 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2365  <|@  <|@
f <@~|@floating>@ <|@
tid v2405 <|@
result [v93|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2358 
=== Succesors ===
=== Usages ===
a2365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2365 <|@
result v100|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2405 
=== Succesors ===
next: i2366 
=== Usages ===
a1034 v2406 
=== Predecessor ===
v732 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2405 #next: i2366  <|@  <|@
f <@~|@floating>@ <|@
tid v2406 <|@
result [v100|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2365 
=== Succesors ===
=== Usages ===
i2366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2366 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2406 
=== Succesors ===
next: v1486 
=== Usages ===
v1040 
=== Predecessor ===
a2365 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2406 #next: v1486  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2357 
y: i2366 
=== Succesors ===
=== Usages ===
v1486 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2357 y: i2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v1486 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1040 
=== Succesors ===
trueSuccessor: v1482 
falseSuccessor: v1485 
=== Usages ===
=== Predecessor ===
i2366 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1040 #trueSuccessor: v1482 #falseSuccessor: v1485  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = MOV [v93|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP (x: v91|DWORD, y: [v100|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579565364753600368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1049 
=== Usages ===
a2367 
=== Predecessor ===
v1486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2404 
value: i2357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
v1482 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2404 value: i2357 stateAfter: - lastLocationAccess: - #next: v1050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2395 
value: i480 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2367 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2395 value: i480 stateAfter: - lastLocationAccess: - #next: a2367  <|@  <|@
f <@~|@floating>@ <|@
tid a1034 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2365 
=== Succesors ===
=== Usages ===
v2407 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2365  <|@  <|@
f <@~|@floating>@ <|@
tid v2407 <|@
result [v101|QWORD[.] + v91|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1034 
index: i2357 
=== Succesors ===
=== Usages ===
a2367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1034 index: i2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2367 <|@
result v102|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v1482 
address: v2407 
=== Succesors ===
next: v871 
=== Usages ===
a1831 
=== Predecessor ===
v1050 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1482 address: v2407 #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a2367 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[.] = MOV [v101|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|DWORD[.]] destination: B93 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1903 
=== Usages ===
=== Predecessor ===
v1486 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1903  <|@  <|@
f <@~|@floating>@ <|@
tid i1904 <|@
result int[-266523|0xfffffffffffbeee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266523
stableDimension: 0
stamp: i32 [-266523] ⇊00000000fffbeee5 ⇈00000000fffbeee5
stampKind: i32
value: int[-266523|0xfffffffffffbeee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266523|0xfffffffffffbeee5]] destination: B94 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4547059967434371306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a476 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a476  <|@  <|@
f <@~|@floating>@ <|@
tid a1002 <|@
result v103|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a2358 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2358  <|@  <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@56c8722c
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a1002 i2357 
=== Succesors ===
=== Usages ===
a476 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1002 i2357  <|@  <|@
tid ?351 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a2 - a766 a438 i75 a766 i75 
=== Succesors ===
=== Usages ===
?484 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a766 a438 i75 a766 i75  <|@  <|@
tid ?484 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 707
stackSize: 0
=== Inputs ===
outerFrameState: ?351 
values: - 
=== Succesors ===
=== Usages ===
?1828 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?351 values: -  <|@  <|@
tid ?1828 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?484 
values: a2352 i2357 - 
=== Succesors ===
=== Usages ===
a476 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?484 values: a2352 i2357 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a476 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1051 
stateDuring: ?1828 
=== Succesors ===
next: v1052 
=== Usages ===
a1830 
=== Predecessor ===
v735 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1051 stateDuring: ?1828 #next: v1052  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2404 
value: i2357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
a476 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2404 value: i2357 stateAfter: - lastLocationAccess: - #next: v1053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2395 
value: i480 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v1052 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2395 value: i480 stateAfter: - lastLocationAccess: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid a1830 <|@
result v105|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: Compress
stamp: n -
=== Inputs ===
value: a476 
=== Succesors ===
=== Usages ===
a1831 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a476  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v1053 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = UNCOMPRESSPOINTER (input: v93|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v103|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v91|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v87|DWORD[.] v91|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD[.]] destination: B95 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1895 
=== Usages ===
=== Predecessor ===
v1466 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid i1896 <|@
result int[-258579|0xfffffffffffc0ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -258579
stableDimension: 0
stamp: i32 [-258579] ⇊00000000fffc0ded ⇈00000000fffc0ded
stampKind: i32
value: int[-258579|0xfffffffffffc0ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-258579|0xfffffffffffc0ded]] destination: B96 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1891 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1891  <|@  <|@
f <@~|@floating>@ <|@
tid i1892 <|@
result int[-255763|0xfffffffffffc18ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -255763
stableDimension: 0
stamp: i32 [-255763] ⇊00000000fffc18ed ⇈00000000fffc18ed
stampKind: i32
value: int[-255763|0xfffffffffffc18ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-255763|0xfffffffffffc18ed]] destination: B97 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1887 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1887  <|@  <|@
f <@~|@floating>@ <|@
tid i1888 <|@
result int[-252467|0xfffffffffffc25cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -252467
stableDimension: 0
stamp: i32 [-252467] ⇊00000000fffc25cd ⇈00000000fffc25cd
stampKind: i32
value: int[-252467|0xfffffffffffc25cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-252467|0xfffffffffffc25cd]] destination: B98 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B100" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580869699989654467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1491  <|@  <|@
f <@~|@floating>@ <|@
tid v2283 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2341 
y: v2282 
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2341 y: v2282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2283 
=== Succesors ===
trueSuccessor: v1487 
falseSuccessor: v1490 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2283 #trueSuccessor: v1487 #falseSuccessor: v1490  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580869699989654467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2368 
=== Usages ===
=== Predecessor ===
v1491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2368 <|@
result v106|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2387 
=== Succesors ===
next: v2474 
=== Usages ===
v2474 
=== Predecessor ===
v1487 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2387 #next: v2474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
object: a2368 
=== Succesors ===
next: a90 
=== Usages ===
=== Predecessor ===
a2368 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?76 object: a2368 #next: a90  <|@  <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@45972359
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a438 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a438  <|@  <|@
tid ?1827 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a2 - a766 a438 i75 a766 i75 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a766 a438 i75 a766 i75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a90 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 114
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1059 
stateDuring: ?1827 
=== Succesors ===
next: v269 
=== Usages ===
a1829 
=== Predecessor ===
v2474 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1059 stateDuring: ?1827 #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid a1829 <|@
result v108|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: Compress
stamp: n -
=== Inputs ===
value: a90 
=== Succesors ===
=== Usages ===
a1831 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a90  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a90 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v106|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:114] <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[.] = COMPRESSPOINTER (input: v107|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|DWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B78" "B95" "B89" "B93" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612378246685167515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1831 <|@
result v109|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n -
valueDescription: n -
=== Inputs ===
merge: v267 
values: a1829 a2351 a1830 a2364 a2367 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v267 values: a1829 a2351 a1830 a2364 a2367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v269 v275 v286 v801 v871 
=== Succesors ===
next: v930 
=== Usages ===
a1831 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v269 v275 v286 v801 v871 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v2300 v79 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v2300 v79  <|@  <|@
f <@~|@floating>@ <|@
tid v2383 <|@
result [v68|QWORD[.] + v75|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a766 
index: i75 
=== Succesors ===
=== Usages ===
v930 j2216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a766 index: i75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1292 
address: v2383 
value: a1831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2216 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1292 address: v2383 value: a1831 stateAfter: - lastLocationAccess: - #next: j2216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2216 <|@
result [v68|QWORD[.] + v75|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2383 
=== Succesors ===
next: v2222 
=== Usages ===
j2218 
=== Predecessor ===
v930 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2383 #next: v2222  <|@  <|@
f <@~|@floating>@ <|@
tid j2218 <|@
result v110|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2216 
y: i2217 
=== Succesors ===
=== Usages ===
v2454 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2216 y: i2217  <|@  <|@
f <@~|@floating>@ <|@
tid v2454 <|@
result [v110|QWORD[*] + v74|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2218 
index: j2221 
=== Succesors ===
=== Usages ===
v2222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2218 index: j2221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2454 
value: i2223 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
j2216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2454 value: i2223 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120]
stamp: i32
=== Inputs ===
x: i75 
y: i20 
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i75 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
stamp: void
=== Inputs ===
loopBegin: v74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2222 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v68|QWORD[.] + v75|DWORD * 4 + 16], y: v109|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = LEA [v68|QWORD[.] + v75|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[*] = SHR v111|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v110|QWORD[*] + v74|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC v75|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|DWORD] destination: B101 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1905 
=== Usages ===
=== Predecessor ===
v1491 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1905  <|@  <|@
f <@~|@floating>@ <|@
tid i1906 <|@
result int[-269875|0xfffffffffffbe1cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -269875
stableDimension: 0
stamp: i32 [-269875] ⇊00000000fffbe1cd ⇈00000000fffbe1cd
stampKind: i32
value: int[-269875|0xfffffffffffbe1cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-269875|0xfffffffffffbe1cd]] destination: B102 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 0.9440844134263875
=== Inputs ===
condition: v2285 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2285 #trueSuccessor: v143 #falseSuccessor: v149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2369 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2369 <|@
result v113|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2385 
=== Succesors ===
next: i2370 
=== Usages ===
v2408 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2385 #next: i2370  <|@  <|@
f <@~|@floating>@ <|@
tid v2408 <|@
result [v113|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2369 
=== Succesors ===
=== Usages ===
i2370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2370 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2408 
=== Succesors ===
next: i2371 
=== Usages ===
v226 
=== Predecessor ===
a2369 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2408 #next: i2371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2371 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2384 
=== Succesors ===
next: v1504 
=== Usages ===
v226 
=== Predecessor ===
i2370 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2384 #next: v1504  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2370 
y: i2371 
=== Succesors ===
=== Usages ===
v1504 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2370 y: i2371  <|@  <|@
f <@*|@fixed>@ <|@
tid v1504 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1501 
falseSuccessor: v1503 
=== Usages ===
=== Predecessor ===
i2371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1501 #falseSuccessor: v1503  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[.] = MOV [v67|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v114|DWORD = MOV [v113|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v114|DWORD, y: [v67|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a766 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1501 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a766 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1913 
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1913  <|@  <|@
f <@~|@floating>@ <|@
tid i1914 <|@
result int[-274195|0xfffffffffffbd0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274195
stableDimension: 0
stamp: i32 [-274195] ⇊00000000fffbd0ed ⇈00000000fffbd0ed
stampKind: i32
value: int[-274195|0xfffffffffffbd0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1503 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274195|0xfffffffffffbd0ed]] destination: B106 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" "B113" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2341 
y: v2262 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2341 y: v2262  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 0.8652798415056957
=== Inputs ===
condition: v2309 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2309 #trueSuccessor: v155 #falseSuccessor: v158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B112" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2372 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2372 <|@
result v115|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2393 
=== Succesors ===
next: v2373 
=== Usages ===
v2455 v2409 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2393 #next: v2373  <|@  <|@
f <@~|@floating>@ <|@
tid v2455 <|@
result [v115|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2372 
=== Succesors ===
=== Usages ===
v2373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2373 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2455 
=== Succesors ===
next: v1512 
=== Usages ===
v2289 
=== Predecessor ===
a2372 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2455 #next: v1512  <|@  <|@
f <@~|@floating>@ <|@
tid v2289 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2373 
y: v2268 
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2373 y: v2268  <|@  <|@
f <@*|@fixed>@ <|@
tid v1512 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2289 
=== Succesors ===
trueSuccessor: v1509 
falseSuccessor: v1511 
=== Usages ===
=== Predecessor ===
v2373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2289 #trueSuccessor: v1509 #falseSuccessor: v1511  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD[.] = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP [v115|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2374 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2374 <|@
result v116|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2387 
=== Succesors ===
next: i2375 
=== Usages ===
v2411 v2410 
=== Predecessor ===
v1509 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2387 #next: i2375  <|@  <|@
f <@~|@floating>@ <|@
tid v2411 <|@
result [v116|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2374 
=== Succesors ===
=== Usages ===
i2375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2375 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2411 
=== Succesors ===
next: i2376 
=== Usages ===
v234 
=== Predecessor ===
a2374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2411 #next: i2376  <|@  <|@
f <@~|@floating>@ <|@
tid v2410 <|@
result [v116|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2374 
=== Succesors ===
=== Usages ===
i2376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2376 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2410 
=== Succesors ===
next: i2377 
=== Usages ===
i303 
=== Predecessor ===
i2375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2410 #next: i2377  <|@  <|@
f <@~|@floating>@ <|@
tid v2409 <|@
result [v115|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2372 
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2377 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2409 
=== Succesors ===
next: v1520 
=== Usages ===
i303 
=== Predecessor ===
i2376 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2409 #next: v1520  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: i32
=== Inputs ===
x: i2377 
y: i2376 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2377 y: i2376  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i2375 
=== Succesors ===
=== Usages ===
v1520 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i303 y: i2375  <|@  <|@
f <@*|@fixed>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v1519 
falseSuccessor: v1517 
=== Usages ===
=== Predecessor ===
i2377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v1519 #falseSuccessor: v1517  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v117|DWORD = MOV [v116|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOV [v116|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOV [v115|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = SUB (x: v119|DWORD, ~y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1921 
=== Usages ===
=== Predecessor ===
v1520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1921  <|@  <|@
f <@~|@floating>@ <|@
tid i1922 <|@
result int[-278803|0xfffffffffffbbeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278803
stableDimension: 0
stamp: i32 [-278803] ⇊00000000fffbbeed ⇈00000000fffbbeed
stampKind: i32
value: int[-278803|0xfffffffffffbbeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1519 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278803|0xfffffffffffbbeed]] destination: B110 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v1520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a766 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1517 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a766 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid i1920 <|@
result int[-275507|0xfffffffffffbcbcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -275507
stableDimension: 0
stamp: i32 [-275507] ⇊00000000fffbcbcd ⇈00000000fffbcbcd
stampKind: i32
value: int[-275507|0xfffffffffffbcbcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-275507|0xfffffffffffbcbcd]] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B114" "B117" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1524 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1524  <|@  <|@
f <@~|@floating>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2341 
y: v2282 
=== Succesors ===
=== Usages ===
v1524 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2341 y: v2282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2308 
=== Succesors ===
trueSuccessor: v1521 
falseSuccessor: v1523 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2308 #trueSuccessor: v1521 #falseSuccessor: v1523  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2378 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2378 <|@
result v121|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2387 
=== Succesors ===
next: v1528 
=== Usages ===
v1195 
=== Predecessor ===
v1521 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2387 #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
value: a2378 
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1195 
=== Succesors ===
trueSuccessor: v1525 
falseSuccessor: v1527 
=== Usages ===
=== Predecessor ===
a2378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1195 #trueSuccessor: v1525 #falseSuccessor: v1527  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD[.], y: v121|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a766 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1525 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a766 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1917 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1917  <|@  <|@
f <@~|@floating>@ <|@
tid i1918 <|@
result int[-280083|0xfffffffffffbb9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -280083
stableDimension: 0
stamp: i32 [-280083] ⇊00000000fffbb9ed ⇈00000000fffbb9ed
stampKind: i32
value: int[-280083|0xfffffffffffbb9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-280083|0xfffffffffffbb9ed]] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1915 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1915  <|@  <|@
f <@~|@floating>@ <|@
tid i1916 <|@
result int[-279091|0xfffffffffffbbdcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279091
stableDimension: 0
stamp: i32 [-279091] ⇊00000000fffbbdcd ⇈00000000fffbbdcd
stampKind: i32
value: int[-279091|0xfffffffffffbbdcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1523 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279091|0xfffffffffffbbdcd]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B73" "B82" "B81" "B80" "B79" "B98" "B97" "B96" "B90" "B94" "B102" "B106" "B117" "B116" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 2373397003624251392
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1866 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-280083 - -240139] ⇊00000000fff800c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1863 
values: i1872 i1876 i1878 i1882 i1884 i1888 i1892 i1896 i1900 i1904 i1906 i1914 i1916 i1918 i1920 i1922 
=== Succesors ===
=== Usages ===
v1868 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1863 values: i1872 i1876 i1878 i1882 i1884 i1888 i1892 i1896 i1900 i1904 i1906 i1914 i1916 i1918 i1920 i1922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1871 v1875 v1877 v1881 v1883 v1887 v1891 v1895 v1899 v1903 v1905 v1913 v1915 v1917 v1919 v1921 
=== Succesors ===
next: v1868 
=== Usages ===
i1866 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1871 v1875 v1877 v1881 v1883 v1887 v1891 v1895 v1899 v1903 v1905 v1913 v1915 v1917 v1919 v1921 #next: v1868  <|@  <|@
f <@*|@fixed>@ <|@
tid v1868 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
actionAndReason: i1866 
speculation: a1837 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1863 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?76 actionAndReason: i1866 speculation: a1837  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1932 
=== Usages ===
=== Predecessor ===
v2305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1932  <|@  <|@
f <@~|@floating>@ <|@
tid a1934 <|@
result v123|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1127995644
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1127995644]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1927 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1933 <|@
result int[-235803|0xfffffffffffc66e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235803
stableDimension: 0
stamp: i32 [-235803] ⇊00000000fffc66e5 ⇈00000000fffc66e5
stampKind: i32
value: int[-235803|0xfffffffffffc66e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1926 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1923 
=== Predecessor ===
v1391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1127995644] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235803|0xfffffffffffc66e5], v123|QWORD[.]] destination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1929 
=== Usages ===
=== Predecessor ===
v1388 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1929  <|@  <|@
f <@~|@floating>@ <|@
tid a1931 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@764582310
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@764582310]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1927 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1930 <|@
result int[-234812|0xfffffffffffc6ac4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -234812
stableDimension: 0
stamp: i32 [-234812] ⇊00000000fffc6ac4 ⇈00000000fffc6ac4
stampKind: i32
value: int[-234812|0xfffffffffffc6ac4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1926 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1923 
=== Predecessor ===
v1387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@764582310] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-234812|0xfffffffffffc6ac4], v124|QWORD[.]] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1926 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-325387 - -234812] ⇊00000000fff800c4 ⇈00000000ffff6ef5
valueDescription: i32
=== Inputs ===
merge: v1923 
values: i1930 i1933 
=== Succesors ===
=== Usages ===
v1928 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1923 values: i1930 i1933  <|@  <|@
f <@~|@floating>@ <|@
tid a1927 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1923 
values: a1931 a1934 
=== Succesors ===
=== Usages ===
v1928 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1923 values: a1931 a1934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1929 v1932 
=== Succesors ===
next: v1928 
=== Usages ===
i1926 a1927 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1929 v1932 #next: v1928  <|@  <|@
f <@*|@fixed>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?436 
actionAndReason: i1926 
speculation: a1927 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1923 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?436 actionAndReason: i1926 speculation: a1927  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|DWORD, v126|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: v67|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1849 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1849  <|@  <|@
f <@~|@floating>@ <|@
tid i1850 <|@
result int[-302387|0xfffffffffffb62cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302387
stableDimension: 0
stamp: i32 [-302387] ⇊00000000fffb62cd ⇈00000000fffb62cd
stampKind: i32
value: int[-302387|0xfffffffffffb62cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1834 
=== Predecessor ===
v1323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-302387|0xfffffffffffb62cd]] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B3" "B122" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1838 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-303371 - -232203] ⇊00000000fff840c5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v1834 
values: i1848 i1850 i1852 
=== Succesors ===
=== Usages ===
v1840 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1834 values: i1848 i1850 i1852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1847 v1849 v1851 
=== Succesors ===
next: v1840 
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1847 v1849 v1851 #next: v1840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1838 
speculation: a1837 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1834 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1838 speculation: a1837  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v127|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v127|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4d6e45bf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|DWORD] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 2.7694693696687716E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B35" 
    xhandlers
    flags 
    probability 4607179924283773157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606676420936397924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v30|DWORD = MOV [v29|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606593740406052892
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE v34|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v36|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*]], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v34|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 12], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 20], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 28], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 32], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.], v28|QWORD[.]] destination: B32 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B120" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD[.], v68|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV [v68|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v69|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOV [v68|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV v70|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = DEC v71|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B119" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v70|DWORD, y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" 
    successors "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: v67|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] - - 
>@ <|@ instruction v73|DWORD = MOV [v67|QWORD[.] + 8] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612378246685167515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9005485075074715 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v67|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v67|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v76|DWORD[.] * 8 + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v80|DWORD = MOV [v79|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: [v67|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = MOV [v79|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v82|DWORD = MOV [v81|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = ADD (x: v78|DWORD, ~y: [v67|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 12], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 16], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[.] = MOV [v85|QWORD[.] + v83|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD[.]] destination: B78 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B78" "B95" "B89" "B93" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612378246685167515
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v68|QWORD[.] + v75|DWORD * 4 + 16], y: v109|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = LEA [v68|QWORD[.] + v75|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[*] = SHR v111|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v110|QWORD[*] + v74|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC v75|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|DWORD] destination: B101 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B101" 
    successors "B71" "B103" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614630046498852763
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6976487138263665 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B84" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597435745697135041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9211923726768046 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD[.] = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP [v87|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v89|DWORD = MOV [v88|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOV [v88|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v87|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SUB (x: v91|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[.] = MOV [v87|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v93|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|DWORD, y: [v87|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOV [v93|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = INC v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596254823255569644
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[.] = MOV [v93|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP (x: v91|DWORD, y: [v97|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596254823255569644
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = MOV [v98|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|DWORD[.]] destination: B89 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B100" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580869699989654467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580869699989654467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v106|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:114] <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[.] = COMPRESSPOINTER (input: v107|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|DWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579623423683638738
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203525 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579565364753600368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = MOV [v93|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP (x: v91|DWORD, y: [v100|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579565364753600368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[.] = MOV [v101|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|DWORD[.]] destination: B93 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4547059967434371306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = UNCOMPRESSPOINTER (input: v93|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v103|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v91|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v87|DWORD[.] v91|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD[.]] destination: B95 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[.] = MOV [v67|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v114|DWORD = MOV [v113|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v114|DWORD, y: [v67|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" "B113" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B112" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD[.] = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP [v115|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v117|DWORD = MOV [v116|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOV [v116|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOV [v115|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = SUB (x: v119|DWORD, ~y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588216874593798165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B35" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v43|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: [v46|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582692156624931946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4582692156624931946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B46 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4587063766123665126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v52|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = LEA [v55|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v57|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [v59|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*]], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = COMPRESSPOINTER (input: v58|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 16], y: v61|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 20], y: v62|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [v63|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 24], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 36], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 44], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 48], y: v43|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 52], y: v43|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v42|QWORD[.]] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4582567629803775914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5252282556463239 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4578412705275642303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578412705275642303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576595897893070561
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v129|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - v1|QWORD[.] - v42|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v42|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B114" "B117" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD[.], y: v121|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B122" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v10|DWORD = MOV [v9|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4557560643555791360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v128|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: v45|DWORD v51|DWORD 
locals: v43|DWORD[.] v45|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: v43|DWORD[.] v45|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: v0|QWORD[.] 
java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
locals: v0|QWORD[.] 
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - v1|QWORD[.] - v42|QWORD[.] - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOV [v13|DWORD * 8 + 224] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD[.], y: v14|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL v11|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND v18|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = ADD (x: v20|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553693305219744456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 8], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[16|0x10]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553693305219744456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + v24|QWORD * 1], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558196904847114952
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553693305219744456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v27|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553458733082124626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535191782419552387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523649650915936459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293907|0xfffffffffffb83ed]] destination: B45 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-247827|0xfffffffffffc37ed]] destination: B80 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B73" "B82" "B81" "B80" "B79" "B98" "B97" "B96" "B90" "B94" "B102" "B106" "B117" "B116" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 2373397003624251392
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-302387|0xfffffffffffb62cd]] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B3" "B122" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v127|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v127|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279091|0xfffffffffffbbdcd]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -281395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-298259|0xfffffffffffb72ed]] destination: B3 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278803|0xfffffffffffbbeed]] destination: B110 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -505441 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291379|0xfffffffffffb8dcd]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291603|0xfffffffffffb8ced]] destination: B41 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-295187|0xfffffffffffb7eed]] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288787|0xfffffffffffb97ed]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-285459|0xfffffffffffba4ed]] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-275507|0xfffffffffffbcbcd]] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-255763|0xfffffffffffc18ed]] destination: B97 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-301587|0xfffffffffffb65ed]] destination: B7 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-261403|0xfffffffffffc02e5]] destination: B90 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-258579|0xfffffffffffc0ded]] destination: B96 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@764582310] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-234812|0xfffffffffffc6ac4], v124|QWORD[.]] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|DWORD, v126|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: v67|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-252467|0xfffffffffffc25cd]] destination: B98 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284691|0xfffffffffffba7ed]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-244499|0xfffffffffffc44ed]] destination: B82 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-269875|0xfffffffffffbe1cd]] destination: B102 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-289555|0xfffffffffffb94ed]] destination: B39 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-241427|0xfffffffffffc50ed]] destination: B73 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294451|0xfffffffffffb81cd]] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1127995644] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235803|0xfffffffffffc66e5], v123|QWORD[.]] destination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274195|0xfffffffffffbd0ed]] destination: B106 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249371|0xfffffffffffc31e5]] destination: B79 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-244755|0xfffffffffffc43ed]] destination: B81 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-280083|0xfffffffffffbb9ed]] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294163|0xfffffffffffb82ed]] destination: B50 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266523|0xfffffffffffbeee5]] destination: B94 -> B118 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: istore_2      
     5: aload_1       
     6: arraylength   
     7: iload_2       
     8: if_icmplt     15
    11: aload_1       
    12: goto          32
    15: aload_1       
    16: invokevirtual #8          // java.lang.Object.getClass:()java.lang.Class
    19: invokevirtual #9          // java.lang.Class.getComponentType:()java.lang.Class
    22: iload_2       
    23: invokestatic  #10         // java.lang.reflect.Array.newInstance:(java.lang.Class, int)java.lang.Object
    26: checkcast     #14         // java.lang.Object[]
    29: checkcast     #14         // java.lang.Object[]
    32: astore_3      
    33: aload_0       
    34: invokevirtual #2          // iterator:()java.util.Iterator
    37: astore        4
    39: iconst_0      
    40: istore        5
    42: iload         5
    44: aload_3       
    45: arraylength   
    46: if_icmpge     126
    49: aload         4
    51: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    56: ifne          109
    59: aload_1       
    60: aload_3       
    61: if_acmpne     72
    64: aload_3       
    65: iload         5
    67: aconst_null   
    68: aastore       
    69: goto          107
    72: aload_1       
    73: arraylength   
    74: iload         5
    76: if_icmpge     86
    79: aload_3       
    80: iload         5
    82: invokestatic  #6          // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    85: areturn       
    86: aload_3       
    87: iconst_0      
    88: aload_1       
    89: iconst_0      
    90: iload         5
    92: invokestatic  #11         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    95: aload_1       
    96: arraylength   
    97: iload         5
    99: if_icmple     107
   102: aload_1       
   103: iload         5
   105: aconst_null   
   106: aastore       
   107: aload_1       
   108: areturn       
   109: aload_3       
   110: iload         5
   112: aload         4
   114: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
   119: aastore       
   120: iinc          
   123: goto          42
   126: aload         4
   128: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
   133: ifeq          145
   136: aload_3       
   137: aload         4
   139: invokestatic  #7          // finishToArray:(java.lang.Object[], java.util.Iterator)java.lang.Object[]
   142: goto          146
   145: aload_3       
   146: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4d6e45bf slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r14|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 2.7694693696687716E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B35" 
    xhandlers
    flags 
    probability 4607179924283773157
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606676420936397924
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  248  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction CMP [r13|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  268  <|@ instruction r11|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606593740406052892
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr  310  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr  318  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction MOV (x: [rsi|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  332  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B32 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B120" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  630  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  636  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r8|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  644  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction r9|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  650  <|@ instruction CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B119" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" 
    successors "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: r10|QWORD[.] 
locals: - rdx|QWORD[.] - r11|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:37] <|@ <|@
      nr  672  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  676  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612378246685167515
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  690  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 0.9005485075074715 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  698  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr  700  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  702  <|@ instruction CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 32] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  724  <|@ instruction CMP (x: rbp|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  740  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, ~y: [r10|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr  742  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction rdi|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  762  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B78 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B78" "B95" "B89" "B93" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612378246685167515
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1060  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1062  <|@ instruction MOVB (x: [rsi|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1064  <|@ instruction rsi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1066  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B101 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B101" 
    successors "B71" "B103" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614630046498852763
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  682  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.6976487138263665 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B84" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597435745697135041
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  824  <|@ instruction BRANCH trueDestinationProbability: 0.9211923726768046 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction rdi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rdi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP [rdi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr  832  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  838  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  842  <|@ instruction rbp|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  844  <|@ instruction r13|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  854  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  856  <|@ instruction CMP (x: rax|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  858  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction r13|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  868  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596254823255569644
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  874  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr  876  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596254823255569644
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction MOV (x: [rdi|DWORD[.] * 8 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction MOV (x: [rdi|DWORD[.] * 8 + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  886  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  888  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  890  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B89 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B100" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580869699989654467
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr 1030  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580869699989654467
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1036  <|@ st <@st|@reference-map: [r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1040  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: stack:64|QWORD[.] stack:36|DWORD 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:114] <|@ <|@
      nr 1042  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1050  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579623423683638738
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  912  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203525 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579565364753600368
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  916  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  918  <|@ st <@st|@reference-map: [rsi:0, rdi:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr  920  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579565364753600368
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction MOV (x: [rdi|DWORD[.] * 8 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [rdi|DWORD[.] * 8 + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  930  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  932  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  936  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B93 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4547059967434371306
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction stack:68|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction stack:72|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  962  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ instruction stack:76|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  966  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:72|DWORD[.] stack:76|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: stack:64|QWORD[.] stack:36|DWORD 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114] <|@ <|@
      nr  968  <|@ instruction rdi|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction MOV (x: [rdi|DWORD[.] * 8 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  974  <|@ instruction r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[.] * 8 + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  986  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B95 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1096  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1100  <|@ st <@st|@reference-map: [r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr 1102  <|@ instruction CMP (x: rax|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1104  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction CMP (x: rax|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" "B113" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr 1130  <|@ instruction BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B112" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1134  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1136  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr 1138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1142  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1144  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr 1146  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1148  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1150  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1152  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1154  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588216874593798165
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B35" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  368  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP [r13|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  388  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr  404  <|@ instruction CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  412  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582692156624931946
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  420  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4582692156624931946
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B46 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  488  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  490  <|@ instruction r8|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  492  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4587063766123665126
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 248] instr: 0 <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r8|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD <|@ <|@
      nr  540  <|@ instruction r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr  544  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  550  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  552  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  556  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  560  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr  562  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  568  <|@ instruction MOV (x: [rsi|QWORD[*] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction MOV [rsi|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [rsi|QWORD[*] + 44], y: r10|DWORD) size: DWORD <|@ <|@
      nr  574  <|@ instruction MOV (x: [rsi|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  576  <|@ instruction MOV (x: [rsi|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  578  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4582567629803775914
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 0.5252282556463239 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4578412705275642303
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578412705275642303
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction stack:36|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576595897893070561
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  280  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - stack:32|QWORD[.] - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr  620  <|@ instruction r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B114" "B117" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1190  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr 1192  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1196  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1198  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1200  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1204  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B122" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4557560643555791360
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  506  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  510  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: stack:40|DWORD stack:36|DWORD 
locals: r14|DWORD[.] stack:40|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: r14|DWORD[.] stack:40|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: r13|QWORD[.] 
java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
locals: r13|QWORD[.] 
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - stack:32|QWORD[.] - stack:56|QWORD[.] - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34] <|@ <|@
      nr  514  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD[.] = MOV [rsi|DWORD * 8 + 224] size: QWORD <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void] <|@ <|@
      nr  102  <|@ instruction CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr  122  <|@ instruction r11|DWORD = AND r11|DWORD y: -8 size: DWORD <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553693305219744456
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  162  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD + 8], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553693305219744456
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [rcx|QWORD + rsi|QWORD * 1], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558196904847114952
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553693305219744456
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  198  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553458733082124626
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535191782419552387
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523649650915936459
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  136  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  140  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: stack:36|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4] <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-293907|0xfffffffffffb83ed] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B45 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = MOVE input: int[-247827|0xfffffffffffc37ed] <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B80 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B73" "B82" "B81" "B80" "B79" "B98" "B97" "B96" "B90" "B94" "B102" "B106" "B117" "B116" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 2373397003624251392
    begin_IR
      LIR
      nr 1232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1238  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - rdx|QWORD[.] - r9|QWORD[.] r10|QWORD[.] r8|DWORD 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction r10|DWORD = MOVE input: int[-302387|0xfffffffffffb62cd] <|@ <|@
      nr 1272  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B3" "B122" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1278  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1280  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction r11|DWORD = MOVE input: int[-279091|0xfffffffffffbbdcd] <|@ <|@
      nr 1224  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1226  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 668] y: -281395 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: stack:36|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-298259|0xfffffffffffb72ed] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1158  <|@ instruction r11|DWORD = MOVE input: int[-278803|0xfffffffffffbbeed] <|@ <|@
      nr 1160  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1164  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B110 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV [r15|QWORD + 668] y: -505441 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: r10|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-291379|0xfffffffffffb8dcd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|DWORD = MOVE input: int[-291603|0xfffffffffffb8ced] <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B41 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-295187|0xfffffffffffb7eed] <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction r10|DWORD = MOVE input: int[-288787|0xfffffffffffb97ed] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r10|DWORD = MOVE input: int[-285459|0xfffffffffffba4ed] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1176  <|@ instruction r11|DWORD = MOVE input: int[-275507|0xfffffffffffbcbcd] <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1184  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r11|DWORD = MOVE input: int[-255763|0xfffffffffffc18ed] <|@ <|@
      nr 1012  <|@ instruction JUMP ~[] destination: B97 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = MOVE input: int[-301587|0xfffffffffffb65ed] <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-261403|0xfffffffffffc02e5] <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B90 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction r11|DWORD = MOVE input: int[-258579|0xfffffffffffc0ded] <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B96 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@764582310] <|@ <|@
      nr 1254  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction r11|DWORD = MOVE input: int[-234812|0xfffffffffffc6ac4] <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr 1266  <|@ st <@st|@reference-map: [r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: r10|QWORD[.] 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-252467|0xfffffffffffc25cd] <|@ <|@
      nr 1024  <|@ instruction JUMP ~[] destination: B98 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r10|DWORD = MOVE input: int[-284691|0xfffffffffffba7ed] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r11|DWORD = MOVE input: int[-244499|0xfffffffffffc44ed] <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B82 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction r11|DWORD = MOVE input: int[-269875|0xfffffffffffbe1cd] <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B102 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r10|DWORD = MOVE input: int[-289555|0xfffffffffffb94ed] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction r11|DWORD = MOVE input: int[-241427|0xfffffffffffc50ed] <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B73 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-294451|0xfffffffffffb81cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1127995644] <|@ <|@
      nr 1244  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction r11|DWORD = MOVE input: int[-235803|0xfffffffffffc66e5] <|@ <|@
      nr 1248  <|@ instruction JUMP ~[] destination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: int[-274195|0xfffffffffffbd0ed] <|@ <|@
      nr 1116  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction JUMP ~[] destination: B106 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r11|DWORD = MOVE input: int[-249371|0xfffffffffffc31e5] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B79 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction r11|DWORD = MOVE input: int[-244755|0xfffffffffffc43ed] <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B81 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1210  <|@ instruction r11|DWORD = MOVE input: int[-280083|0xfffffffffffbb9ed] <|@ <|@
      nr 1212  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-294163|0xfffffffffffb82ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B50 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction r11|DWORD = MOVE input: int[-266523|0xfffffffffffbeee5] <|@ <|@
      nr  944  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B94 -> B118 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: istore_2      
     5: aload_1       
     6: arraylength   
     7: iload_2       
     8: if_icmplt     15
    11: aload_1       
    12: goto          32
    15: aload_1       
    16: invokevirtual #8          // java.lang.Object.getClass:()java.lang.Class
    19: invokevirtual #9          // java.lang.Class.getComponentType:()java.lang.Class
    22: iload_2       
    23: invokestatic  #10         // java.lang.reflect.Array.newInstance:(java.lang.Class, int)java.lang.Object
    26: checkcast     #14         // java.lang.Object[]
    29: checkcast     #14         // java.lang.Object[]
    32: astore_3      
    33: aload_0       
    34: invokevirtual #2          // iterator:()java.util.Iterator
    37: astore        4
    39: iconst_0      
    40: istore        5
    42: iload         5
    44: aload_3       
    45: arraylength   
    46: if_icmpge     126
    49: aload         4
    51: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    56: ifne          109
    59: aload_1       
    60: aload_3       
    61: if_acmpne     72
    64: aload_3       
    65: iload         5
    67: aconst_null   
    68: aastore       
    69: goto          107
    72: aload_1       
    73: arraylength   
    74: iload         5
    76: if_icmpge     86
    79: aload_3       
    80: iload         5
    82: invokestatic  #6          // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    85: areturn       
    86: aload_3       
    87: iconst_0      
    88: aload_1       
    89: iconst_0      
    90: iload         5
    92: invokestatic  #11         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    95: aload_1       
    96: arraylength   
    97: iload         5
    99: if_icmple     107
   102: aload_1       
   103: iload         5
   105: aconst_null   
   106: aastore       
   107: aload_1       
   108: areturn       
   109: aload_3       
   110: iload         5
   112: aload         4
   114: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
   119: aastore       
   120: iinc          
   123: goto          42
   126: aload         4
   128: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
   133: ifeq          145
   136: aload_3       
   137: aload         4
   139: invokestatic  #7          // finishToArray:(java.lang.Object[], java.util.Iterator)java.lang.Object[]
   142: goto          146
   145: aload_3       
   146: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4d6e45bf slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r14|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 2.7694693696687716E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B36" 
    xhandlers
    flags 
    probability 4607179924283773157
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606676420936397924
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  248  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction CMP [r13|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  268  <|@ instruction r11|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606593740406052892
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr  310  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr  318  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction MOV (x: [rsi|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  332  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B32 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B120" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  630  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  636  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r8|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  644  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction r9|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  650  <|@ instruction CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B65 -> B69 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" "B119" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B67 -> B69 falseDestination: B67 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: r10|QWORD[.] 
locals: - rdx|QWORD[.] - r11|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:37] <|@ <|@
      nr  672  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  676  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612378246685167515
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  690  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 0.9005485075074715 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  698  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr  700  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  702  <|@ instruction CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 32] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  724  <|@ instruction CMP (x: rbp|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  740  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, ~y: [r10|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr  742  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611861513847255039
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction rdi|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  762  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B78 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B78" "B95" "B89" "B93" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612378246685167515
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1060  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1062  <|@ instruction MOVB (x: [rsi|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1064  <|@ instruction rsi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1066  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B101 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B101" 
    successors "B71" "B103" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614630046498852763
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  682  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.6976487138263665 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B84" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597435745697135041
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  824  <|@ instruction BRANCH trueDestinationProbability: 0.9211923726768046 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction rdi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rdi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP [rdi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr  832  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  838  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  842  <|@ instruction rbp|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  844  <|@ instruction r13|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  854  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  856  <|@ instruction CMP (x: rax|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  858  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596784185874481225
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction r13|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  868  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596254823255569644
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  874  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr  876  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596254823255569644
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction MOV (x: [rdi|DWORD[.] * 8 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction MOV (x: [rdi|DWORD[.] * 8 + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  886  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  888  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  890  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B89 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B100" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580869699989654467
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr 1030  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580869699989654467
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1036  <|@ st <@st|@reference-map: [r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1040  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: stack:64|QWORD[.] stack:36|DWORD 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:114] <|@ <|@
      nr 1042  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579623423683638738
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  912  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203525 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579565364753600368
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  916  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  918  <|@ st <@st|@reference-map: [rsi:0, rdi:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr  920  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4579565364753600368
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction MOV (x: [rdi|DWORD[.] * 8 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [rdi|DWORD[.] * 8 + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  930  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  932  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B93 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4547059967434371306
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction stack:68|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction stack:72|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  962  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ instruction stack:76|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  966  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:72|DWORD[.] stack:76|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: stack:64|QWORD[.] stack:36|DWORD 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114] <|@ <|@
      nr  968  <|@ instruction rdi|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction MOV (x: [rdi|DWORD[.] * 8 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  974  <|@ instruction r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[.] * 8 + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B95 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr 1096  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1100  <|@ st <@st|@reference-map: [r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr 1102  <|@ instruction CMP (x: rax|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1104  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4606678775970303160
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction CMP (x: rax|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" "B113" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr 1130  <|@ instruction BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B112" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1134  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1136  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr 1138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1142  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1144  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr 1146  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1148  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1150  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1152  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1154  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4588219106311222400
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  368  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP [r13|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  388  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr  404  <|@ instruction CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  412  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582692156624931946
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  420  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4582692156624931946
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B46 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  488  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  490  <|@ instruction r8|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  492  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4587063766123665126
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 248] instr: 0 <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4587133492841724426
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r8|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD <|@ <|@
      nr  540  <|@ instruction r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr  544  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  550  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  552  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  556  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  560  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr  562  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  568  <|@ instruction MOV (x: [rsi|QWORD[*] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction MOV [rsi|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [rsi|QWORD[*] + 44], y: r10|DWORD) size: DWORD <|@ <|@
      nr  574  <|@ instruction MOV (x: [rsi|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  576  <|@ instruction MOV (x: [rsi|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  578  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4582567629803775914
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 0.5252282556463239 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4578412705275642303
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578412705275642303
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction stack:36|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4577715355077168533
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576595897893070561
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  280  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - stack:32|QWORD[.] - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr  620  <|@ instruction r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B114" "B117" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1190  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr 1192  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1196  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1198  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1200  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1204  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B122" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4575334929909666739
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4557560643555791360
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  506  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  510  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: stack:40|DWORD stack:36|DWORD 
locals: r14|DWORD[.] stack:40|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: r14|DWORD[.] stack:40|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: r13|QWORD[.] 
java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
locals: r13|QWORD[.] 
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - stack:32|QWORD[.] - stack:56|QWORD[.] - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34] <|@ <|@
      nr  514  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD[.] = MOV [rsi|DWORD * 8 + 224] size: QWORD <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void] <|@ <|@
      nr  102  <|@ instruction CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr  122  <|@ instruction r11|DWORD = AND r11|DWORD y: -8 size: DWORD <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553693305219744456
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  162  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD + 8], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553693305219744456
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [rcx|QWORD + rsi|QWORD * 1], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558196904847114952
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553693305219744456
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  198  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553744392912426714
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553458733082124626
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535191782419552387
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523649650915936459
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3 <|@ <|@
      nr  136  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  140  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: stack:36|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4] <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-293907|0xfffffffffffb83ed] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B45 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = MOVE input: int[-247827|0xfffffffffffc37ed] <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B80 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B73" "B82" "B81" "B80" "B79" "B98" "B97" "B96" "B90" "B94" "B102" "B106" "B117" "B116" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 2373397003624251392
    begin_IR
      LIR
      nr 1232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1238  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - rdx|QWORD[.] - r9|QWORD[.] r10|QWORD[.] r8|DWORD 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction r10|DWORD = MOVE input: int[-302387|0xfffffffffffb62cd] <|@ <|@
      nr 1272  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B3" "B122" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1278  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1280  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction r11|DWORD = MOVE input: int[-279091|0xfffffffffffbbdcd] <|@ <|@
      nr 1224  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1226  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 668] y: -281395 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: stack:36|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-298259|0xfffffffffffb72ed] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1158  <|@ instruction r11|DWORD = MOVE input: int[-278803|0xfffffffffffbbeed] <|@ <|@
      nr 1160  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1164  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B110 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV [r15|QWORD + 668] y: -505441 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: r10|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-291379|0xfffffffffffb8dcd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|DWORD = MOVE input: int[-291603|0xfffffffffffb8ced] <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B41 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-295187|0xfffffffffffb7eed] <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction r10|DWORD = MOVE input: int[-288787|0xfffffffffffb97ed] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r10|DWORD = MOVE input: int[-285459|0xfffffffffffba4ed] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1176  <|@ instruction r11|DWORD = MOVE input: int[-275507|0xfffffffffffbcbcd] <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1184  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r11|DWORD = MOVE input: int[-255763|0xfffffffffffc18ed] <|@ <|@
      nr 1012  <|@ instruction JUMP ~[] destination: B97 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = MOVE input: int[-301587|0xfffffffffffb65ed] <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-261403|0xfffffffffffc02e5] <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B90 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction r11|DWORD = MOVE input: int[-258579|0xfffffffffffc0ded] <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B96 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@764582310] <|@ <|@
      nr 1254  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction r11|DWORD = MOVE input: int[-234812|0xfffffffffffc6ac4] <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr 1266  <|@ st <@st|@reference-map: [r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: r10|QWORD[.] 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-252467|0xfffffffffffc25cd] <|@ <|@
      nr 1024  <|@ instruction JUMP ~[] destination: B98 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r10|DWORD = MOVE input: int[-284691|0xfffffffffffba7ed] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r11|DWORD = MOVE input: int[-244499|0xfffffffffffc44ed] <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B82 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction r11|DWORD = MOVE input: int[-269875|0xfffffffffffbe1cd] <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B102 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r10|DWORD = MOVE input: int[-289555|0xfffffffffffb94ed] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction r11|DWORD = MOVE input: int[-241427|0xfffffffffffc50ed] <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B73 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-294451|0xfffffffffffb81cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1127995644] <|@ <|@
      nr 1244  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction r11|DWORD = MOVE input: int[-235803|0xfffffffffffc66e5] <|@ <|@
      nr 1248  <|@ instruction JUMP ~[] destination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: int[-274195|0xfffffffffffbd0ed] <|@ <|@
      nr 1116  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction JUMP ~[] destination: B106 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r11|DWORD = MOVE input: int[-249371|0xfffffffffffc31e5] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B79 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction r11|DWORD = MOVE input: int[-244755|0xfffffffffffc43ed] <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B81 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1210  <|@ instruction r11|DWORD = MOVE input: int[-280083|0xfffffffffffbb9ed] <|@ <|@
      nr 1212  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-294163|0xfffffffffffb82ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B50 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction r11|DWORD = MOVE input: int[-266523|0xfffffffffffbeee5] <|@ <|@
      nr  944  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B94 -> B118 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: istore_2      
     5: aload_1       
     6: arraylength   
     7: iload_2       
     8: if_icmplt     15
    11: aload_1       
    12: goto          32
    15: aload_1       
    16: invokevirtual #8          // java.lang.Object.getClass:()java.lang.Class
    19: invokevirtual #9          // java.lang.Class.getComponentType:()java.lang.Class
    22: iload_2       
    23: invokestatic  #10         // java.lang.reflect.Array.newInstance:(java.lang.Class, int)java.lang.Object
    26: checkcast     #14         // java.lang.Object[]
    29: checkcast     #14         // java.lang.Object[]
    32: astore_3      
    33: aload_0       
    34: invokevirtual #2          // iterator:()java.util.Iterator
    37: astore        4
    39: iconst_0      
    40: istore        5
    42: iload         5
    44: aload_3       
    45: arraylength   
    46: if_icmpge     126
    49: aload         4
    51: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    56: ifne          109
    59: aload_1       
    60: aload_3       
    61: if_acmpne     72
    64: aload_3       
    65: iload         5
    67: aconst_null   
    68: aastore       
    69: goto          107
    72: aload_1       
    73: arraylength   
    74: iload         5
    76: if_icmpge     86
    79: aload_3       
    80: iload         5
    82: invokestatic  #6          // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    85: areturn       
    86: aload_3       
    87: iconst_0      
    88: aload_1       
    89: iconst_0      
    90: iload         5
    92: invokestatic  #11         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    95: aload_1       
    96: arraylength   
    97: iload         5
    99: if_icmple     107
   102: aload_1       
   103: iload         5
   105: aconst_null   
   106: aastore       
   107: aload_1       
   108: areturn       
   109: aload_3       
   110: iload         5
   112: aload         4
   114: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
   119: aastore       
   120: iinc          
   123: goto          42
   126: aload         4
   128: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
   133: ifeq          145
   136: aload_3       
   137: aload         4
   139: invokestatic  #7          // finishToArray:(java.lang.Object[], java.util.Iterator)java.lang.Object[]
   142: goto          146
   145: aload_3       
   146: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404c8bee48895424308502458b75084181feaddeadde0f85d0030000418b75208b34f50c000000413b750c0f851f080000418b7518448bd6443b520c0f8f950600004181feaddeadde0f852b0400004c8bf2418b7520448b14f50c000000453b550c0f851409000041837d18000f8c43080000498b77604c8d5e284d3b5f700f875a0500004d895f600f1886e80000004c8bde49b8addeaddeaddeadde4d8b80a80000004c8906c74608addeadde49b800000000ffffffff4c89460c4489561444896618458b55144489561c49c1ed0344896e204d8bd34d8bde4c895424184c895c2410418b730881feaddeadde0f8549080000458b430c4489442424418bf04c8bce49ffc9493bf10f87090000004585c00f85cd080000458b4a0844894c242848b900e01b170100000041bb00000000e9c20000006666660f1f8400000000004181f9addeadde0f85bd000000418b72208b3cf518000000418b420c3bc70f845d0800008b34f5200000008b2cf50c000000413b6a140f850a0800003bf80f8eaa0800008b34f5140000008b3cf50c0000008be841036a1c3bfd0f8e3a0600003bfd0f866e0800008bf8ffc741897a0c4189421048c1e6038b74ae1048b900e01b1701000000458bd34c8b5c241043897493104b8d74931048c1ee094488240e418bf2ffc6448b4c2428448b4424244c8b542418448bde44895c242c453bc30f8f3bffffffe9a10100004181f9addeadde0f85ae000000418b7a10813cfd08000000addeadde0f8537070000418b72148b04f5140000008b34f5100000008b2cfd0c000000448bed442bee413bc50f8e950600008b34fd180000008b04f50c0000003b04fd140000000f85b50600008b04f508000000448bed41ffc581f8addeadde0f857f0000008b34f5100000003b2cf50c0000000f8370060000892cfd1000000044892cfd0c00000048c1e6038b74ae1048b900e01b1701000000458bd3e904ffffff4181f9addeadde0f85cc060000418b7214418504f4498bf248b8ffffffffffffffffe8000000009048c1e8038bf0448b54242c48b900e01b1701000000e9c2feffff81f8addeadde0f853f0000008b34f51c0000003b2cf50c0000000f8344070000892cfd1000000044892cfd0c00000048c1e6038b74ae10448b54242c48b900e01b1701000000e977feffff44896c240c897c240848c1e6038bd5896c240448b8ffffffffffffffffe800000000908b7c24088b6c2404892cfd10000000448b6c240c44892cfd0c00000048c1e8038bf0448b54242c48b900e01b1701000000e91efeffff817c2428addeadde4c8b5424180f855d000000418b42208b04c518000000413b420c0f8529060000488b442410488b6c24404883c448850500000000c5f877c34181feaddeadde0f8578020000418b45188b04c50c000000413b450c0f85f4040000458b5514488b542430e91cfcffff817c2428addeadde0f8516020000418b4210813cc508000000addeadde0f8591040000418b72148b14f5140000008b34f5100000008b04c50c0000002bc63bd00f8ff6030000488b442410488b6c24404883c448850500000000c5f877c34181feaddeadde0f8589010000458b7518468b14f50c000000453b550c0f850e04000041837d14000f8c0f050000458b5d104585db0f8ce0030000428b34f50800000048b9addeaddeaddeadde483b0cf5b80200000f85b503000081feaddeadde0f85b5000000428b34f5100000008b34f50c000000443bde0f8fc80200008974242c498b4f604c8d41384d3b47700f87850100004d8947600f1881f8000000488bf1488bce4c8d461849b9addeaddeaddeadde4d8b89a80000004c890ec74608addeadde4489660c49c1e8034489461049c1ed0344896e1449b8addeaddeaddeadde4d8b80a80000004c894618c74620addeadde44895e24c74628ffffffff4489562c44897630448976344c8bda4c8bd1488b542430e944fbffff81feaddeadde0f85170000004183fb010f8db5040000c744242c00000000e944ffffff81feaddeadde0f8515040000428b34f510000000443bde0f8fca0200008974242ce91effffff448954242c48beaddeaddeaddeaddeba06000000b901000000e80000000090488bf0448b54242c488b542430e980faffff4889542418498bf548b8ffffffffffffffff660f1f440000e800000000904c8b5c24184c8bd0488b542430e99afaffff4181f9addeadde0f85cf010000418b421485c00f85ee030000488b442410488b6c24404883c448850500000000c5f877c34181feaddeadde0f8584010000418b450c448b14c514000000488b542430e9a4f9ffff44895c24284489542424488954241848baaddeaddeaddeadde488bf2ba0a000000b901000000e80000000090488bf0448b5c2428448b542424488b542418e946feffff8b7208488b0cf5e000000049bbaddeaddeaddeadde4c3bd90f847d010000498b4f60458bda41c1e302458d5b174183e3f84d63db4d8bc34c03c14d3b47700f87800000004d894760410f18840bc0000000410f18840b00010000410f18840b40010000410f18840b800100004489510c48c7010100000089710848c7c610000000e90c0000000f1f40004c892431488d76084c3bde7ff3488bf1817e08addeadde0f85b50000004181feaddeadde0f85080000004c8bf6e9bff8ffff488bd6e9dffcffff48c1e603418bd2b901000000448954242ce80000000090488bf0448b54242c488b542430ebb041baed83fbff4589979c0200004d89a7a8020000e80000000090458bc34c8b4c2410488b54243041bbed37fcff45899f9c0200004d89a7a8020000e8000000009041bacd62fbff4589979c0200004d89a7a8020000e8000000009041bbcdbdfbff448b44242c4c8b4c2410488b542430ebbb448954242c41c7879c020000cdb4fbff4d89a7a8020000e8000000009041baed72fbffebb041bbedbefbff448b44242c4c8b4c2410488b542430e97cffffff41c7879c0200009f49f8ff4d89a7a8020000e8000000009041bacd8dfbffe932ffffff41baed8cfbffe927ffffff41baed7efbffe91cffffff41baed97fbffe911ffffff41baeda4fbff4589979c0200004d89a7a8020000e8000000009041bbcdcbfbff448b44242c4c8b4c2410488b542430e904ffffff458bc34c8b4c2410488b54243041bbed18fcffe9ecfeffff41baed65fbffe9fbfeffff458bc34c8b4c2410488b54243041bbe502fcffe9c9feffff458bc34c8b4c2410488b54243041bbed0dfcffe9b1feffff49bbaddeaddeaddeadde4d8bc341bbc46afcff45899f9c0200004d8987a8020000e80000000090458bc34c8b4c2410488b54243041bbcd25fcffe972feffff41baeda7fbffe935ffffff458bc34c8b4c2410488b54243041bbed44fcffe94ffeffff458bc34c8b4c2410488b54243041bbcde1fbffe937feffff41baed94fbffe905feffff458bc34c8b4c2410488b54243041bbed50fcffe914feffff41bacd81fbffe9e2fdffff49bbaddeaddeaddeadde4d8bc341bbe566fcffe953ffffff41bbedd0fbff448b44242c4c8b4c2410488b542430e9d7fdffff458bc34c8b4c2410488b54243041bbe531fcffe9bffdffff458bc34c8b4c2410488b54243041bbed43fcffe9a7fdffff41bbedb9fbff448b44242c4c8b4c2410488b542430e98dfdffff41baed82fbffe95bfdffff41bbe5eefbff448b44242c4c8b4c24104c8b542418488b542430e963fdffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4d6e45bf slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 56 [rdx:0, r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 r14|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 62 14 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 62 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 69 16 BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 75 block B1 null  <||@
  Comment 75 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 20 rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 79 22 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 79 [rdx:0, r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 24 CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 90 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 96 block B2 null  <||@
  Comment 96 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 30 rsi|DWORD = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 100 32 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 103 34 JUMP ~[] destination: B2 -> B10  <||@
  Comment 103 block B10 null  <||@
  Comment 103 88 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 103 90 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 107 92 BRANCH trueDestinationProbability: 2.7694693696687716E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 113 block B24 null  <||@
  Comment 113 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 232 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 113 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 120 234 BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B36  <||@
  Comment 126 block B25 null  <||@
  Comment 126 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 238 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 129 240 JUMP ~[] destination: B25 -> B26  <||@
  Comment 129 block B26 null  <||@
  Comment 129 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 129 244 rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 133 246 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 133 [rdx:0, r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |              |   |   |   |    <||@
  Comment 133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 141 248 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 145 250 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33  <||@
  Comment 151 block B27 null  <||@
  Comment 151 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 254 CMP [r13|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 156 256 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 162 block B29 null  <||@
  Comment 162 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 266 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 166 268 r11|QWORD = LEA [rsi|QWORD + 40] size: QWORD  <||@
  Comment 170 270 CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 174 272 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 180 block B31 null  <||@
  Comment 180 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 296 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 184 298 AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0  <||@
  Comment 191 300 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 191 302 JUMP ~[] destination: B31 -> B32  <||@
  Comment 191 block B32 null  <||@
  Comment 191 304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 191 306 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 194 308 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}  <||@
  Comment 194 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}}  <||@
  Comment 204 310 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 211 312 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 214 314 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 214 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 221 316 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 231 318 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 235 320 MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 239 322 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 243 324 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 247 326 MOV (x: [rsi|QWORD[*] + 28], y: r10|DWORD) size: DWORD  <||@
  Comment 251 328 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 255 330 MOV (x: [rsi|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 259 332 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 262 334 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 265 336 JUMP ~[] destination: B32 -> B64  <||@
  Comment 265 block B64 null  <||@
  Comment 265 628 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 265 630 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 270 632 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 275 634 rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 279 636 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 279 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 285 638 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B120  <||@
  Comment 291 block B65 null  <||@
  Comment 291 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 291 642 r8|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 295 644 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 300 646 rsi|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 303 648 r9|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 309 650 CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 312 652 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B65 -> B69 falseDestination: B65 -> B67  <||@
  Comment 318 block B67 null  <||@
  Comment 318 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 660 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 321 662 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B67 -> B69 falseDestination: B67 -> B119  <||@
  Comment 327 block B69 null  <||@
  Comment 327 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 327 670 r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:37]  <||@
  Comment 327 [rdx:0, r10:0, r11:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2  |3             |4  |5 
     locals:  |-             |rdx|QWORD[.]  |-  |r11|QWORD[.]  |-  |- 
     stack:   |r10|QWORD[.]  |              |   |              |   |    <||@
  Comment 327 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 331 672 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 336 674 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 346 676 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 352 678 JUMP ~[] destination: B69 -> B70  <||@
  Comment 357 block B71 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 357 688 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 368 690 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 368 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 375 692 BRANCH trueDestinationProbability: 0.9005485075074715 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B83  <||@
  Comment 381 block B72 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 381 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 381 696 rsi|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 385 698 rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 385 [rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 385 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 392 700 rax|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 396 702 CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 398 704 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 404 block B74 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 404 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 404 720 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 32] size: DWORD  <||@
  Comment 411 722 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 411 [rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 411 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 418 724 CMP (x: rbp|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD  <||@
  Comment 422 726 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82  <||@
  Comment 428 block B75 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 428 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 428 730 CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 430 732 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B81  <||@
  Comment 436 block B76 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 436 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 736 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 443 738 rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 443 [rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 443 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 450 740 rbp|DWORD = ADD (x: rax|DWORD, ~y: [r10|QWORD[.] + 28]) size: DWORD  <||@
  Comment 456 742 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 458 744 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B80  <||@
  Comment 464 block B77 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 464 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 464 748 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 466 750 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 472 block B78 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 472 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 472 754 rdi|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 476 756 MOV (x: [r10|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 480 758 MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 484 760 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 488 762 rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 492 764 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 502 766 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 505 770 JUMP ~[] destination: B78 -> B101  <||@
  Comment 505 block B101 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 505 1054 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 505 1050 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 510 1056 MOV (x: [r11|QWORD[.] + r10|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 515 1058 rsi|QWORD[.] = LEA [r11|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 520 1060 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 524 1062 MOVB (x: [rsi|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 528 1064 rsi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 533 1066 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 538 1068 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 543 1070 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 548 1072 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 551 1074 JUMP ~[] destination: B101 -> B70  <||@
  Comment 551 block B70 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 551 680 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 551 682 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 556 684 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 559 686 BRANCH trueDestinationProbability: 0.6976487138263665 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B103  <||@
  Comment 570 block B83 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 570 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 570 822 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 570 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 577 824 BRANCH trueDestinationProbability: 0.9211923726768046 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B99  <||@
  Comment 583 block B84 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 583 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 583 828 rdi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 587 830 CMP [rdi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42]  <||@
  Comment 587 [rdi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 587 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 587 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 598 832 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B98  <||@
  Comment 604 block B85 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 604 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 604 836 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 608 838 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42]  <||@
  Comment 608 [rsi:0, rdi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 608 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 615 840 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 622 842 rbp|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 629 844 r13|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 635 846 CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 638 848 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B97  <||@
  Comment 644 block B86 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 644 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 644 852 rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 651 854 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 651 [rsi:0, rdi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 651 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 658 856 CMP (x: rax|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 665 858 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B96  <||@
  Comment 671 block B87 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 671 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 671 862 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 678 864 r13|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 684 866 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 684 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 690 868 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91  <||@
  Comment 696 block B88 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 696 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 696 872 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 703 874 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42]  <||@
  Comment 703 [rsi:0, rdi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 703 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 710 876 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 716 block B89 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 716 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 716 880 MOV (x: [rdi|DWORD[.] * 8 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 723 882 MOV (x: [rdi|DWORD[.] * 8 + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 731 884 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 735 886 rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 739 888 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 749 890 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 752 894 JUMP ~[] destination: B89 -> B101  <||@
  Comment 757 block B99 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 757 1026 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 1028 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 757 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 764 1030 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B102  <||@
  Comment 770 block B100 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 770 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 770 1034 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 774 1036 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42]  <||@
  Comment 774 [r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD   <||@
  Comment 774 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 778 1038 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 781 1040 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:114]  <||@
  Comment 781 6  <||@
  Comment 791 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 796 [stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                  |5              
     locals:  |-                  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:36|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:36|DWORD     |   |                   |                   |                 <||@
  Comment 797 1042 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 801 1044 rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 803 1046 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 808 1048 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 818 1052 JUMP ~[] destination: B100 -> B101  <||@
  Comment 823 block B91 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 823 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 823 910 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 823 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 829 912 BRANCH trueDestinationProbability: 0.9931451844203525 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95  <||@
  Comment 835 block B92 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 835 914 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 835 916 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 842 918 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42]  <||@
  Comment 842 [rsi:0, rdi:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4                  |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:36|DWORD   <||@
  Comment 842 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 849 920 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 855 block B93 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 855 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 855 924 MOV (x: [rdi|DWORD[.] * 8 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 862 926 MOV (x: [rdi|DWORD[.] * 8 + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 870 928 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 874 930 rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 878 932 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 883 934 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 893 938 JUMP ~[] destination: B93 -> B101  <||@
  Comment 898 block B95 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 898 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 898 956 stack:68|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 903 958 stack:72|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 907 960 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 911 962 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 913 964 stack:76|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 917 966 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114]  <||@
  Comment 917 7  <||@
  Comment 927 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 932 [stack:8, stack:16, stack:24, stack:48]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:72|DWORD[.]  |stack:76|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                  |5              
     locals:  |-                  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:36|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:36|DWORD     |   |                   |                   |                 <||@
  Comment 933 968 rdi|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 937 970 rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 941 972 MOV (x: [rdi|DWORD[.] * 8 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 948 974 r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 953 976 MOV (x: [rdi|DWORD[.] * 8 + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 961 978 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 965 980 rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 967 982 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 972 984 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 982 988 JUMP ~[] destination: B95 -> B101  <||@
  Comment 987 block B103 null  <||@
  Comment 987 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 987 1090 CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 987 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 995 1096 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1000 1092 BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B107  <||@
  Comment 1006 block B104 null  <||@
  Comment 1006 1094 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1006 1098 rax|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 1010 1100 rax|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 1010 [r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1010 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1017 1102 CMP (x: rax|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1021 1104 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 1027 block B105 null  <||@
  Comment 1027 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1027 1108 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1032 1110 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1041 12  <||@
  Comment 1051 block B4 null  <||@
  Comment 1051 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1051 44 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 1051 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 1058 46 BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 1064 block B5 null  <||@
  Comment 1064 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1064 50 rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1068 52 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 1068 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1068 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1075 54 CMP (x: rax|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1079 56 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 1085 block B6 null  <||@
  Comment 1085 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1085 60 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 1089 62 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1094 64 JUMP ~[] destination: B6 -> B10  <||@
  Comment 1099 block B107 null  <||@
  Comment 1099 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1099 1128 CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 1099 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 1107 1130 BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B113  <||@
  Comment 1113 block B108 null  <||@
  Comment 1113 1132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 1134 rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1117 1136 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42]  <||@
  Comment 1117 [rax:0, r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1117 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1117 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1128 1138 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B112  <||@
  Comment 1134 block B109 null  <||@
  Comment 1134 1140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1134 1142 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1138 1144 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42]  <||@
  Comment 1138 [rax:0, rsi:0, r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1138 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1145 1146 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1152 1148 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1159 1150 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1161 1152 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1163 1154 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 1169 block B111 null  <||@
  Comment 1169 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1169 1170 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1174 1172 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1183 12  <||@
  Comment 1193 block B36 null  <||@
  Comment 1193 356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1193 358 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 1193 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 1200 360 BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63  <||@
  Comment 1206 block B37 null  <||@
  Comment 1206 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 364 r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1210 366 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 1210 [rdx:0, r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1210 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1218 368 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1222 370 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61  <||@
  Comment 1228 block B38 null  <||@
  Comment 1228 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1228 374 CMP [r13|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 1233 376 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1239 block B40 null  <||@
  Comment 1239 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1239 386 r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 1243 388 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1246 390 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1252 block B42 null  <||@
  Comment 1252 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1252 400 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1260 402 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 1260 {meta{HotSpotMethod<AbstractList.listIterator(int)>}}  <||@
  Comment 1270 404 CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD  <||@
  Comment 1278 406 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60  <||@
  Comment 1284 block B43 null  <||@
  Comment 1284 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1284 410 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 1284 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 1290 412 BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47  <||@
  Comment 1296 block B44 null  <||@
  Comment 1296 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1296 416 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1304 418 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 1304 [rdx:0, r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1304 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1311 420 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1314 422 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 1320 block B46 null  <||@
  Comment 1320 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1320 432 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1324 434 JUMP ~[] destination: B46 -> B55  <||@
  Comment 1324 block B55 null  <||@
  Comment 1324 486 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1324 488 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1328 490 r8|QWORD = LEA [rcx|QWORD + 56] size: QWORD  <||@
  Comment 1332 492 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1336 494 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 1342 block B57 null  <||@
  Comment 1342 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1342 526 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1346 528 AMD64PREFETCH ~[rcx|QWORD + 248] instr: 0  <||@
  Comment 1353 530 rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1356 532 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1356 block B58 null  <||@
  Comment 1356 534 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1356 536 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1359 538 r8|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD  <||@
  Comment 1363 540 r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD  <||@
  Comment 1363 542 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}  <||@
  Comment 1363 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>}}  <||@
  Comment 1373 544 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 1380 546 MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 1383 548 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 1383 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 1390 550 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1394 552 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 1398 554 MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1402 556 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 1406 558 MOV (x: [rsi|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1410 560 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 1410 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 1420 562 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1427 564 MOV (x: [rsi|QWORD[*] + 24], y: r8|QWORD) size: QWORD  <||@
  Comment 1431 566 MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 1431 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1438 568 MOV (x: [rsi|QWORD[*] + 36], y: r11|DWORD) size: DWORD  <||@
  Comment 1442 570 MOV [rsi|QWORD[*] + 40] y: -1 size: DWORD  <||@
  Comment 1449 572 MOV (x: [rsi|QWORD[*] + 44], y: r10|DWORD) size: DWORD  <||@
  Comment 1453 574 MOV (x: [rsi|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1457 576 MOV (x: [rsi|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1461 578 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1464 580 r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1467 582 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1472 584 JUMP ~[] destination: B58 -> B64  <||@
  Comment 1477 block B47 null  <||@
  Comment 1477 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1477 438 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 1477 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 1483 440 BRANCH trueDestinationProbability: 0.5252282556463239 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51  <||@
  Comment 1489 block B48 null  <||@
  Comment 1489 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1489 444 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 1493 446 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 1499 block B49 null  <||@
  Comment 1499 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1499 450 stack:36|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1507 452 JUMP ~[] destination: B49 -> B55  <||@
  Comment 1512 block B51 null  <||@
  Comment 1512 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1512 462 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1512 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1518 464 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59  <||@
  Comment 1524 block B52 null  <||@
  Comment 1524 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1524 468 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1532 470 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1535 472 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 1541 block B54 null  <||@
  Comment 1541 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1541 482 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1545 484 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1550 block B30 null  <||@
  Comment 1550 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1550 276 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1555 278 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1555 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1565 280 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 1570 282 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1575 284 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32]  <||@
  Comment 1575 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1580 [r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1581 286 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1584 288 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1589 290 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1594 292 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1599 block B63 null  <||@
  Comment 1599 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1599 614 stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1604 616 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1607 618 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34]  <||@
  Comment 1607 7  <||@
  Comment 1623 {HotSpotMethod<AbstractCollection.iterator()>}  <||@
  Comment 1628 [stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34, duringCall: true, rethrow: false]
              |0  |1                  |2  |3                  |4  |5 
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1629 620 r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 622 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1637 624 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1642 626 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1647 block B113 null  <||@
  Comment 1647 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1647 1190 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 1647 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 1654 1192 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B117  <||@
  Comment 1660 block B114 null  <||@
  Comment 1660 1194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1660 1196 rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1664 1198 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1666 1200 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 1672 block B115 null  <||@
  Comment 1672 1202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1672 1204 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1677 1206 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1686 12  <||@
  Comment 1696 block B8 null  <||@
  Comment 1696 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1696 74 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}  <||@
  Comment 1696 {meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}}  <||@
  Comment 1703 76 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B122  <||@
  Comment 1709 block B9 null  <||@
  Comment 1709 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1709 80 rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 1713 82 r10|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 1713 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1713 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1721 84 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1726 86 JUMP ~[] destination: B9 -> B10  <||@
  Comment 1731 block B56 null  <||@
  Comment 1731 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1731 498 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1736 500 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1741 502 stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1746 504 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1746 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1756 506 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1759 508 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1764 510 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1769 512 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34]  <||@
  Comment 1769 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1774 [r13:0, r14:0, stack:24, stack:48]at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9, duringCall: false, rethrow: false]
              |0               |1              
     locals:  |r14|DWORD[.]    |stack:40|DWORD 
     stack:   |stack:40|DWORD  |stack:36|DWORD 
  at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2, duringCall: true, rethrow: false]
              |0             |1              
     locals:  |r14|DWORD[.]  |stack:40|DWORD 
  at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34, duringCall: true, rethrow: false]
              |0                                                                             |1  |2 
     locals:  |-                                                                             |-  |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |   |  
  at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15, duringCall: true, rethrow: false]
              |0                                                                             |1 
     locals:  |-                                                                             |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.SubList.iterator(AbstractList.java:691) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34, duringCall: true, rethrow: false]
              |0  |1                  |2  |3                  |4  |5 
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1775 514 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1778 516 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1783 518 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1788 520 rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1793 522 JUMP ~[] destination: B56 -> B58  <||@
  Comment 1798 block B11 null  <||@
  Comment 1798 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1798 96 rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 1801 98 rcx|QWORD[.] = MOV [rsi|DWORD * 8 + 224] size: QWORD  <||@
  Comment 1809 100 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void]  <||@
  Comment 1809 {Object[Class:void]}  <||@
  Comment 1819 102 CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 1822 104 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 1828 block B13 null  <||@
  Comment 1828 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1828 116 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1832 118 r11|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 1839 120 r11|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 1843 122 r11|DWORD = AND r11|DWORD y: -8 size: DWORD  <||@
  Comment 1847 124 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1850 126 r8|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1856 128 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1860 130 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 1866 block B15 null  <||@
  Comment 1866 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1866 154 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1870 156 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1879 158 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1888 160 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1897 162 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1906 164 MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1910 166 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 1917 168 MOV (x: [rcx|QWORD + 8], y: rsi|DWORD) size: DWORD  <||@
  Comment 1920 170 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1927 172 JUMP ~[] destination: B15 -> B16  <||@
  Comment 1932 block B17 loop 0 depth 1 header:2022|LoopBegin  <||@
  Comment 1932 180 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1936 182 MOV (x: [rcx|QWORD + rsi|QWORD * 1], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1940 184 rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD  <||@
  Comment 1944 186 JUMP ~[] destination: B17 -> B16  <||@
  Comment 1944 block B16 loop 0 depth 1 header:2022|LoopBegin  <||@
  Comment 1944 174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1944 176 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1947 178 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1949 block B18 null  <||@
  Comment 1949 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1949 190 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1949 192 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1952 194 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1952 block B19 null  <||@
  Comment 1952 196 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1952 198 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}  <||@
  Comment 1952 {meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}}  <||@
  Comment 1959 200 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 1965 block B20 null  <||@
  Comment 1965 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1965 204 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 1965 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 1972 206 BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 1978 block B21 null  <||@
  Comment 1978 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1978 210 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1981 212 JUMP ~[] destination: B21 -> B26  <||@
  Comment 1986 block B22 null  <||@
  Comment 1986 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1986 216 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1989 218 JUMP ~[] destination: B22 -> B36  <||@
  Comment 1994 block B14 null  <||@
  Comment 1994 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1994 134 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 1998 136 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2001 138 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2006 140 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2011 142 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4]  <||@
  Comment 2011 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2016 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0               |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]    |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:36|DWORD  |                   |   |   |   |    <||@
  Comment 2017 144 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2020 146 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2025 148 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2030 150 JUMP ~[] destination: B14 -> B19  <||@
  Comment 2032 block B45 null  <||@
  Comment 2032 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2032 426 r10|DWORD = MOVE input: int[-293907|0xfffffffffffb83ed]  <||@
  Comment 2038 428 JUMP ~[] destination: B45 -> B62  <||@
  Comment 2038 block B62 null  <||@
  Comment 2038 604 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2038 606 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2045 608 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2052 610 DEOPT info [bci:32]  <||@
  Comment 2052 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2057 [rdx:0, r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 2058 block B80 null  <||@
  Comment 2058 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2058 786 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2061 788 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2066 790 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2071 792 r11|DWORD = MOVE input: int[-247827|0xfffffffffffc37ed]  <||@
  Comment 2077 794 JUMP ~[] destination: B80 -> B118  <||@
  Comment 2077 block B118 null  <||@
  Comment 2077 1232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2077 1234 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2084 1236 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2091 1238 DEOPT info [bci:42]  <||@
  Comment 2091 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2096 [rdx:0, r9:0, r10:0]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1             |2  |3            |4             |5        
     locals:  |-  |rdx|QWORD[.]  |-  |r9|QWORD[.]  |r10|QWORD[.]  |r8|DWORD   <||@
  Comment 2097 block B122 null  <||@
  Comment 2097 1268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2097 1270 r10|DWORD = MOVE input: int[-302387|0xfffffffffffb62cd]  <||@
  Comment 2103 1272 JUMP ~[] destination: B122 -> B123  <||@
  Comment 2103 block B123 null  <||@
  Comment 2103 1274 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2103 1276 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2110 1278 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2117 1280 DEOPT info [bci:0]  <||@
  Comment 2117 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2122 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2123 block B117 null  <||@
  Comment 2123 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2123 1222 r11|DWORD = MOVE input: int[-279091|0xfffffffffffbbdcd]  <||@
  Comment 2129 1224 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2134 1226 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2139 1228 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2144 1230 JUMP ~[] destination: B117 -> B118  <||@
  Comment 2146 block B23 null  <||@
  Comment 2146 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2146 222 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2151 224 MOV [r15|QWORD + 668] y: -281395 size: DWORD  <||@
  Comment 2162 226 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2169 228 DEOPT info [bci:4]  <||@
  Comment 2169 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2174 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0               |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]    |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:36|DWORD  |                   |   |   |   |    <||@
  Comment 2175 block B3 null  <||@
  Comment 2175 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2175 38 r10|DWORD = MOVE input: int[-298259|0xfffffffffffb72ed]  <||@
  Comment 2181 40 JUMP ~[] destination: B3 -> B123  <||@
  Comment 2183 block B110 null  <||@
  Comment 2183 1156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2183 1158 r11|DWORD = MOVE input: int[-278803|0xfffffffffffbbeed]  <||@
  Comment 2189 1160 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2194 1162 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2199 1164 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2204 1166 JUMP ~[] destination: B110 -> B118  <||@
  Comment 2209 block B12 null  <||@
  Comment 2209 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2209 108 MOV [r15|QWORD + 668] y: -505441 size: DWORD  <||@
  Comment 2220 110 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2227 112 DEOPT info [bci:4]  <||@
  Comment 2227 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2232 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r10|DWORD     |                   |   |   |   |    <||@
  Comment 2233 block B60 null  <||@
  Comment 2233 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2233 594 r10|DWORD = MOVE input: int[-291379|0xfffffffffffb8dcd]  <||@
  Comment 2239 596 JUMP ~[] destination: B60 -> B62  <||@
  Comment 2244 block B41 null  <||@
  Comment 2244 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2244 394 r10|DWORD = MOVE input: int[-291603|0xfffffffffffb8ced]  <||@
  Comment 2250 396 JUMP ~[] destination: B41 -> B62  <||@
  Comment 2255 block B53 null  <||@
  Comment 2255 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2255 476 r10|DWORD = MOVE input: int[-295187|0xfffffffffffb7eed]  <||@
  Comment 2261 478 JUMP ~[] destination: B53 -> B62  <||@
  Comment 2266 block B61 null  <||@
  Comment 2266 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2266 600 r10|DWORD = MOVE input: int[-288787|0xfffffffffffb97ed]  <||@
  Comment 2272 602 JUMP ~[] destination: B61 -> B62  <||@
  Comment 2277 block B28 null  <||@
  Comment 2277 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2277 260 r10|DWORD = MOVE input: int[-285459|0xfffffffffffba4ed]  <||@
  Comment 2283 262 JUMP ~[] destination: B28 -> B34  <||@
  Comment 2283 block B34 null  <||@
  Comment 2283 344 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2283 346 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2290 348 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2297 350 DEOPT info [bci:32]  <||@
  Comment 2297 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2302 [r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |                   |   |   |   |    <||@
  Comment 2303 block B112 null  <||@
  Comment 2303 1174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2303 1176 r11|DWORD = MOVE input: int[-275507|0xfffffffffffbcbcd]  <||@
  Comment 2309 1178 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2314 1180 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2319 1182 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2324 1184 JUMP ~[] destination: B112 -> B118  <||@
  Comment 2329 block B97 null  <||@
  Comment 2329 1002 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2329 1004 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2332 1006 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2337 1008 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2342 1010 r11|DWORD = MOVE input: int[-255763|0xfffffffffffc18ed]  <||@
  Comment 2348 1012 JUMP ~[] destination: B97 -> B118  <||@
  Comment 2353 block B7 null  <||@
  Comment 2353 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2353 68 r10|DWORD = MOVE input: int[-301587|0xfffffffffffb65ed]  <||@
  Comment 2359 70 JUMP ~[] destination: B7 -> B123  <||@
  Comment 2364 block B90 null  <||@
  Comment 2364 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2364 898 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2367 900 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2372 902 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2377 904 r11|DWORD = MOVE input: int[-261403|0xfffffffffffc02e5]  <||@
  Comment 2383 906 JUMP ~[] destination: B90 -> B118  <||@
  Comment 2388 block B96 null  <||@
  Comment 2388 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2388 992 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2391 994 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2396 996 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2401 998 r11|DWORD = MOVE input: int[-258579|0xfffffffffffc0ded]  <||@
  Comment 2407 1000 JUMP ~[] destination: B96 -> B118  <||@
  Comment 2412 block B120 null  <||@
  Comment 2412 1250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2412 1252 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@764582310]  <||@
  Comment 2412 {Object[d.a@764582310]}  <||@
  Comment 2422 1254 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2425 1256 r11|DWORD = MOVE input: int[-234812|0xfffffffffffc6ac4]  <||@
  Comment 2431 1258 JUMP ~[] destination: B120 -> B121  <||@
  Comment 2431 block B121 null  <||@
  Comment 2431 1260 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2431 1262 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2438 1264 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 2445 1266 DEOPT info [bci:37]  <||@
  Comment 2445 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2450 [r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                  |2  |3                  |4  |5 
     locals:  |-             |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |-  |- 
     stack:   |r10|QWORD[.]  |                   |   |                   |   |    <||@
  Comment 2451 block B98 null  <||@
  Comment 2451 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2451 1016 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2454 1018 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2459 1020 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2464 1022 r11|DWORD = MOVE input: int[-252467|0xfffffffffffc25cd]  <||@
  Comment 2470 1024 JUMP ~[] destination: B98 -> B118  <||@
  Comment 2475 block B33 null  <||@
  Comment 2475 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2475 340 r10|DWORD = MOVE input: int[-284691|0xfffffffffffba7ed]  <||@
  Comment 2481 342 JUMP ~[] destination: B33 -> B34  <||@
  Comment 2486 block B82 null  <||@
  Comment 2486 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2486 810 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2489 812 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2494 814 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2499 816 r11|DWORD = MOVE input: int[-244499|0xfffffffffffc44ed]  <||@
  Comment 2505 818 JUMP ~[] destination: B82 -> B118  <||@
  Comment 2510 block B102 null  <||@
  Comment 2510 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2510 1078 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2513 1080 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2518 1082 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2523 1084 r11|DWORD = MOVE input: int[-269875|0xfffffffffffbe1cd]  <||@
  Comment 2529 1086 JUMP ~[] destination: B102 -> B118  <||@
  Comment 2534 block B39 null  <||@
  Comment 2534 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2534 380 r10|DWORD = MOVE input: int[-289555|0xfffffffffffb94ed]  <||@
  Comment 2540 382 JUMP ~[] destination: B39 -> B62  <||@
  Comment 2545 block B73 null  <||@
  Comment 2545 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2545 708 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2548 710 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2553 712 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2558 714 r11|DWORD = MOVE input: int[-241427|0xfffffffffffc50ed]  <||@
  Comment 2564 716 JUMP ~[] destination: B73 -> B118  <||@
  Comment 2569 block B59 null  <||@
  Comment 2569 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2569 588 r10|DWORD = MOVE input: int[-294451|0xfffffffffffb81cd]  <||@
  Comment 2575 590 JUMP ~[] destination: B59 -> B62  <||@
  Comment 2580 block B119 null  <||@
  Comment 2580 1240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2580 1242 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1127995644]  <||@
  Comment 2580 {Object[d.a@1127995644]}  <||@
  Comment 2590 1244 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2593 1246 r11|DWORD = MOVE input: int[-235803|0xfffffffffffc66e5]  <||@
  Comment 2599 1248 JUMP ~[] destination: B119 -> B121  <||@
  Comment 2604 block B106 null  <||@
  Comment 2604 1112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2604 1114 r11|DWORD = MOVE input: int[-274195|0xfffffffffffbd0ed]  <||@
  Comment 2610 1116 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2615 1118 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2620 1120 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2625 1122 JUMP ~[] destination: B106 -> B118  <||@
  Comment 2630 block B79 null  <||@
  Comment 2630 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2630 774 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2633 776 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2638 778 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2643 780 r11|DWORD = MOVE input: int[-249371|0xfffffffffffc31e5]  <||@
  Comment 2649 782 JUMP ~[] destination: B79 -> B118  <||@
  Comment 2654 block B81 null  <||@
  Comment 2654 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2654 798 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2657 800 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2662 802 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2667 804 r11|DWORD = MOVE input: int[-244755|0xfffffffffffc43ed]  <||@
  Comment 2673 806 JUMP ~[] destination: B81 -> B118  <||@
  Comment 2678 block B116 null  <||@
  Comment 2678 1208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2678 1210 r11|DWORD = MOVE input: int[-280083|0xfffffffffffbb9ed]  <||@
  Comment 2684 1212 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2689 1214 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2694 1216 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2699 1218 JUMP ~[] destination: B116 -> B118  <||@
  Comment 2704 block B50 null  <||@
  Comment 2704 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2704 456 r10|DWORD = MOVE input: int[-294163|0xfffffffffffb82ed]  <||@
  Comment 2710 458 JUMP ~[] destination: B50 -> B62  <||@
  Comment 2715 block B94 null  <||@
  Comment 2715 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2715 942 r11|DWORD = MOVE input: int[-266523|0xfffffffffffbeee5]  <||@
  Comment 2721 944 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2726 946 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2731 948 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2736 950 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2741 952 JUMP ~[] destination: B94 -> B118  <||@
  Comment 2746 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2746 4  <||@
  Comment 2752 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2752 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9679[java.util.AbstractCollection.toArray(Object[])]"
  method "HotSpotCompilation-9679[java.util.AbstractCollection.toArray(Object[])]"
  date 1527005220784
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b43c00 448b560849c1e203493bc20f854f22ccfe900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404c8bee48895424308502458b75084181fe0fad00f80f85d0030000418b75208b34f50c000000413b750c0f851f080000418b7518448bd6443b520c0f8f950600004181fe0fad00f80f852b0400004c8bf2418b7520448b14f50c000000453b550c0f851409000041837d18000f8c43080000498b77604c8d5e284d3b5f700f875a0500004d895f600f1886e80000004c8bde49b8406f05c0070000004d8b80a80000004c8906c74608e8ad00f849b800000000ffffffff4c89460c4489561444896618458b55144489561c49c1ed0344896e204d8bd34d8bde4c895424184c895c2410418b730881fef52200f80f8549080000458b430c4489442424418bf04c8bce49ffc9493bf10f87090000004585c00f85cd080000458b4a0844894c242848b900e01b170100000041bb00000000e9c20000006666660f1f8400000000004181f9e8ad00f80f85bd000000418b72208b3cf518000000418b420c3bc70f845d0800008b34f5200000008b2cf50c000000413b6a140f850a0800003bf80f8eaa0800008b34f5140000008b3cf50c0000008be841036a1c3bfd0f8e3a0600003bfd0f866e0800008bf8ffc741897a0c4189421048c1e6038b74ae1048b900e01b1701000000458bd34c8b5c241043897493104b8d74931048c1ee094488240e418bf2ffc6448b4c2428448b4424244c8b542418448bde44895c242c453bc30f8f3bffffffe9a10100004181f919ef01f80f85ae000000418b7a10813cfd0800000073ef01f80f8537070000418b72148b04f5140000008b34f5100000008b2cfd0c000000448bed442bee413bc50f8e950600008b34fd180000008b04f50c0000003b04fd140000000f85b50600008b04f508000000448bed41ffc581f88faf00f80f857f0000008b34f5100000003b2cf50c0000000f8370060000892cfd1000000044892cfd0c00000048c1e6038b74ae1048b900e01b1701000000458bd3e904ffffff4181f9e39e00f80f85cc060000418b7214418504f4498bf248b8ffffffffffffffffe8c423ccfe9048c1e8038bf0448b54242c48b900e01b1701000000e9c2feffff81f8c8b101f80f853f0000008b34f51c0000003b2cf50c0000000f8344070000892cfd1000000044892cfd0c00000048c1e6038b74ae10448b54242c48b900e01b1701000000e977feffff44896c240c897c240848c1e6038bd5896c240448b8ffffffffffffffffe83c23ccfe908b7c24088b6c2404892cfd10000000448b6c240c44892cfd0c00000048c1e8038bf0448b54242c48b900e01b1701000000e91efeffff817c2428e8ad00f84c8b5424180f855d000000418b42208b04c518000000413b420c0f8529060000488b442410488b6c24404883c4488505efafd4fcc5f877c34181fe7dee01f80f8578020000418b45188b04c50c000000413b450c0f85f4040000458b5514488b542430e91cfcffff817c242819ef01f80f8516020000418b4210813cc50800000073ef01f80f8591040000418b72148b14f5140000008b34f5100000008b04c50c0000002bc63bd00f8ff6030000488b442410488b6c24404883c448850561afd4fcc5f877c34181fe7dee01f80f8589010000458b7518468b14f50c000000453b550c0f850e04000041837d14000f8c0f050000458b5d104585db0f8ce0030000428b34f50800000048b900e8dd2301000000483b0cf5b80200000f85b503000081fe8faf00f80f85b5000000428b34f5100000008b34f50c000000443bde0f8fc80200008974242c498b4f604c8d41384d3b47700f87850100004d8947600f1881f8000000488bf1488bce4c8d461849b9c8780fc0070000004d8b89a80000004c890ec7460819ef01f84489660c49c1e8034489461049c1ed0344896e1449b8987b0fc0070000004d8b80a80000004c894618c7462073ef01f844895e24c74628ffffffff4489562c44897630448976344c8bda4c8bd1488b542430e944fbffff81fe3b3100f80f85170000004183fb010f8db5040000c744242c00000000e944ffffff81fec8b101f80f8515040000428b34f510000000443bde0f8fca0200008974242ce91effffff448954242c48be680b00c007000000ba06000000b901000000e8b42b45ff90488bf0448b54242c488b542430e980faffff4889542418498bf548b8ffffffffffffffff660f1f440000e88420ccfe904c8b5c24184c8bd0488b542430e99afaffff4181f9e39e00f80f85cf010000418b421485c00f85ee030000488b442410488b6c24404883c44885056aadd4fcc5f877c34181fec37100f80f8584010000418b450c448b14c514000000488b542430e9a4f9ffff44895c24284489542424488954241848ba680b00c007000000488bf2ba0a000000b901000000e8f22a45ff90488bf0448b5c2428448b542424488b542418e946feffff8b7208488b0cf5e000000049bb107c03c0060000004c3bd90f847d010000498b4f60458bda41c1e302458d5b174183e3f84d63db4d8bc34c03c14d3b47700f87800000004d894760410f18840bc0000000410f18840b00010000410f18840b40010000410f18840b800100004489510c48c7010100000089710848c7c610000000e90c0000000f1f40004c892431488d76084c3bde7ff3488bf1817e08212400f80f85b50000004181fe0fad00f80f85080000004c8bf6e9bff8ffff488bd6e9dffcffff48c1e603418bd2b901000000448954242ce8002a45ff90488bf0448b54242c488b542430ebb041baed83fbff4589979c0200004d89a7a8020000e8f531ccfe90458bc34c8b4c2410488b54243041bbed37fcff45899f9c0200004d89a7a8020000e8ce31ccfe9041bacd62fbff4589979c0200004d89a7a8020000e8b431ccfe9041bbcdbdfbff448b44242c4c8b4c2410488b542430ebbb448954242c41c7879c020000cdb4fbff4d89a7a8020000e88031ccfe9041baed72fbffebb041bbedbefbff448b44242c4c8b4c2410488b542430e97cffffff41c7879c0200009f49f8ff4d89a7a8020000e84631ccfe9041bacd8dfbffe932ffffff41baed8cfbffe927ffffff41baed7efbffe91cffffff41baed97fbffe911ffffff41baeda4fbff4589979c0200004d89a7a8020000e80031ccfe9041bbcdcbfbff448b44242c4c8b4c2410488b542430e904ffffff458bc34c8b4c2410488b54243041bbed18fcffe9ecfeffff41baed65fbffe9fbfeffff458bc34c8b4c2410488b54243041bbe502fcffe9c9feffff458bc34c8b4c2410488b54243041bbed0dfcffe9b1feffff49bb00269abe070000004d8bc341bbc46afcff45899f9c0200004d8987a8020000e86c30ccfe90458bc34c8b4c2410488b54243041bbcd25fcffe972feffff41baeda7fbffe935ffffff458bc34c8b4c2410488b54243041bbed44fcffe94ffeffff458bc34c8b4c2410488b54243041bbcde1fbffe937feffff41baed94fbffe905feffff458bc34c8b4c2410488b54243041bbed50fcffe914feffff41bacd81fbffe9e2fdffff49bb30269abe070000004d8bc341bbe566fcffe953ffffff41bbedd0fbff448b44242c4c8b4c2410488b542430e9d7fdffff458bc34c8b4c2410488b54243041bbe531fcffe9bffdffff458bc34c8b4c2410488b54243041bbed43fcffe9a7fdffff41bbedb9fbff448b44242c4c8b4c2410488b542430e98dfdffff41baed82fbffe95bfdffff41bbe5eefbff448b44242c4c8b4c24104c8b542418488b542430e963fdffffe8615f10ff90e83b2eccfe90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4d6e45bf slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 56 [rdx:0, r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 r14|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 62 14 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 62 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 69 16 BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 75 block B1 null  <||@
  Comment 75 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 20 rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 79 22 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 79 [rdx:0, r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 24 CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 90 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 96 block B2 null  <||@
  Comment 96 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 30 rsi|DWORD = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 100 32 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 103 34 JUMP ~[] destination: B2 -> B10  <||@
  Comment 103 block B10 null  <||@
  Comment 103 88 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 103 90 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 107 92 BRANCH trueDestinationProbability: 2.7694693696687716E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 113 block B24 null  <||@
  Comment 113 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 232 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 113 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 120 234 BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B36  <||@
  Comment 126 block B25 null  <||@
  Comment 126 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 238 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 129 240 JUMP ~[] destination: B25 -> B26  <||@
  Comment 129 block B26 null  <||@
  Comment 129 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 129 244 rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 133 246 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 133 [rdx:0, r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |              |   |   |   |    <||@
  Comment 133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 141 248 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 145 250 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33  <||@
  Comment 151 block B27 null  <||@
  Comment 151 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 254 CMP [r13|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 156 256 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 162 block B29 null  <||@
  Comment 162 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 266 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 166 268 r11|QWORD = LEA [rsi|QWORD + 40] size: QWORD  <||@
  Comment 170 270 CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 174 272 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 180 block B31 null  <||@
  Comment 180 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 296 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 184 298 AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0  <||@
  Comment 191 300 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 191 302 JUMP ~[] destination: B31 -> B32  <||@
  Comment 191 block B32 null  <||@
  Comment 191 304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 191 306 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 194 308 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}  <||@
  Comment 194 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}}  <||@
  Comment 204 310 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 211 312 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 214 314 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 214 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 221 316 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 231 318 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 235 320 MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 239 322 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 243 324 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 247 326 MOV (x: [rsi|QWORD[*] + 28], y: r10|DWORD) size: DWORD  <||@
  Comment 251 328 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 255 330 MOV (x: [rsi|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 259 332 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 262 334 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 265 336 JUMP ~[] destination: B32 -> B64  <||@
  Comment 265 block B64 null  <||@
  Comment 265 628 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 265 630 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 270 632 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 275 634 rsi|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 279 636 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 279 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 285 638 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B120  <||@
  Comment 291 block B65 null  <||@
  Comment 291 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 291 642 r8|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 295 644 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 300 646 rsi|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 303 648 r9|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 309 650 CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 312 652 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B65 -> B69 falseDestination: B65 -> B67  <||@
  Comment 318 block B67 null  <||@
  Comment 318 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 660 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 321 662 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B67 -> B69 falseDestination: B67 -> B119  <||@
  Comment 327 block B69 null  <||@
  Comment 327 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 327 670 r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:37]  <||@
  Comment 327 [rdx:0, r10:0, r11:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2  |3             |4  |5 
     locals:  |-             |rdx|QWORD[.]  |-  |r11|QWORD[.]  |-  |- 
     stack:   |r10|QWORD[.]  |              |   |              |   |    <||@
  Comment 327 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 331 672 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 336 674 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 346 676 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 352 678 JUMP ~[] destination: B69 -> B70  <||@
  Comment 357 block B71 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 357 688 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 368 690 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 368 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 375 692 BRANCH trueDestinationProbability: 0.9005485075074715 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B83  <||@
  Comment 381 block B72 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 381 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 381 696 rsi|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 385 698 rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 385 [rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 385 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 392 700 rax|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 396 702 CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 398 704 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 404 block B74 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 404 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 404 720 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 32] size: DWORD  <||@
  Comment 411 722 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 411 [rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 411 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 418 724 CMP (x: rbp|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD  <||@
  Comment 422 726 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82  <||@
  Comment 428 block B75 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 428 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 428 730 CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 430 732 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B81  <||@
  Comment 436 block B76 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 436 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 736 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 443 738 rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 443 [rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 443 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 450 740 rbp|DWORD = ADD (x: rax|DWORD, ~y: [r10|QWORD[.] + 28]) size: DWORD  <||@
  Comment 456 742 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 458 744 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B80  <||@
  Comment 464 block B77 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 464 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 464 748 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 466 750 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 472 block B78 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 472 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 472 754 rdi|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 476 756 MOV (x: [r10|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 480 758 MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 484 760 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 488 762 rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 492 764 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 502 766 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 505 770 JUMP ~[] destination: B78 -> B101  <||@
  Comment 505 block B101 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 505 1054 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 505 1050 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 510 1056 MOV (x: [r11|QWORD[.] + r10|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 515 1058 rsi|QWORD[.] = LEA [r11|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 520 1060 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 524 1062 MOVB (x: [rsi|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 528 1064 rsi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 533 1066 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 538 1068 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 543 1070 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 548 1072 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 551 1074 JUMP ~[] destination: B101 -> B70  <||@
  Comment 551 block B70 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 551 680 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 551 682 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 556 684 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 559 686 BRANCH trueDestinationProbability: 0.6976487138263665 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B103  <||@
  Comment 570 block B83 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 570 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 570 822 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 570 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 577 824 BRANCH trueDestinationProbability: 0.9211923726768046 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B99  <||@
  Comment 583 block B84 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 583 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 583 828 rdi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 587 830 CMP [rdi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42]  <||@
  Comment 587 [rdi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 587 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 587 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 598 832 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B98  <||@
  Comment 604 block B85 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 604 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 604 836 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 608 838 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42]  <||@
  Comment 608 [rsi:0, rdi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 608 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 615 840 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 622 842 rbp|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 629 844 r13|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 635 846 CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 638 848 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B97  <||@
  Comment 644 block B86 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 644 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 644 852 rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 651 854 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 651 [rsi:0, rdi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 651 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 658 856 CMP (x: rax|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 665 858 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B96  <||@
  Comment 671 block B87 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 671 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 671 862 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 678 864 r13|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 684 866 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 684 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 690 868 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91  <||@
  Comment 696 block B88 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 696 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 696 872 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 703 874 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42]  <||@
  Comment 703 [rsi:0, rdi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 703 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 710 876 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 716 block B89 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 716 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 716 880 MOV (x: [rdi|DWORD[.] * 8 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 723 882 MOV (x: [rdi|DWORD[.] * 8 + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 731 884 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 735 886 rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 739 888 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 749 890 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 752 894 JUMP ~[] destination: B89 -> B101  <||@
  Comment 757 block B99 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 757 1026 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 1028 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 757 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 764 1030 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B102  <||@
  Comment 770 block B100 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 770 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 770 1034 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 774 1036 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42]  <||@
  Comment 774 [r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD   <||@
  Comment 774 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 778 1038 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 781 1040 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:114]  <||@
  Comment 781 6  <||@
  Comment 791 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 796 [stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                  |5              
     locals:  |-                  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:36|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:36|DWORD     |   |                   |                   |                 <||@
  Comment 797 1042 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 801 1044 rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 803 1046 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 808 1048 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 818 1052 JUMP ~[] destination: B100 -> B101  <||@
  Comment 823 block B91 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 823 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 823 910 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 823 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 829 912 BRANCH trueDestinationProbability: 0.9931451844203525 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95  <||@
  Comment 835 block B92 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 835 914 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 835 916 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 842 918 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42]  <||@
  Comment 842 [rsi:0, rdi:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4                  |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:36|DWORD   <||@
  Comment 842 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 849 920 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 855 block B93 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 855 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 855 924 MOV (x: [rdi|DWORD[.] * 8 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 862 926 MOV (x: [rdi|DWORD[.] * 8 + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 870 928 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 874 930 rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 878 932 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 883 934 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 893 938 JUMP ~[] destination: B93 -> B101  <||@
  Comment 898 block B95 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 898 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 898 956 stack:68|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 903 958 stack:72|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 907 960 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 911 962 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 913 964 stack:76|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 917 966 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114]  <||@
  Comment 917 7  <||@
  Comment 927 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 932 [stack:8, stack:16, stack:24, stack:48]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:72|DWORD[.]  |stack:76|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                  |5              
     locals:  |-                  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:36|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:36|DWORD     |   |                   |                   |                 <||@
  Comment 933 968 rdi|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 937 970 rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 941 972 MOV (x: [rdi|DWORD[.] * 8 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 948 974 r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 953 976 MOV (x: [rdi|DWORD[.] * 8 + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 961 978 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 965 980 rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 967 982 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 972 984 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 982 988 JUMP ~[] destination: B95 -> B101  <||@
  Comment 987 block B103 null  <||@
  Comment 987 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 987 1090 CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 987 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 995 1096 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1000 1092 BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B107  <||@
  Comment 1006 block B104 null  <||@
  Comment 1006 1094 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1006 1098 rax|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 1010 1100 rax|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 1010 [r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1010 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1017 1102 CMP (x: rax|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1021 1104 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 1027 block B105 null  <||@
  Comment 1027 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1027 1108 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1032 1110 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1041 12  <||@
  Comment 1051 block B4 null  <||@
  Comment 1051 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1051 44 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 1051 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 1058 46 BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 1064 block B5 null  <||@
  Comment 1064 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1064 50 rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1068 52 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 1068 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1068 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1075 54 CMP (x: rax|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1079 56 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 1085 block B6 null  <||@
  Comment 1085 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1085 60 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 1089 62 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1094 64 JUMP ~[] destination: B6 -> B10  <||@
  Comment 1099 block B107 null  <||@
  Comment 1099 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1099 1128 CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 1099 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 1107 1130 BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B113  <||@
  Comment 1113 block B108 null  <||@
  Comment 1113 1132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 1134 rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1117 1136 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42]  <||@
  Comment 1117 [rax:0, r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1117 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1117 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1128 1138 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B112  <||@
  Comment 1134 block B109 null  <||@
  Comment 1134 1140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1134 1142 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1138 1144 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42]  <||@
  Comment 1138 [rax:0, rsi:0, r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1138 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1145 1146 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1152 1148 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1159 1150 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1161 1152 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1163 1154 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 1169 block B111 null  <||@
  Comment 1169 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1169 1170 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1174 1172 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1183 12  <||@
  Comment 1193 block B36 null  <||@
  Comment 1193 356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1193 358 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 1193 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 1200 360 BRANCH trueDestinationProbability: 0.8652798415056957 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63  <||@
  Comment 1206 block B37 null  <||@
  Comment 1206 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 364 r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1210 366 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 1210 [rdx:0, r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1210 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1218 368 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1222 370 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61  <||@
  Comment 1228 block B38 null  <||@
  Comment 1228 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1228 374 CMP [r13|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 1233 376 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1239 block B40 null  <||@
  Comment 1239 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1239 386 r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 1243 388 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1246 390 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1252 block B42 null  <||@
  Comment 1252 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1252 400 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1260 402 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 1260 {meta{HotSpotMethod<AbstractList.listIterator(int)>}}  <||@
  Comment 1270 404 CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD  <||@
  Comment 1278 406 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60  <||@
  Comment 1284 block B43 null  <||@
  Comment 1284 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1284 410 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 1284 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 1290 412 BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47  <||@
  Comment 1296 block B44 null  <||@
  Comment 1296 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1296 416 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1304 418 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 1304 [rdx:0, r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1304 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1311 420 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1314 422 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 1320 block B46 null  <||@
  Comment 1320 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1320 432 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1324 434 JUMP ~[] destination: B46 -> B55  <||@
  Comment 1324 block B55 null  <||@
  Comment 1324 486 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1324 488 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1328 490 r8|QWORD = LEA [rcx|QWORD + 56] size: QWORD  <||@
  Comment 1332 492 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1336 494 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 1342 block B57 null  <||@
  Comment 1342 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1342 526 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1346 528 AMD64PREFETCH ~[rcx|QWORD + 248] instr: 0  <||@
  Comment 1353 530 rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1356 532 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1356 block B58 null  <||@
  Comment 1356 534 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1356 536 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1359 538 r8|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD  <||@
  Comment 1363 540 r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD  <||@
  Comment 1363 542 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}  <||@
  Comment 1363 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>}}  <||@
  Comment 1373 544 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 1380 546 MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 1383 548 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 1383 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 1390 550 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1394 552 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 1398 554 MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1402 556 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 1406 558 MOV (x: [rsi|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1410 560 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 1410 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 1420 562 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1427 564 MOV (x: [rsi|QWORD[*] + 24], y: r8|QWORD) size: QWORD  <||@
  Comment 1431 566 MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 1431 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1438 568 MOV (x: [rsi|QWORD[*] + 36], y: r11|DWORD) size: DWORD  <||@
  Comment 1442 570 MOV [rsi|QWORD[*] + 40] y: -1 size: DWORD  <||@
  Comment 1449 572 MOV (x: [rsi|QWORD[*] + 44], y: r10|DWORD) size: DWORD  <||@
  Comment 1453 574 MOV (x: [rsi|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1457 576 MOV (x: [rsi|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1461 578 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1464 580 r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1467 582 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1472 584 JUMP ~[] destination: B58 -> B64  <||@
  Comment 1477 block B47 null  <||@
  Comment 1477 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1477 438 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 1477 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 1483 440 BRANCH trueDestinationProbability: 0.5252282556463239 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51  <||@
  Comment 1489 block B48 null  <||@
  Comment 1489 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1489 444 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 1493 446 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 1499 block B49 null  <||@
  Comment 1499 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1499 450 stack:36|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1507 452 JUMP ~[] destination: B49 -> B55  <||@
  Comment 1512 block B51 null  <||@
  Comment 1512 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1512 462 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1512 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1518 464 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59  <||@
  Comment 1524 block B52 null  <||@
  Comment 1524 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1524 468 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1532 470 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1535 472 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 1541 block B54 null  <||@
  Comment 1541 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1541 482 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1545 484 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1550 block B30 null  <||@
  Comment 1550 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1550 276 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1555 278 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1555 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1565 280 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 1570 282 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1575 284 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32]  <||@
  Comment 1575 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1580 [r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1581 286 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1584 288 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1589 290 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1594 292 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1599 block B63 null  <||@
  Comment 1599 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1599 614 stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1604 616 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1607 618 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34]  <||@
  Comment 1607 7  <||@
  Comment 1623 {HotSpotMethod<AbstractCollection.iterator()>}  <||@
  Comment 1628 [stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34, duringCall: true, rethrow: false]
              |0  |1                  |2  |3                  |4  |5 
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1629 620 r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 622 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1637 624 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1642 626 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1647 block B113 null  <||@
  Comment 1647 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1647 1190 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 1647 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 1654 1192 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B117  <||@
  Comment 1660 block B114 null  <||@
  Comment 1660 1194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1660 1196 rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1664 1198 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1666 1200 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 1672 block B115 null  <||@
  Comment 1672 1202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1672 1204 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1677 1206 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1686 12  <||@
  Comment 1696 block B8 null  <||@
  Comment 1696 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1696 74 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}  <||@
  Comment 1696 {meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}}  <||@
  Comment 1703 76 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B122  <||@
  Comment 1709 block B9 null  <||@
  Comment 1709 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1709 80 rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 1713 82 r10|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 1713 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1713 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1721 84 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1726 86 JUMP ~[] destination: B9 -> B10  <||@
  Comment 1731 block B56 null  <||@
  Comment 1731 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1731 498 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1736 500 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1741 502 stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1746 504 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1746 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1756 506 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1759 508 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1764 510 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1769 512 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34]  <||@
  Comment 1769 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1774 [r13:0, r14:0, stack:24, stack:48]at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9, duringCall: false, rethrow: false]
              |0               |1              
     locals:  |r14|DWORD[.]    |stack:40|DWORD 
     stack:   |stack:40|DWORD  |stack:36|DWORD 
  at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2, duringCall: true, rethrow: false]
              |0             |1              
     locals:  |r14|DWORD[.]  |stack:40|DWORD 
  at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34, duringCall: true, rethrow: false]
              |0                                                                             |1  |2 
     locals:  |-                                                                             |-  |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |   |  
  at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15, duringCall: true, rethrow: false]
              |0                                                                             |1 
     locals:  |-                                                                             |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.SubList.iterator(AbstractList.java:691) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34, duringCall: true, rethrow: false]
              |0  |1                  |2  |3                  |4  |5 
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1775 514 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1778 516 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1783 518 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1788 520 rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1793 522 JUMP ~[] destination: B56 -> B58  <||@
  Comment 1798 block B11 null  <||@
  Comment 1798 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1798 96 rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 1801 98 rcx|QWORD[.] = MOV [rsi|DWORD * 8 + 224] size: QWORD  <||@
  Comment 1809 100 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void]  <||@
  Comment 1809 {Object[Class:void]}  <||@
  Comment 1819 102 CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 1822 104 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 1828 block B13 null  <||@
  Comment 1828 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1828 116 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1832 118 r11|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 1839 120 r11|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 1843 122 r11|DWORD = AND r11|DWORD y: -8 size: DWORD  <||@
  Comment 1847 124 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1850 126 r8|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1856 128 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1860 130 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 1866 block B15 null  <||@
  Comment 1866 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1866 154 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1870 156 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1879 158 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1888 160 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1897 162 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1906 164 MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1910 166 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 1917 168 MOV (x: [rcx|QWORD + 8], y: rsi|DWORD) size: DWORD  <||@
  Comment 1920 170 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1927 172 JUMP ~[] destination: B15 -> B16  <||@
  Comment 1932 block B17 loop 0 depth 1 header:2022|LoopBegin  <||@
  Comment 1932 180 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1936 182 MOV (x: [rcx|QWORD + rsi|QWORD * 1], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1940 184 rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD  <||@
  Comment 1944 186 JUMP ~[] destination: B17 -> B16  <||@
  Comment 1944 block B16 loop 0 depth 1 header:2022|LoopBegin  <||@
  Comment 1944 174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1944 176 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1947 178 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1949 block B18 null  <||@
  Comment 1949 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1949 190 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1949 192 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1952 194 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1952 block B19 null  <||@
  Comment 1952 196 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1952 198 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}  <||@
  Comment 1952 {meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}}  <||@
  Comment 1959 200 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 1965 block B20 null  <||@
  Comment 1965 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1965 204 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 1965 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 1972 206 BRANCH trueDestinationProbability: 0.9440844134263875 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 1978 block B21 null  <||@
  Comment 1978 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1978 210 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1981 212 JUMP ~[] destination: B21 -> B26  <||@
  Comment 1986 block B22 null  <||@
  Comment 1986 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1986 216 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1989 218 JUMP ~[] destination: B22 -> B36  <||@
  Comment 1994 block B14 null  <||@
  Comment 1994 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1994 134 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4b3dcec8 encoding: base: 0 shift: 3  <||@
  Comment 1998 136 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2001 138 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2006 140 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2011 142 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4]  <||@
  Comment 2011 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2016 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0               |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]    |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:36|DWORD  |                   |   |   |   |    <||@
  Comment 2017 144 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2020 146 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2025 148 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2030 150 JUMP ~[] destination: B14 -> B19  <||@
  Comment 2032 block B45 null  <||@
  Comment 2032 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2032 426 r10|DWORD = MOVE input: int[-293907|0xfffffffffffb83ed]  <||@
  Comment 2038 428 JUMP ~[] destination: B45 -> B62  <||@
  Comment 2038 block B62 null  <||@
  Comment 2038 604 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2038 606 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2045 608 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2052 610 DEOPT info [bci:32]  <||@
  Comment 2052 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2057 [rdx:0, r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 2058 block B80 null  <||@
  Comment 2058 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2058 786 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2061 788 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2066 790 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2071 792 r11|DWORD = MOVE input: int[-247827|0xfffffffffffc37ed]  <||@
  Comment 2077 794 JUMP ~[] destination: B80 -> B118  <||@
  Comment 2077 block B118 null  <||@
  Comment 2077 1232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2077 1234 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2084 1236 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2091 1238 DEOPT info [bci:42]  <||@
  Comment 2091 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2096 [rdx:0, r9:0, r10:0]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1             |2  |3            |4             |5        
     locals:  |-  |rdx|QWORD[.]  |-  |r9|QWORD[.]  |r10|QWORD[.]  |r8|DWORD   <||@
  Comment 2097 block B122 null  <||@
  Comment 2097 1268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2097 1270 r10|DWORD = MOVE input: int[-302387|0xfffffffffffb62cd]  <||@
  Comment 2103 1272 JUMP ~[] destination: B122 -> B123  <||@
  Comment 2103 block B123 null  <||@
  Comment 2103 1274 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2103 1276 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2110 1278 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2117 1280 DEOPT info [bci:0]  <||@
  Comment 2117 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2122 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2123 block B117 null  <||@
  Comment 2123 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2123 1222 r11|DWORD = MOVE input: int[-279091|0xfffffffffffbbdcd]  <||@
  Comment 2129 1224 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2134 1226 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2139 1228 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2144 1230 JUMP ~[] destination: B117 -> B118  <||@
  Comment 2146 block B23 null  <||@
  Comment 2146 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2146 222 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2151 224 MOV [r15|QWORD + 668] y: -281395 size: DWORD  <||@
  Comment 2162 226 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2169 228 DEOPT info [bci:4]  <||@
  Comment 2169 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2174 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0               |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]    |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:36|DWORD  |                   |   |   |   |    <||@
  Comment 2175 block B3 null  <||@
  Comment 2175 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2175 38 r10|DWORD = MOVE input: int[-298259|0xfffffffffffb72ed]  <||@
  Comment 2181 40 JUMP ~[] destination: B3 -> B123  <||@
  Comment 2183 block B110 null  <||@
  Comment 2183 1156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2183 1158 r11|DWORD = MOVE input: int[-278803|0xfffffffffffbbeed]  <||@
  Comment 2189 1160 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2194 1162 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2199 1164 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2204 1166 JUMP ~[] destination: B110 -> B118  <||@
  Comment 2209 block B12 null  <||@
  Comment 2209 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2209 108 MOV [r15|QWORD + 668] y: -505441 size: DWORD  <||@
  Comment 2220 110 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2227 112 DEOPT info [bci:4]  <||@
  Comment 2227 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2232 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r10|DWORD     |                   |   |   |   |    <||@
  Comment 2233 block B60 null  <||@
  Comment 2233 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2233 594 r10|DWORD = MOVE input: int[-291379|0xfffffffffffb8dcd]  <||@
  Comment 2239 596 JUMP ~[] destination: B60 -> B62  <||@
  Comment 2244 block B41 null  <||@
  Comment 2244 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2244 394 r10|DWORD = MOVE input: int[-291603|0xfffffffffffb8ced]  <||@
  Comment 2250 396 JUMP ~[] destination: B41 -> B62  <||@
  Comment 2255 block B53 null  <||@
  Comment 2255 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2255 476 r10|DWORD = MOVE input: int[-295187|0xfffffffffffb7eed]  <||@
  Comment 2261 478 JUMP ~[] destination: B53 -> B62  <||@
  Comment 2266 block B61 null  <||@
  Comment 2266 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2266 600 r10|DWORD = MOVE input: int[-288787|0xfffffffffffb97ed]  <||@
  Comment 2272 602 JUMP ~[] destination: B61 -> B62  <||@
  Comment 2277 block B28 null  <||@
  Comment 2277 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2277 260 r10|DWORD = MOVE input: int[-285459|0xfffffffffffba4ed]  <||@
  Comment 2283 262 JUMP ~[] destination: B28 -> B34  <||@
  Comment 2283 block B34 null  <||@
  Comment 2283 344 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2283 346 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2290 348 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2297 350 DEOPT info [bci:32]  <||@
  Comment 2297 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2302 [r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |                   |   |   |   |    <||@
  Comment 2303 block B112 null  <||@
  Comment 2303 1174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2303 1176 r11|DWORD = MOVE input: int[-275507|0xfffffffffffbcbcd]  <||@
  Comment 2309 1178 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2314 1180 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2319 1182 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2324 1184 JUMP ~[] destination: B112 -> B118  <||@
  Comment 2329 block B97 null  <||@
  Comment 2329 1002 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2329 1004 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2332 1006 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2337 1008 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2342 1010 r11|DWORD = MOVE input: int[-255763|0xfffffffffffc18ed]  <||@
  Comment 2348 1012 JUMP ~[] destination: B97 -> B118  <||@
  Comment 2353 block B7 null  <||@
  Comment 2353 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2353 68 r10|DWORD = MOVE input: int[-301587|0xfffffffffffb65ed]  <||@
  Comment 2359 70 JUMP ~[] destination: B7 -> B123  <||@
  Comment 2364 block B90 null  <||@
  Comment 2364 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2364 898 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2367 900 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2372 902 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2377 904 r11|DWORD = MOVE input: int[-261403|0xfffffffffffc02e5]  <||@
  Comment 2383 906 JUMP ~[] destination: B90 -> B118  <||@
  Comment 2388 block B96 null  <||@
  Comment 2388 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2388 992 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2391 994 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2396 996 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2401 998 r11|DWORD = MOVE input: int[-258579|0xfffffffffffc0ded]  <||@
  Comment 2407 1000 JUMP ~[] destination: B96 -> B118  <||@
  Comment 2412 block B120 null  <||@
  Comment 2412 1250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2412 1252 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@764582310]  <||@
  Comment 2412 {Object[d.a@764582310]}  <||@
  Comment 2422 1254 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2425 1256 r11|DWORD = MOVE input: int[-234812|0xfffffffffffc6ac4]  <||@
  Comment 2431 1258 JUMP ~[] destination: B120 -> B121  <||@
  Comment 2431 block B121 null  <||@
  Comment 2431 1260 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2431 1262 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2438 1264 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 2445 1266 DEOPT info [bci:37]  <||@
  Comment 2445 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2450 [r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                  |2  |3                  |4  |5 
     locals:  |-             |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |-  |- 
     stack:   |r10|QWORD[.]  |                   |   |                   |   |    <||@
  Comment 2451 block B98 null  <||@
  Comment 2451 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2451 1016 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2454 1018 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2459 1020 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2464 1022 r11|DWORD = MOVE input: int[-252467|0xfffffffffffc25cd]  <||@
  Comment 2470 1024 JUMP ~[] destination: B98 -> B118  <||@
  Comment 2475 block B33 null  <||@
  Comment 2475 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2475 340 r10|DWORD = MOVE input: int[-284691|0xfffffffffffba7ed]  <||@
  Comment 2481 342 JUMP ~[] destination: B33 -> B34  <||@
  Comment 2486 block B82 null  <||@
  Comment 2486 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2486 810 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2489 812 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2494 814 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2499 816 r11|DWORD = MOVE input: int[-244499|0xfffffffffffc44ed]  <||@
  Comment 2505 818 JUMP ~[] destination: B82 -> B118  <||@
  Comment 2510 block B102 null  <||@
  Comment 2510 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2510 1078 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2513 1080 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2518 1082 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2523 1084 r11|DWORD = MOVE input: int[-269875|0xfffffffffffbe1cd]  <||@
  Comment 2529 1086 JUMP ~[] destination: B102 -> B118  <||@
  Comment 2534 block B39 null  <||@
  Comment 2534 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2534 380 r10|DWORD = MOVE input: int[-289555|0xfffffffffffb94ed]  <||@
  Comment 2540 382 JUMP ~[] destination: B39 -> B62  <||@
  Comment 2545 block B73 null  <||@
  Comment 2545 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2545 708 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2548 710 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2553 712 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2558 714 r11|DWORD = MOVE input: int[-241427|0xfffffffffffc50ed]  <||@
  Comment 2564 716 JUMP ~[] destination: B73 -> B118  <||@
  Comment 2569 block B59 null  <||@
  Comment 2569 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2569 588 r10|DWORD = MOVE input: int[-294451|0xfffffffffffb81cd]  <||@
  Comment 2575 590 JUMP ~[] destination: B59 -> B62  <||@
  Comment 2580 block B119 null  <||@
  Comment 2580 1240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2580 1242 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1127995644]  <||@
  Comment 2580 {Object[d.a@1127995644]}  <||@
  Comment 2590 1244 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2593 1246 r11|DWORD = MOVE input: int[-235803|0xfffffffffffc66e5]  <||@
  Comment 2599 1248 JUMP ~[] destination: B119 -> B121  <||@
  Comment 2604 block B106 null  <||@
  Comment 2604 1112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2604 1114 r11|DWORD = MOVE input: int[-274195|0xfffffffffffbd0ed]  <||@
  Comment 2610 1116 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2615 1118 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2620 1120 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2625 1122 JUMP ~[] destination: B106 -> B118  <||@
  Comment 2630 block B79 null  <||@
  Comment 2630 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2630 774 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2633 776 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2638 778 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2643 780 r11|DWORD = MOVE input: int[-249371|0xfffffffffffc31e5]  <||@
  Comment 2649 782 JUMP ~[] destination: B79 -> B118  <||@
  Comment 2654 block B81 null  <||@
  Comment 2654 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2654 798 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2657 800 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2662 802 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2667 804 r11|DWORD = MOVE input: int[-244755|0xfffffffffffc43ed]  <||@
  Comment 2673 806 JUMP ~[] destination: B81 -> B118  <||@
  Comment 2678 block B116 null  <||@
  Comment 2678 1208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2678 1210 r11|DWORD = MOVE input: int[-280083|0xfffffffffffbb9ed]  <||@
  Comment 2684 1212 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2689 1214 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2694 1216 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2699 1218 JUMP ~[] destination: B116 -> B118  <||@
  Comment 2704 block B50 null  <||@
  Comment 2704 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2704 456 r10|DWORD = MOVE input: int[-294163|0xfffffffffffb82ed]  <||@
  Comment 2710 458 JUMP ~[] destination: B50 -> B62  <||@
  Comment 2715 block B94 null  <||@
  Comment 2715 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2715 942 r11|DWORD = MOVE input: int[-266523|0xfffffffffffbeee5]  <||@
  Comment 2721 944 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2726 946 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2731 948 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2736 950 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2741 952 JUMP ~[] destination: B94 -> B118  <||@
  Comment 2746 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2746 4  <||@
  Comment 2752 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2752 5  <||@
  HexCodeFile>>> <|@
end_nmethod
