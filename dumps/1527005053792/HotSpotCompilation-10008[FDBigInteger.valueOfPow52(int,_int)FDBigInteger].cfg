begin_compilation
  name " HotSpotCompilation-10008[sun.misc.FDBigInteger.valueOfPow52(int, int)]"
  method "HotSpotCompilation-10008[sun.misc.FDBigInteger.valueOfPow52(int, int)]"
  date 1527005231543
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a520 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v523 v533 ?58 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v604 v660 v698 v804 v864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j596 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 v657 v695 v801 v861 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 v650 v748 v794 v854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v9 i25 i27 v28 ?58 v382 ?515 i944 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:256) [bci: 28]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:256) [bci: 29]
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i2 
y: i24 
=== Succesors ===
=== Usages ===
v744 v790 ?325 v646 v850 v586 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v581 v642 v740 v786 v846 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v570 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j838 
index: - 
=== Succesors ===
=== Usages ===
j842 j638 j576 j736 j782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j838 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j422 j440 j476 j493 j905 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i874 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
a551 a618 a762 a822 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a551 a716 a618 a822 a675 a762 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 v357 v19 v951 v378 v358 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.valueOfPow52(int, int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 251
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 - - - 
=== Succesors ===
=== Usages ===
v523 a551 a762 a822 a675 a618 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid j871 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j872 j927 j889 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:259) [bci: 46]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 i210 v588 v110 v792 a822 a762 a551 v600 a618 v656 a675 a716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:257) [bci: 32]
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 v28 i944 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 v9 v138 i329 v314 v238 v102 v115 v702 v704 v810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i4 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 1]
stamp: void
trueSuccessorProbability: 0.33243836953868683
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v6 #falseSuccessor: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:270) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid i944 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:257) [bci: 34]
stamp: i32 [0 - 31] ⇈000000000000001f
=== Inputs ===
x: i2 
y: i26 
=== Succesors ===
=== Usages ===
i210 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow2(FDBigInteger.java:355) [bci: 20]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:270) [bci: 97]
stamp: i32
=== Inputs ===
x: i33 
y: i944 
=== Succesors ===
=== Usages ===
v432 v238 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i33 y: i944  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow2(FDBigInteger.java:355) [bci: 23]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:270) [bci: 97]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i210 
y: i4 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i210 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow2(FDBigInteger.java:355) [bci: 23]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:270) [bci: 97]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v392 #falseSuccessor: v390  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow2(FDBigInteger.java:355) [bci: 23]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:270) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91155
stableDimension: 0
stamp: i32 [-91155] ⇊00000000fffe9bed ⇈00000000fffe9bed
stampKind: i32
value: int[-91155|0xfffffffffffe9bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow2(FDBigInteger.java:355) [bci: 23]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:270) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: j539 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j539 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j558 
=== Usages ===
v955 v956 
=== Predecessor ===
v390 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j558  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j539 
index: - 
=== Succesors ===
=== Usages ===
j558 v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v955 
=== Succesors ===
next: j559 
=== Usages ===
j872 j564 v979 
=== Predecessor ===
j539 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v955 #next: j559  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j539 
index: - 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
=== Succesors ===
next: v547 
=== Usages ===
v544 
=== Predecessor ===
j558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v956 #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j558 
y: j871 
=== Succesors ===
=== Usages ===
v544 v560 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j558 y: j871  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j559 
y: j872 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j559 y: j872  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
j559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v545 #falseSuccessor: v546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4569811929430264251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a551 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a551  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a551 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v537 i874 i33 
=== Succesors ===
next: j552 
=== Usages ===
j552 
=== Predecessor ===
v545 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v537 i874 i33 #next: j552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a551 
=== Succesors ===
next: v565 
=== Usages ===
j564 
=== Predecessor ===
a551 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a551 #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
j552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4599600410413931138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v955 
value: j872 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v955 value: j872 stateAfter: - lastLocationAccess: - #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j558 
index: - 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j558 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v979 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v979 #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
v556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j564 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v562 
values: j558 j552 
=== Succesors ===
=== Usages ===
v953 v957 j422 a419 v958 v980 v981 v982 v983 v984 v985 v986 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v562 values: j558 j552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v563 v565 
=== Succesors ===
next: a419 
=== Usages ===
j564 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v563 v565 #next: a419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a419 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j564 
=== Succesors ===
next: a423 
=== Usages ===
a433 
=== Predecessor ===
v562 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j564 #next: a423  <|@  <|@
f <@~|@floating>@ <|@
tid j422 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j564 
y: j421 
=== Succesors ===
=== Usages ===
a423 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j564 y: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a423 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j422 
=== Succesors ===
next: j576 
=== Usages ===
a434 a427 
=== Predecessor ===
a419 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j422 #next: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v577 
=== Usages ===
v577 
=== Predecessor ===
a423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
value: j576 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
j576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v957 value: j576 stateAfter: - lastLocationAccess: - #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 value: v877 stateAfter: - lastLocationAccess: - #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
value: i25 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v980 value: i25 stateAfter: - lastLocationAccess: - #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v981 value: i33 stateAfter: - lastLocationAccess: - #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
value: i589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v982 value: i589 stateAfter: - lastLocationAccess: - #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a427 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a423 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
value: a427 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v983 value: a427 stateAfter: - lastLocationAccess: - #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v984 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v984 value: i33 stateAfter: - lastLocationAccess: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
value: j596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v985 value: j596 stateAfter: - lastLocationAccess: - #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
value: v886 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v986 value: v886 stateAfter: - lastLocationAccess: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
value: i210 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a433 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v953 value: i210 stateAfter: - lastLocationAccess: - #next: a433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a433 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a419 
=== Succesors ===
next: a434 
=== Usages ===
v268 
=== Predecessor ===
v432 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a419 #next: a434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a434 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a423 
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
a433 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a423 #next: v435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
a434 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v268  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a433 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a433 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604188080165661238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:252) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:252) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:252) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0013406459475929777
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v10 #falseSuccessor: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4561393807309111613
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a14 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a14  <|@  <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 9]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@49dac675
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.big5pow(int)>
=== Inputs ===
arguments: i1 
=== Succesors ===
=== Usages ===
a14 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i1  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<FDBigInteger.valueOfPow52(int, int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 253
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
a14 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a14 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 9]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.big5pow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v357 
stateDuring: ?514 
=== Succesors ===
next: v16 
=== Usages ===
v16 
=== Predecessor ===
v10 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v357 stateDuring: ?514 #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 12]
stamp: void
=== Inputs ===
result: a14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a14 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a14 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B45" 
    xhandlers
    flags 
    probability 4604180019048437078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:254) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:254) [bci: 17]
rawvalue: 14
stableDimension: 0
stamp: i32 [14] ⇊000000000000000e ⇈000000000000000e
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 v358 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:254) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i18 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:254) [bci: 18]
stamp: void
trueSuccessorProbability: 0.9973151086160605
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B43" 
    xhandlers
    flags 
    probability 4604163896813988758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:255) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:255) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i18 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:255) [bci: 25]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v394 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v394 #falseSuccessor: v396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B18" 
    xhandlers
    flags 
    probability 4604163896813988758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:255) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: i945 
=== Usages ===
i945 
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i945  <|@  <|@
f <@~|@floating>@ <|@
tid a17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:254) [bci: 14]
rawvalue: int[14]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[14]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a17 
index: i1 
=== Succesors ===
=== Usages ===
i945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a17 index: i1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i945 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:255) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v394 
address: v951 
=== Succesors ===
next: v31 
=== Usages ===
i49 v449 i44 v138 
=== Predecessor ===
v394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v394 address: v951 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:258) [bci: 39]
stamp: void
=== Inputs ===
x: i2 
y: i26 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i2 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:258) [bci: 39]
stamp: void
trueSuccessorProbability: 0.3723690651003426
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i945 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:259) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:259) [bci: 54]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i945 
y: i4 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i945 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:259) [bci: 54]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v400 #falseSuccessor: v398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:259) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid i525 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93971
stableDimension: 0
stamp: i32 [-93971] ⇊00000000fffe90ed ⇈00000000fffe90ed
stampKind: i32
value: int[-93971|0xfffffffffffe90ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:259) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: j607 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j607 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j622 
=== Usages ===
v959 v960 
=== Predecessor ===
v398 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j622  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
j622 v624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
=== Succesors ===
next: j623 
=== Usages ===
j889 j628 v987 
=== Predecessor ===
j607 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v959 #next: j623  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j623 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
=== Succesors ===
next: v615 
=== Usages ===
v612 
=== Predecessor ===
j622 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid j889 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j622 
y: j871 
=== Succesors ===
=== Usages ===
v612 v624 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j871  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j623 
y: j889 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j623 y: j889  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
j623 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v613 #falseSuccessor: v614  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4567855217805001959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a618 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a618 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v537 i874 i33 
=== Succesors ===
next: j619 
=== Usages ===
j619 
=== Predecessor ===
v613 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v537 i874 i33 #next: j619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j619 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a618 
=== Succesors ===
next: v629 
=== Usages ===
j628 
=== Predecessor ===
a618 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a618 #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
j619 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4597998812987258253
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
value: j889 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v959 value: j889 stateAfter: - lastLocationAccess: - #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j622 
index: - 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j622 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v987 
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v987 #next: v627  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v621 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j628 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v626 
values: j622 j619 
=== Succesors ===
=== Usages ===
v954 v961 j440 a438 v962 v988 v989 v990 v991 v992 v993 v994 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v626 values: j622 j619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v627 v629 
=== Succesors ===
next: a438 
=== Usages ===
j628 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v627 v629 #next: a438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a438 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j628 
=== Succesors ===
next: a441 
=== Usages ===
a450 
=== Predecessor ===
v626 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j628 #next: a441  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j628 
y: j421 
=== Succesors ===
=== Usages ===
a441 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j628 y: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a441 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j440 
=== Succesors ===
next: j638 
=== Usages ===
a451 a444 
=== Predecessor ===
a438 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j440 #next: j638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v639 
=== Usages ===
v639 
=== Predecessor ===
a441 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v961 
value: j638 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
j638 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v961 value: j638 stateAfter: - lastLocationAccess: - #next: v642  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: v877 stateAfter: - lastLocationAccess: - #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
value: i25 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v988 value: i25 stateAfter: - lastLocationAccess: - #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v989 value: i33 stateAfter: - lastLocationAccess: - #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v990 
value: i589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v990 value: i589 stateAfter: - lastLocationAccess: - #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a444 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a441 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
value: a444 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v991 value: a444 stateAfter: - lastLocationAccess: - #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v992 value: i33 stateAfter: - lastLocationAccess: - #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: j596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: j596 stateAfter: - lastLocationAccess: - #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
value: v886 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 value: v886 stateAfter: - lastLocationAccess: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
value: i945 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a450 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v954 value: i945 stateAfter: - lastLocationAccess: - #next: a450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a450 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a438 
=== Succesors ===
next: a451 
=== Usages ===
v170 
=== Predecessor ===
v449 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a438 #next: a451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a451 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a441 
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
a450 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a441 #next: v452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
a451 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v170  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a450 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a450 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B19" "B39" 
    xhandlers
    flags 
    probability 4601188978143854428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: j664 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j664 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j679 
=== Usages ===
v975 v974 
=== Predecessor ===
v30 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j679  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j664 
index: - 
=== Succesors ===
=== Usages ===
j679 v828 v681 v768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j679 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
=== Succesors ===
next: j680 
=== Usages ===
j899 j685 v995 v1013 j772 j832 j927 v1024 
=== Predecessor ===
j664 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v974 #next: j680  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j664 
index: - 
=== Succesors ===
=== Usages ===
j680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v975 
=== Succesors ===
next: v105 
=== Usages ===
v669 v816 
=== Predecessor ===
j679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v975 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid j927 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j679 
y: j871 
=== Succesors ===
=== Usages ===
v816 v828 v768 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j679 y: j871  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j680 
y: j927 
=== Succesors ===
=== Usages ===
v819 v759 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j680 y: j927  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:257) [bci: 34]
stamp: i32 [0 - 31] ⇈000000000000001f
=== Inputs ===
x: i2 
y: i26 
=== Succesors ===
=== Usages ===
i44 i48 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 70]
stamp: i32
=== Inputs ===
x: i945 
y: i27 
=== Succesors ===
=== Usages ===
v868 v808 v314 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i945 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 75]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 79]
stamp: i32 [1 - 32] ⇈000000000000003f
=== Inputs ===
x: i47 
y: i27 
=== Succesors ===
=== Usages ===
i49 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i47 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 80]
stamp: i32
=== Inputs ===
x: i945 
y: i48 
=== Succesors ===
=== Usages ===
v870 v102 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i945 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i49 
y: i4 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i49 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 62]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
?325 v852 v860 v369 v800 v694 a675 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
trueSuccessorProbability: 0.08541926203716788
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
j680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v103 #falseSuccessor: v104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B35" 
    xhandlers
    flags 
    probability 4585297838572830872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i44 
y: i4 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i44 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
trueSuccessorProbability: 0.24170562079580438
=== Inputs ===
condition: v314 
=== Succesors ===
trueSuccessor: v315 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v314 #trueSuccessor: v315 #falseSuccessor: v316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4576120205832366747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:374) [bci: 36]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid j593 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j899 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j679 
y: j593 
=== Succesors ===
=== Usages ===
v669 v681 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j679 y: j593  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j680 
y: j899 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j680 y: j899  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v669 
=== Succesors ===
trueSuccessor: v670 
falseSuccessor: v671 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v669 #trueSuccessor: v670 #falseSuccessor: v671  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4545985651975141007
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a675 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a675 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v537 i42 i33 
=== Succesors ===
next: j676 
=== Usages ===
j676 
=== Predecessor ===
v670 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v537 i42 i33 #next: j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j676 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a675 
=== Succesors ===
next: v686 
=== Usages ===
j685 
=== Predecessor ===
a675 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a675 #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
j676 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576070539991853614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: j899 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: j899 stateAfter: - lastLocationAccess: - #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: - 
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v995 
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v995 #next: v684  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
v678 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4576120205832366747
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j685 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v683 
values: j679 j676 
=== Succesors ===
=== Usages ===
v965 v964 a455 v963 v996 v997 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v683 values: j679 j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v684 v686 
=== Succesors ===
next: a455 
=== Usages ===
j685 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v684 v686 #next: a455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a455 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j685 
=== Succesors ===
next: v694 
=== Usages ===
a460 
=== Predecessor ===
v683 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j685 #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j685 
index: - 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j685 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
value: i42 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
a455 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v963 value: i42 stateAfter: - lastLocationAccess: - #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j685 
index: - 
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j685 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
value: j596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v964 value: j596 stateAfter: - lastLocationAccess: - #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j685 
index: - 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j685 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
value: v886 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v965 value: v886 stateAfter: - lastLocationAccess: - #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j685 
index: - 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j685 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v996 value: i4 stateAfter: - lastLocationAccess: - #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j685 
index: - 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j685 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v997 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a460 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v997 value: i4 stateAfter: - lastLocationAccess: - #next: a460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a460 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a455 
=== Succesors ===
next: v461 
=== Usages ===
a467 ?347 v952 
=== Predecessor ===
v704 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a455 #next: v461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
a460 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v106  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
v461 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B28" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i329 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v107 
values: i4 i113 
=== Succesors ===
=== Usages ===
?109 v110 i113 v746 j948 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v107 values: i4 i113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 0.3187490602916856
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v106 
=== Succesors ===
next: v406 
=== Usages ===
i329 v117 v121 v405 v410 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v106 #next: v406  <|@  <|@
tid a173 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@750ff2c2
hasIdentity: true
objectId: 2
stamp: a!# Lsun/misc/FDBigInteger;
type: HotSpotType<Lsun/misc/FDBigInteger;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?109 ?325 ?80 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 83
code: ResolvedJavaMethodBytecode<FDBigInteger.valueOfPow52(int, int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 261
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - - a173 
=== Succesors ===
=== Usages ===
?128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - a173  <|@  <|@
tid ?128 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<FDBigInteger.<init>(int[], int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 189
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - - 
=== Succesors ===
=== Usages ===
?109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - -  <|@  <|@
tid a191 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<int>
hasIdentity: true
length: 2
objectId: 4
stamp: a!# [I
=== Inputs ===
=== Succesors ===
=== Usages ===
?347 ?325 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
tid ?325 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a173 
values: i25 i42 - a191 
=== Succesors ===
=== Usages ===
?109 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a173 values: i25 i42 - a191  <|@  <|@
tid ?347 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a191 
materializedValue: a460 
=== Succesors ===
=== Usages ===
?109 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a191 materializedValue: a460  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<FDBigInteger.trimLeadingZeros()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 373
stackSize: 0
=== Inputs ===
outerFrameState: ?128 
values: a173 i329 
virtualObjectMappings: ?325 ?347 
=== Succesors ===
=== Usages ===
v388 a716 v533 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?128 values: a173 i329 virtualObjectMappings: ?325 ?347  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i329 
y: i33 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i329 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v405 #falseSuccessor: v402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v107 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v107 #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid i530 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -94227
stableDimension: 0
stamp: i32 [-94227] ⇊00000000fffe8fed ⇈00000000fffe8fed
stampKind: i32
value: int[-94227|0xfffffffffffe8fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i531 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 13]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 31]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: i32
=== Inputs ===
x: i329 
y: i99 
=== Succesors ===
=== Usages ===
i329 v369 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i329 y: i99  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i113 
y: i42 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i113 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v369 
=== Succesors ===
trueSuccessor: v407 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v369 #trueSuccessor: v407 #falseSuccessor: v410  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: i946 
=== Usages ===
i946 
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i946  <|@  <|@
f <@~|@floating>@ <|@
tid j948 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i329 
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i329  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a460 
index: j948 
=== Succesors ===
=== Usages ===
i946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a460 index: j948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i946 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v407 
address: v952 
=== Succesors ===
next: v120 
=== Usages ===
v115 
=== Predecessor ===
v407 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v407 address: v952 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i946 
y: i4 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i946 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
trueSuccessorProbability: 0.24170562079580438
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v116 
falseSuccessor: v117 
=== Usages ===
=== Predecessor ===
i946 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v116 #falseSuccessor: v117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4559261506757308497
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:374) [bci: 36]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?109 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?109 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
loopBegin: v107 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4566948227651741346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 42]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v107 
=== Succesors ===
next: j705 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v107 #next: j705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j705 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j720 
=== Usages ===
v966 v967 
=== Predecessor ===
v117 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j720  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j705 
index: - 
=== Succesors ===
=== Usages ===
j720 v722 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j705 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j720 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
=== Succesors ===
next: j721 
=== Usages ===
j905 j726 v998 
=== Predecessor ===
j705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v966 #next: j721  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j705 
index: - 
=== Succesors ===
=== Usages ===
j721 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j705 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j721 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
=== Succesors ===
next: v713 
=== Usages ===
v710 
=== Predecessor ===
j720 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v967 #next: v713  <|@  <|@
f <@~|@floating>@ <|@
tid j905 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j720 
y: j421 
=== Succesors ===
=== Usages ===
v710 v722 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j720 y: j421  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j721 
y: j905 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j721 y: j905  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v710 
=== Succesors ===
trueSuccessor: v711 
falseSuccessor: v712 
=== Usages ===
=== Predecessor ===
j721 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v710 #trueSuccessor: v711 #falseSuccessor: v712  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4536767535695267971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a716 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a716  <|@  <|@
f <@~|@floating>@ <|@
tid i907 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a716 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?109 
arguments: v537 i907 i33 
=== Succesors ===
next: j717 
=== Usages ===
j717 
=== Predecessor ===
v711 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?109 arguments: v537 i907 i33 #next: j717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j717 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a716 
=== Succesors ===
next: v727 
=== Usages ===
j726 
=== Predecessor ===
a716 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a716 #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
j717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4566900209600487057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: j905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: j905 stateAfter: - lastLocationAccess: - #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v998 
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v998 #next: v725  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 4566948227651741346
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j726 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v724 
values: j720 j717 
=== Succesors ===
=== Usages ===
v969 v968 a464 v999 v1000 v1001 v1002 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v724 values: j720 j717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v725 v727 
=== Succesors ===
next: a464 
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v725 v727 #next: a464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a464 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j726 
=== Succesors ===
next: j736 
=== Usages ===
a470 
=== Predecessor ===
v724 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j726 #next: j736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v737 
=== Usages ===
v737 
=== Predecessor ===
a464 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v737  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
value: j736 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
j736 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v968 value: j736 stateAfter: - lastLocationAccess: - #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v969 value: v877 stateAfter: - lastLocationAccess: - #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
value: i25 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v999 value: i25 stateAfter: - lastLocationAccess: - #next: v746  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
value: i329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1000 value: i329 stateAfter: - lastLocationAccess: - #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
value: i589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1001 value: i589 stateAfter: - lastLocationAccess: - #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a467 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a460 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1002 
value: a467 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a470 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1002 value: a467 stateAfter: - lastLocationAccess: - #next: a470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a470 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a464 
=== Succesors ===
next: v471 
=== Usages ===
v169 
=== Predecessor ===
v750 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a464 #next: v471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
a470 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v169  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a470 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a470 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v107 
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v107 #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid i535 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -94747
stableDimension: 0
stamp: i32 [-94747] ⇊00000000fffe8de5 ⇈00000000fffe8de5
stampKind: i32
value: int[-94747|0xfffffffffffe8de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i531 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B25" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i531 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-94747 - -94227] ⇊00000000fffe8de5 ⇈00000000fffe8fed
valueDescription: i32
=== Inputs ===
merge: v528 
values: i530 i535 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v528 values: i530 i535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v529 v534 
=== Succesors ===
next: v533 
=== Usages ===
i531 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v529 v534 #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?109 
actionAndReason: i531 
speculation: a520 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?109 actionAndReason: i531 speculation: a520  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4583447964456840163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 42]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v759  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v757 
falseSuccessor: v758 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v757 #falseSuccessor: v758  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553621699195187350
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a762 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a762 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v537 i874 i33 
=== Succesors ===
next: j763 
=== Usages ===
j763 
=== Predecessor ===
v757 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v537 i874 i33 #next: j763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j763 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a762 
=== Succesors ===
next: v773 
=== Usages ===
j772 
=== Predecessor ===
a762 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a762 #next: v773  <|@  <|@
f <@*|@fixed>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
j763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583370057026356001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: j927 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: j927 stateAfter: - lastLocationAccess: - #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: - 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1024 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1024 #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
v765 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4583447964456840163
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j772 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v770 
values: j679 j763 
=== Succesors ===
=== Usages ===
v1012 v972 j476 a474 v973 v1004 v1005 v1006 v1007 v1008 v1009 v1010 v1011 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v770 values: j679 j763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v771 v773 
=== Succesors ===
next: a474 
=== Usages ===
j772 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v771 v773 #next: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a474 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j772 
=== Succesors ===
next: a477 
=== Usages ===
a486 
=== Predecessor ===
v770 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j772 #next: a477  <|@  <|@
f <@~|@floating>@ <|@
tid j476 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j772 
y: j421 
=== Succesors ===
=== Usages ===
a477 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j772 y: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a477 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j476 
=== Succesors ===
next: j782 
=== Usages ===
a487 a480 
=== Predecessor ===
a474 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j476 #next: j782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j782 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v783 
=== Usages ===
v783 
=== Predecessor ===
a477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v972 
value: j782 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
j782 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v972 value: j782 stateAfter: - lastLocationAccess: - #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v973 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v973 value: v877 stateAfter: - lastLocationAccess: - #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
value: i25 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1004 value: i25 stateAfter: - lastLocationAccess: - #next: v792  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v794 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1005 value: i33 stateAfter: - lastLocationAccess: - #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
value: i589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v796 
=== Usages ===
=== Predecessor ===
v792 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1006 value: i589 stateAfter: - lastLocationAccess: - #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a480 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a477 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
value: a480 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1007 value: a480 stateAfter: - lastLocationAccess: - #next: v800  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
value: i42 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1008 value: i42 stateAfter: - lastLocationAccess: - #next: v801  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
value: j596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1009 value: j596 stateAfter: - lastLocationAccess: - #next: v804  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
value: v886 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1010 value: v886 stateAfter: - lastLocationAccess: - #next: v808  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1011 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v810 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1011 value: i44 stateAfter: - lastLocationAccess: - #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1012 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a486 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1012 value: i4 stateAfter: - lastLocationAccess: - #next: a486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a486 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a474 
=== Succesors ===
next: a487 
=== Usages ===
v334 
=== Predecessor ===
v810 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a474 #next: a487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a487 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a477 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
a486 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a477 #next: v488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
a487 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a486 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a486 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600546850951724873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:381) [bci: 56]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v819  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v818 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v817 #falseSuccessor: v818  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570946718249600716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a822 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a822 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v537 i874 i33 
=== Succesors ===
next: j823 
=== Usages ===
j823 
=== Predecessor ===
v817 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v537 i874 i33 #next: j823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j823 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a822 
=== Succesors ===
next: v833 
=== Usages ===
j832 
=== Predecessor ===
a822 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a822 #next: v833  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
j823 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600478098641386683
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: j927 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v825 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: j927 stateAfter: - lastLocationAccess: - #next: v825  <|@  <|@
f <@~|@floating>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: - 
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1013 
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1013 #next: v831  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors 
    xhandlers
    flags 
    probability 4600546850951724873
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j832 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v830 
values: j679 j823 
=== Succesors ===
=== Usages ===
v1022 v977 j493 a491 v978 v1014 v1015 v1016 v1017 v1018 v1019 v1020 v1021 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v830 values: j679 j823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v831 v833 
=== Succesors ===
next: a491 
=== Usages ===
j832 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v831 v833 #next: a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a491 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j832 
=== Succesors ===
next: a494 
=== Usages ===
a503 
=== Predecessor ===
v830 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j832 #next: a494  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j832 
y: j421 
=== Succesors ===
=== Usages ===
a494 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j832 y: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a494 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j493 
=== Succesors ===
next: j842 
=== Usages ===
a504 a497 
=== Predecessor ===
a491 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j493 #next: j842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j842 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v843 
=== Usages ===
v843 
=== Predecessor ===
a494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v843  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
value: j842 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
j842 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v977 value: j842 stateAfter: - lastLocationAccess: - #next: v846  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v978 value: v877 stateAfter: - lastLocationAccess: - #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
value: i25 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1014 value: i25 stateAfter: - lastLocationAccess: - #next: v852  <|@  <|@
f <@~|@floating>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
value: i42 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1015 value: i42 stateAfter: - lastLocationAccess: - #next: v854  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1016 
value: i589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1016 value: i589 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a497 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a494 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1017 
value: a497 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1017 value: a497 stateAfter: - lastLocationAccess: - #next: v860  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1018 
value: i42 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1018 value: i42 stateAfter: - lastLocationAccess: - #next: v861  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1019 
value: j596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v864 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1019 value: j596 stateAfter: - lastLocationAccess: - #next: v864  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1020 
value: v886 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1020 value: v886 stateAfter: - lastLocationAccess: - #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1021 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1021 value: i44 stateAfter: - lastLocationAccess: - #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1022 
value: i49 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a503 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1022 value: i49 stateAfter: - lastLocationAccess: - #next: a503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a503 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a491 
=== Succesors ===
next: a504 
=== Usages ===
v168 
=== Predecessor ===
v870 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a491 #next: a504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a504 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a494 
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
a503 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a494 #next: v505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
a504 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a503 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a503 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:255) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91931
stableDimension: 0
stamp: i32 [-91931] ⇊00000000fffe98e5 ⇈00000000fffe98e5
stampKind: i32
value: int[-91931|0xfffffffffffe98e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
v396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B2" "B13" "B43" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-93971 - -91155] ⇊00000000fffe90e5 ⇈00000000fffe9bed
valueDescription: i32
=== Inputs ===
merge: v517 
values: i519 i525 i527 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v517 values: i519 i525 i527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v518 v524 v526 
=== Succesors ===
next: v523 
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v518 v524 v526 #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i521 
speculation: a520 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i521 speculation: a520  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4565897406936481793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: a57 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a57  <|@  <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 88]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@fd5699e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.big5pow(int)>
=== Inputs ===
arguments: i1 
=== Succesors ===
=== Usages ===
a57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i1  <|@  <|@
tid ?515 <|@
d <@d|@=== Debug Properties ===
bci: 88
code: ResolvedJavaMethodBytecode<FDBigInteger.valueOfPow52(int, int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 267
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 - - - 
=== Succesors ===
=== Usages ===
a57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
bci: 88
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 88]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.big5pow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v378 
stateDuring: ?515 
=== Succesors ===
next: v1023 
=== Usages ===
v1023 v382 
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v378 stateDuring: ?515 #next: v1023  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 91
code: ResolvedJavaMethodBytecode<FDBigInteger.valueOfPow52(int, int)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 88]
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 267
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - i2 - - - a520 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 - - - a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?58 
object: a57 
=== Succesors ===
next: a60 
=== Usages ===
=== Predecessor ===
a57 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?58 object: a57 #next: a60  <|@  <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 92]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@3423cd4e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a57 i2 
=== Succesors ===
=== Usages ===
a60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a57 i2  <|@  <|@
tid ?516 <|@
d <@d|@=== Debug Properties ===
bci: 92
code: ResolvedJavaMethodBytecode<FDBigInteger.valueOfPow52(int, int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 267
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
a60 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a60 <|@
d <@d|@=== Debug Properties ===
bci: 92
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 92]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v382 
stateDuring: ?516 
=== Succesors ===
next: v62 
=== Usages ===
v62 
=== Predecessor ===
v1023 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v382 stateDuring: ?516 #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 95]
stamp: void
=== Inputs ===
result: a60 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a60 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a60 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a520 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v523 v533 ?58 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v604 v660 v698 v804 v864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j596 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 v657 v695 v801 v861 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 v650 v748 v794 v854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v9 i25 i27 v28 ?58 v382 ?515 i944 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:256) [bci: 28]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:256) [bci: 29]
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i2 
y: i24 
=== Succesors ===
=== Usages ===
v744 v790 ?325 v646 v850 v586 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
result meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v581 v642 v740 v786 v846 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v570 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
result [v3|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j838 
index: - 
=== Succesors ===
=== Usages ===
j842 j638 j576 j736 j782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j838 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j422 j440 j476 j493 j905 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i874 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
a551 a618 a762 a822 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a551 a716 a618 a822 a675 a762 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 v357 v19 v951 v378 v358 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.valueOfPow52(int, int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 251
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 - - - 
=== Succesors ===
=== Usages ===
v523 a551 a762 a822 a675 a618 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid j871 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j872 j927 j889 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:259) [bci: 46]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 i210 v588 v110 v792 a822 a762 a551 v600 a618 v656 a675 a716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:257) [bci: 32]
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 v28 i944 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 v9 v138 i329 v314 v238 v102 v115 v702 v704 v810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i4 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 1]
stamp: void
trueSuccessorProbability: 0.33243836953868683
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v6 #falseSuccessor: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2bd54cd1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SAR v1|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.33243836953868683 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:270) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid i944 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:257) [bci: 34]
stamp: i32 [0 - 31] ⇈000000000000001f
=== Inputs ===
x: i2 
y: i26 
=== Succesors ===
=== Usages ===
i210 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow2(FDBigInteger.java:355) [bci: 20]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:270) [bci: 97]
stamp: i32
=== Inputs ===
x: i33 
y: i944 
=== Succesors ===
=== Usages ===
v432 v238 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i33 y: i944  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow2(FDBigInteger.java:355) [bci: 23]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:270) [bci: 97]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i210 
y: i4 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i210 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow2(FDBigInteger.java:355) [bci: 23]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:270) [bci: 97]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v392 #falseSuccessor: v390  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND v1|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow2(FDBigInteger.java:355) [bci: 23]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:270) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
result int[-91155|0xfffffffffffe9bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91155
stableDimension: 0
stamp: i32 [-91155] ⇊00000000fffe9bed ⇈00000000fffe9bed
stampKind: i32
value: int[-91155|0xfffffffffffe9bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91155|0xfffffffffffe9bed]] destination: B2 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow2(FDBigInteger.java:355) [bci: 23]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:270) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: j539 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j539 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j558 
=== Usages ===
v955 v956 
=== Predecessor ===
v390 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j558  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j539 
index: - 
=== Succesors ===
=== Usages ===
j558 v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j558 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v955 
=== Succesors ===
next: j559 
=== Usages ===
j872 j564 v979 
=== Predecessor ===
j539 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v955 #next: j559  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j539 
index: - 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j559 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
=== Succesors ===
next: v547 
=== Usages ===
v544 
=== Predecessor ===
j558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v956 #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j558 
y: j871 
=== Succesors ===
=== Usages ===
v544 v560 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j558 y: j871  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j559 
y: j872 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j559 y: j872  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
j559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v545 #falseSuccessor: v546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA [v8|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4569811929430264251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a551 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a551  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a551 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v537 i874 i33 
=== Succesors ===
next: j552 
=== Usages ===
j552 
=== Predecessor ===
v545 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v537 i874 i33 #next: j552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a551 
=== Succesors ===
next: v565 
=== Usages ===
j564 
=== Predecessor ===
a551 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a551 #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
j552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4599600410413931138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v955 
value: j872 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v955 value: j872 stateAfter: - lastLocationAccess: - #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
result [v8|QWORD + 248] <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j558 
index: - 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j558 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v979 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v979 #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
v556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v8|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j564 <|@
result v11|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v562 
values: j558 j552 
=== Succesors ===
=== Usages ===
v953 v957 j422 a419 v958 v980 v981 v982 v983 v984 v985 v986 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v562 values: j558 j552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v563 v565 
=== Succesors ===
next: a419 
=== Usages ===
j564 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v563 v565 #next: a419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a419 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j564 
=== Succesors ===
next: a423 
=== Usages ===
a433 
=== Predecessor ===
v562 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j564 #next: a423  <|@  <|@
f <@~|@floating>@ <|@
tid j422 <|@
result v13|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j564 
y: j421 
=== Succesors ===
=== Usages ===
a423 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j564 y: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a423 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j422 
=== Succesors ===
next: j576 
=== Usages ===
a434 a427 
=== Predecessor ===
a419 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j422 #next: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j576 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v577 
=== Usages ===
v577 
=== Predecessor ===
a423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
result [v11|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
value: j576 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
j576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v957 value: j576 stateAfter: - lastLocationAccess: - #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
result [v11|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 value: v877 stateAfter: - lastLocationAccess: - #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
result [v11|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
value: i25 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v980 value: i25 stateAfter: - lastLocationAccess: - #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
result [v11|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v981 value: i33 stateAfter: - lastLocationAccess: - #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
result [v11|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
value: i589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v982 value: i589 stateAfter: - lastLocationAccess: - #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
result [v11|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a427 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a423 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
value: a427 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v983 value: a427 stateAfter: - lastLocationAccess: - #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
result [v11|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v984 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v984 value: i33 stateAfter: - lastLocationAccess: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
result [v11|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
value: j596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v985 value: j596 stateAfter: - lastLocationAccess: - #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
result [v11|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
value: v886 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v986 value: v886 stateAfter: - lastLocationAccess: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
result [v11|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
value: i210 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a433 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v953 value: i210 stateAfter: - lastLocationAccess: - #next: a433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a433 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a419 
=== Succesors ===
next: a434 
=== Usages ===
v268 
=== Predecessor ===
v432 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a419 #next: a434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a434 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a423 
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
a433 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a423 #next: v435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
a434 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v268  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a433 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a433 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v11|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = LEA [v11|QWORD[*] + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*]], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v11|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = COMPRESSPOINTER (input: v14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 24], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 44] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 48], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604188080165661238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:252) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:252) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:252) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0013406459475929777
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v10 #falseSuccessor: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0013406459475929777 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4561393807309111613
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a14 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a14  <|@  <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 9]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@49dac675
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.big5pow(int)>
=== Inputs ===
arguments: i1 
=== Succesors ===
=== Usages ===
a14 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i1  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<FDBigInteger.valueOfPow52(int, int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 253
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
a14 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a14 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 9]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.big5pow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v357 
stateDuring: ?514 
=== Succesors ===
next: v16 
=== Usages ===
v16 
=== Predecessor ===
v10 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v357 stateDuring: ?514 #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 12]
stamp: void
=== Inputs ===
result: a14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a14 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a14 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 9]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.big5pow(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B45" 
    xhandlers
    flags 
    probability 4604180019048437078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:254) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result int[14|0xe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:254) [bci: 17]
rawvalue: 14
stableDimension: 0
stamp: i32 [14] ⇊000000000000000e ⇈000000000000000e
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 v358 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:254) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i18 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:254) [bci: 18]
stamp: void
trueSuccessorProbability: 0.9973151086160605
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v0|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9973151086160605 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B43" 
    xhandlers
    flags 
    probability 4604163896813988758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:255) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:255) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i18 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:255) [bci: 25]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v394 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v394 #falseSuccessor: v396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v0|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B18" 
    xhandlers
    flags 
    probability 4604163896813988758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:255) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: i945 
=== Usages ===
i945 
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i945  <|@  <|@
f <@~|@floating>@ <|@
tid a17 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:254) [bci: 14]
rawvalue: int[14]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[14]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
result [v18|QWORD[.] + v0|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a17 
index: i1 
=== Succesors ===
=== Usages ===
i945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a17 index: i1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i945 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:255) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v394 
address: v951 
=== Succesors ===
next: v31 
=== Usages ===
i49 v449 i44 v138 
=== Predecessor ===
v394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v394 address: v951 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:258) [bci: 39]
stamp: void
=== Inputs ===
x: i2 
y: i26 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i2 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:258) [bci: 39]
stamp: void
trueSuccessorProbability: 0.3723690651003426
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i945 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v18|QWORD[.] + v0|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v1|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3723690651003426 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:259) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:259) [bci: 54]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i945 
y: i4 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i945 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:259) [bci: 54]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v400 #falseSuccessor: v398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:259) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid i525 <|@
result int[-93971|0xfffffffffffe90ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93971
stableDimension: 0
stamp: i32 [-93971] ⇊00000000fffe90ed ⇈00000000fffe90ed
stampKind: i32
value: int[-93971|0xfffffffffffe90ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93971|0xfffffffffffe90ed]] destination: B13 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:259) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: j607 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j607 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j622 
=== Usages ===
v959 v960 
=== Predecessor ===
v398 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j622  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
j622 v624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j622 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
=== Succesors ===
next: j623 
=== Usages ===
j889 j628 v987 
=== Predecessor ===
j607 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v959 #next: j623  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j607 
index: - 
=== Succesors ===
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j623 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
=== Succesors ===
next: v615 
=== Usages ===
v612 
=== Predecessor ===
j622 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid j889 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j622 
y: j871 
=== Succesors ===
=== Usages ===
v612 v624 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j871  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j623 
y: j889 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j623 y: j889  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
j623 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v613 #falseSuccessor: v614  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4567855217805001959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a618 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a618 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v537 i874 i33 
=== Succesors ===
next: j619 
=== Usages ===
j619 
=== Predecessor ===
v613 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v537 i874 i33 #next: j619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j619 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a618 
=== Succesors ===
next: v629 
=== Usages ===
j628 
=== Predecessor ===
a618 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a618 #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
j619 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4597998812987258253
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
value: j889 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v959 value: j889 stateAfter: - lastLocationAccess: - #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
result [v20|QWORD + 248] <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j622 
index: - 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j622 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v987 
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v987 #next: v627  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v621 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j628 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v626 
values: j622 j619 
=== Succesors ===
=== Usages ===
v954 v961 j440 a438 v962 v988 v989 v990 v991 v992 v993 v994 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v626 values: j622 j619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v627 v629 
=== Succesors ===
next: a438 
=== Usages ===
j628 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v627 v629 #next: a438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a438 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j628 
=== Succesors ===
next: a441 
=== Usages ===
a450 
=== Predecessor ===
v626 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j628 #next: a441  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
result v25|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j628 
y: j421 
=== Succesors ===
=== Usages ===
a441 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j628 y: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a441 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j440 
=== Succesors ===
next: j638 
=== Usages ===
a451 a444 
=== Predecessor ===
a438 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j440 #next: j638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j638 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v639 
=== Usages ===
v639 
=== Predecessor ===
a441 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
result [v23|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v961 
value: j638 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
j638 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v961 value: j638 stateAfter: - lastLocationAccess: - #next: v642  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
result [v23|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: v877 stateAfter: - lastLocationAccess: - #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result [v23|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
value: i25 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v988 value: i25 stateAfter: - lastLocationAccess: - #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
result [v23|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v989 value: i33 stateAfter: - lastLocationAccess: - #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
result [v23|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v990 
value: i589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v990 value: i589 stateAfter: - lastLocationAccess: - #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
result [v23|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a444 <|@
result v28|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a441 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
value: a444 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v991 value: a444 stateAfter: - lastLocationAccess: - #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result [v23|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v992 value: i33 stateAfter: - lastLocationAccess: - #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
result [v23|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: j596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: j596 stateAfter: - lastLocationAccess: - #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
result [v23|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
value: v886 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 value: v886 stateAfter: - lastLocationAccess: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
result [v23|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
value: i945 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a450 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v954 value: i945 stateAfter: - lastLocationAccess: - #next: a450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a450 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a438 
=== Succesors ===
next: a451 
=== Usages ===
v170 
=== Predecessor ===
v449 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a438 #next: a451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a451 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a441 
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
a450 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a441 #next: v452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
a451 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v170  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a450 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a450 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = LEA [v23|QWORD[*] + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*]], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 24], y: v28|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 44] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 48], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B19" "B39" 
    xhandlers
    flags 
    probability 4601188978143854428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: j664 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j664 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j679 
=== Usages ===
v975 v974 
=== Predecessor ===
v30 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j679  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j664 
index: - 
=== Succesors ===
=== Usages ===
j679 v828 v681 v768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j679 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
=== Succesors ===
next: j680 
=== Usages ===
j899 j685 v995 v1013 j772 j832 j927 v1024 
=== Predecessor ===
j664 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v974 #next: j680  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j664 
index: - 
=== Succesors ===
=== Usages ===
j680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j680 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v975 
=== Succesors ===
next: v105 
=== Usages ===
v669 v816 
=== Predecessor ===
j679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v975 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid j927 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j679 
y: j871 
=== Succesors ===
=== Usages ===
v816 v828 v768 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j679 y: j871  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j680 
y: j927 
=== Succesors ===
=== Usages ===
v819 v759 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j680 y: j927  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:257) [bci: 34]
stamp: i32 [0 - 31] ⇈000000000000001f
=== Inputs ===
x: i2 
y: i26 
=== Succesors ===
=== Usages ===
i44 i48 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 70]
stamp: i32
=== Inputs ===
x: i945 
y: i27 
=== Succesors ===
=== Usages ===
v868 v808 v314 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i945 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 75]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 79]
stamp: i32 [1 - 32] ⇈000000000000003f
=== Inputs ===
x: i47 
y: i27 
=== Succesors ===
=== Usages ===
i49 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i47 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 80]
stamp: i32
=== Inputs ===
x: i945 
y: i48 
=== Succesors ===
=== Usages ===
v870 v102 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i945 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i49 
y: i4 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i49 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 62]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
?325 v852 v860 v369 v800 v694 a675 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
trueSuccessorProbability: 0.08541926203716788
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
j680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v103 #falseSuccessor: v104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v29|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = AND v1|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SUB (x: v34|DWORD, ~y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SHR (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B35" 
    xhandlers
    flags 
    probability 4585297838572830872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i44 
y: i4 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i44 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
trueSuccessorProbability: 0.24170562079580438
=== Inputs ===
condition: v314 
=== Succesors ===
trueSuccessor: v315 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v314 #trueSuccessor: v315 #falseSuccessor: v316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4576120205832366747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:374) [bci: 36]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid j593 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j899 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j679 
y: j593 
=== Succesors ===
=== Usages ===
v669 v681 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j679 y: j593  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j680 
y: j899 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j680 y: j899  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v669 
=== Succesors ===
trueSuccessor: v670 
falseSuccessor: v671 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v669 #trueSuccessor: v670 #falseSuccessor: v671  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v29|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4545985651975141007
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a675 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a675 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v537 i42 i33 
=== Succesors ===
next: j676 
=== Usages ===
j676 
=== Predecessor ===
v670 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v537 i42 i33 #next: j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j676 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a675 
=== Succesors ===
next: v686 
=== Usages ===
j685 
=== Predecessor ===
a675 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a675 #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
j676 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576070539991853614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: j899 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: j899 stateAfter: - lastLocationAccess: - #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
result [v29|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: - 
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v995 
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v995 #next: v684  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
v678 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4576120205832366747
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j685 <|@
result v39|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v683 
values: j679 j676 
=== Succesors ===
=== Usages ===
v965 v964 a455 v963 v996 v997 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v683 values: j679 j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v684 v686 
=== Succesors ===
next: a455 
=== Usages ===
j685 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v684 v686 #next: a455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a455 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j685 
=== Succesors ===
next: v694 
=== Usages ===
a460 
=== Predecessor ===
v683 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j685 #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
result [v39|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j685 
index: - 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j685 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
value: i42 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
a455 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v963 value: i42 stateAfter: - lastLocationAccess: - #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
result [v39|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j685 
index: - 
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j685 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
value: j596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v964 value: j596 stateAfter: - lastLocationAccess: - #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
result [v39|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j685 
index: - 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j685 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
value: v886 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v965 value: v886 stateAfter: - lastLocationAccess: - #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
result [v39|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j685 
index: - 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j685 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v996 value: i4 stateAfter: - lastLocationAccess: - #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
result [v39|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j685 
index: - 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j685 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v997 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a460 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v997 value: i4 stateAfter: - lastLocationAccess: - #next: a460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a460 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a455 
=== Succesors ===
next: v461 
=== Usages ===
a467 ?347 v952 
=== Predecessor ===
v704 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a455 #next: v461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
a460 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v106  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
v461 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE v39|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD[*] + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B28" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i329 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v107 
values: i4 i113 
=== Succesors ===
=== Usages ===
?109 v110 i113 v746 j948 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v107 values: i4 i113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 0.3187490602916856
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v106 
=== Succesors ===
next: v406 
=== Usages ===
i329 v117 v121 v405 v410 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v106 #next: v406  <|@  <|@
tid a173 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@750ff2c2
hasIdentity: true
objectId: 2
stamp: a!# Lsun/misc/FDBigInteger;
type: HotSpotType<Lsun/misc/FDBigInteger;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?109 ?325 ?80 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 83
code: ResolvedJavaMethodBytecode<FDBigInteger.valueOfPow52(int, int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 261
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - - a173 
=== Succesors ===
=== Usages ===
?128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - a173  <|@  <|@
tid ?128 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<FDBigInteger.<init>(int[], int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 189
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - - 
=== Succesors ===
=== Usages ===
?109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - -  <|@  <|@
tid a191 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<int>
hasIdentity: true
length: 2
objectId: 4
stamp: a!# [I
=== Inputs ===
=== Succesors ===
=== Usages ===
?347 ?325 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
tid ?325 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a173 
values: i25 i42 - a191 
=== Succesors ===
=== Usages ===
?109 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a173 values: i25 i42 - a191  <|@  <|@
tid ?347 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a191 
materializedValue: a460 
=== Succesors ===
=== Usages ===
?109 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a191 materializedValue: a460  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<FDBigInteger.trimLeadingZeros()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 373
stackSize: 0
=== Inputs ===
outerFrameState: ?128 
values: a173 i329 
virtualObjectMappings: ?325 ?347 
=== Succesors ===
=== Usages ===
v388 a716 v533 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?128 values: a173 i329 virtualObjectMappings: ?325 ?347  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i329 
y: i33 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i329 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v405 #falseSuccessor: v402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v107 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v107 #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid i530 <|@
result int[-94227|0xfffffffffffe8fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -94227
stableDimension: 0
stamp: i32 [-94227] ⇊00000000fffe8fed ⇈00000000fffe8fed
stampKind: i32
value: int[-94227|0xfffffffffffe8fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i531 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-94227|0xfffffffffffe8fed]] destination: B25 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 13]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 31]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: i32
=== Inputs ===
x: i329 
y: i99 
=== Succesors ===
=== Usages ===
i329 v369 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i329 y: i99  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i113 
y: i42 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i113 y: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v369 
=== Succesors ===
trueSuccessor: v407 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v369 #trueSuccessor: v407 #falseSuccessor: v410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = DEC v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: i946 
=== Usages ===
i946 
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i946  <|@  <|@
f <@~|@floating>@ <|@
tid j948 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i329 
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i329  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
result [v40|QWORD[.] + v43|QWORD * 4 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a460 
index: j948 
=== Succesors ===
=== Usages ===
i946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a460 index: j948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i946 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v407 
address: v952 
=== Succesors ===
next: v120 
=== Usages ===
v115 
=== Predecessor ===
v407 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v407 address: v952 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i946 
y: i4 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i946 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
trueSuccessorProbability: 0.24170562079580438
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v116 
falseSuccessor: v117 
=== Usages ===
=== Predecessor ===
i946 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v116 #falseSuccessor: v117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v41|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v40|QWORD[.] + v43|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4559261506757308497
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:374) [bci: 36]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?109 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?109 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
loopBegin: v107 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} v41|DWORD 
sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
locals: - - - 
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stack: vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} 
locals: - - - - - 
vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} Lsun/misc/FDBigInteger; v2|DWORD int[2|0x2] int[0|0x0] v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 26, 83] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD] destination: B28 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4566948227651741346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 42]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v107 
=== Succesors ===
next: j705 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v107 #next: j705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j705 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j720 
=== Usages ===
v966 v967 
=== Predecessor ===
v117 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j720  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j705 
index: - 
=== Succesors ===
=== Usages ===
j720 v722 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j705 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j720 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
=== Succesors ===
next: j721 
=== Usages ===
j905 j726 v998 
=== Predecessor ===
j705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v966 #next: j721  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j705 
index: - 
=== Succesors ===
=== Usages ===
j721 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j705 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j721 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
=== Succesors ===
next: v713 
=== Usages ===
v710 
=== Predecessor ===
j720 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v967 #next: v713  <|@  <|@
f <@~|@floating>@ <|@
tid j905 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j720 
y: j421 
=== Succesors ===
=== Usages ===
v710 v722 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j720 y: j421  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j721 
y: j905 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j721 y: j905  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v710 
=== Succesors ===
trueSuccessor: v711 
falseSuccessor: v712 
=== Usages ===
=== Predecessor ===
j721 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v710 #trueSuccessor: v711 #falseSuccessor: v712  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v44|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4536767535695267971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a716 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a716  <|@  <|@
f <@~|@floating>@ <|@
tid i907 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a716 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?109 
arguments: v537 i907 i33 
=== Succesors ===
next: j717 
=== Usages ===
j717 
=== Predecessor ===
v711 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?109 arguments: v537 i907 i33 #next: j717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j717 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a716 
=== Succesors ===
next: v727 
=== Usages ===
j726 
=== Predecessor ===
a716 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a716 #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
j717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} v41|DWORD 
sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
locals: - - - 
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stack: vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} 
locals: - - - - - 
vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} Lsun/misc/FDBigInteger; v2|DWORD int[2|0x2] int[0|0x0] v40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:21, 26, 83] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4566900209600487057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: j905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: j905 stateAfter: - lastLocationAccess: - #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
result [v44|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v998 
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v998 #next: v725  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v44|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 4566948227651741346
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j726 <|@
result v47|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v724 
values: j720 j717 
=== Succesors ===
=== Usages ===
v969 v968 a464 v999 v1000 v1001 v1002 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v724 values: j720 j717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v725 v727 
=== Succesors ===
next: a464 
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v725 v727 #next: a464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a464 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j726 
=== Succesors ===
next: j736 
=== Usages ===
a470 
=== Predecessor ===
v724 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j726 #next: j736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j736 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v737 
=== Usages ===
v737 
=== Predecessor ===
a464 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v737  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
result [v47|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
value: j736 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
j736 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v968 value: j736 stateAfter: - lastLocationAccess: - #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
result [v47|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v969 value: v877 stateAfter: - lastLocationAccess: - #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
result [v47|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
value: i25 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v999 value: i25 stateAfter: - lastLocationAccess: - #next: v746  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
result [v47|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
value: i329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1000 value: i329 stateAfter: - lastLocationAccess: - #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
result [v47|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
value: i589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1001 value: i589 stateAfter: - lastLocationAccess: - #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
result [v47|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a467 <|@
result v50|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a460 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1002 
value: a467 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a470 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1002 value: a467 stateAfter: - lastLocationAccess: - #next: a470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a470 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a464 
=== Succesors ===
next: v471 
=== Usages ===
v169 
=== Predecessor ===
v750 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a464 #next: v471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
a470 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v169  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a470 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a470 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE v47|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*]], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v47|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*] + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v47|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*] + 24], y: v50|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v107 
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v107 #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid i535 <|@
result int[-94747|0xfffffffffffe8de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -94747
stableDimension: 0
stamp: i32 [-94747] ⇊00000000fffe8de5 ⇈00000000fffe8de5
stampKind: i32
value: int[-94747|0xfffffffffffe8de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i531 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-94747|0xfffffffffffe8de5]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B25" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i531 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-94747 - -94227] ⇊00000000fffe8de5 ⇈00000000fffe8fed
valueDescription: i32
=== Inputs ===
merge: v528 
values: i530 i535 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v528 values: i530 i535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v529 v534 
=== Succesors ===
next: v533 
=== Usages ===
i531 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v529 v534 #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?109 
actionAndReason: i531 
speculation: a520 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?109 actionAndReason: i531 speculation: a520  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} v41|DWORD 
sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
locals: - - - 
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stack: vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} 
locals: - - - - - 
vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} Lsun/misc/FDBigInteger; v2|DWORD int[2|0x2] int[0|0x0] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 26, 83] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4583447964456840163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 42]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v759  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v757 
falseSuccessor: v758 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v757 #falseSuccessor: v758  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553621699195187350
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a762 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a762 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v537 i874 i33 
=== Succesors ===
next: j763 
=== Usages ===
j763 
=== Predecessor ===
v757 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v537 i874 i33 #next: j763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j763 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a762 
=== Succesors ===
next: v773 
=== Usages ===
j772 
=== Predecessor ===
a762 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a762 #next: v773  <|@  <|@
f <@*|@fixed>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
j763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583370057026356001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: j927 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: j927 stateAfter: - lastLocationAccess: - #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
result [v29|QWORD + 248] <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: - 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1024 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1024 #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
v765 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4583447964456840163
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j772 <|@
result v53|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v770 
values: j679 j763 
=== Succesors ===
=== Usages ===
v1012 v972 j476 a474 v973 v1004 v1005 v1006 v1007 v1008 v1009 v1010 v1011 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v770 values: j679 j763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v771 v773 
=== Succesors ===
next: a474 
=== Usages ===
j772 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v771 v773 #next: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a474 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j772 
=== Succesors ===
next: a477 
=== Usages ===
a486 
=== Predecessor ===
v770 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j772 #next: a477  <|@  <|@
f <@~|@floating>@ <|@
tid j476 <|@
result v55|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j772 
y: j421 
=== Succesors ===
=== Usages ===
a477 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j772 y: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a477 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j476 
=== Succesors ===
next: j782 
=== Usages ===
a487 a480 
=== Predecessor ===
a474 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j476 #next: j782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j782 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v783 
=== Usages ===
v783 
=== Predecessor ===
a477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
result [v53|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v972 
value: j782 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
j782 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v972 value: j782 stateAfter: - lastLocationAccess: - #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
result [v53|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v973 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v973 value: v877 stateAfter: - lastLocationAccess: - #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
result [v53|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
value: i25 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1004 value: i25 stateAfter: - lastLocationAccess: - #next: v792  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
result [v53|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v794 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1005 value: i33 stateAfter: - lastLocationAccess: - #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
result [v53|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
value: i589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v796 
=== Usages ===
=== Predecessor ===
v792 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1006 value: i589 stateAfter: - lastLocationAccess: - #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
result [v53|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a480 <|@
result v58|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a477 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
value: a480 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1007 value: a480 stateAfter: - lastLocationAccess: - #next: v800  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
result [v53|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
value: i42 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1008 value: i42 stateAfter: - lastLocationAccess: - #next: v801  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
result [v53|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
value: j596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1009 value: j596 stateAfter: - lastLocationAccess: - #next: v804  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
result [v53|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
value: v886 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1010 value: v886 stateAfter: - lastLocationAccess: - #next: v808  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
result [v53|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1011 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v810 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1011 value: i44 stateAfter: - lastLocationAccess: - #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
result [v53|QWORD[*] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1012 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a486 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1012 value: i4 stateAfter: - lastLocationAccess: - #next: a486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a486 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a474 
=== Succesors ===
next: a487 
=== Usages ===
v334 
=== Predecessor ===
v810 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a474 #next: a487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a487 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a477 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
a486 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a477 #next: v488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
a487 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a486 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a486 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = LEA [v53|QWORD[*] + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[*]], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v53|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[*] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v53|QWORD[*] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v53|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[*] + 24], y: v58|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v53|QWORD[*] + 44] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v53|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v53|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[*] + 48], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[*] + 52], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600546850951724873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:381) [bci: 56]
at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v819  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v818 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v817 #falseSuccessor: v818  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570946718249600716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a822 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a822 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v537 i874 i33 
=== Succesors ===
next: j823 
=== Usages ===
j823 
=== Predecessor ===
v817 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v537 i874 i33 #next: j823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j823 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a822 
=== Succesors ===
next: v833 
=== Usages ===
j832 
=== Predecessor ===
a822 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a822 #next: v833  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
j823 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600478098641386683
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: j927 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v825 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: j927 stateAfter: - lastLocationAccess: - #next: v825  <|@  <|@
f <@~|@floating>@ <|@
tid v1013 <|@
result [v29|QWORD + 248] <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: - 
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1013 
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1013 #next: v831  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors 
    xhandlers
    flags 
    probability 4600546850951724873
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j832 <|@
result v60|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v830 
values: j679 j823 
=== Succesors ===
=== Usages ===
v1022 v977 j493 a491 v978 v1014 v1015 v1016 v1017 v1018 v1019 v1020 v1021 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v830 values: j679 j823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v831 v833 
=== Succesors ===
next: a491 
=== Usages ===
j832 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v831 v833 #next: a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a491 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j832 
=== Succesors ===
next: a494 
=== Usages ===
a503 
=== Predecessor ===
v830 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j832 #next: a494  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
result v62|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j832 
y: j421 
=== Succesors ===
=== Usages ===
a494 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j832 y: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a494 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j493 
=== Succesors ===
next: j842 
=== Usages ===
a504 a497 
=== Predecessor ===
a491 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j493 #next: j842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j842 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v843 
=== Usages ===
v843 
=== Predecessor ===
a494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v843  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
result [v60|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
value: j842 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
j842 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v977 value: j842 stateAfter: - lastLocationAccess: - #next: v846  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
result [v60|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v978 value: v877 stateAfter: - lastLocationAccess: - #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
result [v60|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
value: i25 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1014 value: i25 stateAfter: - lastLocationAccess: - #next: v852  <|@  <|@
f <@~|@floating>@ <|@
tid v1015 <|@
result [v60|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
value: i42 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1015 value: i42 stateAfter: - lastLocationAccess: - #next: v854  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
result [v60|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1016 
value: i589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1016 value: i589 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
result [v60|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a497 <|@
result v65|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a494 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1017 
value: a497 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1017 value: a497 stateAfter: - lastLocationAccess: - #next: v860  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
result [v60|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1018 
value: i42 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1018 value: i42 stateAfter: - lastLocationAccess: - #next: v861  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
result [v60|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1019 
value: j596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v864 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1019 value: j596 stateAfter: - lastLocationAccess: - #next: v864  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
result [v60|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1020 
value: v886 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1020 value: v886 stateAfter: - lastLocationAccess: - #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid v1021 <|@
result [v60|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1021 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1021 value: i44 stateAfter: - lastLocationAccess: - #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v1022 <|@
result [v60|QWORD[*] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1022 
value: i49 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a503 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1022 value: i49 stateAfter: - lastLocationAccess: - #next: a503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a503 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a491 
=== Succesors ===
next: a504 
=== Usages ===
v168 
=== Predecessor ===
v870 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a491 #next: a504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a504 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a494 
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
a503 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a494 #next: v505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
a504 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a503 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a503 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = LEA [v60|QWORD[*] + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[*]], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[*] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD[*] + 16] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v60|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[.] = COMPRESSPOINTER (input: v63|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[*] + 24], y: v65|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD[*] + 44] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[*] + 48], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[*] + 52], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:255) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
result int[-91931|0xfffffffffffe98e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91931
stableDimension: 0
stamp: i32 [-91931] ⇊00000000fffe98e5 ⇈00000000fffe98e5
stampKind: i32
value: int[-91931|0xfffffffffffe98e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
v396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91931|0xfffffffffffe98e5]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B2" "B13" "B43" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i521 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-93971 - -91155] ⇊00000000fffe90e5 ⇈00000000fffe9bed
valueDescription: i32
=== Inputs ===
merge: v517 
values: i519 i525 i527 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v517 values: i519 i525 i527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v518 v524 v526 
=== Succesors ===
next: v523 
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v518 v524 v526 #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i521 
speculation: a520 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i521 speculation: a520  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4565897406936481793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: a57 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a57  <|@  <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 88]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@fd5699e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.big5pow(int)>
=== Inputs ===
arguments: i1 
=== Succesors ===
=== Usages ===
a57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i1  <|@  <|@
tid ?515 <|@
d <@d|@=== Debug Properties ===
bci: 88
code: ResolvedJavaMethodBytecode<FDBigInteger.valueOfPow52(int, int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 267
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 - - - 
=== Succesors ===
=== Usages ===
a57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a57 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 88
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 88]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.big5pow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v378 
stateDuring: ?515 
=== Succesors ===
next: v1023 
=== Usages ===
v1023 v382 
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v378 stateDuring: ?515 #next: v1023  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 91
code: ResolvedJavaMethodBytecode<FDBigInteger.valueOfPow52(int, int)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 88]
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 267
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - i2 - - - a520 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 - - - a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?58 
object: a57 
=== Succesors ===
next: a60 
=== Usages ===
=== Predecessor ===
a57 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?58 object: a57 #next: a60  <|@  <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 92]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@3423cd4e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a57 i2 
=== Succesors ===
=== Usages ===
a60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a57 i2  <|@  <|@
tid ?516 <|@
d <@d|@=== Debug Properties ===
bci: 92
code: ResolvedJavaMethodBytecode<FDBigInteger.valueOfPow52(int, int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 267
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
a60 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a60 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 92
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 92]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v382 
stateDuring: ?516 
=== Succesors ===
next: v62 
=== Usages ===
v62 
=== Predecessor ===
v1023 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v382 stateDuring: ?516 #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 95]
stamp: void
=== Inputs ===
result: a60 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a60 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a60 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 88]
locals: - v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.big5pow(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:88] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 91]
stack: Object[null] 
locals: - v1|DWORD - - - 
>@ <|@ instruction NULLCHECK [v67|QWORD[.]] state [bci:91] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 92]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2bd54cd1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SAR v1|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.33243836953868683 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604188080165661238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0013406459475929777 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B45" 
    xhandlers
    flags 
    probability 4604180019048437078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v0|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9973151086160605 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B43" 
    xhandlers
    flags 
    probability 4604163896813988758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v0|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B18" 
    xhandlers
    flags 
    probability 4604163896813988758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v18|QWORD[.] + v0|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v1|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3723690651003426 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B19" "B39" 
    xhandlers
    flags 
    probability 4601188978143854428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v29|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = AND v1|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SUB (x: v34|DWORD, ~y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SHR (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600546850951724873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600478098641386683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors 
    xhandlers
    flags 
    probability 4600546850951724873
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = LEA [v60|QWORD[*] + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[*]], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[*] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD[*] + 16] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v60|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[.] = COMPRESSPOINTER (input: v63|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[*] + 24], y: v65|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD[*] + 44] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[*] + 48], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[*] + 52], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND v1|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA [v8|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4599600410413931138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v8|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v11|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = LEA [v11|QWORD[*] + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*]], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v11|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = COMPRESSPOINTER (input: v14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 24], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 44] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 48], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4597998812987258253
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = LEA [v23|QWORD[*] + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*]], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 24], y: v28|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 44] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 48], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B35" 
    xhandlers
    flags 
    probability 4585297838572830872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4583447964456840163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583370057026356001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4583447964456840163
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = LEA [v53|QWORD[*] + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[*]], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v53|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[*] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v53|QWORD[*] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v53|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[*] + 24], y: v58|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v53|QWORD[*] + 44] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v53|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v53|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[*] + 48], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[*] + 52], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4576120205832366747
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v29|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576070539991853614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4576120205832366747
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE v39|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD[*] + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = DEC v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v41|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v40|QWORD[.] + v43|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4559261506757308497
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} v41|DWORD 
sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
locals: - - - 
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stack: vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} 
locals: - - - - - 
vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} Lsun/misc/FDBigInteger; v2|DWORD int[2|0x2] int[0|0x0] v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 26, 83] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD] destination: B28 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B28" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570946718249600716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v69|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4569811929430264251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4567855217805001959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4566948227651741346
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v44|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4566900209600487057
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v44|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 4566948227651741346
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE v47|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*]], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v47|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*] + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v47|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*] + 24], y: v50|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4565897406936481793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 88]
locals: - v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.big5pow(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:88] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 91]
stack: Object[null] 
locals: - v1|DWORD - - - 
>@ <|@ instruction NULLCHECK [v67|QWORD[.]] state [bci:91] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 92]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4561393807309111613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 9]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.big5pow(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553621699195187350
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v70|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4545985651975141007
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4536767535695267971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v71|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} v41|DWORD 
sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
locals: - - - 
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stack: vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} 
locals: - - - - - 
vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} Lsun/misc/FDBigInteger; v2|DWORD int[2|0x2] int[0|0x0] v40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:21, 26, 83] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91155|0xfffffffffffe9bed]] destination: B2 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B2" "B13" "B43" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-94227|0xfffffffffffe8fed]] destination: B25 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B25" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} v41|DWORD 
sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
locals: - - - 
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stack: vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} 
locals: - - - - - 
vobject:FDBigInteger:0{offset=v2|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=v40|QWORD[.]} Lsun/misc/FDBigInteger; v2|DWORD int[2|0x2] int[0|0x0] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 26, 83] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-94747|0xfffffffffffe8de5]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91931|0xfffffffffffe98e5]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93971|0xfffffffffffe90ed]] destination: B13 -> B44 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: ifeq          96
     4: iload_1       
     5: ifne          13
     8: iload_0       
     9: invokestatic  #8          // big5pow:(int)sun.misc.FDBigInteger
    12: areturn       
    13: iload_0       
    14: getstatic     #9          // SMALL_5_POW:int[]
    17: arraylength   
    18: if_icmpge     87
    21: getstatic     #9          // SMALL_5_POW:int[]
    24: iload_0       
    25: iaload        
    26: istore_2      
    27: iload_1       
    28: iconst_5      
    29: ishr          
    30: istore_3      
    31: iload_1       
    32: bipush        31
    34: iand          
    35: istore        4
    37: iload         4
    39: ifne          58
    42: new           #12         // sun.misc.FDBigInteger
    45: dup           
    46: iconst_1      
    47: newarray      int
    49: dup           
    50: iconst_0      
    51: iload_2       
    52: iastore       
    53: iload_3       
    54: invokespecial #10         // <init>:(int[], int)void
    57: areturn       
    58: new           #12         // sun.misc.FDBigInteger
    61: dup           
    62: iconst_2      
    63: newarray      int
    65: dup           
    66: iconst_0      
    67: iload_2       
    68: iload         4
    70: ishl          
    71: iastore       
    72: dup           
    73: iconst_1      
    74: iload_2       
    75: bipush        32
    77: iload         4
    79: isub          
    80: iushr         
    81: iastore       
    82: iload_3       
    83: invokespecial #10         // <init>:(int[], int)void
    86: areturn       
    87: iload_0       
    88: invokestatic  #8          // big5pow:(int)sun.misc.FDBigInteger
    91: iload_1       
    92: invokevirtual #11         // leftShift:(int)sun.misc.FDBigInteger
    95: areturn       
    96: iload_1       
    97: invokestatic  #12         // valueOfPow2:(int)sun.misc.FDBigInteger
   100: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2bd54cd1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>} <|@ <|@
      nr   12  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.33243836953868683 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604188080165661238
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.0013406459475929777 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B45" 
    xhandlers
    flags 
    probability 4604180019048437078
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP r13|DWORD y: 14 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.9973151086160605 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B43" 
    xhandlers
    flags 
    probability 4604163896813988758
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction CMP r13|DWORD y: 14 size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B18" 
    xhandlers
    flags 
    probability 4604163896813988758
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr  148  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction TEST rdx|DWORD y: 31 size: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.3723690651003426 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B19" "B39" 
    xhandlers
    flags 
    probability 4601188978143854428
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  254  <|@ instruction r9|QWORD = LEA [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|DWORD = AND rdx|DWORD y: 31 size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600546850951724873
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600478098641386683
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  578  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0 <|@ <|@
      nr  580  <|@ instruction rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors 
    xhandlers
    flags 
    probability 4600546850951724873
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  586  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 32] size: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rdx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr  598  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV [rax|QWORD[*] + 16] y: 2 size: DWORD <|@ <|@
      nr  602  <|@ instruction MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  604  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV [rax|QWORD[*] + 44] y: 2 size: DWORD <|@ <|@
      nr  610  <|@ instruction MOV [rax|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV [rax|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  614  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [rax|QWORD[*] + 52], y: r11|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = AND rdx|DWORD y: 31 size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   40  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4599600410413931138
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0 <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[*] = LEA [rsi|QWORD[*] + 32] size: QWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction r10|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr   94  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rsi|QWORD[*] + 16] y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOVB (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  100  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rsi|QWORD[*] + 44] y: 1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rsi|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rsi|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction MOV (x: [rsi|QWORD[*] + 48], y: rax|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4597998812987258253
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 248] instr: 0 <|@ <|@
      nr  208  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD[*] = LEA [rax|QWORD[*] + 32] size: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [rax|QWORD[*] + 16] y: 1 size: DWORD <|@ <|@
      nr  230  <|@ instruction MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  232  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [rax|QWORD[*] + 44] y: 1 size: DWORD <|@ <|@
      nr  238  <|@ instruction MOV [rax|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [rax|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  242  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: r11|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B35" 
    xhandlers
    flags 
    probability 4585297838572830872
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4583447964456840163
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583370057026356001
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0 <|@ <|@
      nr  496  <|@ instruction rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4583447964456840163
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[*] = LEA [rax|QWORD[*] + 32] size: QWORD <|@ <|@
      nr  506  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr  514  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction MOV [rax|QWORD[*] + 16] y: 1 size: DWORD <|@ <|@
      nr  518  <|@ instruction MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  520  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV [rax|QWORD[*] + 44] y: 2 size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV [rax|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr  528  <|@ instruction MOV [rax|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  530  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [rax|QWORD[*] + 52], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  534  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4576120205832366747
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576070539991853614
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4576120205832366747
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  320  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction MOV [rsi|QWORD[*] + 12] y: 2 size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV [rsi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  326  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  328  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  332  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  350  <|@ instruction rsi|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  352  <|@ instruction CMP rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rdx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  360  <|@ instruction CMP [r13|QWORD[.] + rdx|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4559261506757308497
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]} r11|DWORD 
sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
locals: - - - 
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stack: vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]} 
locals: - - - - - 
vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]} Lsun/misc/FDBigInteger; r14|DWORD int[2|0x2] int[0|0x0] r13|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 26, 83] <|@ <|@
      nr  368  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B28 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B28" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570946718249600716
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  556  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  558  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: stack:36|DWORD stack:32|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  564  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4569811929430264251
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction stack:28|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: stack:36|DWORD stack:32|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r10|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4567855217805001959
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  188  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  192  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: stack:36|DWORD stack:32|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  194  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction r10|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4566948227651741346
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4566900209600487057
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr  416  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 4566948227651741346
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r8|QWORD = MOV [r13|QWORD + 168] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rax|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr  430  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  436  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr  438  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  440  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4565897406936481793
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 88]
locals: - stack:32|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.big5pow(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:88] <|@ <|@
      nr  646  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 91]
stack: Object[null] 
locals: - stack:32|DWORD - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:91] <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 92]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:92] <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4561393807309111613
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 9]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.big5pow(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9] <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553621699195187350
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  480  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: stack:36|DWORD stack:32|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  482  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction r10|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4545985651975141007
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  296  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: stack:36|DWORD stack:32|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction r10|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4536767535695267971
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  396  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  400  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=stack:48|QWORD[.]} stack:28|DWORD 
sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
locals: - - - 
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stack: vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=stack:48|QWORD[.]} 
locals: - - - - - 
vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=stack:48|QWORD[.]} Lsun/misc/FDBigInteger; r14|DWORD int[2|0x2] int[0|0x0] stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:21, 26, 83] <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: int[-91155|0xfffffffffffe9bed] <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B2 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B2" "B13" "B43" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  630  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  634  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: r13|DWORD rdx|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r10|DWORD = MOVE input: int[-94227|0xfffffffffffe8fed] <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B25 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B25" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  452  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]} r11|DWORD 
sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
locals: - - - 
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stack: vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]} 
locals: - - - - - 
vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]} Lsun/misc/FDBigInteger; r14|DWORD int[2|0x2] int[0|0x0] r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 26, 83] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-94747|0xfffffffffffe8de5] <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction r10|DWORD = MOVE input: int[-91931|0xfffffffffffe98e5] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B13 -> B44 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: ifeq          96
     4: iload_1       
     5: ifne          13
     8: iload_0       
     9: invokestatic  #8          // big5pow:(int)sun.misc.FDBigInteger
    12: areturn       
    13: iload_0       
    14: getstatic     #9          // SMALL_5_POW:int[]
    17: arraylength   
    18: if_icmpge     87
    21: getstatic     #9          // SMALL_5_POW:int[]
    24: iload_0       
    25: iaload        
    26: istore_2      
    27: iload_1       
    28: iconst_5      
    29: ishr          
    30: istore_3      
    31: iload_1       
    32: bipush        31
    34: iand          
    35: istore        4
    37: iload         4
    39: ifne          58
    42: new           #12         // sun.misc.FDBigInteger
    45: dup           
    46: iconst_1      
    47: newarray      int
    49: dup           
    50: iconst_0      
    51: iload_2       
    52: iastore       
    53: iload_3       
    54: invokespecial #10         // <init>:(int[], int)void
    57: areturn       
    58: new           #12         // sun.misc.FDBigInteger
    61: dup           
    62: iconst_2      
    63: newarray      int
    65: dup           
    66: iconst_0      
    67: iload_2       
    68: iload         4
    70: ishl          
    71: iastore       
    72: dup           
    73: iconst_1      
    74: iload_2       
    75: bipush        32
    77: iload         4
    79: isub          
    80: iushr         
    81: iastore       
    82: iload_3       
    83: invokespecial #10         // <init>:(int[], int)void
    86: areturn       
    87: iload_0       
    88: invokestatic  #8          // big5pow:(int)sun.misc.FDBigInteger
    91: iload_1       
    92: invokevirtual #11         // leftShift:(int)sun.misc.FDBigInteger
    95: areturn       
    96: iload_1       
    97: invokestatic  #12         // valueOfPow2:(int)sun.misc.FDBigInteger
   100: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2bd54cd1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>} <|@ <|@
      nr   12  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.33243836953868683 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604188080165661238
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.0013406459475929777 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B45" 
    xhandlers
    flags 
    probability 4604180019048437078
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP r13|DWORD y: 14 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.9973151086160605 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B43" 
    xhandlers
    flags 
    probability 4604163896813988758
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction CMP r13|DWORD y: 14 size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B18" 
    xhandlers
    flags 
    probability 4604163896813988758
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr  148  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction TEST rdx|DWORD y: 31 size: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.3723690651003426 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B19" "B39" 
    xhandlers
    flags 
    probability 4601188978143854428
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  254  <|@ instruction r9|QWORD = LEA [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|DWORD = AND rdx|DWORD y: 31 size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rbx|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600546850951724873
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600478098641386683
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  578  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0 <|@ <|@
      nr  580  <|@ instruction rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors 
    xhandlers
    flags 
    probability 4600546850951724873
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  586  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 32] size: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rdx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr  598  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV [rax|QWORD[*] + 16] y: 2 size: DWORD <|@ <|@
      nr  602  <|@ instruction MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  604  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV [rax|QWORD[*] + 44] y: 2 size: DWORD <|@ <|@
      nr  610  <|@ instruction MOV [rax|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV [rax|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  614  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [rax|QWORD[*] + 52], y: r11|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = AND rdx|DWORD y: 31 size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   40  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4599600410413931138
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0 <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4599660297186618261
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[*] = LEA [rsi|QWORD[*] + 32] size: QWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction r10|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr   94  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rsi|QWORD[*] + 16] y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOVB (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  100  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rsi|QWORD[*] + 44] y: 1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rsi|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rsi|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction MOV (x: [rsi|QWORD[*] + 48], y: rax|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4597998812987258253
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 248] instr: 0 <|@ <|@
      nr  208  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4598088012913487777
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD[*] = LEA [rax|QWORD[*] + 32] size: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV [rax|QWORD[*] + 16] y: 1 size: DWORD <|@ <|@
      nr  230  <|@ instruction MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  232  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV [rax|QWORD[*] + 44] y: 1 size: DWORD <|@ <|@
      nr  238  <|@ instruction MOV [rax|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [rax|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  242  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: r11|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B35" 
    xhandlers
    flags 
    probability 4585297838572830872
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4583447964456840163
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583370057026356001
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0 <|@ <|@
      nr  496  <|@ instruction rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4583447964456840163
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[*] = LEA [rax|QWORD[*] + 32] size: QWORD <|@ <|@
      nr  506  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr  514  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction MOV [rax|QWORD[*] + 16] y: 1 size: DWORD <|@ <|@
      nr  518  <|@ instruction MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  520  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV [rax|QWORD[*] + 44] y: 2 size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV [rax|QWORD[*] + 32] y: 1 size: QWORD <|@ <|@
      nr  528  <|@ instruction MOV [rax|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  530  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [rax|QWORD[*] + 52], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  534  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4576120205832366747
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576070539991853614
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4576120205832366747
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  320  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction MOV [rsi|QWORD[*] + 12] y: 2 size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV [rsi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  326  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  328  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  332  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  350  <|@ instruction rsi|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  352  <|@ instruction CMP rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rdx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  360  <|@ instruction CMP [r13|QWORD[.] + rdx|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4559261506757308497
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]} r11|DWORD 
sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
locals: - - - 
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stack: vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]} 
locals: - - - - - 
vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]} Lsun/misc/FDBigInteger; r14|DWORD int[2|0x2] int[0|0x0] r13|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 26, 83] <|@ <|@
      nr  368  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B28 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B28" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4568478798523175606
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570946718249600716
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  556  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  558  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: stack:36|DWORD stack:32|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  564  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4569811929430264251
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction stack:28|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: stack:36|DWORD stack:32|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r10|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4567855217805001959
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  188  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  192  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: stack:36|DWORD stack:32|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  194  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction r10|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4566948227651741346
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4566900209600487057
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr  416  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 4566948227651741346
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r8|QWORD = MOV [r13|QWORD + 168] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rax|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed} <|@ <|@
      nr  430  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  436  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3 <|@ <|@
      nr  438  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  440  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4565897406936481793
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 88]
locals: - stack:32|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.big5pow(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:88] <|@ <|@
      nr  646  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 91]
stack: Object[null] 
locals: - stack:32|DWORD - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:91] <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 92]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:92] <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4561393807309111613
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 9]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.big5pow(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9] <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553621699195187350
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  480  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: stack:36|DWORD stack:32|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  482  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction r10|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4545985651975141007
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  296  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: stack:36|DWORD stack:32|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction r10|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4536767535695267971
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  396  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  400  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=stack:48|QWORD[.]} stack:28|DWORD 
sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
locals: - - - 
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stack: vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=stack:48|QWORD[.]} 
locals: - - - - - 
vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=stack:48|QWORD[.]} Lsun/misc/FDBigInteger; r14|DWORD int[2|0x2] int[0|0x0] stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:21, 26, 83] <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: int[-91155|0xfffffffffffe9bed] <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B2 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B2" "B13" "B43" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  630  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  634  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0]
locals: r13|DWORD rdx|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r10|DWORD = MOVE input: int[-94227|0xfffffffffffe8fed] <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B25 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B25" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  452  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]} r11|DWORD 
sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26]
locals: - - - 
sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83]
stack: vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]} 
locals: - - - - - 
vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]} Lsun/misc/FDBigInteger; r14|DWORD int[2|0x2] int[0|0x0] r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:21, 26, 83] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-94747|0xfffffffffffe8de5] <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction r10|DWORD = MOVE input: int[-91931|0xfffffffffffe98e5] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B13 -> B44 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: ifeq          96
     4: iload_1       
     5: ifne          13
     8: iload_0       
     9: invokestatic  #8          // big5pow:(int)sun.misc.FDBigInteger
    12: areturn       
    13: iload_0       
    14: getstatic     #9          // SMALL_5_POW:int[]
    17: arraylength   
    18: if_icmpge     87
    21: getstatic     #9          // SMALL_5_POW:int[]
    24: iload_0       
    25: iaload        
    26: istore_2      
    27: iload_1       
    28: iconst_5      
    29: ishr          
    30: istore_3      
    31: iload_1       
    32: bipush        31
    34: iand          
    35: istore        4
    37: iload         4
    39: ifne          58
    42: new           #12         // sun.misc.FDBigInteger
    45: dup           
    46: iconst_1      
    47: newarray      int
    49: dup           
    50: iconst_0      
    51: iload_2       
    52: iastore       
    53: iload_3       
    54: invokespecial #10         // <init>:(int[], int)void
    57: areturn       
    58: new           #12         // sun.misc.FDBigInteger
    61: dup           
    62: iconst_2      
    63: newarray      int
    65: dup           
    66: iconst_0      
    67: iload_2       
    68: iload         4
    70: ishl          
    71: iastore       
    72: dup           
    73: iconst_1      
    74: iload_2       
    75: bipush        32
    77: iload         4
    79: isub          
    80: iushr         
    81: iastore       
    82: iload_3       
    83: invokespecial #10         // <init>:(int[], int)void
    86: areturn       
    87: iload_0       
    88: invokestatic  #8          // big5pow:(int)sun.misc.FDBigInteger
    91: iload_1       
    92: invokevirtual #11         // leftShift:(int)sun.misc.FDBigInteger
    95: areturn       
    96: iload_1       
    97: invokestatic  #12         // valueOfPow2:(int)sun.misc.FDBigInteger
   100: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec3848896c2430448bee448bf241c1fe0549baaddeaddeaddeadde4585ed0f84da00000085d20f842b0400004183fd0e0f8dee0300004183fd0e0f830d05000048b9addeaddeaddeadde468b5ca910f7c21f0000000f8431010000498b77604d8b47704c8d4e388bc283e01f8bc8418bdbd3e3b9200000002bc841d3eb4585db0f848a0100004d3bc80f87790200004d894f600f1886f8000000488bc6488bc8488d7020498b92a8000000488910c74008addeadde4489700cc74010020000004488601448c1ee03897018c7402c0200000048c7402001000000c74028addeadde89583044895834488bc1488b6c24304883c438850500000000c5f877c38bca83e11fb801000000d3e085c00f84ff030000498b7760488d4e38493b4f700f872402000049894f600f1886f8000000488bd6488d4e204d8b92a80000004c8916c74608addeadde4489760cc74610010000004488661448c1e903894e18c7462c0100000048c7462001000000c74628addeadde894630488bc2488b6c24304883c438850500000000c5f877c34585db0f84c0030000498b4760488d7038493b77700f87da010000498977600f1880f8000000488bf0488d5020498b8aa8000000488908c74008addeadde4489700cc74010010000004488601448c1ea03895018c7402c0100000048c7402001000000c74028addeadde44895830488bc6488b6c24304883c438850500000000c5f877c385db0f84780000004d3bc80f87560200004d894f600f1886f8000000488bc6488bf0488d5020498b8aa8000000488908c74008addeadde4489700cc74010010000004488601448c1ea03895018c7402c0200000048c7402001000000c74028addeadde89583044896034488bc6488b6c24304883c438850500000000c5f877c3488d4e18493bc80f871002000049894f600f1886d80000004c8beec7460c0200000048c70601000000c74608addeadde448966104489661441bb00000000e92a0000000f1f4000418bf3ffce83fe020f83600200004963d341837c950c000f85c5000000850500000000448bde4183fb017dd4e92302000044895c240c895c24248954242044896c241c48beaddeaddeaddeaddeba0a000000b9010000004d8beae80000000090448b5c240c8b5c24244d8bd5e955fdffff894424248954242044896c241c4d8bea48beaddeaddeaddeaddeba0a000000b901000000e80000000090488bf08b4424244d8bd5e9aefdffff44895c24248954242044896c241c4d8bea48beaddeaddeaddeaddeba0a000000b901000000e80000000090448b5c24244d8bd5e9f9fdffff4c895424104d8bd54c8b6c2410498b4760488d7020493b77700f8706010000498977600f1880e0000000488bf04d8b85a80000004c8900c74008addeadde4489700c44895810448860144d8bea49c1ed0344896818488bc6488b6c24304883c438850500000000c5f877c38954242044896c241c90e800000000908500488bf08b54242090e80000000090488b6c24304883c438850500000000c5f877c344896c241c6690e80000000090488b6c24304883c438850500000000c5f877c3895c24248954242044896c241c4d8bea48beaddeaddeaddeaddeba0a000000b901000000e800000000908b5c24244d8bd5e982fdffff8954242044896c241c4d8bea48beaddeaddeaddeaddeba02000000b901000000e80000000090488bf04d8bd5e9cafdffff44895c24244c8954241048beaddeaddeaddeaddeba04000000b901000000e80000000090448b5c24244c8b542410e9d2feffff41baed9bfeff4589979c0200004d89a7a8020000e8000000009041baed8ffeff4589979c0200004d89a7a8020000e8000000009041bae58dfeffebe441bae598feffebc241baed90feffebbae80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2bd54cd1 slotKind: QWORD  <||@
  Comment 16 6 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 r14|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 26 10 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>}  <||@
  Comment 26 {meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>}}  <||@
  Comment 36 12 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 39 14 BRANCH trueDestinationProbability: 0.33243836953868683 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B7  <||@
  Comment 45 block B7 null  <||@
  Comment 45 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 45 118 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 47 120 BRANCH trueDestinationProbability: 0.0013406459475929777 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 53 block B9 null  <||@
  Comment 53 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 53 134 CMP r13|DWORD y: 14 size: DWORD  <||@
  Comment 57 136 BRANCH trueDestinationProbability: 0.9973151086160605 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B45  <||@
  Comment 63 block B10 null  <||@
  Comment 63 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 140 CMP r13|DWORD y: 14 size: DWORD  <||@
  Comment 67 142 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B43  <||@
  Comment 73 block B11 null  <||@
  Comment 73 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 146 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 73 {Object[int[14]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 83 148 r11|DWORD = MOV [rcx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 88 150 TEST rdx|DWORD y: 31 size: DWORD  <||@
  Comment 94 152 BRANCH trueDestinationProbability: 0.3723690651003426 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B18  <||@
  Comment 100 block B18 null  <||@
  Comment 100 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 250 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 104 252 r8|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 108 254 r9|QWORD = LEA [rsi|QWORD + 56] size: QWORD  <||@
  Comment 112 256 rax|DWORD = AND rdx|DWORD y: 31 size: DWORD  <||@
  Comment 117 258 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 119 260 rbx|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 124 262 rcx|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 129 264 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 131 266 r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 134 268 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 137 270 BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B39  <||@
  Comment 143 block B39 null  <||@
  Comment 143 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 143 540 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 146 542 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 152 block B41 null  <||@
  Comment 152 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 152 576 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 156 578 AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0  <||@
  Comment 163 580 rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 166 582 JUMP ~[] destination: B41 -> B42  <||@
  Comment 166 block B42 null  <||@
  Comment 166 584 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 166 586 rcx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 169 588 rsi|QWORD[*] = LEA [rax|QWORD[*] + 32] size: QWORD  <||@
  Comment 173 590 rsi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 173 592 rdx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 180 594 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 183 596 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}  <||@
  Comment 183 {meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}}  <||@
  Comment 190 598 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 194 600 MOV [rax|QWORD[*] + 16] y: 2 size: DWORD  <||@
  Comment 201 602 MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 205 604 rsi|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3  <||@
  Comment 209 606 MOV (x: [rax|QWORD[*] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 212 608 MOV [rax|QWORD[*] + 44] y: 2 size: DWORD  <||@
  Comment 219 610 MOV [rax|QWORD[*] + 32] y: 1 size: QWORD  <||@
  Comment 227 612 MOV [rax|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 227 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 234 614 MOV (x: [rax|QWORD[*] + 48], y: rbx|DWORD) size: DWORD  <||@
  Comment 237 616 MOV (x: [rax|QWORD[*] + 52], y: r11|DWORD) size: DWORD  <||@
  Comment 241 618 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 244 620 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 253 12  <||@
  Comment 263 block B1 null  <||@
  Comment 263 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 263 18 rcx|DWORD = AND rdx|DWORD y: 31 size: DWORD  <||@
  Comment 268 20 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 273 22 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 275 24 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 277 26 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 283 block B3 null  <||@
  Comment 283 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 283 36 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 287 38 rcx|QWORD = LEA [rsi|QWORD + 56] size: QWORD  <||@
  Comment 291 40 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 295 42 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 301 block B5 null  <||@
  Comment 301 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 301 72 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 305 74 AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0  <||@
  Comment 312 76 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 312 78 JUMP ~[] destination: B5 -> B6  <||@
  Comment 312 block B6 null  <||@
  Comment 312 80 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 312 82 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 315 84 rcx|QWORD[*] = LEA [rsi|QWORD[*] + 32] size: QWORD  <||@
  Comment 319 86 rcx|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 319 88 r10|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 326 90 MOV (x: [rsi|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 329 92 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}  <||@
  Comment 329 {meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}}  <||@
  Comment 336 94 MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 340 96 MOV [rsi|QWORD[*] + 16] y: 1 size: DWORD  <||@
  Comment 347 98 MOVB (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 351 100 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3  <||@
  Comment 355 102 MOV (x: [rsi|QWORD[*] + 24], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 358 104 MOV [rsi|QWORD[*] + 44] y: 1 size: DWORD  <||@
  Comment 365 106 MOV [rsi|QWORD[*] + 32] y: 1 size: QWORD  <||@
  Comment 373 108 MOV [rsi|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 373 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 380 110 MOV (x: [rsi|QWORD[*] + 48], y: rax|DWORD) size: DWORD  <||@
  Comment 383 112 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 386 114 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 395 12  <||@
  Comment 405 block B12 null  <||@
  Comment 405 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 405 156 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 408 158 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 414 block B14 null  <||@
  Comment 414 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 414 168 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 418 170 rsi|QWORD = LEA [rax|QWORD + 56] size: QWORD  <||@
  Comment 422 172 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 426 174 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 432 block B16 null  <||@
  Comment 432 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 204 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 436 206 AMD64PREFETCH ~[rax|QWORD + 248] instr: 0  <||@
  Comment 443 208 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 443 210 JUMP ~[] destination: B16 -> B17  <||@
  Comment 443 block B17 null  <||@
  Comment 443 212 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 443 214 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 446 216 rdx|QWORD[*] = LEA [rax|QWORD[*] + 32] size: QWORD  <||@
  Comment 450 218 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 450 220 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 457 222 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 460 224 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}  <||@
  Comment 460 {meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}}  <||@
  Comment 467 226 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 471 228 MOV [rax|QWORD[*] + 16] y: 1 size: DWORD  <||@
  Comment 478 230 MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 482 232 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3  <||@
  Comment 486 234 MOV (x: [rax|QWORD[*] + 24], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 489 236 MOV [rax|QWORD[*] + 44] y: 1 size: DWORD  <||@
  Comment 496 238 MOV [rax|QWORD[*] + 32] y: 1 size: QWORD  <||@
  Comment 504 240 MOV [rax|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 504 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 511 242 MOV (x: [rax|QWORD[*] + 48], y: r11|DWORD) size: DWORD  <||@
  Comment 515 244 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 518 246 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 527 12  <||@
  Comment 537 block B19 null  <||@
  Comment 537 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 274 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 539 276 BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B35  <||@
  Comment 545 block B35 null  <||@
  Comment 545 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 545 460 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 548 462 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 554 block B37 null  <||@
  Comment 554 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 492 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 558 494 AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0  <||@
  Comment 565 496 rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 568 498 JUMP ~[] destination: B37 -> B38  <||@
  Comment 568 block B38 null  <||@
  Comment 568 500 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 568 502 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 571 504 rdx|QWORD[*] = LEA [rax|QWORD[*] + 32] size: QWORD  <||@
  Comment 575 506 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 575 508 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 582 510 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 585 512 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}  <||@
  Comment 585 {meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}}  <||@
  Comment 592 514 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 596 516 MOV [rax|QWORD[*] + 16] y: 1 size: DWORD  <||@
  Comment 603 518 MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 607 520 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3  <||@
  Comment 611 522 MOV (x: [rax|QWORD[*] + 24], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 614 524 MOV [rax|QWORD[*] + 44] y: 2 size: DWORD  <||@
  Comment 621 526 MOV [rax|QWORD[*] + 32] y: 1 size: QWORD  <||@
  Comment 629 528 MOV [rax|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 629 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 636 530 MOV (x: [rax|QWORD[*] + 48], y: rbx|DWORD) size: DWORD  <||@
  Comment 639 532 MOV (x: [rax|QWORD[*] + 52], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 643 534 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 646 536 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 655 12  <||@
  Comment 665 block B20 null  <||@
  Comment 665 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 280 rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 669 282 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 672 284 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 678 block B22 null  <||@
  Comment 678 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 678 310 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 682 312 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 689 314 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 689 316 JUMP ~[] destination: B22 -> B23  <||@
  Comment 689 block B23 null  <||@
  Comment 689 318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 689 320 r13|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 692 322 MOV [rsi|QWORD[*] + 12] y: 2 size: DWORD  <||@
  Comment 699 324 MOV [rsi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 706 326 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 706 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 713 328 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 717 330 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 721 332 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 727 334 JUMP ~[] destination: B23 -> B24  <||@
  Comment 732 block B26 loop 0 depth 1 header:107|LoopBegin  <||@
  Comment 732 348 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 736 350 rsi|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 741 352 CMP rsi|DWORD y: 2 size: DWORD  <||@
  Comment 744 354 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B33  <||@
  Comment 750 block B27 loop 0 depth 1 header:107|LoopBegin  <||@
  Comment 750 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 750 358 rdx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 753 360 CMP [r13|QWORD[.] + rdx|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 759 362 BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 765 block B28 loop 0 depth 1 header:107|LoopBegin  <||@
  Comment 765 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 366 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 26, 83]  <||@
  Comment 765 [r13:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0                                                                                                    |1         
     locals:  |vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]}  |r11|DWORD 
  at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83, duringCall: true, rethrow: false]
              |0                                                                                                    |1  |2  |3  |4 
     locals:  |-                                                                                                    |-  |-  |-  |- 
     stack:   |vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]}  |   |   |   |    <||@
  Comment 765 {infopoint: SAFEPOINT}  <||@
  Comment 765 11  <||@
  Comment 771 368 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 774 370 JUMP ~[] destination: B28 -> B24  <||@
  Comment 774 block B24 loop 0 depth 1 header:107|LoopBegin  <||@
  Comment 774 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 774 338 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 778 340 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 785 block B40 null  <||@
  Comment 785 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 546 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 790 548 stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 794 550 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 798 552 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 803 554 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 803 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 813 556 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 818 558 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 823 560 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 826 562 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 826 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 831 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0, duringCall: false, rethrow: false]
              |0               |1               |2  |3  |4 
     locals:  |stack:36|DWORD  |stack:32|DWORD  |-  |-  |-   <||@
  Comment 832 564 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 832 566 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 837 568 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 841 570 r10|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 844 572 JUMP ~[] destination: B40 -> B42  <||@
  Comment 849 block B4 null  <||@
  Comment 849 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 849 46 stack:28|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 853 48 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 857 50 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 862 52 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 865 54 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 865 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 875 56 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 880 58 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 885 60 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 885 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 890 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0, duringCall: false, rethrow: false]
              |0               |1               |2  |3  |4 
     locals:  |stack:36|DWORD  |stack:32|DWORD  |-  |-  |-   <||@
  Comment 891 62 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 894 64 rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 898 66 r10|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 901 68 JUMP ~[] destination: B4 -> B6  <||@
  Comment 906 block B15 null  <||@
  Comment 906 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 906 178 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 911 180 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 915 182 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 920 184 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 923 186 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 923 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 933 188 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 938 190 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 943 192 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 943 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 948 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0, duringCall: false, rethrow: false]
              |0               |1               |2  |3  |4 
     locals:  |stack:36|DWORD  |stack:32|DWORD  |-  |-  |-   <||@
  Comment 949 194 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 949 196 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 954 198 r10|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 957 200 JUMP ~[] destination: B15 -> B17  <||@
  Comment 962 block B29 null  <||@
  Comment 962 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 962 374 stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 967 376 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 970 378 r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 975 380 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 979 382 rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 983 384 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 987 386 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 993 block B31 null  <||@
  Comment 993 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 993 412 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 997 414 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 1004 416 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1004 418 JUMP ~[] destination: B31 -> B32  <||@
  Comment 1004 block B32 null  <||@
  Comment 1004 420 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1004 422 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1007 424 r8|QWORD = MOV [r13|QWORD + 168] size: QWORD  <||@
  Comment 1014 426 MOV (x: [rax|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 1017 428 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}  <||@
  Comment 1017 {meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}}  <||@
  Comment 1024 430 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1028 432 MOV (x: [rax|QWORD[*] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 1032 434 MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1036 436 r13|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3  <||@
  Comment 1043 438 MOV (x: [rax|QWORD[*] + 24], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1047 440 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1050 442 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1059 12  <||@
  Comment 1069 block B45 null  <||@
  Comment 1069 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1069 638 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1073 640 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1078 644 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.big5pow(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:88]  <||@
  Comment 1078 8  <||@
  Comment 1079 {HotSpotMethod<FDBigInteger.big5pow(int)>}  <||@
  Comment 1084 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 88, duringCall: true, rethrow: false]
              |0  |1               |2  |3  |4 
     locals:  |-  |stack:32|DWORD  |-  |-  |-   <||@
  Comment 1085 646 NULLCHECK [rax|QWORD[.]] state [bci:91]  <||@
  Comment 1085 [rax:0]at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 91, duringCall: false, rethrow: false]
              |0             |1               |2  |3  |4 
     locals:  |-             |stack:32|DWORD  |-  |-  |- 
     stack:   |Object[null]  |                |   |   |    <||@
  Comment 1085 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1087 648 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1090 650 rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1094 652 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:92]  <||@
  Comment 1094 9  <||@
  Comment 1095 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 1100 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 92, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1101 654 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1110 12  <||@
  Comment 1120 block B8 null  <||@
  Comment 1120 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1120 124 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1125 128 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.big5pow(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9]  <||@
  Comment 1125 8  <||@
  Comment 1127 {HotSpotMethod<FDBigInteger.big5pow(int)>}  <||@
  Comment 1132 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1133 130 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1142 12  <||@
  Comment 1152 block B36 null  <||@
  Comment 1152 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1152 466 stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1156 468 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1160 470 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1165 472 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1168 474 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1168 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1178 476 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1183 478 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1188 480 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1188 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1193 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0, duringCall: false, rethrow: false]
              |0               |1               |2  |3  |4 
     locals:  |stack:36|DWORD  |stack:32|DWORD  |-  |-  |-   <||@
  Comment 1194 482 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1194 484 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1198 486 r10|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 1201 488 JUMP ~[] destination: B36 -> B38  <||@
  Comment 1206 block B21 null  <||@
  Comment 1206 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 288 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1210 290 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1215 292 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1218 294 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1218 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1228 296 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1233 298 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1238 300 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1238 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1243 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0, duringCall: false, rethrow: false]
              |0               |1               |2  |3  |4 
     locals:  |stack:36|DWORD  |stack:32|DWORD  |-  |-  |-   <||@
  Comment 1244 302 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1247 304 r10|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 1250 306 JUMP ~[] destination: B21 -> B23  <||@
  Comment 1255 block B30 null  <||@
  Comment 1255 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1255 390 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1260 392 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1265 394 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1265 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1275 396 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1280 398 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1285 400 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:21, 26, 83]  <||@
  Comment 1285 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1290 [stack:16]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0                                                                                                         |1              
     locals:  |vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=stack:48|QWORD[.]}  |stack:28|DWORD 
  at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83, duringCall: true, rethrow: false]
              |0                                                                                                         |1  |2  |3  |4 
     locals:  |-                                                                                                         |-  |-  |-  |- 
     stack:   |vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=stack:48|QWORD[.]}  |   |   |   |    <||@
  Comment 1291 402 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1291 404 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1296 406 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1301 408 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1306 block B2 null  <||@
  Comment 1306 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1306 30 r10|DWORD = MOVE input: int[-91155|0xfffffffffffe9bed]  <||@
  Comment 1312 32 JUMP ~[] destination: B2 -> B44  <||@
  Comment 1312 block B44 null  <||@
  Comment 1312 628 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1312 630 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1319 632 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1326 634 DEOPT info [bci:0]  <||@
  Comment 1326 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1331 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2  |3  |4 
     locals:  |r13|DWORD  |rdx|DWORD  |-  |-  |-   <||@
  Comment 1332 block B25 null  <||@
  Comment 1332 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1332 344 r10|DWORD = MOVE input: int[-94227|0xfffffffffffe8fed]  <||@
  Comment 1338 346 JUMP ~[] destination: B25 -> B34  <||@
  Comment 1338 block B34 null  <||@
  Comment 1338 450 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1338 452 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1345 454 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1352 456 DEOPT info [bci:21, 26, 83]  <||@
  Comment 1352 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1357 [r13:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0                                                                                                    |1         
     locals:  |vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]}  |r11|DWORD 
  at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83, duringCall: true, rethrow: false]
              |0                                                                                                    |1  |2  |3  |4 
     locals:  |-                                                                                                    |-  |-  |-  |- 
     stack:   |vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]}  |   |   |   |    <||@
  Comment 1358 block B33 null  <||@
  Comment 1358 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1358 446 r10|DWORD = MOVE input: int[-94747|0xfffffffffffe8de5]  <||@
  Comment 1364 448 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1366 block B43 null  <||@
  Comment 1366 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1366 624 r10|DWORD = MOVE input: int[-91931|0xfffffffffffe98e5]  <||@
  Comment 1372 626 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1374 block B13 null  <||@
  Comment 1374 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1374 162 r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed]  <||@
  Comment 1380 164 JUMP ~[] destination: B13 -> B44  <||@
  Comment 1382 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1382 4  <||@
  Comment 1388 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1388 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10008[sun.misc.FDBigInteger.valueOfPow52(int, int)]"
  method "HotSpotCompilation-10008[sun.misc.FDBigInteger.valueOfPow52(int, int)]"
  date 1527005231820
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c91be0 89842400c0feff4883ec3848896c2430448bee448bf241c1fe0549ba10c026c0070000004585ed0f84da00000085d20f842b0400004183fd0e0f8dee0300004183fd0e0f830d05000048b9b03652c006000000468b5ca910f7c21f0000000f8431010000498b77604d8b47704c8d4e388bc283e01f8bc8418bdbd3e3b9200000002bc841d3eb4585db0f848a0100004d3bc80f87790200004d894f600f1886f8000000488bc6488bc8488d7020498b92a8000000488910c7400802d804f84489700cc74010020000004488601448c1ee03897018c7402c0200000048c7402001000000c740286d0100f889583044895834488bc1488b6c24304883c438850523d3bffcc5f877c38bca83e11fb801000000d3e085c00f84ff030000498b7760488d4e38493b4f700f872402000049894f600f1886f8000000488bd6488d4e204d8b92a80000004c8916c7460802d804f84489760cc74610010000004488661448c1e903894e18c7462c0100000048c7462001000000c746286d0100f8894630488bc2488b6c24304883c438850595d2bffcc5f877c34585db0f84c0030000498b4760488d7038493b77700f87da010000498977600f1880f8000000488bf0488d5020498b8aa8000000488908c7400802d804f84489700cc74010010000004488601448c1ea03895018c7402c0100000048c7402001000000c740286d0100f844895830488bc6488b6c24304883c438850511d2bffcc5f877c385db0f84780000004d3bc80f87560200004d894f600f1886f8000000488bc6488bf0488d5020498b8aa8000000488908c7400802d804f84489700cc74010010000004488601448c1ea03895018c7402c0200000048c7402001000000c740286d0100f889583044896034488bc6488b6c24304883c438850591d1bffcc5f877c3488d4e18493bc80f871002000049894f600f1886d80000004c8beec7460c0200000048c70601000000c746086d0100f8448966104489661441bb00000000e92a0000000f1f4000418bf3ffce83fe020f83600200004963d341837c950c000f85c5000000850523d1bffc448bde4183fb017dd4e92302000044895c240c895c24248954242044896c241c48be680b00c007000000ba0a000000b9010000004d8beae8c14e30ff90448b5c240c8b5c24244d8bd5e955fdffff894424248954242044896c241c4d8bea48be680b00c007000000ba0a000000b901000000e8864e30ff90488bf08b4424244d8bd5e9aefdffff44895c24248954242044896c241c4d8bea48be680b00c007000000ba0a000000b901000000e84c4e30ff90448b5c24244d8bd5e9f9fdffff4c895424104d8bd54c8b6c2410498b4760488d7020493b77700f8706010000498977600f1880e0000000488bf04d8b85a80000004c8900c7400802d804f84489700c44895810448860144d8bea49c1ed0344896818488bc6488b6c24304883c4388505fdcfbffcc5f877c38954242044896c241c90e80445b7fe908500488bf08b54242090e87440b7fe90488b6c24304883c4388505cacfbffcc5f877c344896c241c6690e8d444b7fe90488b6c24304883c4388505aacfbffcc5f877c3895c24248954242044896c241c4d8bea48be680b00c007000000ba0a000000b901000000e8574d30ff908b5c24244d8bd5e982fdffff8954242044896c241c4d8bea48be680b00c007000000ba02000000b901000000e8254d30ff90488bf04d8bd5e9cafdffff44895c24244c8954241048be680b00c007000000ba04000000b901000000e8f64c30ff90448b5c24244c8b542410e9d2feffff41baed9bfeff4589979c0200004d89a7a8020000e8eb54b7fe9041baed8ffeff4589979c0200004d89a7a8020000e8d154b7fe9041bae58dfeffebe441bae598feffebc241baed90feffebbae8d584fbfe90e8af53b7fe90f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2bd54cd1 slotKind: QWORD  <||@
  Comment 16 6 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 r14|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 26 10 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>}  <||@
  Comment 26 {meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>}}  <||@
  Comment 36 12 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 39 14 BRANCH trueDestinationProbability: 0.33243836953868683 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B7  <||@
  Comment 45 block B7 null  <||@
  Comment 45 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 45 118 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 47 120 BRANCH trueDestinationProbability: 0.0013406459475929777 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 53 block B9 null  <||@
  Comment 53 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 53 134 CMP r13|DWORD y: 14 size: DWORD  <||@
  Comment 57 136 BRANCH trueDestinationProbability: 0.9973151086160605 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B45  <||@
  Comment 63 block B10 null  <||@
  Comment 63 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 140 CMP r13|DWORD y: 14 size: DWORD  <||@
  Comment 67 142 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B43  <||@
  Comment 73 block B11 null  <||@
  Comment 73 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 146 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 73 {Object[int[14]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 83 148 r11|DWORD = MOV [rcx|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 88 150 TEST rdx|DWORD y: 31 size: DWORD  <||@
  Comment 94 152 BRANCH trueDestinationProbability: 0.3723690651003426 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B18  <||@
  Comment 100 block B18 null  <||@
  Comment 100 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 250 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 104 252 r8|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 108 254 r9|QWORD = LEA [rsi|QWORD + 56] size: QWORD  <||@
  Comment 112 256 rax|DWORD = AND rdx|DWORD y: 31 size: DWORD  <||@
  Comment 117 258 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 119 260 rbx|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 124 262 rcx|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 129 264 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 131 266 r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 134 268 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 137 270 BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B39  <||@
  Comment 143 block B39 null  <||@
  Comment 143 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 143 540 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 146 542 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 152 block B41 null  <||@
  Comment 152 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 152 576 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 156 578 AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0  <||@
  Comment 163 580 rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 166 582 JUMP ~[] destination: B41 -> B42  <||@
  Comment 166 block B42 null  <||@
  Comment 166 584 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 166 586 rcx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 169 588 rsi|QWORD[*] = LEA [rax|QWORD[*] + 32] size: QWORD  <||@
  Comment 173 590 rsi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 173 592 rdx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 180 594 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 183 596 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}  <||@
  Comment 183 {meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}}  <||@
  Comment 190 598 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 194 600 MOV [rax|QWORD[*] + 16] y: 2 size: DWORD  <||@
  Comment 201 602 MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 205 604 rsi|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3  <||@
  Comment 209 606 MOV (x: [rax|QWORD[*] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 212 608 MOV [rax|QWORD[*] + 44] y: 2 size: DWORD  <||@
  Comment 219 610 MOV [rax|QWORD[*] + 32] y: 1 size: QWORD  <||@
  Comment 227 612 MOV [rax|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 227 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 234 614 MOV (x: [rax|QWORD[*] + 48], y: rbx|DWORD) size: DWORD  <||@
  Comment 237 616 MOV (x: [rax|QWORD[*] + 52], y: r11|DWORD) size: DWORD  <||@
  Comment 241 618 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 244 620 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 253 12  <||@
  Comment 263 block B1 null  <||@
  Comment 263 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 263 18 rcx|DWORD = AND rdx|DWORD y: 31 size: DWORD  <||@
  Comment 268 20 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 273 22 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 275 24 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 277 26 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 283 block B3 null  <||@
  Comment 283 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 283 36 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 287 38 rcx|QWORD = LEA [rsi|QWORD + 56] size: QWORD  <||@
  Comment 291 40 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 295 42 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 301 block B5 null  <||@
  Comment 301 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 301 72 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 305 74 AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0  <||@
  Comment 312 76 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 312 78 JUMP ~[] destination: B5 -> B6  <||@
  Comment 312 block B6 null  <||@
  Comment 312 80 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 312 82 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 315 84 rcx|QWORD[*] = LEA [rsi|QWORD[*] + 32] size: QWORD  <||@
  Comment 319 86 rcx|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 319 88 r10|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 326 90 MOV (x: [rsi|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 329 92 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}  <||@
  Comment 329 {meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}}  <||@
  Comment 336 94 MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 340 96 MOV [rsi|QWORD[*] + 16] y: 1 size: DWORD  <||@
  Comment 347 98 MOVB (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 351 100 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3  <||@
  Comment 355 102 MOV (x: [rsi|QWORD[*] + 24], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 358 104 MOV [rsi|QWORD[*] + 44] y: 1 size: DWORD  <||@
  Comment 365 106 MOV [rsi|QWORD[*] + 32] y: 1 size: QWORD  <||@
  Comment 373 108 MOV [rsi|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 373 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 380 110 MOV (x: [rsi|QWORD[*] + 48], y: rax|DWORD) size: DWORD  <||@
  Comment 383 112 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 386 114 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 395 12  <||@
  Comment 405 block B12 null  <||@
  Comment 405 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 405 156 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 408 158 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 414 block B14 null  <||@
  Comment 414 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 414 168 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 418 170 rsi|QWORD = LEA [rax|QWORD + 56] size: QWORD  <||@
  Comment 422 172 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 426 174 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 432 block B16 null  <||@
  Comment 432 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 204 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 436 206 AMD64PREFETCH ~[rax|QWORD + 248] instr: 0  <||@
  Comment 443 208 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 443 210 JUMP ~[] destination: B16 -> B17  <||@
  Comment 443 block B17 null  <||@
  Comment 443 212 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 443 214 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 446 216 rdx|QWORD[*] = LEA [rax|QWORD[*] + 32] size: QWORD  <||@
  Comment 450 218 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 450 220 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 457 222 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 460 224 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}  <||@
  Comment 460 {meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}}  <||@
  Comment 467 226 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 471 228 MOV [rax|QWORD[*] + 16] y: 1 size: DWORD  <||@
  Comment 478 230 MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 482 232 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3  <||@
  Comment 486 234 MOV (x: [rax|QWORD[*] + 24], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 489 236 MOV [rax|QWORD[*] + 44] y: 1 size: DWORD  <||@
  Comment 496 238 MOV [rax|QWORD[*] + 32] y: 1 size: QWORD  <||@
  Comment 504 240 MOV [rax|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 504 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 511 242 MOV (x: [rax|QWORD[*] + 48], y: r11|DWORD) size: DWORD  <||@
  Comment 515 244 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 518 246 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 527 12  <||@
  Comment 537 block B19 null  <||@
  Comment 537 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 274 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 539 276 BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B35  <||@
  Comment 545 block B35 null  <||@
  Comment 545 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 545 460 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 548 462 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 554 block B37 null  <||@
  Comment 554 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 492 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 558 494 AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0  <||@
  Comment 565 496 rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 568 498 JUMP ~[] destination: B37 -> B38  <||@
  Comment 568 block B38 null  <||@
  Comment 568 500 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 568 502 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 571 504 rdx|QWORD[*] = LEA [rax|QWORD[*] + 32] size: QWORD  <||@
  Comment 575 506 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 575 508 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 582 510 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 585 512 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}  <||@
  Comment 585 {meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}}  <||@
  Comment 592 514 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 596 516 MOV [rax|QWORD[*] + 16] y: 1 size: DWORD  <||@
  Comment 603 518 MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 607 520 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3  <||@
  Comment 611 522 MOV (x: [rax|QWORD[*] + 24], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 614 524 MOV [rax|QWORD[*] + 44] y: 2 size: DWORD  <||@
  Comment 621 526 MOV [rax|QWORD[*] + 32] y: 1 size: QWORD  <||@
  Comment 629 528 MOV [rax|QWORD[*] + 40] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 629 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 636 530 MOV (x: [rax|QWORD[*] + 48], y: rbx|DWORD) size: DWORD  <||@
  Comment 639 532 MOV (x: [rax|QWORD[*] + 52], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 643 534 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 646 536 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 655 12  <||@
  Comment 665 block B20 null  <||@
  Comment 665 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 280 rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 669 282 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 672 284 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 678 block B22 null  <||@
  Comment 678 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 678 310 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 682 312 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 689 314 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 689 316 JUMP ~[] destination: B22 -> B23  <||@
  Comment 689 block B23 null  <||@
  Comment 689 318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 689 320 r13|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 692 322 MOV [rsi|QWORD[*] + 12] y: 2 size: DWORD  <||@
  Comment 699 324 MOV [rsi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 706 326 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 706 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 713 328 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 717 330 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 721 332 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 727 334 JUMP ~[] destination: B23 -> B24  <||@
  Comment 732 block B26 loop 0 depth 1 header:107|LoopBegin  <||@
  Comment 732 348 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 736 350 rsi|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 741 352 CMP rsi|DWORD y: 2 size: DWORD  <||@
  Comment 744 354 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B33  <||@
  Comment 750 block B27 loop 0 depth 1 header:107|LoopBegin  <||@
  Comment 750 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 750 358 rdx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 753 360 CMP [r13|QWORD[.] + rdx|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 759 362 BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 765 block B28 loop 0 depth 1 header:107|LoopBegin  <||@
  Comment 765 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 366 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 26, 83]  <||@
  Comment 765 [r13:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0                                                                                                    |1         
     locals:  |vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]}  |r11|DWORD 
  at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83, duringCall: true, rethrow: false]
              |0                                                                                                    |1  |2  |3  |4 
     locals:  |-                                                                                                    |-  |-  |-  |- 
     stack:   |vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]}  |   |   |   |    <||@
  Comment 765 {infopoint: SAFEPOINT}  <||@
  Comment 765 11  <||@
  Comment 771 368 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 774 370 JUMP ~[] destination: B28 -> B24  <||@
  Comment 774 block B24 loop 0 depth 1 header:107|LoopBegin  <||@
  Comment 774 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 774 338 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 778 340 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 785 block B40 null  <||@
  Comment 785 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 546 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 790 548 stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 794 550 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 798 552 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 803 554 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 803 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 813 556 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 818 558 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 823 560 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 826 562 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 826 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 831 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0, duringCall: false, rethrow: false]
              |0               |1               |2  |3  |4 
     locals:  |stack:36|DWORD  |stack:32|DWORD  |-  |-  |-   <||@
  Comment 832 564 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 832 566 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 837 568 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 841 570 r10|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 844 572 JUMP ~[] destination: B40 -> B42  <||@
  Comment 849 block B4 null  <||@
  Comment 849 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 849 46 stack:28|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 853 48 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 857 50 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 862 52 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 865 54 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 865 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 875 56 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 880 58 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 885 60 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 885 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 890 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0, duringCall: false, rethrow: false]
              |0               |1               |2  |3  |4 
     locals:  |stack:36|DWORD  |stack:32|DWORD  |-  |-  |-   <||@
  Comment 891 62 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 894 64 rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 898 66 r10|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 901 68 JUMP ~[] destination: B4 -> B6  <||@
  Comment 906 block B15 null  <||@
  Comment 906 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 906 178 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 911 180 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 915 182 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 920 184 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 923 186 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 923 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 933 188 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 938 190 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 943 192 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 943 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 948 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0, duringCall: false, rethrow: false]
              |0               |1               |2  |3  |4 
     locals:  |stack:36|DWORD  |stack:32|DWORD  |-  |-  |-   <||@
  Comment 949 194 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 949 196 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 954 198 r10|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 957 200 JUMP ~[] destination: B15 -> B17  <||@
  Comment 962 block B29 null  <||@
  Comment 962 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 962 374 stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 967 376 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 970 378 r13|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 975 380 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 979 382 rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 983 384 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 987 386 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 993 block B31 null  <||@
  Comment 993 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 993 412 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 997 414 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 1004 416 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1004 418 JUMP ~[] destination: B31 -> B32  <||@
  Comment 1004 block B32 null  <||@
  Comment 1004 420 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1004 422 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1007 424 r8|QWORD = MOV [r13|QWORD + 168] size: QWORD  <||@
  Comment 1014 426 MOV (x: [rax|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 1017 428 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}  <||@
  Comment 1017 {meta{HotSpotType<Lsun/misc/FDBigInteger;, resolved>;compressed}}  <||@
  Comment 1024 430 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1028 432 MOV (x: [rax|QWORD[*] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 1032 434 MOVB (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1036 436 r13|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@21c6328b encoding: base: 0 shift: 3  <||@
  Comment 1043 438 MOV (x: [rax|QWORD[*] + 24], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1047 440 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1050 442 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1059 12  <||@
  Comment 1069 block B45 null  <||@
  Comment 1069 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1069 638 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1073 640 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1078 644 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.big5pow(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:88]  <||@
  Comment 1078 8  <||@
  Comment 1079 {HotSpotMethod<FDBigInteger.big5pow(int)>}  <||@
  Comment 1084 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 88, duringCall: true, rethrow: false]
              |0  |1               |2  |3  |4 
     locals:  |-  |stack:32|DWORD  |-  |-  |-   <||@
  Comment 1085 646 NULLCHECK [rax|QWORD[.]] state [bci:91]  <||@
  Comment 1085 [rax:0]at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 91, duringCall: false, rethrow: false]
              |0             |1               |2  |3  |4 
     locals:  |-             |stack:32|DWORD  |-  |-  |- 
     stack:   |Object[null]  |                |   |   |    <||@
  Comment 1085 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1087 648 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1090 650 rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1094 652 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:92]  <||@
  Comment 1094 9  <||@
  Comment 1095 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 1100 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:267) [bci: 92, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1101 654 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1110 12  <||@
  Comment 1120 block B8 null  <||@
  Comment 1120 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1120 124 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1125 128 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.big5pow(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9]  <||@
  Comment 1125 8  <||@
  Comment 1127 {HotSpotMethod<FDBigInteger.big5pow(int)>}  <||@
  Comment 1132 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1133 130 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1142 12  <||@
  Comment 1152 block B36 null  <||@
  Comment 1152 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1152 466 stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1156 468 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1160 470 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1165 472 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1168 474 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1168 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1178 476 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1183 478 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1188 480 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1188 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1193 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0, duringCall: false, rethrow: false]
              |0               |1               |2  |3  |4 
     locals:  |stack:36|DWORD  |stack:32|DWORD  |-  |-  |-   <||@
  Comment 1194 482 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1194 484 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1198 486 r10|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 1201 488 JUMP ~[] destination: B36 -> B38  <||@
  Comment 1206 block B21 null  <||@
  Comment 1206 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 288 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1210 290 stack:36|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1215 292 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1218 294 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1218 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1228 296 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1233 298 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1238 300 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1238 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1243 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0, duringCall: false, rethrow: false]
              |0               |1               |2  |3  |4 
     locals:  |stack:36|DWORD  |stack:32|DWORD  |-  |-  |-   <||@
  Comment 1244 302 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1247 304 r10|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 1250 306 JUMP ~[] destination: B21 -> B23  <||@
  Comment 1255 block B30 null  <||@
  Comment 1255 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1255 390 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1260 392 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1265 394 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1265 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1275 396 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1280 398 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1285 400 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:21, 26, 83]  <||@
  Comment 1285 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1290 [stack:16]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0                                                                                                         |1              
     locals:  |vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=stack:48|QWORD[.]}  |stack:28|DWORD 
  at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83, duringCall: true, rethrow: false]
              |0                                                                                                         |1  |2  |3  |4 
     locals:  |-                                                                                                         |-  |-  |-  |- 
     stack:   |vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=stack:48|QWORD[.]}  |   |   |   |    <||@
  Comment 1291 402 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1291 404 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1296 406 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1301 408 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1306 block B2 null  <||@
  Comment 1306 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1306 30 r10|DWORD = MOVE input: int[-91155|0xfffffffffffe9bed]  <||@
  Comment 1312 32 JUMP ~[] destination: B2 -> B44  <||@
  Comment 1312 block B44 null  <||@
  Comment 1312 628 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1312 630 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1319 632 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1326 634 DEOPT info [bci:0]  <||@
  Comment 1326 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1331 []at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:251) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2  |3  |4 
     locals:  |r13|DWORD  |rdx|DWORD  |-  |-  |-   <||@
  Comment 1332 block B25 null  <||@
  Comment 1332 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1332 344 r10|DWORD = MOVE input: int[-94227|0xfffffffffffe8fed]  <||@
  Comment 1338 346 JUMP ~[] destination: B25 -> B34  <||@
  Comment 1338 block B34 null  <||@
  Comment 1338 450 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1338 452 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1345 454 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1352 456 DEOPT info [bci:21, 26, 83]  <||@
  Comment 1352 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1357 [r13:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0                                                                                                    |1         
     locals:  |vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]}  |r11|DWORD 
  at sun.misc.FDBigInteger.<init>(FDBigInteger.java:189) [bci: 26, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at sun.misc.FDBigInteger.valueOfPow52(FDBigInteger.java:261) [bci: 83, duringCall: true, rethrow: false]
              |0                                                                                                    |1  |2  |3  |4 
     locals:  |-                                                                                                    |-  |-  |-  |- 
     stack:   |vobject:FDBigInteger:0{offset=r14|DWORD,nWords=int[2|0x2],isImmutable=int[0|0x0],data=r13|QWORD[.]}  |   |   |   |    <||@
  Comment 1358 block B33 null  <||@
  Comment 1358 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1358 446 r10|DWORD = MOVE input: int[-94747|0xfffffffffffe8de5]  <||@
  Comment 1364 448 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1366 block B43 null  <||@
  Comment 1366 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1366 624 r10|DWORD = MOVE input: int[-91931|0xfffffffffffe98e5]  <||@
  Comment 1372 626 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1374 block B13 null  <||@
  Comment 1374 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1374 162 r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed]  <||@
  Comment 1380 164 JUMP ~[] destination: B13 -> B44  <||@
  Comment 1382 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1382 4  <||@
  Comment 1388 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1388 5  <||@
  HexCodeFile>>> <|@
end_nmethod
