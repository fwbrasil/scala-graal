begin_compilation
  name " HotSpotCompilation-10093[java.util.HashSet.add(Object)]"
  method "HotSpotCompilation-10093[java.util.HashSet.add(Object)]"
  date 1527005236672
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1058 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1058  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1079 ?11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1058 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.map
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1079 
=== Succesors ===
next: v1133 
=== Usages ===
a454 v1133 v1082 v1098 v1099 v1100 v1105 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1079 #next: v1133  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v585 ?11 ?46 v601 a782 ?58 ?65 v559 v85 v89 ?823 ?826 ?825 v587 ?120 ?369 v136 a1055 v1104 v1081 v498 v612 i480 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashSet.add(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashSet.java
sourceLine: 220
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v848 i480 v1133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a1058 
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
a1058 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a1058 #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid a48 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v559 v601 a216 a864 v848 v873 v856 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 85]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v720 
falseSuccessor: v718 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v720 #falseSuccessor: v718  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v848 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v848  <|@  <|@
f <@~|@floating>@ <|@
tid i850 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116755
stableDimension: 0
stamp: i32 [-116755] ⇊00000000fffe37ed ⇈00000000fffe37ed
stampKind: i32
value: int[-116755|0xfffffffffffe37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i850 
speculation: a48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i850 speculation: a48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1059  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1104 
=== Succesors ===
next: v459 
=== Usages ===
v1080 
=== Predecessor ===
v718 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1104 #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1059 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1080 
=== Succesors ===
next: v1060 
=== Usages ===
v29 
=== Predecessor ===
v1059 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1080 #next: v1060  <|@  <|@
f <@~|@floating>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1058 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1105 
=== Succesors ===
next: v32 
=== Usages ===
v1087 v1028 v1101 v1134 v1135 
=== Predecessor ===
v459 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1105 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1060 
y: v1027 
=== Succesors ===
=== Usages ===
v312 v229 v251 v261 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1060 y: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: meta{HotSpotMethod<Object.hashCode()>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.hashCode()>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v459 
y: v28 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v459 y: v28  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<HashSet.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rethrowException: false
sourceFile: HashSet.java
sourceLine: 220
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?46 ?213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 5]
rawvalue: Object@652050100
stableDimension: 0
stamp: a!# Ljava/lang/Object;
stampKind: a -
value: Object[Object@652050100]
=== Inputs ===
=== Succesors ===
=== Usages ===
?46 ?825 ?58 ?65 v559 ?829 ?828 v587 ?827 ?120 v601 ?369 ?826 ?823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a454 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 1]
op: Uncompress
stamp: a Ljava/util/HashMap;
=== Inputs ===
value: a1058 
=== Succesors ===
=== Usages ===
v631 ?46 v637 v621 v501 ?58 ?65 v559 ?830 ?829 ?828 ?827 v587 ?826 ?120 ?369 v595 ?825 v641 v601 ?824 ?823 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1058  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashMap.put(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 612
stackSize: 1
=== Inputs ===
outerFrameState: ?11 
values: - a2 a5 a454 
=== Succesors ===
=== Usages ===
?822 ?319 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?11 values: - a2 a5 a454  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1058 
=== Succesors ===
=== Usages ===
a1061 a1062 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1058  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v953 v961 v968 v1021 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i948 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j949 j958 j965 j1018 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j952 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1111 v1112 v1113 v1119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a652 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: Object@652050100
stableDimension: 0
stamp: n!# Ljava/lang/Object;
stampKind: n -
value: NarrowOop[Object@652050100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v620 v944 v1014 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v936 v1006 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j998 j1057 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1033 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a907 a982 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a907 a982 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1031 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1032 j1041 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i67 i380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?213 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<HashMap.put(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 612
stackSize: 0
=== Inputs ===
outerFrameState: ?11 
values: - - - 
=== Succesors ===
=== Usages ===
?58 ?65 ?833 ?832 ?831 ?830 ?829 ?120 ?824 ?823 ?828 ?369 ?827 ?826 ?825 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?11 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 15]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i43 i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.put(HashMap.java:612) [bci: 8]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 i20 ?58 ?65 ?830 ?829 ?828 ?827 ?826 ?120 i192 ?369 ?825 v419 i153 ?824 ?823 a982 v408 v397 i188 v641 a907 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.put(HashMap.java:612) [bci: 7]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v946 i20 v54 ?58 ?65 ?829 v94 ?828 ?827 i119 ?120 v473 ?369 ?826 v147 v1016 ?825 ?823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v31 
=== Usages ===
=== Predecessor ===
v1060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v30 #falseSuccessor: v31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j484 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j484  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1081 
=== Succesors ===
next: v470 
=== Usages ===
j466 j471 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1081 #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid j481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j484 
y: j481 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j484 y: j481  <|@  <|@
f <@~|@floating>@ <|@
tid j482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j466 
y: j482 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j466 y: j482  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 44]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v467 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v468 
=== Usages ===
=== Predecessor ===
j484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v467 #trueSuccessor: v469 #falseSuccessor: v468  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 47]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid i464 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.hubOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:751) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j471 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j484 
y: i464 
=== Succesors ===
=== Usages ===
i472 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j484 y: i464  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
resultBits: 32
stamp: i32
=== Inputs ===
value: j471 
=== Succesors ===
=== Usages ===
v473 i488 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j471  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i472 
y: i13 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i472 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v473 
=== Succesors ===
trueSuccessor: v478 
falseSuccessor: v477 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v473 #trueSuccessor: v478 #falseSuccessor: v477  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v474 v476 
=== Succesors ===
next: i480 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v474 v476 #next: i480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i480 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: a2 
=== Succesors ===
next: v490 
=== Usages ===
i488 
=== Predecessor ===
v475 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: a2 #next: v490  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
i480 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v486 
values: i472 i480 
=== Succesors ===
=== Usages ===
i351 i323 i350 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v486 values: i472 i480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v489 v490 
=== Succesors ===
next: a1061 
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v489 v490 #next: a1061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1082 
=== Succesors ===
next: v349 
=== Usages ===
a834 v643 
=== Predecessor ===
v486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1082 #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a1061 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1061  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i488 
y: i42 
=== Succesors ===
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i488 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i351 
y: i488 
=== Succesors ===
=== Usages ===
i326 i325 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i351 y: i488  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.05949555131451651
=== Inputs ===
condition: v643 
=== Succesors ===
trueSuccessor: v347 
falseSuccessor: v348 
=== Usages ===
=== Predecessor ===
a1061 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v643 #trueSuccessor: v347 #falseSuccessor: v348  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588649291477489029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 19]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B20" 
    xhandlers
    flags 
    probability 4606561817404864084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 10]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B19" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i36 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i36  <|@  <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3d1a509f
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?822 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 0
=== Inputs ===
outerFrameState: ?46 
values: - - 
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?46 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v498 
stateDuring: ?822 
=== Succesors ===
next: a1062 
=== Usages ===
i43 i323 i44 
=== Predecessor ===
v31 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v498 stateDuring: ?822 #next: a1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1062 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1082 
=== Succesors ===
next: v52 
=== Usages ===
a834 v644 
=== Predecessor ===
i36 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1082 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a1062 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1062  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i36 
y: i42 
=== Succesors ===
=== Usages ===
i44 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i36 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i36 
y: i43 
=== Succesors ===
=== Usages ===
i326 i325 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i36 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.05949555131451651
=== Inputs ===
condition: v644 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
a1062 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v644 #trueSuccessor: v50 #falseSuccessor: v51  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558626719314687161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 19]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B18" 
    xhandlers
    flags 
    probability 4588735033603162712
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i326 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v314 
values: i44 i350 
=== Succesors ===
=== Usages ===
i68 ?58 i377 i378 ?823 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v314 values: i44 i350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v315 v316 
=== Succesors ===
next: a57 
=== Usages ===
i326 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v315 v316 #next: a57  <|@  <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: a [Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@66fefae3
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a454 
=== Succesors ===
=== Usages ===
a57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a454  <|@  <|@
tid ?823 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 629
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 i326 a2 a5 i13 i14 - - - - - - - 
=== Succesors ===
=== Usages ===
a57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i326 a2 a5 i13 i14 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
bci: 20
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: a [Ljava/util/HashMap$Node;
targetMethod: Direct#HashMap.resize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v501 
stateDuring: ?823 
=== Succesors ===
next: i1063 
=== Usages ===
?58 a708 v1084 v1083 a704 
=== Predecessor ===
v314 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v501 stateDuring: ?823 #next: i1063  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 629
stackSize: 1
=== Inputs ===
outerFrameState: ?213 
values: a454 i326 a2 a5 i13 i14 - - - - - - - a57 
=== Succesors ===
=== Usages ===
v856 i1063 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i326 a2 a5 i13 i14 - - - - - - - a57  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a57 
index: - 
=== Succesors ===
=== Usages ===
i1063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a57 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1063 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 26]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?58 
guard: - 
address: v1083 
=== Succesors ===
next: v729 
=== Usages ===
v508 i709 i67 i705 
=== Predecessor ===
a57 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?58 guard: - address: v1083 #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1063 
y: i66 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1063 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 36]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i67 
y: i326 
=== Succesors ===
=== Usages ===
v1084 i371 v508 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i67 y: i326  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i1063 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i68 y: i1063  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v508 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v728 
=== Usages ===
=== Predecessor ===
i1063 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v508 #trueSuccessor: v726 #falseSuccessor: v728  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4588735033603162712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1064 
=== Usages ===
a1064 
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1064  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a57 
index: i68 
=== Succesors ===
=== Usages ===
a1064 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a57 index: i68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1064 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v726 
address: v1084 
=== Succesors ===
next: v73 
=== Usages ===
a837 v646 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v726 address: v1084 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a1064 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1064  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.8771074655430375
=== Inputs ===
condition: v646 
=== Succesors ===
trueSuccessor: v71 
falseSuccessor: v72 
=== Usages ===
=== Predecessor ===
a1064 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v646 #trueSuccessor: v71 #falseSuccessor: v72  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B25" 
    xhandlers
    flags 
    probability 4587681326889786085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 47]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v365  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v71 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575079675860695960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 63]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid i858 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130331
stableDimension: 0
stamp: i32 [-130331] ⇊00000000fffe02e5 ⇈00000000fffe02e5
stampKind: i32
value: int[-130331|0xfffffffffffe02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?58 
actionAndReason: i858 
speculation: a48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?58 actionAndReason: i858 speculation: a48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576575260801392948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 10]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v51 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B11" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a834 <|@
d <@d|@=== Debug Properties ===
stamp: n [Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v317 
values: a1062 a1061 
=== Succesors ===
=== Usages ===
a835 v1085 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: a1062 a1061  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v317 
values: i36 i488 
=== Succesors ===
=== Usages ===
?319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: i36 i488  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v317 
values: i44 i350 
=== Succesors ===
=== Usages ===
i377 i381 i378 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: i44 i350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v318 v320 
=== Succesors ===
next: i1065 
=== Usages ===
a834 i323 i325 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v318 v320 #next: i1065  <|@  <|@
tid ?319 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 1
=== Inputs ===
outerFrameState: ?46 
values: - - i323 
=== Succesors ===
=== Usages ===
v873 i1065 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?46 values: - - i323  <|@  <|@
f <@~|@floating>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a834 
=== Succesors ===
=== Usages ===
i1065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1065 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 12]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?319 
guard: - 
address: v1085 
=== Succesors ===
next: v737 
=== Usages ===
v54 v526 i380 i709 i705 
=== Predecessor ===
v317 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?319 guard: - address: v1085 #next: v737  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1065 
y: i13 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1065 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v736 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
i1065 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v736 #falseSuccessor: v734  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid i875 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -134163
stableDimension: 0
stamp: i32 [-134163] ⇊00000000fffdf3ed ⇈00000000fffdf3ed
stampKind: i32
value: int[-134163|0xfffffffffffdf3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v736 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B78" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v741 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v741  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1065 
y: i66 
=== Succesors ===
=== Usages ===
i381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1065 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 36]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i325 
y: i380 
=== Succesors ===
=== Usages ===
v1086 i371 v526 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i325 y: i380  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i381 
y: i1065 
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i381 y: i1065  <|@  <|@
f <@*|@fixed>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v526 
=== Succesors ===
trueSuccessor: v738 
falseSuccessor: v740 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v526 #trueSuccessor: v738 #falseSuccessor: v740  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B36" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1066 
=== Usages ===
a1066 
=== Predecessor ===
v741 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1066  <|@  <|@
f <@~|@floating>@ <|@
tid a835 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
a708 a704 v1086 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a834  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a835 
index: i381 
=== Succesors ===
=== Usages ===
a1066 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a835 index: i381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1066 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v738 
address: v1086 
=== Succesors ===
next: v386 
=== Usages ===
a837 v648 
=== Predecessor ===
v738 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v738 address: v1086 #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a1066 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1066  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.8771074655430375
=== Inputs ===
condition: v648 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v385 
=== Usages ===
=== Predecessor ===
a1066 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v648 #trueSuccessor: v384 #falseSuccessor: v385  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605605469639368944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 47]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" "B24" 
    successors "B26" "B34" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v364 
values: i68 i381 
=== Succesors ===
=== Usages ===
?824 v1090 v564 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: i68 i381  <|@  <|@
f <@~|@floating>@ <|@
tid a704 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v364 
values: a57 a835 
=== Succesors ===
=== Usages ===
?65 ?824 v1089 v1106 v1090 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: a57 a835  <|@  <|@
f <@~|@floating>@ <|@
tid i705 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v364 
values: i1063 i1065 
=== Succesors ===
=== Usages ===
?65 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: i1063 i1065  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v364 
values: i326 i325 
=== Succesors ===
=== Usages ===
?65 v559 v940 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: i326 i325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v365 v366 
=== Succesors ===
next: v1067 
=== Usages ===
i371 a704 i705 i378 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v365 v366 #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a704 
index: - 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1106 
=== Succesors ===
next: v745 
=== Usages ===
v1030 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1106 #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1067 
y: v1029 
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1067 y: v1029  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 i378 a2 a5 i13 i14 a704 - i705 - - - - 
=== Succesors ===
=== Usages ===
a907 v865 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i378 a2 a5 i13 i14 a704 - i705 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1030 
=== Succesors ===
trueSuccessor: v742 
falseSuccessor: v744 
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1030 #trueSuccessor: v742 #falseSuccessor: v744  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1068 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1068  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a704 
index: - 
=== Succesors ===
=== Usages ===
i1068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1068 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1089 
=== Succesors ===
next: v749 
=== Usages ===
v564 
=== Predecessor ===
v742 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1089 #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i371 
y: i1068 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i371 y: i1068  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v564 
=== Succesors ===
trueSuccessor: v746 
falseSuccessor: v748 
=== Usages ===
=== Predecessor ===
i1068 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v564 #trueSuccessor: v746 #falseSuccessor: v748  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B32" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
v575 v550 
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a704 
index: i371 
=== Succesors ===
=== Usages ===
v575 v550 j947 j957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a704 index: i371  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9308569947624414
=== Inputs ===
condition: v1028 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v228 
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1028 #trueSuccessor: v225 #falseSuccessor: v228  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605529252035592985
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j895 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j895  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j895 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j914 
=== Usages ===
v1107 v1108 
=== Predecessor ===
v225 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j914  <|@  <|@
f <@~|@floating>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j895 
index: - 
=== Succesors ===
=== Usages ===
j914 v916 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j895 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j914 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1107 
=== Succesors ===
next: j915 
=== Usages ===
j1032 j920 v1121 
=== Predecessor ===
j895 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1107 #next: j915  <|@  <|@
f <@~|@floating>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j895 
index: - 
=== Succesors ===
=== Usages ===
j915 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j895 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j915 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1108 
=== Succesors ===
next: v903 
=== Usages ===
v900 
=== Predecessor ===
j914 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1108 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid j1032 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j914 
y: j1031 
=== Succesors ===
=== Usages ===
v900 v916 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j914 y: j1031  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j915 
y: j1032 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j915 y: j1032  <|@  <|@
f <@*|@fixed>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v900 
=== Succesors ===
trueSuccessor: v901 
falseSuccessor: v902 
=== Usages ===
=== Predecessor ===
j915 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v900 #trueSuccessor: v901 #falseSuccessor: v902  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4575860202574856048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a907 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a907 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?65 
arguments: v893 i1033 i14 
=== Succesors ===
next: j908 
=== Usages ===
j908 
=== Predecessor ===
v901 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?65 arguments: v893 i1033 i14 #next: j908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j908 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a907 
=== Succesors ===
next: v921 
=== Usages ===
j920 
=== Predecessor ===
a907 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a907 #next: v921  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
j908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605455711710689819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1107 
value: j1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v902 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1107 value: j1032 stateAfter: - lastLocationAccess: - #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j914 
index: - 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j914 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1121 
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1121 #next: v919  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
v912 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B68" 
    xhandlers
    flags 
    probability 4605529252035592985
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j920 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v918 
values: j914 j908 
=== Succesors ===
=== Usages ===
v1110 v1109 a779 v1122 v1123 v1124 v1125 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v918 values: j914 j908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v919 v921 
=== Succesors ===
next: a779 
=== Usages ===
j920 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v919 v921 #next: a779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a779 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j920 
=== Succesors ===
next: j932 
=== Usages ===
a787 
=== Predecessor ===
v918 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j920 #next: j932  <|@  <|@
f <@~|@floating>@ <|@
tid j1057 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v926 
=== Succesors ===
=== Usages ===
v1131 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v926  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1057 
index: - 
=== Succesors ===
=== Usages ===
j932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1057 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j932 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1131 
=== Succesors ===
next: v933 
=== Usages ===
v933 
=== Predecessor ===
a779 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1131 #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1109 
value: j932 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v936 
=== Usages ===
=== Predecessor ===
j932 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1109 value: j932 stateAfter: - lastLocationAccess: - #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1110 
value: v1036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1110 value: v1036 stateAfter: - lastLocationAccess: - #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1122 
value: i378 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1122 value: i378 stateAfter: - lastLocationAccess: - #next: v942  <|@  <|@
f <@~|@floating>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v942 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a782 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v942 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1123 
value: a782 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v944 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1123 value: a782 stateAfter: - lastLocationAccess: - #next: v944  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1124 
value: a652 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1124 value: a652 stateAfter: - lastLocationAccess: - #next: v946  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1125 
value: i13 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a787 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1125 value: i13 stateAfter: - lastLocationAccess: - #next: a787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a787 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a779 
=== Succesors ===
next: v788 
=== Usages ===
a549 
=== Predecessor ===
v946 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a779 #next: v788  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
a787 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid a549 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Compress
stamp: n -
=== Inputs ===
value: a787 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v746 
address: v1090 
value: a549 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j947 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v746 address: v1090 value: a549 stateAfter: - lastLocationAccess: - #next: j947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1090 
=== Succesors ===
next: v953 
=== Usages ===
j949 
=== Predecessor ===
v550 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1090 #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid j949 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j947 
y: i948 
=== Succesors ===
=== Usages ===
v1111 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j947 y: i948  <|@  <|@
f <@~|@floating>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j949 
index: j952 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j949 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1111 
value: i954 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
j947 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1111 value: i954 stateAfter: - lastLocationAccess: - #next: v393  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
v953 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B68" 
    xhandlers
    flags 
    probability 4588900808550201421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
displacement: 680
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1060 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1087 
=== Succesors ===
next: j558 
=== Usages ===
v1088 v559 
=== Predecessor ===
v228 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1087 #next: j558  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v555 
index: - 
=== Succesors ===
=== Usages ===
j558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v555 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1088 
=== Succesors ===
next: a75 
=== Usages ===
v559 
=== Predecessor ===
v555 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1088 #next: a75  <|@  <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: a Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@60287edc
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j558 
metaspaceMethod: v555 
arguments: a454 i378 a2 a5 a48 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j558 metaspaceMethod: v555 arguments: a454 i378 a2 a5 a48  <|@  <|@
tid ?824 <|@
d <@d|@=== Debug Properties ===
bci: 56
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 631
stackSize: 2
=== Inputs ===
outerFrameState: ?213 
values: a454 - - - - i14 - - - - - - - a704 i371 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 - - - - i14 - - - - - - - a704 i371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
bci: 56
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: true
stamp: a Ljava/util/HashMap$Node;
targetMethod: Indirect#HashMap.newNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v559 
stateDuring: ?824 
=== Succesors ===
next: v575 
=== Usages ===
a574 
=== Predecessor ===
j558 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v559 stateDuring: ?824 #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid a574 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a75 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v746 
address: v1090 
value: a574 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j957 
=== Usages ===
=== Predecessor ===
a75 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v746 address: v1090 value: a574 stateAfter: - lastLocationAccess: - #next: j957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j957 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1090 
=== Succesors ===
next: v961 
=== Usages ===
j958 
=== Predecessor ===
v575 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1090 #next: v961  <|@  <|@
f <@~|@floating>@ <|@
tid j958 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j957 
y: i948 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j957 y: i948  <|@  <|@
f <@~|@floating>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j958 
index: j952 
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j958 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1112 
value: i954 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
j957 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1112 value: i954 stateAfter: - lastLocationAccess: - #next: v173  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
v961 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid i867 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -182043
stableDimension: 0
stamp: i32 [-182043] ⇊00000000fffd38e5 ⇈00000000fffd38e5
stampKind: i32
value: int[-182043|0xfffffffffffd38e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
v748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@~|@floating>@ <|@
tid a862 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@302753425
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@302753425]
=== Inputs ===
=== Succesors ===
=== Usages ===
a864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i861 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -182332
stableDimension: 0
stamp: i32 [-182332] ⇊00000000fffd37c4 ⇈00000000fffd37c4
stampKind: i32
value: int[-182332|0xfffffffffffd37c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
v744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i863 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-182332 - -182043] ⇊00000000fffd30c4 ⇈00000000fffd3fe5
valueDescription: i32
=== Inputs ===
merge: v859 
values: i861 i867 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v859 values: i861 i867  <|@  <|@
f <@~|@floating>@ <|@
tid a864 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v859 
values: a862 a48 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v859 values: a862 a48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v860 v866 
=== Succesors ===
next: v865 
=== Usages ===
i863 a864 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v860 v866 #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?65 
actionAndReason: i863 
speculation: a864 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?65 actionAndReason: i863 speculation: a864  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4592992907664668485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 63]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B17" "B36" 
    successors "B38" "B45" 
    xhandlers
    flags 
    probability 4593519761021356798
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a837 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v367 
values: a1064 a1066 
=== Succesors ===
=== Usages ===
a838 v1120 v1091 v1092 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v367 values: a1064 a1066  <|@  <|@
f <@~|@floating>@ <|@
tid a708 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v367 
values: a57 a835 
=== Succesors ===
=== Usages ===
?828 ?826 v587 ?120 v595 ?825 ?369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v367 values: a57 a835  <|@  <|@
f <@~|@floating>@ <|@
tid i709 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v367 
values: i1063 i1065 
=== Succesors ===
=== Usages ===
?369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v367 values: i1063 i1065  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v367 
values: i326 i325 
=== Succesors ===
=== Usages ===
v595 v80 ?828 ?826 v587 ?120 v1010 v131 ?825 v601 ?369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v367 values: i326 i325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v368 v370 
=== Succesors ===
next: v1069 
=== Usages ===
a837 a708 i709 i377 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v368 v370 #next: v1069  <|@  <|@
tid ?369 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 i377 a2 a5 i13 i14 a708 - i709 - - - - 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i377 a2 a5 i13 i14 a708 - i709 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a837 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?369 
guard: - 
address: v1120 
=== Succesors ===
next: i1070 
=== Usages ===
v1048 
=== Predecessor ===
v367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?369 guard: - address: v1120 #next: i1070  <|@  <|@
f <@~|@floating>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a837 
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1070 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 65]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1091 
=== Succesors ===
next: v83 
=== Usages ===
v80 
=== Predecessor ===
v1069 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1091 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 69]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i1070 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i1070  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1048 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1069 
y: v1047 
=== Succesors ===
=== Usages ===
v105 v363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1069 y: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid a838 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a837 
=== Succesors ===
=== Usages ===
v587 a115 ?825 a115 a118 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a837  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 69]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.06207786620778666
=== Inputs ===
condition: v80 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
i1070 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v80 #trueSuccessor: v81 #falseSuccessor: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4575445552297366920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 72]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1071 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a837 
=== Succesors ===
=== Usages ===
a1071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1071 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 74]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1092 
=== Succesors ===
next: v88 
=== Usages ===
a584 
=== Predecessor ===
v81 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1092 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a584 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 74]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1071 
=== Succesors ===
=== Usages ===
v85 v585 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1071  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 81]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a584 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a584  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 81]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.3756063756063756
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
a1071 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v86 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B66" 
    xhandlers
    flags 
    probability 4568753736923923973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4572141895098561157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 84]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i92 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i92  <|@  <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2fd86366
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a584 
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a584  <|@  <|@
tid ?825 <|@
d <@d|@=== Debug Properties ===
bci: 91
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 635
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 i377 a2 a5 i13 i14 a708 a838 - - - - - 
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i377 a2 a5 i13 i14 a708 a838 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
bci: 91
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v585 
stateDuring: ?825 
=== Succesors ===
next: v100 
=== Usages ===
v94 
=== Predecessor ===
v87 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v585 stateDuring: ?825 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 94]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i92 
y: i13 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i92 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 94]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.28634850166481685
=== Inputs ===
condition: v94 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
i92 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v94 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4563933181255339638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 104]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.001042611060743437
=== Inputs ===
condition: v1048 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1048 #trueSuccessor: v103 #falseSuccessor: v104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4519322625356419209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 112]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 4563926622858141218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 131]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B66" 
    xhandlers
    flags 
    probability 4569984989237870031
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v211 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v211  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4592970040387376550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 104]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.001042611060743437
=== Inputs ===
condition: v1048 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1048 #trueSuccessor: v361 #falseSuccessor: v362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4548495784124030864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 112]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B46" 
    successors "B66" 
    xhandlers
    flags 
    probability 4548600718479205586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v353 v354 
=== Succesors ===
next: a110 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v353 v354 #next: a110  <|@  <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@40a940aa
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>
=== Inputs ===
arguments: a838 a454 a708 i377 a2 a5 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a838 a454 a708 i377 a2 a5  <|@  <|@
tid ?827 <|@
d <@d|@=== Debug Properties ===
bci: 123
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 - - a5 i13 i14 - - - - - - - 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 - - a5 i13 i14 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a110 <|@
d <@d|@=== Debug Properties ===
bci: 123
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.putTreeVal
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v587 
stateDuring: ?827 
=== Succesors ===
next: v114 
=== Usages ===
a115 
=== Predecessor ===
v352 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v587 stateDuring: ?827 #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
a110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 4592961380856385758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 131]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v362 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593059565230748247
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v356 v358 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v356 v358 #next: v116  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B77" "B64" 
    successors "B51" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594265602967797864
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a118 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v117 
values: a838 a594 a594 
=== Succesors ===
=== Usages ===
?120 j964 v1093 ?828 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v117 values: a838 a594 a594  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v117 
values: i13 i153 i153 
=== Succesors ===
=== Usages ===
?120 ?826 ?828 i153 v161 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v117 values: i13 i153 i153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2144121250623952
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v116 
=== Succesors ===
next: a1072 
=== Usages ===
a118 i119 v123 v138 v148 v154 v212 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v116 #next: a1072  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 134
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 641
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 i377 a2 a5 i13 i14 a708 a118 - - - - i119 
=== Succesors ===
=== Usages ===
v713 a982 a1072 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i377 a2 a5 i13 i14 a708 a118 - - - - i119  <|@  <|@
f <@~|@floating>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a118 
index: - 
=== Succesors ===
=== Usages ===
a1072 v842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a118 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1072 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 136]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: true
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?120 
guard: - 
address: v1093 
=== Succesors ===
next: v129 
=== Usages ===
a594 v604 v1095 v1096 
=== Predecessor ===
v117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?120 guard: - address: v1093 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid a594 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 136]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a1072 
=== Succesors ===
=== Usages ===
a118 a118 ?826 a115 a115 ?828 a115 ?829 a115 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1072  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 177]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a1072 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1072  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 142]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.8018459009042672
=== Inputs ===
condition: v604 
=== Succesors ===
trueSuccessor: v123 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
a1072 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v604 #trueSuccessor: v123 #falseSuccessor: v128  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B56" 
    xhandlers
    flags 
    probability 4592839372211731903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 145]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.7223671947809879
=== Inputs ===
condition: v1028 
=== Succesors ===
trueSuccessor: v248 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1028 #trueSuccessor: v248 #falseSuccessor: v250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590569737480773746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j971 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j971 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j986 
=== Usages ===
v1114 v1115 
=== Predecessor ===
v248 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j986  <|@  <|@
f <@~|@floating>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j971 
index: - 
=== Succesors ===
=== Usages ===
j986 v988 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j971 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j986 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1114 
=== Succesors ===
next: j987 
=== Usages ===
j1041 j992 v1126 
=== Predecessor ===
j971 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1114 #next: j987  <|@  <|@
f <@~|@floating>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j971 
index: - 
=== Succesors ===
=== Usages ===
j987 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j971 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j987 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1115 
=== Succesors ===
next: v979 
=== Usages ===
v976 
=== Predecessor ===
j986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1115 #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid j1041 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j986 
y: j1031 
=== Succesors ===
=== Usages ===
v976 v988 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j986 y: j1031  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j987 
y: j1041 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j987 y: j1041  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v976 
=== Succesors ===
trueSuccessor: v977 
falseSuccessor: v978 
=== Usages ===
=== Predecessor ===
j987 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v976 #trueSuccessor: v977 #falseSuccessor: v978  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4560698028798110750
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a982 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a982 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?120 
arguments: v893 i1033 i14 
=== Succesors ===
next: j983 
=== Usages ===
j983 
=== Predecessor ===
v977 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?120 arguments: v893 i1033 i14 #next: j983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j983 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a982 
=== Succesors ===
next: v993 
=== Usages ===
j992 
=== Predecessor ===
a982 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a982 #next: v993  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v990 
=== Predecessor ===
j983 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590510684312597658
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1114 
value: j1041 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1114 value: j1041 stateAfter: - lastLocationAccess: - #next: v985  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j986 
index: - 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j986 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1126 
=== Succesors ===
next: v991 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1126 #next: v991  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v990 
=== Predecessor ===
v985 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590569737480773746
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j992 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v990 
values: j986 j983 
=== Succesors ===
=== Usages ===
v1118 v1117 a809 v1127 v1128 v1129 v1130 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v990 values: j986 j983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v991 v993 
=== Succesors ===
next: a809 
=== Usages ===
j992 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v991 v993 #next: a809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a809 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j992 
=== Succesors ===
next: j1002 
=== Usages ===
a814 
=== Predecessor ===
v990 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j992 #next: j1002  <|@  <|@
f <@~|@floating>@ <|@
tid j998 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v926 
=== Succesors ===
=== Usages ===
v1116 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v926  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j998 
index: - 
=== Succesors ===
=== Usages ===
j1002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j998 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1002 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1116 
=== Succesors ===
next: v1003 
=== Usages ===
v1003 
=== Predecessor ===
a809 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1116 #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j992 
index: - 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j992 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1117 
value: j1002 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
j1002 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1117 value: j1002 stateAfter: - lastLocationAccess: - #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j992 
index: - 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j992 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1118 
value: v1036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1118 value: v1036 stateAfter: - lastLocationAccess: - #next: v1010  <|@  <|@
f <@~|@floating>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j992 
index: - 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j992 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1127 
value: i377 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1012 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1127 value: i377 stateAfter: - lastLocationAccess: - #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j992 
index: - 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j992 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1055 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1128 
value: a1055 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1128 value: a1055 stateAfter: - lastLocationAccess: - #next: v1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j992 
index: - 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j992 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1129 
value: a652 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1129 value: a652 stateAfter: - lastLocationAccess: - #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j992 
index: - 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j992 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1130 
value: i13 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a814 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1130 value: i13 stateAfter: - lastLocationAccess: - #next: a814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a814 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a809 
=== Succesors ===
next: v815 
=== Usages ===
a596 
=== Predecessor ===
v1016 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a809 #next: v815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
a814 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid a596 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Compress
stamp: n -
=== Inputs ===
value: a814 
=== Succesors ===
=== Usages ===
a840 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a814  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v815 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B57" 
    xhandlers
    flags 
    probability 4584700090497710745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
displacement: 680
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1060 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1135 
=== Succesors ===
next: j600 
=== Usages ===
v1094 v601 
=== Predecessor ===
v250 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1135 #next: j600  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v598 
index: - 
=== Succesors ===
=== Usages ===
j600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v598 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1094 
=== Succesors ===
next: a156 
=== Usages ===
v601 
=== Predecessor ===
v598 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1094 #next: a156  <|@  <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: a Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@511183be
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j600 
metaspaceMethod: v598 
arguments: a454 i377 a2 a5 a48 
=== Succesors ===
=== Usages ===
a156 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j600 metaspaceMethod: v598 arguments: a454 i377 a2 a5 a48  <|@  <|@
tid ?828 <|@
d <@d|@=== Debug Properties ===
bci: 152
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?213 
values: a454 i377 - a5 i13 i14 a708 - - - a594 - i119 a118 
=== Succesors ===
=== Usages ===
a156 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i377 - a5 i13 i14 a708 - - - a594 - i119 a118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a156 <|@
d <@d|@=== Debug Properties ===
bci: 152
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: true
stamp: a Ljava/util/HashMap$Node;
targetMethod: Indirect#HashMap.newNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v601 
stateDuring: ?828 
=== Succesors ===
next: v399 
=== Usages ===
a602 
=== Predecessor ===
j600 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v601 stateDuring: ?828 #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid a602 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a156 
=== Succesors ===
=== Usages ===
a840 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a156  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
a156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4592839372211731902
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a840 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v400 
values: a602 a596 
=== Succesors ===
=== Usages ===
v842 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v400 values: a602 a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v399 v402 
=== Succesors ===
next: v842 
=== Usages ===
a840 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v399 v402 #next: v842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1093 
value: a840 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j964 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1093 value: a840 stateAfter: - lastLocationAccess: - #next: j964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a118 
=== Succesors ===
next: v968 
=== Usages ===
j965 
=== Predecessor ===
v842 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a118 #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid j965 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j964 
y: i948 
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j964 y: i948  <|@  <|@
f <@~|@floating>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j965 
index: j952 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j965 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1113 
value: i954 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
j964 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1113 value: i954 stateAfter: - lastLocationAccess: - #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 160]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 7
stableDimension: 0
stamp: i32 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i160 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i160  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9987884436160298
=== Inputs ===
condition: v161 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v163 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v161 #trueSuccessor: v164 #falseSuccessor: v163  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592829467796994589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4549203084362334884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 165]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@72ecd9de
stamp: void
targetMethod: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>
=== Inputs ===
arguments: a454 a708 i377 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a454 a708 i377  <|@  <|@
tid ?829 <|@
d <@d|@=== Debug Properties ===
bci: 169
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 - - a5 i13 i14 - - - - a594 - - 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 - - a5 i13 i14 - - - - a594 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
bci: 169
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.treeifyBin
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v595 
stateDuring: ?829 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v595 stateDuring: ?829 #next: v169  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v167 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583738076632255555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 175]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1073 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1073  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1072 
=== Succesors ===
=== Usages ===
i1073 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1072  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1073 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 177]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1095 
=== Succesors ===
next: v134 
=== Usages ===
v131 
=== Predecessor ===
v128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1095 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 181]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i1073 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i1073  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 216]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i119 
y: i14 
=== Succesors ===
=== Usages ===
i119 i119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i119 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 181]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.12596643409390906
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
i1073 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v132 #falseSuccessor: v133  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570289754662114099
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 184]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1074 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1074  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1072 
=== Succesors ===
=== Usages ===
a1074 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1072  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1074 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 186]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1096 
=== Succesors ===
next: v142 
=== Usages ===
a611 
=== Predecessor ===
v132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1096 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid a611 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 186]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1074 
=== Succesors ===
=== Usages ===
v136 v612 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1074  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 193]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a611 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a611  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 193]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.7559880239520959
=== Inputs ===
condition: v136 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
a1074 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v136 #trueSuccessor: v138 #falseSuccessor: v141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4568302684096042738
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v138 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561087505535856898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 196]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i145 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i145  <|@  <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1e4357b6
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a611 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a611  <|@  <|@
tid ?826 <|@
d <@d|@=== Debug Properties ===
bci: 203
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 648
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 i377 a2 a5 i13 i14 a708 - - - a594 - i119 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i377 a2 a5 i13 i14 a708 - - - a594 - i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
bci: 203
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v612 
stateDuring: ?826 
=== Succesors ===
next: v152 
=== Usages ===
v147 
=== Predecessor ===
v141 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v612 stateDuring: ?826 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 206]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i145 
y: i13 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i145 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 206]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.5521472392638037
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v151 
falseSuccessor: v148 
=== Usages ===
=== Predecessor ===
i145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v151 #falseSuccessor: v148  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557412867862430283
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v117 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4555754943954542521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 209]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v170  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v148 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" "B47" "B62" "B58" "B59" "B65" "B44" 
    successors "B67" "B75" 
    xhandlers
    flags 
    probability 4593519761021356797
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v113 
values: a838 a110 a594 a594 a594 a594 a838 
=== Succesors ===
=== Usages ===
v621 v172 j1017 v1097 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v113 values: a838 a110 a594 a594 a594 a594 a838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v114 v137 v162 v169 v170 v211 
=== Succesors ===
next: v178 
=== Usages ===
a115 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v114 v137 v162 v169 v170 v211 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 224]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a115 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a115  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 224]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9241589950959305
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v177 
falseSuccessor: v176 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v177 #falseSuccessor: v176  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4592848163109823963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B32" "B67" "B31" 
    successors "B69" "B72" 
    xhandlers
    flags 
    probability 4607098469061075801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v173 v175 v393 
=== Succesors ===
next: i1075 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v173 v175 v393 #next: i1075  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1058 
=== Succesors ===
=== Usages ===
i1075 v624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1075 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 261]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1098 
=== Succesors ===
next: v624 
=== Usages ===
i188 
=== Predecessor ===
v174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1098 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 265]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i1075 
y: i14 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1075 y: i14  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 266]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1098 
value: i188 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1076 
=== Usages ===
=== Predecessor ===
i1075 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1098 value: i188 stateAfter: - lastLocationAccess: - #next: i1076  <|@  <|@
f <@~|@floating>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1058 
=== Succesors ===
=== Usages ===
i1076 v627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1076 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 271]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1099 
=== Succesors ===
next: v627 
=== Usages ===
i192 
=== Predecessor ===
v624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1099 #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 275]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i1076 
y: i14 
=== Succesors ===
=== Usages ===
v627 v196 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1076 y: i14  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 277]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1099 
value: i192 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1077 
=== Usages ===
=== Predecessor ===
i1076 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1099 value: i192 stateAfter: - lastLocationAccess: - #next: i1077  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1058 
=== Succesors ===
=== Usages ===
i1077 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1077 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.threshold
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 281]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1100 
=== Succesors ===
next: v199 
=== Usages ===
v196 
=== Predecessor ===
v627 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1100 #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 284]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1077 
y: i192 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1077 y: i192  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 284]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.001841453520645575
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v197 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
i1077 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v197 #falseSuccessor: v198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4566055878508013415
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 287]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a201 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a201  <|@  <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: a [Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@14e5f8c4
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a454 
=== Succesors ===
=== Usages ===
a201 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a454  <|@  <|@
tid ?830 <|@
d <@d|@=== Debug Properties ===
bci: 288
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 663
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 - - - - i14 - - - - - - - 
=== Succesors ===
=== Usages ===
a201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 - - - - i14 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a201 <|@
d <@d|@=== Debug Properties ===
bci: 288
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: a [Ljava/util/HashMap$Node;
targetMethod: Direct#HashMap.resize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v631 
stateDuring: ?830 
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v631 stateDuring: ?830 #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9069858042480521
=== Inputs ===
condition: v1028 
=== Succesors ===
trueSuccessor: v258 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
a201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1028 #trueSuccessor: v258 #falseSuccessor: v260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4565273344906719219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 19]
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4550392292827184036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
displacement: 728
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1060 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1101 
=== Succesors ===
next: j636 
=== Usages ===
v1102 v637 
=== Predecessor ===
v260 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1101 #next: j636  <|@  <|@
f <@~|@floating>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v634 
index: - 
=== Succesors ===
=== Usages ===
j636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v634 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1102 
=== Succesors ===
next: v208 
=== Usages ===
v637 
=== Predecessor ===
v634 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1102 #next: v208  <|@  <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@49b49595
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeInsertion(boolean)>
=== Inputs ===
computedAddress: j636 
metaspaceMethod: v634 
arguments: a454 i14 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j636 metaspaceMethod: v634 arguments: a454 i14  <|@  <|@
tid ?832 <|@
d <@d|@=== Debug Properties ===
bci: 295
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 664
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
bci: 295
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeInsertion
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v637 
stateDuring: ?832 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
j636 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v637 stateDuring: ?832 #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 19]
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4607082037311839333
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 292]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9069858042480521
=== Inputs ===
condition: v1028 
=== Succesors ===
trueSuccessor: v310 
falseSuccessor: v311 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1028 #trueSuccessor: v310 #falseSuccessor: v311  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606253576820573322
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v310 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors 
    xhandlers
    flags 
    probability 4591292104593293013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
displacement: 728
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1060 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1134 
=== Succesors ===
next: j640 
=== Usages ===
v1103 v641 
=== Predecessor ===
v311 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1134 #next: j640  <|@  <|@
f <@~|@floating>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v638 
index: - 
=== Succesors ===
=== Usages ===
j640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v638 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1103 
=== Succesors ===
next: v418 
=== Usages ===
v641 
=== Predecessor ===
v638 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1103 #next: v418  <|@  <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5d028754
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeInsertion(boolean)>
=== Inputs ===
computedAddress: j640 
metaspaceMethod: v638 
arguments: a454 i14 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j640 metaspaceMethod: v638 arguments: a454 i14  <|@  <|@
tid ?833 <|@
d <@d|@=== Debug Properties ===
bci: 295
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 664
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
bci: 295
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeInsertion
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v641 
stateDuring: ?833 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
j640 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v641 stateDuring: ?833 #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 19]
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B76" 
    xhandlers
    flags 
    probability 4576526405073316115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 227]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1078 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1078  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a115 
index: - 
=== Succesors ===
=== Usages ===
a1078 v620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1078 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 229]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1097 
=== Succesors ===
next: v620 
=== Usages ===
a618 
=== Predecessor ===
v176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1097 #next: v620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1097 
value: a652 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1017 
=== Usages ===
=== Predecessor ===
a1078 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1097 value: a652 stateAfter: - lastLocationAccess: - #next: j1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a115 
=== Succesors ===
next: v1021 
=== Usages ===
j1018 
=== Predecessor ===
v620 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a115 #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid j1018 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1017 
y: i948 
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1017 y: i948  <|@  <|@
f <@~|@floating>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1018 
index: j952 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1018 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1119 
value: i954 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
j1017 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1119 value: i954 stateAfter: - lastLocationAccess: - #next: v183  <|@  <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@597895a5
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>
=== Inputs ===
arguments: a454 a115 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a454 a115  <|@  <|@
f <@~|@floating>@ <|@
tid a618 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 229]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1078 
=== Succesors ===
=== Usages ===
?831 a216 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1078  <|@  <|@
tid ?831 <|@
d <@d|@=== Debug Properties ===
bci: 253
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 657
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: - - - - - - - - - - - - a618 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: - - - - - - - - - - - - a618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
bci: 253
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.afterNodeAccess
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v621 
stateDuring: ?831 
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v621 stateDuring: ?831 #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B73" 
    successors 
    xhandlers
    flags 
    probability 4606337526559514926
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a216 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v214 
values: a618 a48 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v214 values: a618 a48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v215 v313 
=== Succesors ===
next: v21 
=== Usages ===
a216 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v215 v313 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 11]
stamp: void
=== Inputs ===
value: a216 
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a216  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 11]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v19 
trueValue: i14 
falseValue: i13 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v19 trueValue: i14 falseValue: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 19]
stamp: void
=== Inputs ===
result: i20 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i20 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582720160115280349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v713 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?120 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?120 #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v117 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v876 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v876  <|@  <|@
f <@~|@floating>@ <|@
tid i877 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -134939
stableDimension: 0
stamp: i32 [-134939] ⇊00000000fffdf0e5 ⇈00000000fffdf0e5
stampKind: i32
value: int[-134939|0xfffffffffffdf0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B21" "B78" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i871 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-134939 - -133131] ⇊00000000fffdf0e5 ⇈00000000fffdf7fd
valueDescription: i32
=== Inputs ===
merge: v868 
values: i875 i877 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v868 values: i875 i877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v874 v876 
=== Succesors ===
next: v873 
=== Usages ===
i871 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v874 v876 #next: v873  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?319 
actionAndReason: i871 
speculation: a48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?319 actionAndReason: i871 speculation: a48  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1058 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1058  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1079 ?11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1058 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.map
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1079 
=== Succesors ===
next: v1133 
=== Usages ===
a454 v1133 v1082 v1098 v1099 v1100 v1105 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1079 #next: v1133  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v585 ?11 ?46 v601 a782 ?58 ?65 v559 v85 v89 ?823 ?826 ?825 v587 ?120 ?369 v136 a1055 v1104 v1081 v498 v612 i480 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashSet.add(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashSet.java
sourceLine: 220
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v848 i480 v1133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a1058 
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
a1058 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a1058 #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid a48 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v559 v601 a216 a864 v848 v873 v856 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 85]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v720 
falseSuccessor: v718 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v720 #falseSuccessor: v718  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@62e07596 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashSet.add(HashSet.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v848 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v848  <|@  <|@
f <@~|@floating>@ <|@
tid i850 <|@
result int[-116755|0xfffffffffffe37ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116755
stableDimension: 0
stamp: i32 [-116755] ⇊00000000fffe37ed ⇈00000000fffe37ed
stampKind: i32
value: int[-116755|0xfffffffffffe37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i850 
speculation: a48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i850 speculation: a48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -116755 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashSet.add(HashSet.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1059  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1059 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1104 
=== Succesors ===
next: v459 
=== Usages ===
v1080 
=== Predecessor ===
v718 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1104 #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
result [v3|DWORD * 8 + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1059 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1080 
=== Succesors ===
next: v1060 
=== Usages ===
v29 
=== Predecessor ===
v1059 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1080 #next: v1060  <|@  <|@
f <@~|@floating>@ <|@
tid v1105 <|@
result [v2|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1058 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1060 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1105 
=== Succesors ===
next: v32 
=== Usages ===
v1087 v1028 v1101 v1134 v1135 
=== Predecessor ===
v459 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1105 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
result meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1060 
y: v1027 
=== Succesors ===
=== Usages ===
v312 v229 v251 v261 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1060 y: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: meta{HotSpotMethod<Object.hashCode()>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.hashCode()>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v459 
y: v28 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v459 y: v28  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<HashSet.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rethrowException: false
sourceFile: HashSet.java
sourceLine: 220
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?46 ?213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 5]
rawvalue: Object@652050100
stableDimension: 0
stamp: a!# Ljava/lang/Object;
stampKind: a -
value: Object[Object@652050100]
=== Inputs ===
=== Succesors ===
=== Usages ===
?46 ?825 ?58 ?65 v559 ?829 ?828 v587 ?827 ?120 v601 ?369 ?826 ?823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a454 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 1]
op: Uncompress
stamp: a Ljava/util/HashMap;
=== Inputs ===
value: a1058 
=== Succesors ===
=== Usages ===
v631 ?46 v637 v621 v501 ?58 ?65 v559 ?830 ?829 ?828 ?827 v587 ?826 ?120 ?369 v595 ?825 v641 v601 ?824 ?823 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1058  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashMap.put(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 612
stackSize: 1
=== Inputs ===
outerFrameState: ?11 
values: - a2 a5 a454 
=== Succesors ===
=== Usages ===
?822 ?319 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?11 values: - a2 a5 a454  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
result [v2|DWORD[.] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1058 
=== Succesors ===
=== Usages ===
a1061 a1062 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1058  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v953 v961 v968 v1021 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i948 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j949 j958 j965 j1018 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j952 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1111 v1112 v1113 v1119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a652 <|@
result NarrowOop[Object@652050100] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: Object@652050100
stableDimension: 0
stamp: n!# Ljava/lang/Object;
stampKind: n -
value: NarrowOop[Object@652050100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v620 v944 v1014 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
result meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v936 v1006 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j998 j1057 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1033 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a907 a982 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a907 a982 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1031 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1032 j1041 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i67 i380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?213 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<HashMap.put(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 612
stackSize: 0
=== Inputs ===
outerFrameState: ?11 
values: - - - 
=== Succesors ===
=== Usages ===
?58 ?65 ?833 ?832 ?831 ?830 ?829 ?120 ?824 ?823 ?828 ?369 ?827 ?826 ?825 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?11 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 15]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i43 i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.put(HashMap.java:612) [bci: 8]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 i20 ?58 ?65 ?830 ?829 ?828 ?827 ?826 ?120 i192 ?369 ?825 v419 i153 ?824 ?823 a982 v408 v397 i188 v641 a907 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.put(HashMap.java:612) [bci: 7]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v946 i20 v54 ?58 ?65 ?829 v94 ?828 ?827 i119 ?120 v473 ?369 ?826 v147 v1016 ?825 ?823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v31 
=== Usages ===
=== Predecessor ===
v1060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v30 #falseSuccessor: v31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [v3|DWORD * 8 + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j484 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j484  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j484 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1081 
=== Succesors ===
next: v470 
=== Usages ===
j466 j471 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1081 #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid j481 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j484 
y: j481 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j484 y: j481  <|@  <|@
f <@~|@floating>@ <|@
tid j482 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j466 
y: j482 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j466 y: j482  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 44]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v467 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v468 
=== Usages ===
=== Predecessor ===
j484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v467 #trueSuccessor: v469 #falseSuccessor: v468  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = AND v12|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 47]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid i464 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.hubOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:751) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j471 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j484 
y: i464 
=== Succesors ===
=== Usages ===
i472 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j484 y: i464  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
resultBits: 32
stamp: i32
=== Inputs ===
value: j471 
=== Succesors ===
=== Usages ===
v473 i488 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j471  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i472 
y: i13 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i472 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v473 
=== Succesors ===
trueSuccessor: v478 
falseSuccessor: v477 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v473 #trueSuccessor: v478 #falseSuccessor: v477  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SHR v12|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v474 v476 
=== Succesors ===
next: i480 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v474 v476 #next: i480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i480 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: a2 
=== Succesors ===
next: v490 
=== Usages ===
i488 
=== Predecessor ===
v475 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: a2 #next: v490  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
i480 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashSet.add(HashSet.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i488 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v486 
values: i472 i480 
=== Succesors ===
=== Usages ===
i351 i323 i350 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v486 values: i472 i480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v489 v490 
=== Succesors ===
next: a1061 
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v489 v490 #next: a1061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1061 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1082 
=== Succesors ===
next: v349 
=== Usages ===
a834 v643 
=== Predecessor ===
v486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1082 #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a1061 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1061  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i488 
y: i42 
=== Succesors ===
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i488 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i351 
y: i488 
=== Succesors ===
=== Usages ===
i326 i325 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i351 y: i488  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.05949555131451651
=== Inputs ===
condition: v643 
=== Succesors ===
trueSuccessor: v347 
falseSuccessor: v348 
=== Usages ===
=== Predecessor ===
a1061 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v643 #trueSuccessor: v347 #falseSuccessor: v348  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v2|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHR v17|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = XOR (x: v19|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|DWORD[.], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05949555131451651 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588649291477489029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 19]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B20" 
    xhandlers
    flags 
    probability 4606561817404864084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 10]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD[.], v17|DWORD, v20|DWORD] destination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B19" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i36 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i36  <|@  <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3d1a509f
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?822 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 0
=== Inputs ===
outerFrameState: ?46 
values: - - 
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?46 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i36 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v498 
stateDuring: ?822 
=== Succesors ===
next: a1062 
=== Usages ===
i43 i323 i44 
=== Predecessor ===
v31 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v498 stateDuring: ?822 #next: a1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1062 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1082 
=== Succesors ===
next: v52 
=== Usages ===
a834 v644 
=== Predecessor ===
i36 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1082 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a1062 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1062  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i36 
y: i42 
=== Succesors ===
=== Usages ===
i44 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i36 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i36 
y: i43 
=== Succesors ===
=== Usages ===
i326 i325 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i36 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.05949555131451651
=== Inputs ===
condition: v644 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
a1062 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v644 #trueSuccessor: v50 #falseSuccessor: v51  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: v8|QWORD[.] 
locals: - v1|QWORD[.] Object[Object@652050100] 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2, 8] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v2|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR v21|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = XOR (x: v21|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD[.], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05949555131451651 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558626719314687161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 19]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B18" 
    xhandlers
    flags 
    probability 4588735033603162712
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i326 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v314 
values: i44 i350 
=== Succesors ===
=== Usages ===
i68 ?58 i377 i378 ?823 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v314 values: i44 i350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v315 v316 
=== Succesors ===
next: a57 
=== Usages ===
i326 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v315 v316 #next: a57  <|@  <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: a [Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@66fefae3
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a454 
=== Succesors ===
=== Usages ===
a57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a454  <|@  <|@
tid ?823 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 629
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 i326 a2 a5 i13 i14 - - - - - - - 
=== Succesors ===
=== Usages ===
a57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i326 a2 a5 i13 i14 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a57 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 20
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: a [Ljava/util/HashMap$Node;
targetMethod: Direct#HashMap.resize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v501 
stateDuring: ?823 
=== Succesors ===
next: i1063 
=== Usages ===
?58 a708 v1084 v1083 a704 
=== Predecessor ===
v314 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v501 stateDuring: ?823 #next: i1063  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 629
stackSize: 1
=== Inputs ===
outerFrameState: ?213 
values: a454 i326 a2 a5 i13 i14 - - - - - - - a57 
=== Succesors ===
=== Usages ===
v856 i1063 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i326 a2 a5 i13 i14 - - - - - - - a57  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
result [v26|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a57 
index: - 
=== Succesors ===
=== Usages ===
i1063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a57 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1063 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 26]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?58 
guard: - 
address: v1083 
=== Succesors ===
next: v729 
=== Usages ===
v508 i709 i67 i705 
=== Predecessor ===
a57 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?58 guard: - address: v1083 #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1063 
y: i66 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1063 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 36]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i67 
y: i326 
=== Succesors ===
=== Usages ===
v1084 i371 v508 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i67 y: i326  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i1063 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i68 y: i1063  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v508 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v728 
=== Usages ===
=== Predecessor ===
i1063 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v508 #trueSuccessor: v726 #falseSuccessor: v728  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
locals: v8|QWORD[.] v25|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:20, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: v26|QWORD[.] 
locals: v8|QWORD[.] v25|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v27|DWORD = MOV [v26|QWORD[.] + 12] size: DWORD state [bci:23, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = DEC v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = AND (x: v28|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4588735033603162712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1064 
=== Usages ===
a1064 
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1064  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
result [v26|QWORD[.] + v29|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a57 
index: i68 
=== Succesors ===
=== Usages ===
a1064 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a57 index: i68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1064 <|@
result v30|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v726 
address: v1084 
=== Succesors ===
next: v73 
=== Usages ===
a837 v646 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v726 address: v1084 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a1064 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1064  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.8771074655430375
=== Inputs ===
condition: v646 
=== Succesors ===
trueSuccessor: v71 
falseSuccessor: v72 
=== Usages ===
=== Predecessor ===
a1064 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v646 #trueSuccessor: v71 #falseSuccessor: v72  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v26|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD[.], y: v30|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8771074655430375 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B25" 
    xhandlers
    flags 
    probability 4587681326889786085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 47]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v365  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v71 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD, v26|QWORD[.], v27|DWORD, v25|DWORD] destination: B16 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575079675860695960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 63]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD[.], v26|QWORD[.], v27|DWORD, v25|DWORD] destination: B17 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid i858 <|@
result int[-130331|0xfffffffffffe02e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130331
stableDimension: 0
stamp: i32 [-130331] ⇊00000000fffe02e5 ⇈00000000fffe02e5
stampKind: i32
value: int[-130331|0xfffffffffffe02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?58 
actionAndReason: i858 
speculation: a48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?58 actionAndReason: i858 speculation: a48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -130331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: v26|QWORD[.] 
locals: v8|QWORD[.] v25|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:23, 9, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576575260801392948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 10]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v51 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD[.], v21|DWORD, v24|DWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B11" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a834 <|@
result v31|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n [Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v317 
values: a1062 a1061 
=== Succesors ===
=== Usages ===
a835 v1085 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: a1062 a1061  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v317 
values: i36 i488 
=== Succesors ===
=== Usages ===
?319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: i36 i488  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v317 
values: i44 i350 
=== Succesors ===
=== Usages ===
i377 i381 i378 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: i44 i350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v318 v320 
=== Succesors ===
next: i1065 
=== Usages ===
a834 i323 i325 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v318 v320 #next: i1065  <|@  <|@
tid ?319 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 1
=== Inputs ===
outerFrameState: ?46 
values: - - i323 
=== Succesors ===
=== Usages ===
v873 i1065 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?46 values: - - i323  <|@  <|@
f <@~|@floating>@ <|@
tid v1085 <|@
result [v31|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a834 
=== Succesors ===
=== Usages ===
i1065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1065 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 12]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?319 
guard: - 
address: v1085 
=== Succesors ===
next: v737 
=== Usages ===
v54 v526 i380 i709 i705 
=== Predecessor ===
v317 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?319 guard: - address: v1085 #next: v737  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1065 
y: i13 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1065 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v736 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
i1065 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v736 #falseSuccessor: v734  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD[.], v32|DWORD, v33|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: v32|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: v8|QWORD[.] 
locals: - v1|QWORD[.] Object[Object@652050100] 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v34|DWORD = MOV [v31|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2, 8] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid i875 <|@
result int[-134163|0xfffffffffffdf3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -134163
stableDimension: 0
stamp: i32 [-134163] ⇊00000000fffdf3ed ⇈00000000fffdf3ed
stampKind: i32
value: int[-134163|0xfffffffffffdf3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v736 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-134163|0xfffffffffffdf3ed]] destination: B21 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B78" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v741 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v741  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1065 
y: i66 
=== Succesors ===
=== Usages ===
i381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1065 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 36]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i325 
y: i380 
=== Succesors ===
=== Usages ===
v1086 i371 v526 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i325 y: i380  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i381 
y: i1065 
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i381 y: i1065  <|@  <|@
f <@*|@fixed>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v526 
=== Succesors ===
trueSuccessor: v738 
falseSuccessor: v740 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v526 #trueSuccessor: v738 #falseSuccessor: v740  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = AND (x: v33|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B36" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1066 
=== Usages ===
a1066 
=== Predecessor ===
v741 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1066  <|@  <|@
f <@~|@floating>@ <|@
tid a835 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
a708 a704 v1086 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a834  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
result [v37|QWORD[.] + v36|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a835 
index: i381 
=== Succesors ===
=== Usages ===
a1066 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a835 index: i381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1066 <|@
result v38|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v738 
address: v1086 
=== Succesors ===
next: v386 
=== Usages ===
a837 v648 
=== Predecessor ===
v738 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v738 address: v1086 #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a1066 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1066  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.8771074655430375
=== Inputs ===
condition: v648 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v385 
=== Usages ===
=== Predecessor ===
a1066 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v648 #trueSuccessor: v384 #falseSuccessor: v385  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[.] = MOV [v37|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD[.], y: v38|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8771074655430375 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605605469639368944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 47]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD, v37|QWORD[.], v34|DWORD, v33|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" "B24" 
    successors "B26" "B34" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i371 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v364 
values: i68 i381 
=== Succesors ===
=== Usages ===
?824 v1090 v564 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: i68 i381  <|@  <|@
f <@~|@floating>@ <|@
tid a704 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v364 
values: a57 a835 
=== Succesors ===
=== Usages ===
?65 ?824 v1089 v1106 v1090 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: a57 a835  <|@  <|@
f <@~|@floating>@ <|@
tid i705 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v364 
values: i1063 i1065 
=== Succesors ===
=== Usages ===
?65 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: i1063 i1065  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v364 
values: i326 i325 
=== Succesors ===
=== Usages ===
?65 v559 v940 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: i326 i325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v365 v366 
=== Succesors ===
next: v1067 
=== Usages ===
i371 a704 i705 i378 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v365 v366 #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid v1106 <|@
result [v40|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a704 
index: - 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1106 
=== Succesors ===
next: v745 
=== Usages ===
v1030 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1106 #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
result meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1067 
y: v1029 
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1067 y: v1029  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 i378 a2 a5 i13 i14 a704 - i705 - - - - 
=== Succesors ===
=== Usages ===
a907 v865 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i378 a2 a5 i13 i14 a704 - i705 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1030 
=== Succesors ===
trueSuccessor: v742 
falseSuccessor: v744 
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1030 #trueSuccessor: v742 #falseSuccessor: v744  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD, v40|QWORD[.], v41|DWORD, v42|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v40|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1068 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1068  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
result [v40|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a704 
index: - 
=== Succesors ===
=== Usages ===
i1068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1068 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1089 
=== Succesors ===
next: v749 
=== Usages ===
v564 
=== Predecessor ===
v742 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1089 #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i371 
y: i1068 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i371 y: i1068  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v564 
=== Succesors ===
trueSuccessor: v746 
falseSuccessor: v748 
=== Usages ===
=== Predecessor ===
i1068 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v564 #trueSuccessor: v746 #falseSuccessor: v748  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: [v40|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B32" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
v575 v550 
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
result [v40|QWORD[.] + v39|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a704 
index: i371 
=== Succesors ===
=== Usages ===
v575 v550 j947 j957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a704 index: i371  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9308569947624414
=== Inputs ===
condition: v1028 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v228 
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1028 #trueSuccessor: v225 #falseSuccessor: v228  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9308569947624414 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605529252035592985
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j895 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j895  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j895 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j914 
=== Usages ===
v1107 v1108 
=== Predecessor ===
v225 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j914  <|@  <|@
f <@~|@floating>@ <|@
tid v1107 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j895 
index: - 
=== Succesors ===
=== Usages ===
j914 v916 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j895 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j914 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1107 
=== Succesors ===
next: j915 
=== Usages ===
j1032 j920 v1121 
=== Predecessor ===
j895 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1107 #next: j915  <|@  <|@
f <@~|@floating>@ <|@
tid v1108 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j895 
index: - 
=== Succesors ===
=== Usages ===
j915 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j895 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j915 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1108 
=== Succesors ===
next: v903 
=== Usages ===
v900 
=== Predecessor ===
j914 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1108 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid j1032 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j914 
y: j1031 
=== Succesors ===
=== Usages ===
v900 v916 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j914 y: j1031  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j915 
y: j1032 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j915 y: j1032  <|@  <|@
f <@*|@fixed>@ <|@
tid v903 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v900 
=== Succesors ===
trueSuccessor: v901 
falseSuccessor: v902 
=== Usages ===
=== Predecessor ===
j915 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v900 #trueSuccessor: v901 #falseSuccessor: v902  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v44|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4575860202574856048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a907 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a907 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?65 
arguments: v893 i1033 i14 
=== Succesors ===
next: j908 
=== Usages ===
j908 
=== Predecessor ===
v901 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?65 arguments: v893 i1033 i14 #next: j908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j908 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a907 
=== Succesors ===
next: v921 
=== Usages ===
j920 
=== Predecessor ===
a907 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a907 #next: v921  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
j908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v8|QWORD[.] v42|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v40|QWORD[.] - v41|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605455711710689819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1107 
value: j1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v902 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1107 value: j1032 stateAfter: - lastLocationAccess: - #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
result [v44|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j914 
index: - 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j914 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1121 
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1121 #next: v919  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
v912 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v44|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B68" 
    xhandlers
    flags 
    probability 4605529252035592985
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j920 <|@
result v47|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v918 
values: j914 j908 
=== Succesors ===
=== Usages ===
v1110 v1109 a779 v1122 v1123 v1124 v1125 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v918 values: j914 j908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v919 v921 
=== Succesors ===
next: a779 
=== Usages ===
j920 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v919 v921 #next: a779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a779 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j920 
=== Succesors ===
next: j932 
=== Usages ===
a787 
=== Predecessor ===
v918 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j920 #next: j932  <|@  <|@
f <@~|@floating>@ <|@
tid j1057 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v926 
=== Succesors ===
=== Usages ===
v1131 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v926  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
result [v10|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1057 
index: - 
=== Succesors ===
=== Usages ===
j932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1057 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j932 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1131 
=== Succesors ===
next: v933 
=== Usages ===
v933 
=== Predecessor ===
a779 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1131 #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid v1109 <|@
result [v47|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1109 
value: j932 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v936 
=== Usages ===
=== Predecessor ===
j932 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1109 value: j932 stateAfter: - lastLocationAccess: - #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
result [v47|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1110 
value: v1036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1110 value: v1036 stateAfter: - lastLocationAccess: - #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
result [v47|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1122 
value: i378 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1122 value: i378 stateAfter: - lastLocationAccess: - #next: v942  <|@  <|@
f <@~|@floating>@ <|@
tid v1123 <|@
result [v47|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v942 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a782 <|@
result v50|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v942 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1123 
value: a782 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v944 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1123 value: a782 stateAfter: - lastLocationAccess: - #next: v944  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
result [v47|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1124 
value: a652 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1124 value: a652 stateAfter: - lastLocationAccess: - #next: v946  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
result [v47|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1125 
value: i13 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a787 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1125 value: i13 stateAfter: - lastLocationAccess: - #next: a787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a787 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a779 
=== Succesors ===
next: v788 
=== Usages ===
a549 
=== Predecessor ===
v946 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a779 #next: v788  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
a787 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid a549 <|@
result v51|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Compress
stamp: n -
=== Inputs ===
value: a787 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v746 
address: v1090 
value: a549 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j947 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v746 address: v1090 value: a549 stateAfter: - lastLocationAccess: - #next: j947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j947 <|@
result [v40|QWORD[.] + v39|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1090 
=== Succesors ===
next: v953 
=== Usages ===
j949 
=== Predecessor ===
v550 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1090 #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid j949 <|@
result v52|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j947 
y: i948 
=== Succesors ===
=== Usages ===
v1111 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j947 y: i948  <|@  <|@
f <@~|@floating>@ <|@
tid v1111 <|@
result [v52|QWORD[*] + v9|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j949 
index: j952 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j949 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1111 
value: i954 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
j947 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1111 value: i954 stateAfter: - lastLocationAccess: - #next: v393  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
v953 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE v47|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*]], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v47|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*] + 12], y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*] + 16], y: v50|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v47|QWORD[*] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[.] = COMPRESSPOINTER (input: v48|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + v39|DWORD * 4 + 16], y: v51|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = LEA [v40|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = SHR v53|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v52|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B68" 
    xhandlers
    flags 
    probability 4588900808550201421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
result [v5|DWORD * 8 + 680] <|@
d <@d|@=== Debug Properties ===
displacement: 680
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1060 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1087 
=== Succesors ===
next: j558 
=== Usages ===
v1088 v559 
=== Predecessor ===
v228 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1087 #next: j558  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
result [v54|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v555 
index: - 
=== Succesors ===
=== Usages ===
j558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v555 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j558 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1088 
=== Succesors ===
next: a75 
=== Usages ===
v559 
=== Predecessor ===
v555 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1088 #next: a75  <|@  <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: a Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@60287edc
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j558 
metaspaceMethod: v555 
arguments: a454 i378 a2 a5 a48 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j558 metaspaceMethod: v555 arguments: a454 i378 a2 a5 a48  <|@  <|@
tid ?824 <|@
d <@d|@=== Debug Properties ===
bci: 56
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 631
stackSize: 2
=== Inputs ===
outerFrameState: ?213 
values: a454 - - - - i14 - - - - - - - a704 i371 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 - - - - i14 - - - - - - - a704 i371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 56
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: true
stamp: a Ljava/util/HashMap$Node;
targetMethod: Indirect#HashMap.newNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v559 
stateDuring: ?824 
=== Succesors ===
next: v575 
=== Usages ===
a574 
=== Predecessor ===
j558 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v559 stateDuring: ?824 #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid a574 <|@
result v57|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a75 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v746 
address: v1090 
value: a574 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j957 
=== Usages ===
=== Predecessor ===
a75 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v746 address: v1090 value: a574 stateAfter: - lastLocationAccess: - #next: j957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j957 <|@
result [v40|QWORD[.] + v39|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1090 
=== Succesors ===
next: v961 
=== Usages ===
j958 
=== Predecessor ===
v575 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1090 #next: v961  <|@  <|@
f <@~|@floating>@ <|@
tid j958 <|@
result v58|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j957 
y: i948 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j957 y: i948  <|@  <|@
f <@~|@floating>@ <|@
tid v1112 <|@
result [v58|QWORD[*] + v9|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j958 
index: j952 
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j958 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1112 
value: i954 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
j957 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1112 value: i954 stateAfter: - lastLocationAccess: - #next: v173  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
v961 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [v5|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v54|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v42|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stack: v40|QWORD[.] v39|DWORD 
locals: v8|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + v39|DWORD * 4 + 16], y: v57|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = LEA [v40|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v58|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid i867 <|@
result int[-182043|0xfffffffffffd38e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -182043
stableDimension: 0
stamp: i32 [-182043] ⇊00000000fffd38e5 ⇈00000000fffd38e5
stampKind: i32
value: int[-182043|0xfffffffffffd38e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
v748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-182043|0xfffffffffffd38e5], Object[null]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@~|@floating>@ <|@
tid a862 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@302753425
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@302753425]
=== Inputs ===
=== Succesors ===
=== Usages ===
a864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i861 <|@
result int[-182332|0xfffffffffffd37c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -182332
stableDimension: 0
stamp: i32 [-182332] ⇊00000000fffd37c4 ⇈00000000fffd37c4
stampKind: i32
value: int[-182332|0xfffffffffffd37c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
v744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@302753425] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-182332|0xfffffffffffd37c4], v60|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i863 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-182332 - -182043] ⇊00000000fffd30c4 ⇈00000000fffd3fe5
valueDescription: i32
=== Inputs ===
merge: v859 
values: i861 i867 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v859 values: i861 i867  <|@  <|@
f <@~|@floating>@ <|@
tid a864 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v859 
values: a862 a48 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v859 values: a862 a48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v860 v866 
=== Succesors ===
next: v865 
=== Usages ===
i863 a864 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v860 v866 #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?65 
actionAndReason: i863 
speculation: a864 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?65 actionAndReason: i863 speculation: a864  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v8|QWORD[.] v42|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v40|QWORD[.] - v41|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:29, 9, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4592992907664668485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 63]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|DWORD[.], v37|QWORD[.], v34|DWORD, v33|DWORD] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B17" "B36" 
    successors "B38" "B45" 
    xhandlers
    flags 
    probability 4593519761021356798
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a837 <|@
result v63|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v367 
values: a1064 a1066 
=== Succesors ===
=== Usages ===
a838 v1120 v1091 v1092 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v367 values: a1064 a1066  <|@  <|@
f <@~|@floating>@ <|@
tid a708 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v367 
values: a57 a835 
=== Succesors ===
=== Usages ===
?828 ?826 v587 ?120 v595 ?825 ?369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v367 values: a57 a835  <|@  <|@
f <@~|@floating>@ <|@
tid i709 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v367 
values: i1063 i1065 
=== Succesors ===
=== Usages ===
?369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v367 values: i1063 i1065  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v367 
values: i326 i325 
=== Succesors ===
=== Usages ===
v595 v80 ?828 ?826 v587 ?120 v1010 v131 ?825 v601 ?369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v367 values: i326 i325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v368 v370 
=== Succesors ===
next: v1069 
=== Usages ===
a837 a708 i709 i377 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v368 v370 #next: v1069  <|@  <|@
tid ?369 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 i377 a2 a5 i13 i14 a708 - i709 - - - - 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i377 a2 a5 i13 i14 a708 - i709 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1120 <|@
result [v63|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a837 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1069 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?369 
guard: - 
address: v1120 
=== Succesors ===
next: i1070 
=== Usages ===
v1048 
=== Predecessor ===
v367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?369 guard: - address: v1120 #next: i1070  <|@  <|@
f <@~|@floating>@ <|@
tid v1091 <|@
result [v63|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a837 
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1070 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 65]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1091 
=== Succesors ===
next: v83 
=== Usages ===
v80 
=== Predecessor ===
v1069 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1091 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 69]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i1070 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i1070  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
result meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1048 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1069 
y: v1047 
=== Succesors ===
=== Usages ===
v105 v363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1069 y: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid a838 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a837 
=== Succesors ===
=== Usages ===
v587 a115 ?825 a115 a118 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a837  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 69]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.06207786620778666
=== Inputs ===
condition: v80 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
i1070 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v80 #trueSuccessor: v81 #falseSuccessor: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD[.], v64|QWORD[.], v65|DWORD, v66|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v8|QWORD[.] v66|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] - v65|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v67|DWORD = MOV [v63|DWORD[.] * 8 + 8] size: DWORD state [bci:29, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: [v63|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06207786620778666 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4575445552297366920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 72]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1071 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1092 <|@
result [v63|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a837 
=== Succesors ===
=== Usages ===
a1071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1071 <|@
result v69|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 74]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1092 
=== Succesors ===
next: v88 
=== Usages ===
a584 
=== Predecessor ===
v81 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1092 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a584 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 74]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1071 
=== Succesors ===
=== Usages ===
v85 v585 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1071  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 81]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a584 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a584  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 81]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.3756063756063756
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
a1071 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v86 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = MOV [v63|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3756063756063756 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B66" 
    xhandlers
    flags 
    probability 4568753736923923973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.]] destination: B39 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4572141895098561157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 84]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i92 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i92  <|@  <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2fd86366
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a584 
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a584  <|@  <|@
tid ?825 <|@
d <@d|@=== Debug Properties ===
bci: 91
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 635
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 i377 a2 a5 i13 i14 a708 a838 - - - - - 
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i377 a2 a5 i13 i14 a708 a838 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i92 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 91
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v585 
stateDuring: ?825 
=== Succesors ===
next: v100 
=== Usages ===
v94 
=== Predecessor ===
v87 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v585 stateDuring: ?825 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 94]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i92 
y: i13 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i92 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 94]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.28634850166481685
=== Inputs ===
condition: v94 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
i92 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v94 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
locals: v8|QWORD[.] v66|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] v68|QWORD[.] - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:91, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.28634850166481685 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4563933181255339638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 104]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.001042611060743437
=== Inputs ===
condition: v1048 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1048 #trueSuccessor: v103 #falseSuccessor: v104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.001042611060743437 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4519322625356419209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 112]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 4563926622858141218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 131]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B66" 
    xhandlers
    flags 
    probability 4569984989237870031
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v211 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v211  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.]] destination: B44 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4592970040387376550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 104]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.001042611060743437
=== Inputs ===
condition: v1048 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1048 #trueSuccessor: v361 #falseSuccessor: v362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.001042611060743437 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4548495784124030864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 112]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B46" 
    successors "B66" 
    xhandlers
    flags 
    probability 4548600718479205586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v353 v354 
=== Succesors ===
next: a110 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v353 v354 #next: a110  <|@  <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@40a940aa
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>
=== Inputs ===
arguments: a838 a454 a708 i377 a2 a5 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a838 a454 a708 i377 a2 a5  <|@  <|@
tid ?827 <|@
d <@d|@=== Debug Properties ===
bci: 123
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 - - a5 i13 i14 - - - - - - - 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 - - a5 i13 i14 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a110 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 123
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.putTreeVal
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v587 
stateDuring: ?827 
=== Succesors ===
next: v114 
=== Usages ===
a115 
=== Predecessor ===
v352 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v587 stateDuring: ?827 #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
a110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
locals: v8|QWORD[.] - - Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:123, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD[.]] destination: B47 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 4592961380856385758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 131]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v362 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593059565230748247
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v356 v358 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v356 v358 #next: v116  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.], int[0|0x0]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B77" "B64" 
    successors "B51" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594265602967797864
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a118 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v117 
values: a838 a594 a594 
=== Succesors ===
=== Usages ===
?120 j964 v1093 ?828 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v117 values: a838 a594 a594  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v117 
values: i13 i153 i153 
=== Succesors ===
=== Usages ===
?120 ?826 ?828 i153 v161 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v117 values: i13 i153 i153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2144121250623952
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v116 
=== Succesors ===
next: a1072 
=== Usages ===
a118 i119 v123 v138 v148 v154 v212 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v116 #next: a1072  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 134
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 641
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 i377 a2 a5 i13 i14 a708 a118 - - - - i119 
=== Succesors ===
=== Usages ===
v713 a982 a1072 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i377 a2 a5 i13 i14 a708 a118 - - - - i119  <|@  <|@
f <@~|@floating>@ <|@
tid v1093 <|@
result [v73|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a118 
index: - 
=== Succesors ===
=== Usages ===
a1072 v842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a118 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1072 <|@
result v75|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 136]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: true
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?120 
guard: - 
address: v1093 
=== Succesors ===
next: v129 
=== Usages ===
a594 v604 v1095 v1096 
=== Predecessor ===
v117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?120 guard: - address: v1093 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid a594 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 136]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a1072 
=== Succesors ===
=== Usages ===
a118 a118 ?826 a115 a115 ?828 a115 ?829 a115 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1072  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 177]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a1072 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1072  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 142]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.8018459009042672
=== Inputs ===
condition: v604 
=== Succesors ===
trueSuccessor: v123 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
a1072 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v604 #trueSuccessor: v123 #falseSuccessor: v128  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v8|QWORD[.] v66|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] v73|QWORD[.] - - - - v74|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v75|DWORD[.] = MOV [v73|QWORD[.] + 24] size: DWORD state [bci:134, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v75|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v75|DWORD[.], y: v75|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8018459009042672 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B56" 
    xhandlers
    flags 
    probability 4592839372211731903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 145]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.7223671947809879
=== Inputs ===
condition: v1028 
=== Succesors ===
trueSuccessor: v248 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1028 #trueSuccessor: v248 #falseSuccessor: v250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7223671947809879 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590569737480773746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j971 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j971 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j986 
=== Usages ===
v1114 v1115 
=== Predecessor ===
v248 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j986  <|@  <|@
f <@~|@floating>@ <|@
tid v1114 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j971 
index: - 
=== Succesors ===
=== Usages ===
j986 v988 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j971 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j986 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1114 
=== Succesors ===
next: j987 
=== Usages ===
j1041 j992 v1126 
=== Predecessor ===
j971 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1114 #next: j987  <|@  <|@
f <@~|@floating>@ <|@
tid v1115 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j971 
index: - 
=== Succesors ===
=== Usages ===
j987 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j971 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j987 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1115 
=== Succesors ===
next: v979 
=== Usages ===
v976 
=== Predecessor ===
j986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1115 #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid j1041 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j986 
y: j1031 
=== Succesors ===
=== Usages ===
v976 v988 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j986 y: j1031  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j987 
y: j1041 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j987 y: j1041  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v976 
=== Succesors ===
trueSuccessor: v977 
falseSuccessor: v978 
=== Usages ===
=== Predecessor ===
j987 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v976 #trueSuccessor: v977 #falseSuccessor: v978  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v77|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4560698028798110750
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a982 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a982 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?120 
arguments: v893 i1033 i14 
=== Succesors ===
next: j983 
=== Usages ===
j983 
=== Predecessor ===
v977 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?120 arguments: v893 i1033 i14 #next: j983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j983 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a982 
=== Succesors ===
next: v993 
=== Usages ===
j992 
=== Predecessor ===
a982 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a982 #next: v993  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v990 
=== Predecessor ===
j983 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v8|QWORD[.] v66|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] v73|QWORD[.] - - - - v74|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590510684312597658
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1114 
value: j1041 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1114 value: j1041 stateAfter: - lastLocationAccess: - #next: v985  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
result [v77|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j986 
index: - 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j986 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1126 
=== Succesors ===
next: v991 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1126 #next: v991  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v990 
=== Predecessor ===
v985 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v77|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590569737480773746
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j992 <|@
result v80|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v990 
values: j986 j983 
=== Succesors ===
=== Usages ===
v1118 v1117 a809 v1127 v1128 v1129 v1130 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v990 values: j986 j983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v991 v993 
=== Succesors ===
next: a809 
=== Usages ===
j992 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v991 v993 #next: a809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a809 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j992 
=== Succesors ===
next: j1002 
=== Usages ===
a814 
=== Predecessor ===
v990 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j992 #next: j1002  <|@  <|@
f <@~|@floating>@ <|@
tid j998 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v926 
=== Succesors ===
=== Usages ===
v1116 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v926  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
result [v10|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j998 
index: - 
=== Succesors ===
=== Usages ===
j1002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j998 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1002 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1116 
=== Succesors ===
next: v1003 
=== Usages ===
v1003 
=== Predecessor ===
a809 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1116 #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid v1117 <|@
result [v80|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j992 
index: - 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j992 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1117 
value: j1002 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
j1002 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1117 value: j1002 stateAfter: - lastLocationAccess: - #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid v1118 <|@
result [v80|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j992 
index: - 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j992 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1118 
value: v1036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1118 value: v1036 stateAfter: - lastLocationAccess: - #next: v1010  <|@  <|@
f <@~|@floating>@ <|@
tid v1127 <|@
result [v80|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j992 
index: - 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j992 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1127 
value: i377 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1012 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1127 value: i377 stateAfter: - lastLocationAccess: - #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid v1128 <|@
result [v80|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j992 
index: - 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j992 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1055 <|@
result v83|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1128 
value: a1055 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1128 value: a1055 stateAfter: - lastLocationAccess: - #next: v1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1129 <|@
result [v80|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j992 
index: - 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j992 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1129 
value: a652 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1129 value: a652 stateAfter: - lastLocationAccess: - #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1130 <|@
result [v80|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j992 
index: - 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j992 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1130 
value: i13 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a814 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1130 value: i13 stateAfter: - lastLocationAccess: - #next: a814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a814 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a809 
=== Succesors ===
next: v815 
=== Usages ===
a596 
=== Predecessor ===
v1016 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a809 #next: v815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
a814 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid a596 <|@
result v84|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Compress
stamp: n -
=== Inputs ===
value: a814 
=== Succesors ===
=== Usages ===
a840 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a814  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v815 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*]], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v80|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 12], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 16], y: v83|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v80|QWORD[*] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|DWORD[.]] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B57" 
    xhandlers
    flags 
    probability 4584700090497710745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid v1135 <|@
result [v5|DWORD * 8 + 680] <|@
d <@d|@=== Debug Properties ===
displacement: 680
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1060 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1135 
=== Succesors ===
next: j600 
=== Usages ===
v1094 v601 
=== Predecessor ===
v250 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1135 #next: j600  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
result [v85|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v598 
index: - 
=== Succesors ===
=== Usages ===
j600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v598 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j600 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1094 
=== Succesors ===
next: a156 
=== Usages ===
v601 
=== Predecessor ===
v598 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1094 #next: a156  <|@  <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: a Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@511183be
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j600 
metaspaceMethod: v598 
arguments: a454 i377 a2 a5 a48 
=== Succesors ===
=== Usages ===
a156 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j600 metaspaceMethod: v598 arguments: a454 i377 a2 a5 a48  <|@  <|@
tid ?828 <|@
d <@d|@=== Debug Properties ===
bci: 152
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?213 
values: a454 i377 - a5 i13 i14 a708 - - - a594 - i119 a118 
=== Succesors ===
=== Usages ===
a156 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i377 - a5 i13 i14 a708 - - - a594 - i119 a118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a156 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 152
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: true
stamp: a Ljava/util/HashMap$Node;
targetMethod: Indirect#HashMap.newNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v601 
stateDuring: ?828 
=== Succesors ===
next: v399 
=== Usages ===
a602 
=== Predecessor ===
j600 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v601 stateDuring: ?828 #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid a602 <|@
result v88|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a156 
=== Succesors ===
=== Usages ===
a840 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a156  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
a156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [v5|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV [v85|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stack: v73|QWORD[.] 
locals: v8|QWORD[.] v66|DWORD - Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] - - - v76|QWORD[.] - v74|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:152, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4592839372211731902
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a840 <|@
result v89|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v400 
values: a602 a596 
=== Succesors ===
=== Usages ===
v842 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v400 values: a602 a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v399 v402 
=== Succesors ===
next: v842 
=== Usages ===
a840 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v399 v402 #next: v842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1093 
value: a840 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j964 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1093 value: a840 stateAfter: - lastLocationAccess: - #next: j964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j964 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a118 
=== Succesors ===
next: v968 
=== Usages ===
j965 
=== Predecessor ===
v842 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a118 #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid j965 <|@
result v90|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j964 
y: i948 
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j964 y: i948  <|@  <|@
f <@~|@floating>@ <|@
tid v1113 <|@
result [v90|QWORD[*] + v9|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j965 
index: j952 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j965 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1113 
value: i954 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
j964 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1113 value: i954 stateAfter: - lastLocationAccess: - #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 160]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
rawvalue: 7
stableDimension: 0
stamp: i32 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i160 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i160  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9987884436160298
=== Inputs ===
condition: v161 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v163 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v161 #trueSuccessor: v164 #falseSuccessor: v163  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v73|QWORD[.] + 24], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = SHR v73|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v90|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD y: 7 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9987884436160298 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592829467796994589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.]] destination: B58 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4549203084362334884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 165]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@72ecd9de
stamp: void
targetMethod: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>
=== Inputs ===
arguments: a454 a708 i377 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a454 a708 i377  <|@  <|@
tid ?829 <|@
d <@d|@=== Debug Properties ===
bci: 169
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 - - a5 i13 i14 - - - - a594 - - 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 - - a5 i13 i14 - - - - a594 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
bci: 169
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.treeifyBin
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v595 
stateDuring: ?829 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v595 stateDuring: ?829 #next: v169  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v167 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
locals: v8|QWORD[.] - - Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - v76|QWORD[.] - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:169, 9, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.]] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583738076632255555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 175]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1073 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1073  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
result [v75|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1072 
=== Succesors ===
=== Usages ===
i1073 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1072  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1073 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 177]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1095 
=== Succesors ===
next: v134 
=== Usages ===
v131 
=== Predecessor ===
v128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1095 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 181]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i1073 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i1073  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 216]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i119 
y: i14 
=== Succesors ===
=== Usages ===
i119 i119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i119 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 181]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.12596643409390906
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
i1073 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v132 #falseSuccessor: v133  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = INC v74|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: [v75|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12596643409390906 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570289754662114099
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 184]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1074 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1074  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
result [v75|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1072 
=== Succesors ===
=== Usages ===
a1074 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1072  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1074 <|@
result v92|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 186]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1096 
=== Succesors ===
next: v142 
=== Usages ===
a611 
=== Predecessor ===
v132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1096 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid a611 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 186]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1074 
=== Succesors ===
=== Usages ===
v136 v612 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1074  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 193]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a611 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a611  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 193]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.7559880239520959
=== Inputs ===
condition: v136 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
a1074 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v136 #trueSuccessor: v138 #falseSuccessor: v141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = MOV [v75|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7559880239520959 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4568302684096042738
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v138 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.]] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561087505535856898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 196]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i145 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i145  <|@  <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1e4357b6
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a611 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a611  <|@  <|@
tid ?826 <|@
d <@d|@=== Debug Properties ===
bci: 203
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 648
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 i377 a2 a5 i13 i14 a708 - - - a594 - i119 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 i377 a2 a5 i13 i14 a708 - - - a594 - i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i145 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 203
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v612 
stateDuring: ?826 
=== Succesors ===
next: v152 
=== Usages ===
v147 
=== Predecessor ===
v141 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v612 stateDuring: ?826 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 206]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i145 
y: i13 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i145 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 206]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.5521472392638037
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v151 
falseSuccessor: v148 
=== Usages ===
=== Predecessor ===
i145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v151 #falseSuccessor: v148  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
locals: v8|QWORD[.] v66|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] - - - v76|QWORD[.] - v74|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:203, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5521472392638037 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557412867862430283
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v117 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.], v91|DWORD] destination: B64 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4555754943954542521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 209]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v170  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v148 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" "B47" "B62" "B58" "B59" "B65" "B44" 
    successors "B67" "B75" 
    xhandlers
    flags 
    probability 4593519761021356797
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a115 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v113 
values: a838 a110 a594 a594 a594 a594 a838 
=== Succesors ===
=== Usages ===
v621 v172 j1017 v1097 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v113 values: a838 a110 a594 a594 a594 a594 a838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v114 v137 v162 v169 v170 v211 
=== Succesors ===
next: v178 
=== Usages ===
a115 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v114 v137 v162 v169 v170 v211 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 224]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
value: a115 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a115  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 224]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9241589950959305
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v177 
falseSuccessor: v176 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v177 #falseSuccessor: v176  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v95|QWORD[.], y: v95|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9241589950959305 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4592848163109823963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B32" "B67" "B31" 
    successors "B69" "B72" 
    xhandlers
    flags 
    probability 4607098469061075801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v173 v175 v393 
=== Succesors ===
next: i1075 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v173 v175 v393 #next: i1075  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
result [v2|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1058 
=== Succesors ===
=== Usages ===
i1075 v624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1075 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 261]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1098 
=== Succesors ===
next: v624 
=== Usages ===
i188 
=== Predecessor ===
v174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1098 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 265]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i1075 
y: i14 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1075 y: i14  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 266]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1098 
value: i188 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1076 
=== Usages ===
=== Predecessor ===
i1075 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1098 value: i188 stateAfter: - lastLocationAccess: - #next: i1076  <|@  <|@
f <@~|@floating>@ <|@
tid v1099 <|@
result [v2|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1058 
=== Succesors ===
=== Usages ===
i1076 v627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1076 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 271]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1099 
=== Succesors ===
next: v627 
=== Usages ===
i192 
=== Predecessor ===
v624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1099 #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 275]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i32
=== Inputs ===
x: i1076 
y: i14 
=== Succesors ===
=== Usages ===
v627 v196 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1076 y: i14  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 277]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1099 
value: i192 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1077 
=== Usages ===
=== Predecessor ===
i1076 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1099 value: i192 stateAfter: - lastLocationAccess: - #next: i1077  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
result [v2|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1058 
=== Succesors ===
=== Usages ===
i1077 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1077 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.threshold
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 281]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1100 
=== Succesors ===
next: v199 
=== Usages ===
v196 
=== Predecessor ===
v627 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1100 #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 284]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1077 
y: i192 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1077 y: i192  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 284]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.001841453520645575
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v197 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
i1077 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v197 #falseSuccessor: v198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ADD (x: v96|DWORD, ~y: [v2|DWORD[.] * 8 + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 24], y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ADD (x: v98|DWORD, ~y: [v2|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 20], y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v99|DWORD, y: [v2|DWORD[.] * 8 + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.001841453520645575 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4566055878508013415
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 287]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a201 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a201  <|@  <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: a [Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@14e5f8c4
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a454 
=== Succesors ===
=== Usages ===
a201 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a454  <|@  <|@
tid ?830 <|@
d <@d|@=== Debug Properties ===
bci: 288
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 663
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a454 - - - - i14 - - - - - - - 
=== Succesors ===
=== Usages ===
a201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a454 - - - - i14 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a201 <|@
result v100|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 288
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: a [Ljava/util/HashMap$Node;
targetMethod: Direct#HashMap.resize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v631 
stateDuring: ?830 
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v631 stateDuring: ?830 #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9069858042480521
=== Inputs ===
condition: v1028 
=== Succesors ===
trueSuccessor: v258 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
a201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1028 #trueSuccessor: v258 #falseSuccessor: v260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
locals: v8|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:288, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9069858042480521 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4565273344906719219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 19]
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4550392292827184036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid v1101 <|@
result [v5|DWORD * 8 + 728] <|@
d <@d|@=== Debug Properties ===
displacement: 728
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1060 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v634 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1101 
=== Succesors ===
next: j636 
=== Usages ===
v1102 v637 
=== Predecessor ===
v260 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1101 #next: j636  <|@  <|@
f <@~|@floating>@ <|@
tid v1102 <|@
result [v101|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v634 
index: - 
=== Succesors ===
=== Usages ===
j636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v634 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j636 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1102 
=== Succesors ===
next: v208 
=== Usages ===
v637 
=== Predecessor ===
v634 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1102 #next: v208  <|@  <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@49b49595
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeInsertion(boolean)>
=== Inputs ===
computedAddress: j636 
metaspaceMethod: v634 
arguments: a454 i14 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j636 metaspaceMethod: v634 arguments: a454 i14  <|@  <|@
tid ?832 <|@
d <@d|@=== Debug Properties ===
bci: 295
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 664
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
bci: 295
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeInsertion
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v637 
stateDuring: ?832 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
j636 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v637 stateDuring: ?832 #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 19]
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [v5|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v101|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v101|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:295, 9, 8] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4607082037311839333
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 292]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9069858042480521
=== Inputs ===
condition: v1028 
=== Succesors ===
trueSuccessor: v310 
falseSuccessor: v311 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1028 #trueSuccessor: v310 #falseSuccessor: v311  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9069858042480521 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606253576820573322
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v310 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B73 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors 
    xhandlers
    flags 
    probability 4591292104593293013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
result [v5|DWORD * 8 + 728] <|@
d <@d|@=== Debug Properties ===
displacement: 728
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1060 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v638 <|@
result v103|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1134 
=== Succesors ===
next: j640 
=== Usages ===
v1103 v641 
=== Predecessor ===
v311 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1134 #next: j640  <|@  <|@
f <@~|@floating>@ <|@
tid v1103 <|@
result [v103|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v638 
index: - 
=== Succesors ===
=== Usages ===
j640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v638 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j640 <|@
result v104|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1103 
=== Succesors ===
next: v418 
=== Usages ===
v641 
=== Predecessor ===
v638 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1103 #next: v418  <|@  <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5d028754
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeInsertion(boolean)>
=== Inputs ===
computedAddress: j640 
metaspaceMethod: v638 
arguments: a454 i14 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j640 metaspaceMethod: v638 arguments: a454 i14  <|@  <|@
tid ?833 <|@
d <@d|@=== Debug Properties ===
bci: 295
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 664
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
bci: 295
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeInsertion
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v641 
stateDuring: ?833 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
j640 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v641 stateDuring: ?833 #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 19]
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [v5|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOV [v103|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v104|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:295, 9, 8] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B76" 
    xhandlers
    flags 
    probability 4576526405073316115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 227]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1078 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1078  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
result [v95|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a115 
index: - 
=== Succesors ===
=== Usages ===
a1078 v620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1078 <|@
result v105|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 229]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1097 
=== Succesors ===
next: v620 
=== Usages ===
a618 
=== Predecessor ===
v176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1097 #next: v620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1097 
value: a652 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1017 
=== Usages ===
=== Predecessor ===
a1078 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1097 value: a652 stateAfter: - lastLocationAccess: - #next: j1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1017 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a115 
=== Succesors ===
next: v1021 
=== Usages ===
j1018 
=== Predecessor ===
v620 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a115 #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid j1018 <|@
result v106|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1017 
y: i948 
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1017 y: i948  <|@  <|@
f <@~|@floating>@ <|@
tid v1119 <|@
result [v106|QWORD[*] + v9|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1018 
index: j952 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1018 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1119 
value: i954 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
j1017 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1119 value: i954 stateAfter: - lastLocationAccess: - #next: v183  <|@  <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@597895a5
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>
=== Inputs ===
arguments: a454 a115 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a454 a115  <|@  <|@
f <@~|@floating>@ <|@
tid a618 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 229]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1078 
=== Succesors ===
=== Usages ===
?831 a216 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1078  <|@  <|@
tid ?831 <|@
d <@d|@=== Debug Properties ===
bci: 253
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 657
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: - - - - - - - - - - - - a618 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: - - - - - - - - - - - - a618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
bci: 253
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.afterNodeAccess
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v621 
stateDuring: ?831 
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v621 stateDuring: ?831 #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = MOV [v95|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v95|QWORD[.] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100] <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[*] = SHR v95|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v106|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v105|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v95|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
locals: - - - - - - - - - - - - v107|QWORD[.] 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:253, 9, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v107|QWORD[.]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B73" 
    successors 
    xhandlers
    flags 
    probability 4606337526559514926
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a216 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v214 
values: a618 a48 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v214 values: a618 a48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v215 v313 
=== Succesors ===
next: v21 
=== Usages ===
a216 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v215 v313 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 11]
stamp: void
=== Inputs ===
value: a216 
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a216  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 11]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v19 
trueValue: i14 
falseValue: i13 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v19 trueValue: i14 falseValue: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashSet.add(HashSet.java:220) [bci: 19]
stamp: void
=== Inputs ===
result: i20 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i20 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v108|QWORD[.], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v109|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582720160115280349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v713 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?120 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?120 #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v117 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v8|QWORD[.] v66|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] v73|QWORD[.] - - - - v74|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:134, 9, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.], v91|DWORD] destination: B77 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
at java.util.HashSet.add(HashSet.java:220) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v876 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v876  <|@  <|@
f <@~|@floating>@ <|@
tid i877 <|@
result int[-134939|0xfffffffffffdf0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -134939
stableDimension: 0
stamp: i32 [-134939] ⇊00000000fffdf0e5 ⇈00000000fffdf0e5
stampKind: i32
value: int[-134939|0xfffffffffffdf0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-134939|0xfffffffffffdf0e5]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B21" "B78" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i871 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-134939 - -133131] ⇊00000000fffdf0e5 ⇈00000000fffdf7fd
valueDescription: i32
=== Inputs ===
merge: v868 
values: i875 i877 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v868 values: i875 i877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v874 v876 
=== Succesors ===
next: v873 
=== Usages ===
i871 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v874 v876 #next: v873  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?319 
actionAndReason: i871 
speculation: a48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?319 actionAndReason: i871 speculation: a48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: v32|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: v8|QWORD[.] 
locals: - v1|QWORD[.] Object[Object@652050100] 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 2, 8] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@62e07596 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashSet.add(HashSet.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [v3|DWORD * 8 + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = AND v12|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SHR v12|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v2|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHR v17|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = XOR (x: v19|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|DWORD[.], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05949555131451651 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B20" 
    xhandlers
    flags 
    probability 4606561817404864084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD[.], v17|DWORD, v20|DWORD] destination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B11" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD[.], v32|DWORD, v33|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: v32|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: v8|QWORD[.] 
locals: - v1|QWORD[.] Object[Object@652050100] 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v34|DWORD = MOV [v31|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2, 8] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B78" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = AND (x: v33|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B36" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[.] = MOV [v37|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD[.], y: v38|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8771074655430375 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605605469639368944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD, v37|QWORD[.], v34|DWORD, v33|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" "B24" 
    successors "B26" "B34" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD, v40|QWORD[.], v41|DWORD, v42|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v40|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: [v40|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B32" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9308569947624414 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605529252035592985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v44|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605455711710689819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v44|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B68" 
    xhandlers
    flags 
    probability 4605529252035592985
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE v47|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v115|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*]], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v47|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*] + 12], y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*] + 16], y: v50|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v47|QWORD[*] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[.] = COMPRESSPOINTER (input: v48|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + v39|DWORD * 4 + 16], y: v51|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = LEA [v40|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = SHR v53|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v52|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B32" "B67" "B31" 
    successors "B69" "B72" 
    xhandlers
    flags 
    probability 4607098469061075801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ADD (x: v96|DWORD, ~y: [v2|DWORD[.] * 8 + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 24], y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ADD (x: v98|DWORD, ~y: [v2|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 20], y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v99|DWORD, y: [v2|DWORD[.] * 8 + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.001841453520645575 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4607082037311839333
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9069858042480521 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606253576820573322
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B73 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B73" 
    successors 
    xhandlers
    flags 
    probability 4606337526559514926
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v108|QWORD[.], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v109|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4592992907664668485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|DWORD[.], v37|QWORD[.], v34|DWORD, v33|DWORD] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B17" "B36" 
    successors "B38" "B45" 
    xhandlers
    flags 
    probability 4593519761021356798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD[.], v64|QWORD[.], v65|DWORD, v66|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v8|QWORD[.] v66|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] - v65|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v67|DWORD = MOV [v63|DWORD[.] * 8 + 8] size: DWORD state [bci:29, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: [v63|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06207786620778666 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4592970040387376550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.001042611060743437 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 4592961380856385758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593059565230748247
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.], int[0|0x0]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B77" "B64" 
    successors "B51" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594265602967797864
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v8|QWORD[.] v66|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] v73|QWORD[.] - - - - v74|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v75|DWORD[.] = MOV [v73|QWORD[.] + 24] size: DWORD state [bci:134, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v75|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v75|DWORD[.], y: v75|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8018459009042672 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583738076632255555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = INC v74|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: [v75|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12596643409390906 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582720160115280349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v8|QWORD[.] v66|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] v73|QWORD[.] - - - - v74|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:134, 9, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.], v91|DWORD] destination: B77 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570289754662114099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = MOV [v75|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7559880239520959 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561087505535856898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
locals: v8|QWORD[.] v66|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] - - - v76|QWORD[.] - v74|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:203, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5521472392638037 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557412867862430283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.], v91|DWORD] destination: B64 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B56" 
    xhandlers
    flags 
    probability 4592839372211731903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7223671947809879 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590569737480773746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v77|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590510684312597658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v77|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590569737480773746
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [v114|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*]], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v80|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 12], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 16], y: v83|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v80|QWORD[*] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|DWORD[.]] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4592839372211731902
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v73|QWORD[.] + 24], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = SHR v73|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v90|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD y: 7 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9987884436160298 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592829467796994589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.]] destination: B58 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" "B47" "B62" "B58" "B59" "B65" "B44" 
    successors "B67" "B75" 
    xhandlers
    flags 
    probability 4593519761021356797
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v95|QWORD[.], y: v95|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9241589950959305 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4592848163109823963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors 
    xhandlers
    flags 
    probability 4591292104593293013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [v5|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOV [v103|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v104|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:295, 9, 8] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B68" 
    xhandlers
    flags 
    probability 4588900808550201421
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [v5|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v54|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v42|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stack: v40|QWORD[.] v39|DWORD 
locals: v8|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + v39|DWORD * 4 + 16], y: v57|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = LEA [v40|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v58|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588649291477489029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B18" 
    xhandlers
    flags 
    probability 4588735033603162712
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
locals: v8|QWORD[.] v25|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:20, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: v26|QWORD[.] 
locals: v8|QWORD[.] v25|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v27|DWORD = MOV [v26|QWORD[.] + 12] size: DWORD state [bci:23, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = DEC v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = AND (x: v28|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4588735033603162712
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v26|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD[.], y: v30|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8771074655430375 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B25" 
    xhandlers
    flags 
    probability 4587681326889786085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD, v26|QWORD[.], v27|DWORD, v25|DWORD] destination: B16 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B57" 
    xhandlers
    flags 
    probability 4584700090497710745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [v5|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV [v85|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v111|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stack: v73|QWORD[.] 
locals: v8|QWORD[.] v66|DWORD - Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] - - - v76|QWORD[.] - v74|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:152, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B19" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: v8|QWORD[.] 
locals: - v1|QWORD[.] Object[Object@652050100] 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2, 8] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v2|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR v21|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = XOR (x: v21|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD[.], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05949555131451651 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576575260801392948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD[.], v21|DWORD, v24|DWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashSet.add(HashSet.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B76" 
    xhandlers
    flags 
    probability 4576526405073316115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = MOV [v95|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v95|QWORD[.] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100] <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[*] = SHR v95|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v106|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v105|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v95|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
locals: - - - - - - - - - - - - v107|QWORD[.] 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:253, 9, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v107|QWORD[.]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4575860202574856048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v8|QWORD[.] v42|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v40|QWORD[.] - v41|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4575445552297366920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = MOV [v63|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3756063756063756 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4572141895098561157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
locals: v8|QWORD[.] v66|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] v68|QWORD[.] - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:91, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.28634850166481685 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B66" 
    xhandlers
    flags 
    probability 4569984989237870031
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.]] destination: B44 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575079675860695960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD[.], v26|QWORD[.], v27|DWORD, v25|DWORD] destination: B17 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B66" 
    xhandlers
    flags 
    probability 4568753736923923973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.]] destination: B39 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4568302684096042738
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.]] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4566055878508013415
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
locals: v8|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:288, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9069858042480521 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4565273344906719219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4563933181255339638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.001042611060743437 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 4563926622858141218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4560698028798110750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v8|QWORD[.] v66|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v64|QWORD[.] v73|QWORD[.] - - - - v74|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558626719314687161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4555754943954542521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4550392292827184036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [v5|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v101|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v101|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:295, 9, 8] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4549203084362334884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
locals: v8|QWORD[.] - - Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - v76|QWORD[.] - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:169, 9, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.]] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4548495784124030864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B46" 
    successors "B66" 
    xhandlers
    flags 
    probability 4548600718479205586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
locals: v8|QWORD[.] - - Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:123, 9, 8] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD[.]] destination: B47 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4519322625356419209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-134939|0xfffffffffffdf0e5]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B21" "B78" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: v32|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: v8|QWORD[.] 
locals: - v1|QWORD[.] Object[Object@652050100] 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 2, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-134163|0xfffffffffffdf3ed]] destination: B21 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -116755 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashSet.add(HashSet.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@302753425] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-182332|0xfffffffffffd37c4], v60|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v8|QWORD[.] v42|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] v40|QWORD[.] - v41|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:29, 9, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -130331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: v26|QWORD[.] 
locals: v8|QWORD[.] v25|DWORD v1|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:23, 9, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-182043|0xfffffffffffd38e5], Object[null]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // map:java.util.HashMap
     4: aload_1       
     5: getstatic     #14         // PRESENT:java.lang.Object
     8: invokevirtual #15         // java.util.HashMap.put:(java.lang.Object, java.lang.Object)java.lang.Object
    11: ifnonnull     18
    14: iconst_1      
    15: goto          19
    18: iconst_0      
    19: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@62e07596 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   12  <|@ instruction stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashSet.add(HashSet.java:220) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [r11|DWORD * 8 + 464] size: QWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   46  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   54  <|@ instruction r9|QWORD = AND r11|QWORD y: 7 size: QWORD <|@ <|@
      nr   56  <|@ instruction CMP r9|QWORD y: 1 size: QWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r11|QWORD = SHR r11|QWORD y: 8 size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = MOV r11|QWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r9|DWORD[.] = MOV [r10|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr  108  <|@ instruction rdi|DWORD = SHR r11|DWORD y: 16 size: DWORD <|@ <|@
      nr  110  <|@ instruction rdi|DWORD = XOR (x: rdi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.05949555131451651 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B20" 
    xhandlers
    flags 
    probability 4606561817404864084
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B11" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: r11|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: rcx|QWORD[.] 
locals: - rdx|QWORD[.] Object[Object@652050100] 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2, 8] <|@ <|@
      nr  258  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B78" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rbp|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction rbp|DWORD = AND (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B36" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction r11|DWORD[.] = MOV [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.8771074655430375 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605605469639368944
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r14|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" "B24" 
    successors "B26" "B34" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  298  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:80|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction r11|DWORD = MOV [r9|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  304  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP (x: rbp|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B32" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.9308569947624414 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605529252035592985
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = LEA [r11|QWORD + 32] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rdi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605455711710689819
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~[r11|QWORD + 224] instr: 0 <|@ <|@
      nr  366  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B68" 
    xhandlers
    flags 
    probability 4605529252035592985
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  374  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rdi|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV (x: [r11|QWORD[*]], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [r11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  382  <|@ instruction MOV (x: [r11|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r11|QWORD[*] + 16], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  388  <|@ instruction MOV [r11|QWORD[*] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100] <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction MOV (x: [r9|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = LEA [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  398  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  400  <|@ instruction MOVB (x: [r11|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B32" "B67" "B31" 
    successors "B69" "B72" 
    xhandlers
    flags 
    probability 4607098469061075801
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  854  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  856  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [r10|DWORD[.] * 8 + 24]) size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  862  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [r10|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 28]) size: DWORD <|@ <|@
      nr  868  <|@ instruction BRANCH trueDestinationProbability: 0.001841453520645575 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4607082037311839333
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  908  <|@ instruction BRANCH trueDestinationProbability: 0.9069858042480521 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606253576820573322
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B73 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B73" 
    successors 
    xhandlers
    flags 
    probability 4606337526559514926
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr  964  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4592992907664668485
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B17" "B36" 
    successors "B38" "B45" 
    xhandlers
    flags 
    probability 4593519761021356798
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  486  <|@ instruction stack:60|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r11:0, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: rcx|QWORD[.] rdi|DWORD rdx|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] - rax|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:29, 9, 8] <|@ <|@
      nr  490  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction CMP (x: rdi|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.06207786620778666 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4592970040387376550
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.001042611060743437 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 4592961380856385758
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593059565230748247
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  606  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B77" "B64" 
    successors "B51" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594265602967797864
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  612  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:56|QWORD[.] rdi|DWORD rdx|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] r10|QWORD[.] - - - - r11|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rbp|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD state [bci:134, 9, 8] <|@ <|@
      nr  614  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TEST (x: rbp|DWORD[.], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.8018459009042672 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583738076632255555
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction r14|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  780  <|@ instruction CMP (x: rdi|DWORD, y: [rbp|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.12596643409390906 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582720160115280349
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:56|QWORD[.] rdi|DWORD rdx|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] r10|QWORD[.] - - - - r11|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:134, 9, 8] <|@ <|@
      nr  970  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B77 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570289754662114099
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction r10|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  788  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  790  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.7559880239520959 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561087505535856898
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction stack:100|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
locals: stack:56|QWORD[.] stack:60|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] - - - stack:80|QWORD[.] - stack:84|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:203, 9, 8] <|@ <|@
      nr  816  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction BRANCH trueDestinationProbability: 0.5521472392638037 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557412867862430283
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B64 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B56" 
    xhandlers
    flags 
    probability 4592839372211731903
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction BRANCH trueDestinationProbability: 0.7223671947809879 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590569737480773746
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  636  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590510684312597658
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590569737480773746
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  680  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  688  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [rsi|QWORD[*] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100] <|@ <|@
      nr  696  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  698  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4592839372211731902
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  744  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  748  <|@ instruction MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  750  <|@ instruction CMP stack:84|DWORD y: 7 size: DWORD <|@ <|@
      nr  752  <|@ instruction BRANCH trueDestinationProbability: 0.9987884436160298 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592829467796994589
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B58 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" "B47" "B62" "B58" "B59" "B65" "B44" 
    successors "B67" "B75" 
    xhandlers
    flags 
    probability 4593519761021356797
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  842  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  844  <|@ instruction BRANCH trueDestinationProbability: 0.9241589950959305 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4592848163109823963
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors 
    xhandlers
    flags 
    probability 4591292104593293013
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ instruction rbx|QWORD = MOV [r8|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr  922  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  924  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:295, 9, 8] <|@ <|@
      nr  930  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  932  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B68" 
    xhandlers
    flags 
    probability 4588900808550201421
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100] <|@ <|@
      nr  408  <|@ instruction r10|QWORD = MOV [r8|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr  410  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  424  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  428  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stack: stack:80|QWORD[.] stack:60|DWORD 
locals: stack:56|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56, 9, 8] <|@ <|@
      nr  430  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  432  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction MOV (x: [r9|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = LEA [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  442  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  444  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  446  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B32 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588649291477489029
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:60|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B18" 
    xhandlers
    flags 
    probability 4588735033603162712
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
locals: stack:56|QWORD[.] stack:60|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:20, 9, 8] <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rax:0, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: rax|QWORD[.] 
locals: stack:56|QWORD[.] stack:60|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23, 9, 8] <|@ <|@
      nr  158  <|@ instruction rsi|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  160  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4588735033603162712
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r11|DWORD[.] = MOV [rax|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  170  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.8771074655430375 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B25" 
    xhandlers
    flags 
    probability 4587681326889786085
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B16 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B57" 
    xhandlers
    flags 
    probability 4584700090497710745
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100] <|@ <|@
      nr  716  <|@ instruction rbx|QWORD = MOV [r8|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr  718  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  730  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stack: stack:96|QWORD[.] 
locals: stack:56|QWORD[.] stack:60|DWORD - Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] - - - stack:80|QWORD[.] - stack:84|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:152, 9, 8] <|@ <|@
      nr  732  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  734  <|@ instruction r8|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B19" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: stack:56|QWORD[.] 
locals: - stack:40|QWORD[.] Object[Object@652050100] 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2, 8] <|@ <|@
      nr  132  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction r9|DWORD[.] = MOV [r10|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr  136  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.05949555131451651 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576575260801392948
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  244  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashSet.add(HashSet.java:220) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   88  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   92  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B76" 
    xhandlers
    flags 
    probability 4576526405073316115
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  938  <|@ instruction MOV [rax|QWORD[.] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100] <|@ <|@
      nr  940  <|@ instruction rdx|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  942  <|@ instruction MOVB (x: [rdx|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  946  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ st <@st|@reference-map: [stack:32, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
locals: - - - - - - - - - - - - stack:80|QWORD[.] 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:253, 9, 8] <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4575860202574856048
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  334  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  338  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: stack:56|QWORD[.] r14|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:80|QWORD[.] - r13|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29, 9, 8] <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4575445552297366920
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction CMP (x: rdx|QWORD[.], y: stack:40|QWORD[.]) size: QWORD <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.3756063756063756 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4572141895098561157
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
locals: stack:56|QWORD[.] stack:60|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] stack:80|QWORD[.] - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:91, 9, 8] <|@ <|@
      nr  522  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction BRANCH trueDestinationProbability: 0.28634850166481685 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B66" 
    xhandlers
    flags 
    probability 4569984989237870031
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B44 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575079675860695960
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  206  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B17 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B66" 
    xhandlers
    flags 
    probability 4568753736923923973
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B39 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4568302684096042738
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4566055878508013415
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ st <@st|@reference-map: [stack:56, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
locals: stack:56|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:288, 9, 8] <|@ <|@
      nr  876  <|@ instruction CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  878  <|@ instruction BRANCH trueDestinationProbability: 0.9069858042480521 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4565273344906719219
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  884  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4563933181255339638
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction rbp|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.001042611060743437 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 4563926622858141218
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  546  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4560698028798110750
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  646  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  648  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ st <@st|@reference-map: [r13:0, stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:56|QWORD[.] stack:60|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] r13|QWORD[.] - - - - stack:84|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134, 9, 8] <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558626719314687161
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4555754943954542521
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4550392292827184036
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbx|QWORD = MOV [r8|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr  892  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  898  <|@ st <@st|@reference-map: [stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:295, 9, 8] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  902  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4549203084362334884
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
locals: stack:56|QWORD[.] - - Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - stack:80|QWORD[.] - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:169, 9, 8] <|@ <|@
      nr  770  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4548495784124030864
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B46" 
    successors "B66" 
    xhandlers
    flags 
    probability 4548600718479205586
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100] <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
locals: stack:56|QWORD[.] - - Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:123, 9, 8] <|@ <|@
      nr  594  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B47 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4519322625356419209
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction r10|DWORD = MOVE input: int[-134939|0xfffffffffffdf0e5] <|@ <|@
      nr  980  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B21" "B78" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  984  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@reference-map: [stack:56, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: r11|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: stack:56|QWORD[.] 
locals: - stack:40|QWORD[.] Object[Object@652050100] 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 2, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVE input: int[-134163|0xfffffffffffdf3ed] <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B21 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 668] y: -116755 size: DWORD <|@ <|@
      nr   24  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [stack:72, stack:80]
live-base-pointers: []
java.util.HashSet.add(HashSet.java:220) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@302753425] <|@ <|@
      nr  462  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|DWORD = MOVE input: int[-182332|0xfffffffffffd37c4] <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  476  <|@ st <@st|@reference-map: [r9:0, stack:56, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: stack:56|QWORD[.] r14|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] r9|QWORD[.] - r13|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:29, 9, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction MOV [r15|QWORD + 668] y: -130331 size: DWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: rax|QWORD[.] 
locals: rcx|QWORD[.] r10|DWORD rdx|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:23, 9, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-182043|0xfffffffffffd38e5] <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // map:java.util.HashMap
     4: aload_1       
     5: getstatic     #14         // PRESENT:java.lang.Object
     8: invokevirtual #15         // java.util.HashMap.put:(java.lang.Object, java.lang.Object)java.lang.Object
    11: ifnonnull     18
    14: iconst_1      
    15: goto          19
    18: iconst_0      
    19: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@62e07596 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   12  <|@ instruction stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashSet.add(HashSet.java:220) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [r11|DWORD * 8 + 464] size: QWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   46  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   54  <|@ instruction r9|QWORD = AND r11|QWORD y: 7 size: QWORD <|@ <|@
      nr   56  <|@ instruction CMP r9|QWORD y: 1 size: QWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r11|QWORD = SHR r11|QWORD y: 8 size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = MOV r11|QWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B4 -> B8 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" 
    successors "B10" "B20" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r9|DWORD[.] = MOV [r10|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr  108  <|@ instruction rdi|DWORD = SHR r11|DWORD y: 16 size: DWORD <|@ <|@
      nr  110  <|@ instruction rdi|DWORD = XOR (x: rdi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.05949555131451651 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B9" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: r11|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: rcx|QWORD[.] 
locals: - rdx|QWORD[.] Object[Object@652050100] 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2, 8] <|@ <|@
      nr  258  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B78" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rbp|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction rbp|DWORD = AND (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B36" 
    xhandlers
    flags 
    probability 4606646530514556889
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction r11|DWORD[.] = MOV [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.8771074655430375 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605605469639368944
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r14|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" "B24" 
    successors "B26" "B34" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  298  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:80|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction r11|DWORD = MOV [r9|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  304  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP (x: rbp|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B32" 
    xhandlers
    flags 
    probability 4606075501255243422
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.9308569947624414 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605529252035592985
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = LEA [r11|QWORD + 32] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rdi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605455711710689819
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~[r11|QWORD + 224] instr: 0 <|@ <|@
      nr  366  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B68" 
    xhandlers
    flags 
    probability 4605529252035592985
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  374  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rdi|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV (x: [r11|QWORD[*]], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [r11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  382  <|@ instruction MOV (x: [r11|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r11|QWORD[*] + 16], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  388  <|@ instruction MOV [r11|QWORD[*] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100] <|@ <|@
      nr  390  <|@ instruction MOV (x: [r11|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction MOV (x: [r9|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = LEA [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  398  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  400  <|@ instruction MOVB (x: [r11|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B32" "B67" "B31" 
    successors "B69" "B72" 
    xhandlers
    flags 
    probability 4607098469061075801
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  854  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  856  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [r10|DWORD[.] * 8 + 24]) size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  862  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [r10|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 28]) size: DWORD <|@ <|@
      nr  868  <|@ instruction BRANCH trueDestinationProbability: 0.001841453520645575 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4607082037311839333
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  908  <|@ instruction BRANCH trueDestinationProbability: 0.9069858042480521 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606253576820573322
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B73 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B73" 
    successors 
    xhandlers
    flags 
    probability 4606337526559514926
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr  964  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4592992907664668485
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B17" "B36" 
    successors "B38" "B45" 
    xhandlers
    flags 
    probability 4593519761021356798
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  486  <|@ instruction stack:60|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r11:0, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: rcx|QWORD[.] rdi|DWORD rdx|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] - rax|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:29, 9, 8] <|@ <|@
      nr  490  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction CMP (x: rdi|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.06207786620778666 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4592970040387376550
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.001042611060743437 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593059565230748247
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  606  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B77" "B64" 
    successors "B51" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594265602967797864
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  612  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:56|QWORD[.] rdi|DWORD rdx|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] r10|QWORD[.] - - - - r11|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rbp|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD state [bci:134, 9, 8] <|@ <|@
      nr  614  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  616  <|@ instruction TEST (x: rbp|DWORD[.], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.8018459009042672 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583738076632255555
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction r14|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  780  <|@ instruction CMP (x: rdi|DWORD, y: [rbp|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.12596643409390906 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582720160115280349
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:56|QWORD[.] rdi|DWORD rdx|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] r10|QWORD[.] - - - - r11|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:134, 9, 8] <|@ <|@
      nr  970  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B77 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570289754662114099
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction r10|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  788  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  790  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.7559880239520959 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561087505535856898
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction stack:100|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
locals: stack:56|QWORD[.] stack:60|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] - - - stack:80|QWORD[.] - stack:84|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:203, 9, 8] <|@ <|@
      nr  816  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction BRANCH trueDestinationProbability: 0.5521472392638037 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557412867862430283
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B64 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B56" 
    xhandlers
    flags 
    probability 4592839372211731903
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction BRANCH trueDestinationProbability: 0.7223671947809879 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590569737480773746
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  636  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590510684312597658
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590569737480773746
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  680  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  688  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [rsi|QWORD[*] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100] <|@ <|@
      nr  696  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  698  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4592839372211731902
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  744  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  748  <|@ instruction MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  750  <|@ instruction CMP stack:84|DWORD y: 7 size: DWORD <|@ <|@
      nr  752  <|@ instruction BRANCH trueDestinationProbability: 0.9987884436160298 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592829467796994589
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B58 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" "B47" "B62" "B58" "B59" "B65" "B44" 
    successors "B67" "B75" 
    xhandlers
    flags 
    probability 4593519761021356797
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  842  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  844  <|@ instruction BRANCH trueDestinationProbability: 0.9241589950959305 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4592848163109823963
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors 
    xhandlers
    flags 
    probability 4591292104593293013
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ instruction rbx|QWORD = MOV [r8|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr  922  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  924  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:295, 9, 8] <|@ <|@
      nr  930  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  932  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B68" 
    xhandlers
    flags 
    probability 4588900808550201421
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100] <|@ <|@
      nr  408  <|@ instruction r10|QWORD = MOV [r8|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr  410  <|@ instruction r11|QWORD = MOV [r10|QWORD + 64] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  424  <|@ instruction rbx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  428  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stack: stack:80|QWORD[.] stack:60|DWORD 
locals: stack:56|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56, 9, 8] <|@ <|@
      nr  430  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  432  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction MOV (x: [r9|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = LEA [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  442  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  444  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  446  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B32 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588649291477489029
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:60|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B18" 
    xhandlers
    flags 
    probability 4588735033603162712
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
locals: stack:56|QWORD[.] stack:60|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:20, 9, 8] <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rax:0, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: rax|QWORD[.] 
locals: stack:56|QWORD[.] stack:60|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23, 9, 8] <|@ <|@
      nr  158  <|@ instruction rsi|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  160  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4588735033603162712
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r11|DWORD[.] = MOV [rax|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  170  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.8771074655430375 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B25" 
    xhandlers
    flags 
    probability 4587681326889786085
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B16 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B57" 
    xhandlers
    flags 
    probability 4584700090497710745
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100] <|@ <|@
      nr  716  <|@ instruction rbx|QWORD = MOV [r8|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr  718  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  730  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stack: stack:96|QWORD[.] 
locals: stack:56|QWORD[.] stack:60|DWORD - Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] - - - stack:80|QWORD[.] - stack:84|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:152, 9, 8] <|@ <|@
      nr  732  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  734  <|@ instruction r8|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B19" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: stack:56|QWORD[.] 
locals: - stack:40|QWORD[.] Object[Object@652050100] 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2, 8] <|@ <|@
      nr  132  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction r9|DWORD[.] = MOV [r10|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr  136  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.05949555131451651 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576575260801392948
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  244  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashSet.add(HashSet.java:220) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   88  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   92  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B76" 
    xhandlers
    flags 
    probability 4576526405073316115
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  938  <|@ instruction MOV [rax|QWORD[.] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100] <|@ <|@
      nr  940  <|@ instruction rdx|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  942  <|@ instruction MOVB (x: [rdx|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  946  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ st <@st|@reference-map: [stack:32, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
locals: - - - - - - - - - - - - stack:80|QWORD[.] 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:253, 9, 8] <|@ <|@
      nr  954  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4575860202574856048
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  334  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  338  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: stack:56|QWORD[.] r14|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:80|QWORD[.] - r13|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29, 9, 8] <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4575445552297366920
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction CMP (x: rdx|QWORD[.], y: stack:40|QWORD[.]) size: QWORD <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.3756063756063756 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4572141895098561157
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
locals: stack:56|QWORD[.] stack:60|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] stack:80|QWORD[.] - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:91, 9, 8] <|@ <|@
      nr  522  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction BRANCH trueDestinationProbability: 0.28634850166481685 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B66" 
    xhandlers
    flags 
    probability 4569984989237870031
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B44 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575079675860695960
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  206  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B17 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B66" 
    xhandlers
    flags 
    probability 4568753736923923973
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B39 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4568302684096042738
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4566055878508013415
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ st <@st|@reference-map: [stack:56, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
locals: stack:56|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:288, 9, 8] <|@ <|@
      nr  876  <|@ instruction CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  878  <|@ instruction BRANCH trueDestinationProbability: 0.9069858042480521 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4565273344906719219
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  884  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B43" 
    xhandlers
    flags 
    probability 4563933181255339638
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction rbp|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.001042611060743437 condition: = trueDestination: B41 -> B47 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 4563926622858141218
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  546  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4560698028798110750
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  646  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  648  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ st <@st|@reference-map: [r13:0, stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:56|QWORD[.] stack:60|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] stack:72|QWORD[.] r13|QWORD[.] - - - - stack:84|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134, 9, 8] <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558626719314687161
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4555754943954542521
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4550392292827184036
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbx|QWORD = MOV [r8|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr  892  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  898  <|@ st <@st|@reference-map: [stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:295, 9, 8] <|@ <|@
      nr  900  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  902  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4549203084362334884
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
locals: stack:56|QWORD[.] - - Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - stack:80|QWORD[.] - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:169, 9, 8] <|@ <|@
      nr  770  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4548495784124030864
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B46" 
    successors "B66" 
    xhandlers
    flags 
    probability 4548600718479205586
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100] <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
locals: stack:56|QWORD[.] - - Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:123, 9, 8] <|@ <|@
      nr  594  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B47 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction r10|DWORD = MOVE input: int[-134939|0xfffffffffffdf0e5] <|@ <|@
      nr  980  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B21" "B78" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  984  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@reference-map: [stack:56, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: r11|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: stack:56|QWORD[.] 
locals: - stack:40|QWORD[.] Object[Object@652050100] 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 2, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVE input: int[-134163|0xfffffffffffdf3ed] <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B21 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction MOV [r15|QWORD + 668] y: -116755 size: DWORD <|@ <|@
      nr   24  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [stack:72, stack:80]
live-base-pointers: []
java.util.HashSet.add(HashSet.java:220) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@302753425] <|@ <|@
      nr  462  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|DWORD = MOVE input: int[-182332|0xfffffffffffd37c4] <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  476  <|@ st <@st|@reference-map: [r9:0, stack:56, stack:72, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: stack:56|QWORD[.] r14|DWORD stack:40|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] r9|QWORD[.] - r13|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:29, 9, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction MOV [r15|QWORD + 668] y: -130331 size: DWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: rax|QWORD[.] 
locals: rcx|QWORD[.] r10|DWORD rdx|QWORD[.] Object[Object@652050100] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
java.util.HashSet.add(HashSet.java:220) [bci: 8]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:23, 9, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-182043|0xfffffffffffd38e5] <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // map:java.util.HashMap
     4: aload_1       
     5: getstatic     #14         // PRESENT:java.lang.Object
     8: invokevirtual #15         // java.util.HashMap.put:(java.lang.Object, java.lang.Object)java.lang.Object
    11: ifnonnull     18
    14: iconst_1      
    15: goto          19
    18: iconst_0      
    19: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c246048897424504889542448448b560c4489542444438504d44885d20f84fe070000448b5a084e8b1cddd0010000468b04d508000000448944244049b9addeaddeaddeadde418bca48c1e10348894c243848bb00e01b17010000004d3bcb0f856d0400004c8b1a4d8bcb4983e1074983f9010f85b904000049c1eb08458bdb4585db0f84a9040000468b0cd524000000418bfbc1ef104133fb4585c90f846f030000428b04cd0c00000085c00f84660700008be8ffcd23ef3bc50f863e07000049c1e103458b5ca9104585db0f8511010000448bf7448be8896c24344c894c2420458b59084181fbaddeadde0f8546070000413b690c0f83940700004181f8addeadde0f859b0200004d8b5f60498d7b20493b7f700f878e04000049897f60410f1883e000000048bfaddeaddeaddeadde498bc3488bbfa800000049893b41c74308addeadde4589730c488bfa48c1ef0341897b1041c74314addeadde4589631848c1e803418944a9104d8d5ca91049c1eb094588241bb801000000420304d518000000428904d518000000b801000000420304d514000000428904d514000000423b04d51c0000000f8ff1040000817c2440addeadde0f85b101000048b800000000000000004885c00f94c00fb6c0488b6c24604883c468850500000000c5f877c34c894c2428897c2434428b2cdd08000000418bc348c1e003423b3cdd0c0000000f84ee03000081fdaddeadde0f84a605000041bb000000004c8bd00f1f4000418b6a18448bed49c1e50385ed0f8482000000458bf341ffc63b3ced0c0000000f840e000000850500000000458bde4d8bd5ebcc448b14ed1000000049c1e2034c3bd20f8423040000448974240c4c896c242044895c241c488bf2498bd248b8ffffffffffffffff0f1f8000000000e8000000009085c00f85a9040000448b5c240c4c8b5424208b7c2434488b542448e96bffffff4c896c242044895c241c817c2440addeadde0f85b1010000498b7760488d5620493b57700f8735040000498957600f1886e00000008b7c2434488b54244848b9addeaddeaddeadde4c8bc6488b89a800000048890ec74608addeadde897e0c488bca48c1e903894e10c74614addeadde4489661849c1e8034d8bea48bb00e01b1701000000458945184d8bd549c1ea094588241a837c241c070f8d3c040000488b4424204885c00f8503020000448b542444e909feffff448b4424404a8b1cc5d8020000488b4340488b742438ba01000000ffd090b801000000488b6c24604883c468850500000000c5f877c348b8addeaddeaddeadde4e8b14c5a80200004d8b5a40488b742438488bfa418bd6488bcf4c8bc049b90000000000000000498bda498bc3ffd09048c1e8034c8b4c24208b6c2434418944a910498d74a91048c1ee0948bb00e01b17010000004488241e448b542444e966fdffff897c2434488b7424380f1f8000000000e80000000090448b500c418bf2ffce23742434443bd60f8627040000448b5cb0104585db0f8500020000448b742434458bea4c8bc88bee48bb00e01b1701000000488b4c2438448b442440448b542444488b542448488b742450e958fcffff4c895424108b7c2434448b44244049b9addeaddeaddeadde4a8b1cc5a8020000488b4340488b7424388bd7488b4c24484d8bc149b90000000000000000ffd09048c1e803448bc04c8b6c2410e961feffff488b74244848b8ffffffffffffffff90e80000000090448b542444468b0cd5240000008bf0c1ee10448bd84433de4585c90f8436020000418bfb448bd848bb00e01b1701000000488b4c2438448b442440488b542448488b742450e971fbffff488b742448e80000000090448bd848bb00e01b1701000000488b4c2438448b442440448b542444488b542448488b742450e921fbffff8b7014c74014addeadde488bd048c1ea094488241a48c1e6034889742420488b742438488bd048b8ffffffffffffffff6690e80000000090488b442420e91efcffff48beaddeaddeaddeaddeba04000000b901000000e800000000904c8bd84c8b4c24208b6c243448bb00e01b1701000000488b4c2438448b442440448b542444488b542448488b742450e930fbffff428b34dd100000008bd648c1e203483b5424480f846f0000004889442420896c241c488b74244848b8ffffffffffffffff90e8000000009085c00f849e000000488b44242048bb00e01b1701000000e910fdffff8b7c2434488944242848bb00e01b1701000000488b4c2438448b442440488b542448488b742450418bc2448b542444e969fbffff48bb00e01b1701000000e9cdfcffff498bc548bb00e01b1701000000e9bbfcffff488b7424380f1f4000e80000000090817c2440addeadde0f859f000000b801000000488b6c24604883c468850500000000c5f877c38b6c241c81fdaddeadde0f84db000000488b4424208b7c243448bb00e01b1701000000488b4c2438448b442440448b542444488b542448488b742450e9fffaffff4d8bea48beaddeaddeaddeaddeba04000000b901000000e80000000090488bf04d8bd5e9aefbffff44895c2434e9cdfcffff488b44242048bb00e01b1701000000e9fffbffff448b4424404a8b1cc5d8020000488b4340488b742438ba01000000ffd090b801000000488b6c24604883c468850500000000c5f877c3488b742438488b5424288b4c243490e80000000090488b44242048bb00e01b1701000000e9a0fbffff488944242048bfaddeaddeaddeadde488b742420488b542438488b4c2428448b4424344c8b4c2448660f1f440000e8000000009048bb00e01b1701000000e95dfbffff41bae5f0fdff4589979c0200004d89a7a8020000e8000000009041baedf3fdffebe441c7879c020000ed37feff4d89a7a8020000e8000000009049baaddeaddeaddeadde4d8bda41bac437fdff4c8b4c24204589979c0200004d899fa8020000e80000000090448b542434488b4c2438488b542448488b74245041c7879c020000e502feff4d89a7a8020000e8000000009049bb000000000000000041bae538fdffebaee80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@62e07596 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 62 12 stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 67 14 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 67 [rdx:0, rsi:0, r10:0, stack:68, stack:72, stack:80]at java.util.HashSet.add(HashSet.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 67 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 71 16 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 74 18 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 80 block B2 null  <||@
  Comment 80 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 80 30 r11|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 84 32 r11|QWORD = MOV [r11|DWORD * 8 + 464] size: QWORD  <||@
  Comment 92 34 r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 100 36 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 105 38 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 105 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 115 40 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 122 42 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 127 44 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 137 46 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 140 48 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12  <||@
  Comment 146 block B3 null  <||@
  Comment 146 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 52 r11|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 149 54 r9|QWORD = AND r11|QWORD y: 7 size: QWORD  <||@
  Comment 156 56 CMP r9|QWORD y: 1 size: QWORD  <||@
  Comment 160 58 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8  <||@
  Comment 166 block B4 null  <||@
  Comment 166 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 166 62 r11|QWORD = SHR r11|QWORD y: 8 size: QWORD  <||@
  Comment 170 64 r11|DWORD = MOV r11|QWORD size: DWORD  <||@
  Comment 173 66 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 176 68 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B4 -> B8 falseDestination: B4 -> B9  <||@
  Comment 182 block B9 null  <||@
  Comment 182 104 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 182 106 r9|DWORD[.] = MOV [r10|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 190 108 rdi|DWORD = SHR r11|DWORD y: 16 size: DWORD  <||@
  Comment 196 110 rdi|DWORD = XOR (x: rdi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 199 112 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 202 114 BRANCH trueDestinationProbability: 0.05949555131451651 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B20  <||@
  Comment 208 block B20 null  <||@
  Comment 208 254 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 208 256 rax|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2, 8]  <||@
  Comment 208 [rcx:0, rdx:0, rsi:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.hash(HashMap.java:339) [bci: 12, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r11|DWORD  |  
  at java.util.HashMap.put(HashMap.java:612) [bci: 2, duringCall: true, rethrow: false]
              |0             |1             |2                        
     locals:  |-             |rdx|QWORD[.]  |Object[Object@652050100] 
     stack:   |rcx|QWORD[.]  |              |                         
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 208 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 216 258 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 218 260 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 224 block B22 null  <||@
  Comment 224 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 270 rbp|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 228 272 rbp|DWORD = AND (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 230 274 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 232 276 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B78  <||@
  Comment 238 block B23 null  <||@
  Comment 238 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 280 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 242 282 r11|DWORD[.] = MOV [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 247 284 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 250 286 BRANCH trueDestinationProbability: 0.8771074655430375 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B36  <||@
  Comment 256 block B24 null  <||@
  Comment 256 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 256 290 r14|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 259 292 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 262 294 JUMP ~[] destination: B24 -> B25  <||@
  Comment 262 block B25 null  <||@
  Comment 262 296 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 262 298 stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 266 300 stack:80|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 271 302 r11|DWORD = MOV [r9|QWORD[.] + 8] size: DWORD  <||@
  Comment 275 304 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 275 {meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 282 306 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B34  <||@
  Comment 288 block B26 null  <||@
  Comment 288 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 288 310 CMP (x: rbp|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD  <||@
  Comment 292 312 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B33  <||@
  Comment 298 block B27 null  <||@
  Comment 298 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 316 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 298 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 305 318 BRANCH trueDestinationProbability: 0.9308569947624414 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B32  <||@
  Comment 311 block B28 null  <||@
  Comment 311 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 311 322 r11|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 315 324 rdi|QWORD = LEA [r11|QWORD + 32] size: QWORD  <||@
  Comment 319 326 CMP (x: rdi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 323 328 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 329 block B30 null  <||@
  Comment 329 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 362 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 333 364 AMD64PREFETCH ~[r11|QWORD + 224] instr: 0  <||@
  Comment 341 366 r11|QWORD[*] = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 341 368 JUMP ~[] destination: B30 -> B31  <||@
  Comment 341 block B31 null  <||@
  Comment 341 370 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 341 372 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 341 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 351 374 rax|QWORD[.] = MOVE r11|QWORD[*] moveKind: QWORD  <||@
  Comment 354 376 rdi|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 361 378 MOV (x: [r11|QWORD[*]], y: rdi|QWORD) size: QWORD  <||@
  Comment 364 380 MOV [r11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 364 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 372 382 MOV (x: [r11|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 376 384 rdi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 383 386 MOV (x: [r11|QWORD[*] + 16], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 387 388 MOV [r11|QWORD[*] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100]  <||@
  Comment 387 {NarrowOop[Object@652050100]}  <||@
  Comment 395 390 MOV (x: [r11|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 399 392 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 403 394 MOV (x: [r9|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 408 396 r11|QWORD[.] = LEA [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD  <||@
  Comment 413 398 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 417 400 MOVB (x: [r11|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 421 402 JUMP ~[] destination: B31 -> B68  <||@
  Comment 421 block B68 null  <||@
  Comment 421 852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 421 854 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 426 856 rax|DWORD = ADD (x: rax|DWORD, ~y: [r10|DWORD[.] * 8 + 24]) size: DWORD  <||@
  Comment 434 858 MOV (x: [r10|DWORD[.] * 8 + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 442 860 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 447 862 rax|DWORD = ADD (x: rax|DWORD, ~y: [r10|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 455 864 MOV (x: [r10|DWORD[.] * 8 + 20], y: rax|DWORD) size: DWORD  <||@
  Comment 463 866 CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 28]) size: DWORD  <||@
  Comment 471 868 BRANCH trueDestinationProbability: 0.001841453520645575 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B72  <||@
  Comment 477 block B72 null  <||@
  Comment 477 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 477 906 CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 477 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 485 908 BRANCH trueDestinationProbability: 0.9069858042480521 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 491 block B73 null  <||@
  Comment 491 910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 912 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 501 914 JUMP ~[] destination: B73 -> B76  <||@
  Comment 501 block B76 null  <||@
  Comment 501 958 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 501 960 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 504 962 rax|DWORD = SETCC condition: =  <||@
  Comment 510 964 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 519 12  <||@
  Comment 529 block B36 null  <||@
  Comment 529 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 480 stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 534 482 JUMP ~[] destination: B36 -> B37  <||@
  Comment 534 block B37 null  <||@
  Comment 534 484 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 534 486 stack:60|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 538 488 rbp|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:29, 9, 8]  <||@
  Comment 538 [rcx:0, rdx:0, rsi:0, r11:0, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0             |1          |2             |3                         |4           |5           |6                  |7  |8          |9  |10  |11  |12 
     locals:  |rcx|QWORD[.]  |rdi|DWORD  |rdx|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |-  |rax|DWORD  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 538 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 546 490 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 553 492 CMP (x: rdi|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 561 494 BRANCH trueDestinationProbability: 0.06207786620778666 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B45  <||@
  Comment 567 block B45 null  <||@
  Comment 567 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 567 568 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 567 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 573 570 BRANCH trueDestinationProbability: 0.001042611060743437 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49  <||@
  Comment 579 block B49 null  <||@
  Comment 579 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 579 604 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 585 606 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 588 608 JUMP ~[] destination: B49 -> B50  <||@
  Comment 588 block B50 loop 0 depth 1 header:117|LoopBegin  <||@
  Comment 588 610 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 592 612 rbp|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD state [bci:134, 9, 8]  <||@
  Comment 592 [rdx:0, r10:0, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2             |3                         |4           |5           |6                  |7             |8  |9  |10  |11  |12        
     locals:  |stack:56|QWORD[.]  |rdi|DWORD  |rdx|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |-   |-   |r11|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 592 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 596 614 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 603 616 TEST (x: rbp|DWORD[.], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 605 618 BRANCH trueDestinationProbability: 0.8018459009042672 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60  <||@
  Comment 611 block B60 loop 0 depth 1 header:117|LoopBegin  <||@
  Comment 611 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 778 r14|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 617 780 CMP (x: rdi|DWORD, y: [rbp|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 624 782 BRANCH trueDestinationProbability: 0.12596643409390906 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B77  <||@
  Comment 630 block B77 loop 0 depth 1 header:117|LoopBegin  <||@
  Comment 630 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 968 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:134, 9, 8]  <||@
  Comment 630 [rdx:0, r10:0, r13:0, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2             |3                         |4           |5           |6                  |7             |8  |9  |10  |11  |12        
     locals:  |stack:56|QWORD[.]  |rdi|DWORD  |rdx|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |-   |-   |r11|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 630 {infopoint: SAFEPOINT}  <||@
  Comment 630 11  <||@
  Comment 636 970 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 639 972 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 642 974 JUMP ~[] destination: B77 -> B50  <||@
  Comment 644 block B61 loop 0 depth 1 header:117|LoopBegin  <||@
  Comment 644 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 644 786 r10|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 652 788 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 656 790 CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 659 792 BRANCH trueDestinationProbability: 0.7559880239520959 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 665 block B63 loop 0 depth 1 header:117|LoopBegin  <||@
  Comment 665 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 804 stack:100|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 670 806 stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 675 808 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 680 810 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 683 812 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 686 814 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:203, 9, 8]  <||@
  Comment 686 7  <||@
  Comment 703 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 708 [stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:648) [bci: 203, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                         |4           |5           |6                  |7  |8  |9  |10                 |11  |12             
     locals:  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |-  |-  |-  |stack:80|QWORD[.]  |-   |stack:84|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 709 816 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 711 818 BRANCH trueDestinationProbability: 0.5521472392638037 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 717 block B64 loop 0 depth 1 header:117|LoopBegin  <||@
  Comment 717 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 717 822 r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 722 824 r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 727 826 rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 731 828 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 736 830 JUMP ~[] destination: B64 -> B50  <||@
  Comment 741 block B51 null  <||@
  Comment 741 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 741 622 stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 746 624 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 751 626 CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 751 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 759 628 BRANCH trueDestinationProbability: 0.7223671947809879 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B56  <||@
  Comment 765 block B52 null  <||@
  Comment 765 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 632 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 769 634 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 773 636 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 777 638 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 783 block B54 null  <||@
  Comment 783 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 783 664 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 787 666 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 794 668 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 794 674 JUMP ~[] destination: B54 -> B55  <||@
  Comment 794 block B55 null  <||@
  Comment 794 676 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 794 670 rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 798 672 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 803 678 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 803 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 813 680 r8|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 816 682 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 823 684 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 826 686 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 826 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 833 688 MOV (x: [rsi|QWORD[*] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 836 690 rcx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 843 692 MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 846 694 MOV [rsi|QWORD[*] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100]  <||@
  Comment 846 {NarrowOop[Object@652050100]}  <||@
  Comment 853 696 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 857 698 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 861 700 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 864 704 JUMP ~[] destination: B55 -> B57  <||@
  Comment 864 block B57 null  <||@
  Comment 864 742 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 864 738 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 874 744 MOV (x: [r13|QWORD[.] + 24], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 878 746 r10|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 885 748 MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 889 750 CMP stack:84|DWORD y: 7 size: DWORD  <||@
  Comment 894 752 BRANCH trueDestinationProbability: 0.9987884436160298 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 900 block B58 null  <||@
  Comment 900 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 900 756 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 905 758 JUMP ~[] destination: B58 -> B66  <||@
  Comment 905 block B66 null  <||@
  Comment 905 840 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 905 842 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 908 844 BRANCH trueDestinationProbability: 0.9241589950959305 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B75  <||@
  Comment 914 block B67 null  <||@
  Comment 914 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 914 848 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 919 850 JUMP ~[] destination: B67 -> B68  <||@
  Comment 924 block B74 null  <||@
  Comment 924 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 924 918 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 929 920 rbx|QWORD = MOV [r8|DWORD * 8 + 728] size: QWORD  <||@
  Comment 937 922 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 941 924 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 946 926 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 951 928 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:295, 9, 8]  <||@
  Comment 951 {HotSpotMethod<HashMap.afterNodeInsertion(boolean)>}  <||@
  Comment 951 10  <||@
  Comment 953 [stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:664) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 954 930 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 959 932 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 968 12  <||@
  Comment 978 block B32 null  <||@
  Comment 978 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 978 406 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100]  <||@
  Comment 978 {Object[Object@652050100]}  <||@
  Comment 988 408 r10|QWORD = MOV [r8|DWORD * 8 + 680] size: QWORD  <||@
  Comment 996 410 r11|QWORD = MOV [r10|QWORD + 64] size: QWORD  <||@
  Comment 1000 412 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1005 414 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1008 416 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1011 418 rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1014 420 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1017 422 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1027 424 rbx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1030 426 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1033 428 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56, 9, 8]  <||@
  Comment 1033 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1033 10  <||@
  Comment 1035 [stack:32, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:631) [bci: 56, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4  |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |-               |-  |-  |-  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:80|QWORD[.]  |stack:60|DWORD  |   |   |   |            |   |   |   |   |    |    |   
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1036 430 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 1040 432 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1045 434 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1049 436 MOV (x: [r9|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1054 438 rsi|QWORD[.] = LEA [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1059 440 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1063 442 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1073 444 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1077 446 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1082 448 JUMP ~[] destination: B32 -> B68  <||@
  Comment 1087 block B10 null  <||@
  Comment 1087 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1087 118 stack:60|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1091 120 JUMP ~[] destination: B10 -> B14  <||@
  Comment 1091 block B14 null  <||@
  Comment 1091 150 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1091 152 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1096 154 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:20, 9, 8]  <||@
  Comment 1096 9  <||@
  Comment 1103 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1108 [stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:629) [bci: 20, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                         |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1109 156 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23, 9, 8]  <||@
  Comment 1109 [rax:0, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:629) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                         |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
     stack:   |rax|QWORD[.]       |                |                   |                          |            |            |   |   |   |   |    |    |   
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1109 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1113 158 rsi|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 1118 160 rsi|DWORD = AND (x: rsi|DWORD, y: stack:60|DWORD) size: DWORD  <||@
  Comment 1122 162 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1125 164 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B18  <||@
  Comment 1131 block B15 null  <||@
  Comment 1131 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1131 168 r11|DWORD[.] = MOV [rax|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1136 170 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1139 172 BRANCH trueDestinationProbability: 0.8771074655430375 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 1145 block B16 null  <||@
  Comment 1145 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1145 176 r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1150 178 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1153 180 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1156 182 rbp|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1158 184 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1168 186 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1173 188 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1178 190 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1183 192 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1188 194 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1193 196 JUMP ~[] destination: B16 -> B25  <||@
  Comment 1198 block B56 null  <||@
  Comment 1198 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1198 708 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1203 710 rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1207 712 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1212 714 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100]  <||@
  Comment 1212 {Object[Object@652050100]}  <||@
  Comment 1222 716 rbx|QWORD = MOV [r8|DWORD * 8 + 680] size: QWORD  <||@
  Comment 1230 718 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1234 720 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1239 722 rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1241 724 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1246 726 r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1249 728 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1259 730 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:152, 9, 8]  <||@
  Comment 1259 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1259 10  <||@
  Comment 1261 [stack:16, stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:642) [bci: 152, duringCall: true, rethrow: false]
              |0                  |1               |2  |3                         |4           |5           |6                  |7  |8  |9  |10                 |11  |12             
     locals:  |stack:56|QWORD[.]  |stack:60|DWORD  |-  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |-  |-  |-  |stack:80|QWORD[.]  |-   |stack:84|DWORD 
     stack:   |stack:96|QWORD[.]  |                |   |                          |            |            |                   |   |   |   |                   |    |               
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1262 732 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 1266 734 r8|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1269 736 r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1274 740 JUMP ~[] destination: B56 -> B57  <||@
  Comment 1279 block B12 null  <||@
  Comment 1279 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1279 128 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1284 130 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2, 8]  <||@
  Comment 1284 7  <||@
  Comment 1295 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 1300 [stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.hash(HashMap.java:339) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap.put(HashMap.java:612) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2                        
     locals:  |-                  |stack:40|QWORD[.]  |Object[Object@652050100] 
     stack:   |stack:56|QWORD[.]  |                   |                         
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1301 132 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1306 134 r9|DWORD[.] = MOV [r10|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 1314 136 rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 1319 138 r11|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1325 140 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 1328 142 BRANCH trueDestinationProbability: 0.05949555131451651 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B19  <||@
  Comment 1334 block B19 null  <||@
  Comment 1334 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1334 238 rdi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1337 240 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1340 242 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1350 244 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1355 246 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1360 248 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1365 250 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1370 252 JUMP ~[] destination: B19 -> B20  <||@
  Comment 1375 block B8 null  <||@
  Comment 1375 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1375 84 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1380 86 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 1380 {Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1385 [stack:56, stack:68, stack:72, stack:80]at java.util.HashSet.add(HashSet.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1386 88 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1389 90 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1399 92 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1404 94 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1409 96 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1414 98 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1419 100 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1424 102 JUMP ~[] destination: B8 -> B9  <||@
  Comment 1429 block B75 null  <||@
  Comment 1429 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1429 936 rsi|DWORD[.] = MOV [rax|QWORD[.] + 20] size: DWORD  <||@
  Comment 1432 938 MOV [rax|QWORD[.] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100]  <||@
  Comment 1432 {NarrowOop[Object@652050100]}  <||@
  Comment 1439 940 rdx|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1446 942 MOVB (x: [rdx|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1450 944 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 1454 946 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1459 948 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1464 950 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1467 952 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:253, 9, 8]  <||@
  Comment 1467 7  <||@
  Comment 1479 {HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>}  <||@
  Comment 1484 [stack:32, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:657) [bci: 253, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12                
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |stack:80|QWORD[.] 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1485 954 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1490 956 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1495 block B29 null  <||@
  Comment 1495 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1495 332 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1495 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1505 334 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1510 336 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1515 338 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29, 9, 8]  <||@
  Comment 1515 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1520 [stack:32, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                         |4           |5           |6                  |7  |8          |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |r14|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:80|QWORD[.]  |-  |r13|DWORD  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1521 340 r11|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1524 342 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1529 344 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1533 346 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1543 348 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1548 350 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1553 352 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1558 354 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1563 356 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1568 358 JUMP ~[] destination: B29 -> B31  <||@
  Comment 1573 block B38 null  <||@
  Comment 1573 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1573 498 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1581 500 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 1587 502 CMP (x: rdx|QWORD[.], y: stack:40|QWORD[.]) size: QWORD  <||@
  Comment 1592 504 BRANCH trueDestinationProbability: 0.3756063756063756 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1598 block B40 null  <||@
  Comment 1598 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1598 514 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1603 516 stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1607 518 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1612 520 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:91, 9, 8]  <||@
  Comment 1612 7  <||@
  Comment 1623 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1628 [stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:635) [bci: 91, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                         |4           |5           |6                  |7                  |8  |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1629 522 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1631 524 BRANCH trueDestinationProbability: 0.28634850166481685 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44  <||@
  Comment 1637 block B44 null  <||@
  Comment 1637 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1637 560 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1642 562 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1652 564 JUMP ~[] destination: B44 -> B66  <||@
  Comment 1657 block B17 null  <||@
  Comment 1657 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1657 200 rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1661 202 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1666 204 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1676 206 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1681 208 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1686 210 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1691 212 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1696 214 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1699 216 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1704 218 JUMP ~[] destination: B17 -> B37  <||@
  Comment 1709 block B39 null  <||@
  Comment 1709 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1709 508 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1719 510 JUMP ~[] destination: B39 -> B66  <||@
  Comment 1724 block B62 null  <||@
  Comment 1724 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1724 796 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1727 798 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1737 800 JUMP ~[] destination: B62 -> B66  <||@
  Comment 1742 block B69 null  <||@
  Comment 1742 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1742 872 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1747 874 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:288, 9, 8]  <||@
  Comment 1747 9  <||@
  Comment 1751 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1756 [stack:56, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:663) [bci: 288, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |-  |-  |-  |-  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1757 876 CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 1757 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 1765 878 BRANCH trueDestinationProbability: 0.9069858042480521 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 1771 block B70 null  <||@
  Comment 1771 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1771 882 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1776 884 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1785 12  <||@
  Comment 1795 block B41 null  <||@
  Comment 1795 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1795 528 rbp|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1799 530 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 1799 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 1805 532 BRANCH trueDestinationProbability: 0.001042611060743437 condition: = trueDestination: B41 -> B47 falseDestination: B41 -> B43  <||@
  Comment 1811 block B43 null  <||@
  Comment 1811 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1811 540 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1816 542 rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1820 544 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1830 546 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1835 548 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1840 550 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1845 552 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1850 554 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1855 556 JUMP ~[] destination: B43 -> B49  <||@
  Comment 1860 block B53 null  <||@
  Comment 1860 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1860 642 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1863 644 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1863 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1873 646 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1878 648 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1883 650 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134, 9, 8]  <||@
  Comment 1883 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1888 [r13:0, stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                         |4           |5           |6                  |7             |8  |9  |10  |11  |12             
     locals:  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   |-   |stack:84|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1889 652 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1892 654 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1895 660 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1900 block B13 null  <||@
  Comment 1900 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1900 146 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1905 148 JUMP ~[] destination: B13 -> B14  <||@
  Comment 1910 block B65 null  <||@
  Comment 1910 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1910 834 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1915 836 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1925 838 JUMP ~[] destination: B65 -> B66  <||@
  Comment 1930 block B71 null  <||@
  Comment 1930 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1930 888 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1935 890 rbx|QWORD = MOV [r8|DWORD * 8 + 728] size: QWORD  <||@
  Comment 1943 892 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1947 894 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1952 896 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1957 898 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:295, 9, 8]  <||@
  Comment 1957 {HotSpotMethod<HashMap.afterNodeInsertion(boolean)>}  <||@
  Comment 1957 10  <||@
  Comment 1959 [stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:664) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1960 900 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1965 902 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1974 12  <||@
  Comment 1984 block B59 null  <||@
  Comment 1984 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1984 762 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1989 764 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1994 766 rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1998 768 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:169, 9, 8]  <||@
  Comment 1998 9  <||@
  Comment 1999 {HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>}  <||@
  Comment 2004 [stack:32, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:644) [bci: 169, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                         |4           |5           |6  |7  |8  |9  |10                 |11  |12 
     locals:  |stack:56|QWORD[.]  |-  |-  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |stack:80|QWORD[.]  |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 2005 770 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2010 772 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2020 774 JUMP ~[] destination: B59 -> B66  <||@
  Comment 2025 block B46 null  <||@
  Comment 2025 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2025 574 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2030 576 JUMP ~[] destination: B46 -> B47  <||@
  Comment 2030 block B47 null  <||@
  Comment 2030 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2030 580 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100]  <||@
  Comment 2030 {Object[Object@652050100]}  <||@
  Comment 2040 582 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2045 584 rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2050 586 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2055 588 r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2060 590 r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2065 592 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:123, 9, 8]  <||@
  Comment 2065 9  <||@
  Comment 2071 {HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>}  <||@
  Comment 2076 [stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:638) [bci: 123, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                         |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |-  |-  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 2077 594 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2087 596 JUMP ~[] destination: B47 -> B66  <||@
  Comment 2092 block B78 null  <||@
  Comment 2092 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2092 978 r10|DWORD = MOVE input: int[-134939|0xfffffffffffdf0e5]  <||@
  Comment 2098 980 JUMP ~[] destination: B78 -> B79  <||@
  Comment 2098 block B79 null  <||@
  Comment 2098 982 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2098 984 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2105 986 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2112 988 DEOPT info [bci:12, 2, 8]  <||@
  Comment 2112 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2117 [stack:56, stack:72, stack:80]at java.util.HashMap.hash(HashMap.java:339) [bci: 12, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r11|DWORD  |  
  at java.util.HashMap.put(HashMap.java:612) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2                        
     locals:  |-                  |stack:40|QWORD[.]  |Object[Object@652050100] 
     stack:   |stack:56|QWORD[.]  |                   |                         
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 2118 block B21 null  <||@
  Comment 2118 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2118 264 r10|DWORD = MOVE input: int[-134163|0xfffffffffffdf3ed]  <||@
  Comment 2124 266 JUMP ~[] destination: B21 -> B79  <||@
  Comment 2126 block B1 null  <||@
  Comment 2126 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2126 22 MOV [r15|QWORD + 668] y: -116755 size: DWORD  <||@
  Comment 2137 24 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2144 26 DEOPT info [bci:0]  <||@
  Comment 2144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2149 [stack:72, stack:80]at java.util.HashSet.add(HashSet.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 2150 block B34 null  <||@
  Comment 2150 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2150 460 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@302753425]  <||@
  Comment 2150 {Object[d.a@302753425]}  <||@
  Comment 2160 462 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2163 464 r10|DWORD = MOVE input: int[-182332|0xfffffffffffd37c4]  <||@
  Comment 2169 466 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2174 468 JUMP ~[] destination: B34 -> B35  <||@
  Comment 2174 block B35 null  <||@
  Comment 2174 470 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2174 472 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2181 474 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2188 476 DEOPT info [bci:29, 9, 8]  <||@
  Comment 2188 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2193 [r9:0, stack:56, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                         |4           |5           |6            |7  |8          |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |r14|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |r9|QWORD[.]  |-  |r13|DWORD  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 2194 block B18 null  <||@
  Comment 2194 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2194 222 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2199 224 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2204 226 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2209 228 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2214 230 MOV [r15|QWORD + 668] y: -130331 size: DWORD  <||@
  Comment 2225 232 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2232 234 DEOPT info [bci:23, 9, 8]  <||@
  Comment 2232 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2237 [rax:0, rcx:0, rdx:0, rsi:0]at java.util.HashMap.putVal(HashMap.java:629) [bci: 23, duringCall: false, rethrow: false]
              |0             |1          |2             |3                         |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |rcx|QWORD[.]  |r10|DWORD  |rdx|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
     stack:   |rax|QWORD[.]  |           |              |                          |            |            |   |   |   |   |    |    |   
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2238 block B33 null  <||@
  Comment 2238 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2238 452 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2248 454 r10|DWORD = MOVE input: int[-182043|0xfffffffffffd38e5]  <||@
  Comment 2254 456 JUMP ~[] destination: B33 -> B35  <||@
  Comment 2256 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2256 4  <||@
  Comment 2262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2262 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10093[java.util.HashSet.add(Object)]"
  method "HotSpotCompilation-10093[java.util.HashSet.add(Object)]"
  date 1527005237174
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107cd9380 448b560849c1e203493bc20f85cfcab2fe900f1f80000000000f1f800000000089842400c0feff4883ec6848896c246048897424504889542448448b560c4489542444438504d44885d20f84fe070000448b5a084e8b1cddd0010000468b04d508000000448944244049b94056d12301000000418bca48c1e10348894c243848bb00e01b17010000004d3bcb0f856d0400004c8b1a4d8bcb4983e1074983f9010f85b904000049c1eb08458bdb4585db0f84a9040000468b0cd524000000418bfbc1ef104133fb4585c90f846f030000428b04cd0c00000085c00f84660700008be8ffcd23ef3bc50f863e07000049c1e103458b5ca9104585db0f8511010000448bf7448be8896c24344c894c2420458b59084181fbdf3800f80f8546070000413b690c0f83940700004181f8a33700f80f859b0200004d8b5f60498d7b20493b7f700f878e04000049897f60410f1883e000000048bfe8c201c007000000498bc3488bbfa800000049893b41c743085d3800f84589730c488bfa48c1ef0341897b1041c74314670400d84589631848c1e803418944a9104d8d5ca91049c1eb094588241bb801000000420304d518000000428904d518000000b801000000420304d514000000428904d514000000423b04d51c0000000f8ff1040000817c2440a33700f80f85b101000048b800000000000000004885c00f94c00fb6c0488b6c24604883c4688505795abbfcc5f877c34c894c2428897c2434428b2cdd08000000418bc348c1e003423b3cdd0c0000000f84ee03000081fd826500f80f84a605000041bb000000004c8bd00f1f4000418b6a18448bed49c1e50385ed0f8482000000458bf341ffc63b3ced0c0000000f840e00000085050a5abbfc458bde4d8bd5ebcc448b14ed1000000049c1e2034c3bd20f8423040000448974240c4c896c242044895c241c488bf2498bd248b8ffffffffffffffff0f1f8000000000e89cccb2fe9085c00f85a9040000448b5c240c4c8b5424208b7c2434488b542448e96bffffff4c896c242044895c241c817c2440a33700f80f85b1010000498b7760488d5620493b57700f8735040000498957600f1886e00000008b7c2434488b54244848b9e8c201c0070000004c8bc6488b89a800000048890ec746085d3800f8897e0c488bca48c1e903894e10c74614670400d84489661849c1e8034d8bea48bb00e01b1701000000458945184d8bd549c1ea094588241a837c241c070f8d3c040000488b4424204885c00f8503020000448b542444e909feffff448b4424404a8b1cc5d8020000488b4340488b742438ba01000000ffd090b801000000488b6c24604883c4688505b858bbfcc5f877c348b8382300c0060000004e8b14c5a80200004d8b5a40488b742438488bfa418bd6488bcf4c8bc049b90000000000000000498bda498bc3ffd09048c1e8034c8b4c24208b6c2434418944a910498d74a91048c1ee0948bb00e01b17010000004488241e448b542444e966fdffff897c2434488b7424380f1f8000000000e8ccc8b2fe90448b500c418bf2ffce23742434443bd60f8627040000448b5cb0104585db0f8500020000448b742434458bea4c8bc88bee48bb00e01b1701000000488b4c2438448b442440448b542444488b542448488b742450e958fcffff4c895424108b7c2434448b44244049b9382300c0060000004a8b1cc5a8020000488b4340488b7424388bd7488b4c24484d8bc149b90000000000000000ffd09048c1e803448bc04c8b6c2410e961feffff488b74244848b8ffffffffffffffff90e84ccab2fe90448b542444468b0cd5240000008bf0c1ee10448bd84433de4585c90f8436020000418bfb448bd848bb00e01b1701000000488b4c2438448b442440488b542448488b742450e971fbffff488b742448e8773abffe90448bd848bb00e01b1701000000488b4c2438448b442440448b542444488b542448488b742450e921fbffff8b7014c74014670400d8488bd048c1ea094488241a48c1e6034889742420488b742438488bd048b8ffffffffffffffff6690e894c9b2fe90488b442420e91efcffff48be680b00c007000000ba04000000b901000000e870d42bff904c8bd84c8b4c24208b6c243448bb00e01b1701000000488b4c2438448b442440448b542444488b542448488b742450e930fbffff428b34dd100000008bd648c1e203483b5424480f846f0000004889442420896c241c488b74244848b8ffffffffffffffff90e804c9b2fe9085c00f849e000000488b44242048bb00e01b1701000000e910fdffff8b7c2434488944242848bb00e01b1701000000488b4c2438448b442440488b542448488b742450418bc2448b542444e969fbffff48bb00e01b1701000000e9cdfcffff498bc548bb00e01b1701000000e9bbfcffff488b7424380f1f4000e844c6b2fe90817c2440a33700f80f859f000000b801000000488b6c24604883c46885058755bbfcc5f877c38b6c241c81fd826500f80f84db000000488b4424208b7c243448bb00e01b1701000000488b4c2438448b442440448b542444488b542448488b742450e9fffaffff4d8bea48be680b00c007000000ba04000000b901000000e800d32bff90488bf04d8bd5e9aefbffff44895c2434e9cdfcffff488b44242048bb00e01b1701000000e9fffbffff448b4424404a8b1cc5d8020000488b4340488b742438ba01000000ffd090b801000000488b6c24604883c4688505ca54bbfcc5f877c3488b742438488b5424288b4c243490e84cc5b2fe90488b44242048bb00e01b1701000000e9a0fbffff488944242048bf382300c006000000488b742420488b542438488b4c2428448b4424344c8b4c2448660f1f440000e804c5b2fe9048bb00e01b1701000000e95dfbffff41bae5f0fdff4589979c0200004d89a7a8020000e839dab2fe9041baedf3fdffebe441c7879c020000ed37feff4d89a7a8020000e819dab2fe9049baf8478ebb070000004d8bda41bac437fdff4c8b4c24204589979c0200004d899fa8020000e8edd9b2fe90448b542434488b4c2438488b542448488b74245041c7879c020000e502feff4d89a7a8020000e8c1d9b2fe9049bb000000000000000041bae538fdffebaee8cb09f7fe90e8a5d8b2fe90f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@62e07596 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 62 12 stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 67 14 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 67 [rdx:0, rsi:0, r10:0, stack:68, stack:72, stack:80]at java.util.HashSet.add(HashSet.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 67 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 71 16 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 74 18 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 80 block B2 null  <||@
  Comment 80 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 80 30 r11|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 84 32 r11|QWORD = MOV [r11|DWORD * 8 + 464] size: QWORD  <||@
  Comment 92 34 r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 100 36 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 105 38 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 105 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 115 40 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 122 42 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 127 44 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 137 46 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 140 48 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12  <||@
  Comment 146 block B3 null  <||@
  Comment 146 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 52 r11|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 149 54 r9|QWORD = AND r11|QWORD y: 7 size: QWORD  <||@
  Comment 156 56 CMP r9|QWORD y: 1 size: QWORD  <||@
  Comment 160 58 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8  <||@
  Comment 166 block B4 null  <||@
  Comment 166 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 166 62 r11|QWORD = SHR r11|QWORD y: 8 size: QWORD  <||@
  Comment 170 64 r11|DWORD = MOV r11|QWORD size: DWORD  <||@
  Comment 173 66 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 176 68 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B4 -> B8 falseDestination: B4 -> B9  <||@
  Comment 182 block B9 null  <||@
  Comment 182 104 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 182 106 r9|DWORD[.] = MOV [r10|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 190 108 rdi|DWORD = SHR r11|DWORD y: 16 size: DWORD  <||@
  Comment 196 110 rdi|DWORD = XOR (x: rdi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 199 112 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 202 114 BRANCH trueDestinationProbability: 0.05949555131451651 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B20  <||@
  Comment 208 block B20 null  <||@
  Comment 208 254 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 208 256 rax|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2, 8]  <||@
  Comment 208 [rcx:0, rdx:0, rsi:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.hash(HashMap.java:339) [bci: 12, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r11|DWORD  |  
  at java.util.HashMap.put(HashMap.java:612) [bci: 2, duringCall: true, rethrow: false]
              |0             |1             |2                        
     locals:  |-             |rdx|QWORD[.]  |Object[Object@652050100] 
     stack:   |rcx|QWORD[.]  |              |                         
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 208 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 216 258 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 218 260 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 224 block B22 null  <||@
  Comment 224 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 270 rbp|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 228 272 rbp|DWORD = AND (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 230 274 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 232 276 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B78  <||@
  Comment 238 block B23 null  <||@
  Comment 238 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 280 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 242 282 r11|DWORD[.] = MOV [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 247 284 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 250 286 BRANCH trueDestinationProbability: 0.8771074655430375 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B36  <||@
  Comment 256 block B24 null  <||@
  Comment 256 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 256 290 r14|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 259 292 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 262 294 JUMP ~[] destination: B24 -> B25  <||@
  Comment 262 block B25 null  <||@
  Comment 262 296 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 262 298 stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 266 300 stack:80|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 271 302 r11|DWORD = MOV [r9|QWORD[.] + 8] size: DWORD  <||@
  Comment 275 304 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 275 {meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 282 306 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B34  <||@
  Comment 288 block B26 null  <||@
  Comment 288 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 288 310 CMP (x: rbp|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD  <||@
  Comment 292 312 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B26 -> B27 falseDestination: B26 -> B33  <||@
  Comment 298 block B27 null  <||@
  Comment 298 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 316 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 298 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 305 318 BRANCH trueDestinationProbability: 0.9308569947624414 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B32  <||@
  Comment 311 block B28 null  <||@
  Comment 311 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 311 322 r11|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 315 324 rdi|QWORD = LEA [r11|QWORD + 32] size: QWORD  <||@
  Comment 319 326 CMP (x: rdi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 323 328 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 329 block B30 null  <||@
  Comment 329 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 362 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 333 364 AMD64PREFETCH ~[r11|QWORD + 224] instr: 0  <||@
  Comment 341 366 r11|QWORD[*] = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 341 368 JUMP ~[] destination: B30 -> B31  <||@
  Comment 341 block B31 null  <||@
  Comment 341 370 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 341 372 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 341 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 351 374 rax|QWORD[.] = MOVE r11|QWORD[*] moveKind: QWORD  <||@
  Comment 354 376 rdi|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 361 378 MOV (x: [r11|QWORD[*]], y: rdi|QWORD) size: QWORD  <||@
  Comment 364 380 MOV [r11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 364 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 372 382 MOV (x: [r11|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 376 384 rdi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 383 386 MOV (x: [r11|QWORD[*] + 16], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 387 388 MOV [r11|QWORD[*] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100]  <||@
  Comment 387 {NarrowOop[Object@652050100]}  <||@
  Comment 395 390 MOV (x: [r11|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 399 392 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 403 394 MOV (x: [r9|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 408 396 r11|QWORD[.] = LEA [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD  <||@
  Comment 413 398 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 417 400 MOVB (x: [r11|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 421 402 JUMP ~[] destination: B31 -> B68  <||@
  Comment 421 block B68 null  <||@
  Comment 421 852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 421 854 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 426 856 rax|DWORD = ADD (x: rax|DWORD, ~y: [r10|DWORD[.] * 8 + 24]) size: DWORD  <||@
  Comment 434 858 MOV (x: [r10|DWORD[.] * 8 + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 442 860 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 447 862 rax|DWORD = ADD (x: rax|DWORD, ~y: [r10|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 455 864 MOV (x: [r10|DWORD[.] * 8 + 20], y: rax|DWORD) size: DWORD  <||@
  Comment 463 866 CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 28]) size: DWORD  <||@
  Comment 471 868 BRANCH trueDestinationProbability: 0.001841453520645575 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B72  <||@
  Comment 477 block B72 null  <||@
  Comment 477 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 477 906 CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 477 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 485 908 BRANCH trueDestinationProbability: 0.9069858042480521 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 491 block B73 null  <||@
  Comment 491 910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 912 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 501 914 JUMP ~[] destination: B73 -> B76  <||@
  Comment 501 block B76 null  <||@
  Comment 501 958 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 501 960 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 504 962 rax|DWORD = SETCC condition: =  <||@
  Comment 510 964 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 519 12  <||@
  Comment 529 block B36 null  <||@
  Comment 529 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 480 stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 534 482 JUMP ~[] destination: B36 -> B37  <||@
  Comment 534 block B37 null  <||@
  Comment 534 484 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 534 486 stack:60|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 538 488 rbp|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:29, 9, 8]  <||@
  Comment 538 [rcx:0, rdx:0, rsi:0, r11:0, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0             |1          |2             |3                         |4           |5           |6                  |7  |8          |9  |10  |11  |12 
     locals:  |rcx|QWORD[.]  |rdi|DWORD  |rdx|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |-  |rax|DWORD  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 538 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 546 490 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 553 492 CMP (x: rdi|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 561 494 BRANCH trueDestinationProbability: 0.06207786620778666 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B45  <||@
  Comment 567 block B45 null  <||@
  Comment 567 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 567 568 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 567 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 573 570 BRANCH trueDestinationProbability: 0.001042611060743437 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49  <||@
  Comment 579 block B49 null  <||@
  Comment 579 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 579 604 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 585 606 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 588 608 JUMP ~[] destination: B49 -> B50  <||@
  Comment 588 block B50 loop 0 depth 1 header:117|LoopBegin  <||@
  Comment 588 610 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 592 612 rbp|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD state [bci:134, 9, 8]  <||@
  Comment 592 [rdx:0, r10:0, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2             |3                         |4           |5           |6                  |7             |8  |9  |10  |11  |12        
     locals:  |stack:56|QWORD[.]  |rdi|DWORD  |rdx|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |-   |-   |r11|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 592 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 596 614 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 603 616 TEST (x: rbp|DWORD[.], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 605 618 BRANCH trueDestinationProbability: 0.8018459009042672 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60  <||@
  Comment 611 block B60 loop 0 depth 1 header:117|LoopBegin  <||@
  Comment 611 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 778 r14|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 617 780 CMP (x: rdi|DWORD, y: [rbp|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 624 782 BRANCH trueDestinationProbability: 0.12596643409390906 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B77  <||@
  Comment 630 block B77 loop 0 depth 1 header:117|LoopBegin  <||@
  Comment 630 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 968 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:134, 9, 8]  <||@
  Comment 630 [rdx:0, r10:0, r13:0, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2             |3                         |4           |5           |6                  |7             |8  |9  |10  |11  |12        
     locals:  |stack:56|QWORD[.]  |rdi|DWORD  |rdx|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |-   |-   |r11|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 630 {infopoint: SAFEPOINT}  <||@
  Comment 630 11  <||@
  Comment 636 970 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 639 972 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 642 974 JUMP ~[] destination: B77 -> B50  <||@
  Comment 644 block B61 loop 0 depth 1 header:117|LoopBegin  <||@
  Comment 644 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 644 786 r10|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 652 788 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 656 790 CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 659 792 BRANCH trueDestinationProbability: 0.7559880239520959 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 665 block B63 loop 0 depth 1 header:117|LoopBegin  <||@
  Comment 665 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 804 stack:100|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 670 806 stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 675 808 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 680 810 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 683 812 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 686 814 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:203, 9, 8]  <||@
  Comment 686 7  <||@
  Comment 703 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 708 [stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:648) [bci: 203, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                         |4           |5           |6                  |7  |8  |9  |10                 |11  |12             
     locals:  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |-  |-  |-  |stack:80|QWORD[.]  |-   |stack:84|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 709 816 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 711 818 BRANCH trueDestinationProbability: 0.5521472392638037 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 717 block B64 loop 0 depth 1 header:117|LoopBegin  <||@
  Comment 717 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 717 822 r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 722 824 r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 727 826 rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 731 828 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 736 830 JUMP ~[] destination: B64 -> B50  <||@
  Comment 741 block B51 null  <||@
  Comment 741 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 741 622 stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 746 624 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 751 626 CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 751 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 759 628 BRANCH trueDestinationProbability: 0.7223671947809879 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B56  <||@
  Comment 765 block B52 null  <||@
  Comment 765 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 632 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 769 634 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 773 636 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 777 638 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 783 block B54 null  <||@
  Comment 783 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 783 664 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 787 666 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 794 668 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 794 674 JUMP ~[] destination: B54 -> B55  <||@
  Comment 794 block B55 null  <||@
  Comment 794 676 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 794 670 rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 798 672 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 803 678 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 803 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 813 680 r8|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 816 682 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 823 684 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 826 686 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 826 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 833 688 MOV (x: [rsi|QWORD[*] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 836 690 rcx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 843 692 MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 846 694 MOV [rsi|QWORD[*] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100]  <||@
  Comment 846 {NarrowOop[Object@652050100]}  <||@
  Comment 853 696 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 857 698 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 861 700 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 864 704 JUMP ~[] destination: B55 -> B57  <||@
  Comment 864 block B57 null  <||@
  Comment 864 742 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 864 738 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 874 744 MOV (x: [r13|QWORD[.] + 24], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 878 746 r10|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 885 748 MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 889 750 CMP stack:84|DWORD y: 7 size: DWORD  <||@
  Comment 894 752 BRANCH trueDestinationProbability: 0.9987884436160298 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 900 block B58 null  <||@
  Comment 900 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 900 756 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 905 758 JUMP ~[] destination: B58 -> B66  <||@
  Comment 905 block B66 null  <||@
  Comment 905 840 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 905 842 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 908 844 BRANCH trueDestinationProbability: 0.9241589950959305 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B75  <||@
  Comment 914 block B67 null  <||@
  Comment 914 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 914 848 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 919 850 JUMP ~[] destination: B67 -> B68  <||@
  Comment 924 block B74 null  <||@
  Comment 924 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 924 918 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 929 920 rbx|QWORD = MOV [r8|DWORD * 8 + 728] size: QWORD  <||@
  Comment 937 922 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 941 924 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 946 926 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 951 928 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:295, 9, 8]  <||@
  Comment 951 {HotSpotMethod<HashMap.afterNodeInsertion(boolean)>}  <||@
  Comment 951 10  <||@
  Comment 953 [stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:664) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 954 930 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 959 932 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 968 12  <||@
  Comment 978 block B32 null  <||@
  Comment 978 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 978 406 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100]  <||@
  Comment 978 {Object[Object@652050100]}  <||@
  Comment 988 408 r10|QWORD = MOV [r8|DWORD * 8 + 680] size: QWORD  <||@
  Comment 996 410 r11|QWORD = MOV [r10|QWORD + 64] size: QWORD  <||@
  Comment 1000 412 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1005 414 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1008 416 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1011 418 rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1014 420 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1017 422 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1027 424 rbx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1030 426 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1033 428 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56, 9, 8]  <||@
  Comment 1033 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1033 10  <||@
  Comment 1035 [stack:32, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:631) [bci: 56, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4  |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |-               |-  |-  |-  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:80|QWORD[.]  |stack:60|DWORD  |   |   |   |            |   |   |   |   |    |    |   
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1036 430 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 1040 432 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1045 434 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1049 436 MOV (x: [r9|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1054 438 rsi|QWORD[.] = LEA [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1059 440 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1063 442 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1073 444 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1077 446 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1082 448 JUMP ~[] destination: B32 -> B68  <||@
  Comment 1087 block B10 null  <||@
  Comment 1087 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1087 118 stack:60|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1091 120 JUMP ~[] destination: B10 -> B14  <||@
  Comment 1091 block B14 null  <||@
  Comment 1091 150 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1091 152 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1096 154 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:20, 9, 8]  <||@
  Comment 1096 9  <||@
  Comment 1103 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1108 [stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:629) [bci: 20, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                         |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1109 156 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23, 9, 8]  <||@
  Comment 1109 [rax:0, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:629) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                         |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
     stack:   |rax|QWORD[.]       |                |                   |                          |            |            |   |   |   |   |    |    |   
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1109 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1113 158 rsi|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 1118 160 rsi|DWORD = AND (x: rsi|DWORD, y: stack:60|DWORD) size: DWORD  <||@
  Comment 1122 162 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1125 164 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B18  <||@
  Comment 1131 block B15 null  <||@
  Comment 1131 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1131 168 r11|DWORD[.] = MOV [rax|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1136 170 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1139 172 BRANCH trueDestinationProbability: 0.8771074655430375 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 1145 block B16 null  <||@
  Comment 1145 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1145 176 r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1150 178 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1153 180 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1156 182 rbp|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1158 184 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1168 186 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1173 188 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1178 190 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1183 192 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1188 194 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1193 196 JUMP ~[] destination: B16 -> B25  <||@
  Comment 1198 block B56 null  <||@
  Comment 1198 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1198 708 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1203 710 rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1207 712 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1212 714 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100]  <||@
  Comment 1212 {Object[Object@652050100]}  <||@
  Comment 1222 716 rbx|QWORD = MOV [r8|DWORD * 8 + 680] size: QWORD  <||@
  Comment 1230 718 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1234 720 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1239 722 rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1241 724 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1246 726 r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1249 728 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1259 730 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:152, 9, 8]  <||@
  Comment 1259 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1259 10  <||@
  Comment 1261 [stack:16, stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:642) [bci: 152, duringCall: true, rethrow: false]
              |0                  |1               |2  |3                         |4           |5           |6                  |7  |8  |9  |10                 |11  |12             
     locals:  |stack:56|QWORD[.]  |stack:60|DWORD  |-  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |-  |-  |-  |stack:80|QWORD[.]  |-   |stack:84|DWORD 
     stack:   |stack:96|QWORD[.]  |                |   |                          |            |            |                   |   |   |   |                   |    |               
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1262 732 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 1266 734 r8|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1269 736 r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1274 740 JUMP ~[] destination: B56 -> B57  <||@
  Comment 1279 block B12 null  <||@
  Comment 1279 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1279 128 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1284 130 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2, 8]  <||@
  Comment 1284 7  <||@
  Comment 1295 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 1300 [stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.hash(HashMap.java:339) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap.put(HashMap.java:612) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2                        
     locals:  |-                  |stack:40|QWORD[.]  |Object[Object@652050100] 
     stack:   |stack:56|QWORD[.]  |                   |                         
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1301 132 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1306 134 r9|DWORD[.] = MOV [r10|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 1314 136 rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 1319 138 r11|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1325 140 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 1328 142 BRANCH trueDestinationProbability: 0.05949555131451651 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B19  <||@
  Comment 1334 block B19 null  <||@
  Comment 1334 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1334 238 rdi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1337 240 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1340 242 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1350 244 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1355 246 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1360 248 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1365 250 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1370 252 JUMP ~[] destination: B19 -> B20  <||@
  Comment 1375 block B8 null  <||@
  Comment 1375 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1375 84 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1380 86 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 1380 {Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1385 [stack:56, stack:68, stack:72, stack:80]at java.util.HashSet.add(HashSet.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1386 88 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1389 90 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1399 92 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1404 94 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1409 96 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1414 98 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1419 100 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1424 102 JUMP ~[] destination: B8 -> B9  <||@
  Comment 1429 block B75 null  <||@
  Comment 1429 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1429 936 rsi|DWORD[.] = MOV [rax|QWORD[.] + 20] size: DWORD  <||@
  Comment 1432 938 MOV [rax|QWORD[.] + 20] y: -559030611 size: DWORD c: NarrowOop[Object@652050100]  <||@
  Comment 1432 {NarrowOop[Object@652050100]}  <||@
  Comment 1439 940 rdx|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1446 942 MOVB (x: [rdx|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1450 944 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 1454 946 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1459 948 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1464 950 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1467 952 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:253, 9, 8]  <||@
  Comment 1467 7  <||@
  Comment 1479 {HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>}  <||@
  Comment 1484 [stack:32, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:657) [bci: 253, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12                
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |stack:80|QWORD[.] 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1485 954 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1490 956 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1495 block B29 null  <||@
  Comment 1495 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1495 332 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1495 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1505 334 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1510 336 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1515 338 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29, 9, 8]  <||@
  Comment 1515 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1520 [stack:32, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                         |4           |5           |6                  |7  |8          |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |r14|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:80|QWORD[.]  |-  |r13|DWORD  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1521 340 r11|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1524 342 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1529 344 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1533 346 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1543 348 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1548 350 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1553 352 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1558 354 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1563 356 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1568 358 JUMP ~[] destination: B29 -> B31  <||@
  Comment 1573 block B38 null  <||@
  Comment 1573 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1573 498 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1581 500 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@f955c62 encoding: base: 0 shift: 3  <||@
  Comment 1587 502 CMP (x: rdx|QWORD[.], y: stack:40|QWORD[.]) size: QWORD  <||@
  Comment 1592 504 BRANCH trueDestinationProbability: 0.3756063756063756 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1598 block B40 null  <||@
  Comment 1598 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1598 514 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1603 516 stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1607 518 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1612 520 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:91, 9, 8]  <||@
  Comment 1612 7  <||@
  Comment 1623 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1628 [stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:635) [bci: 91, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                         |4           |5           |6                  |7                  |8  |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1629 522 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1631 524 BRANCH trueDestinationProbability: 0.28634850166481685 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B44  <||@
  Comment 1637 block B44 null  <||@
  Comment 1637 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1637 560 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1642 562 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1652 564 JUMP ~[] destination: B44 -> B66  <||@
  Comment 1657 block B17 null  <||@
  Comment 1657 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1657 200 rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1661 202 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1666 204 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1676 206 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1681 208 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1686 210 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1691 212 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1696 214 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1699 216 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1704 218 JUMP ~[] destination: B17 -> B37  <||@
  Comment 1709 block B39 null  <||@
  Comment 1709 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1709 508 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1719 510 JUMP ~[] destination: B39 -> B66  <||@
  Comment 1724 block B62 null  <||@
  Comment 1724 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1724 796 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1727 798 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1737 800 JUMP ~[] destination: B62 -> B66  <||@
  Comment 1742 block B69 null  <||@
  Comment 1742 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1742 872 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1747 874 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:288, 9, 8]  <||@
  Comment 1747 9  <||@
  Comment 1751 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1756 [stack:56, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:663) [bci: 288, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |-  |-  |-  |-  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1757 876 CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 1757 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 1765 878 BRANCH trueDestinationProbability: 0.9069858042480521 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 1771 block B70 null  <||@
  Comment 1771 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1771 882 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1776 884 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1785 12  <||@
  Comment 1795 block B41 null  <||@
  Comment 1795 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1795 528 rbp|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1799 530 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 1799 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 1805 532 BRANCH trueDestinationProbability: 0.001042611060743437 condition: = trueDestination: B41 -> B47 falseDestination: B41 -> B43  <||@
  Comment 1811 block B43 null  <||@
  Comment 1811 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1811 540 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1816 542 rdi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1820 544 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1830 546 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1835 548 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1840 550 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1845 552 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1850 554 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1855 556 JUMP ~[] destination: B43 -> B49  <||@
  Comment 1860 block B53 null  <||@
  Comment 1860 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1860 642 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1863 644 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1863 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1873 646 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1878 648 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1883 650 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134, 9, 8]  <||@
  Comment 1883 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1888 [r13:0, stack:32, stack:40, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                         |4           |5           |6                  |7             |8  |9  |10  |11  |12             
     locals:  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   |-   |stack:84|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1889 652 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1892 654 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1895 660 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1900 block B13 null  <||@
  Comment 1900 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1900 146 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1905 148 JUMP ~[] destination: B13 -> B14  <||@
  Comment 1910 block B65 null  <||@
  Comment 1910 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1910 834 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1915 836 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1925 838 JUMP ~[] destination: B65 -> B66  <||@
  Comment 1930 block B71 null  <||@
  Comment 1930 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1930 888 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1935 890 rbx|QWORD = MOV [r8|DWORD * 8 + 728] size: QWORD  <||@
  Comment 1943 892 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1947 894 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1952 896 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1957 898 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:295, 9, 8]  <||@
  Comment 1957 {HotSpotMethod<HashMap.afterNodeInsertion(boolean)>}  <||@
  Comment 1957 10  <||@
  Comment 1959 [stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:664) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1960 900 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1965 902 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1974 12  <||@
  Comment 1984 block B59 null  <||@
  Comment 1984 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1984 762 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1989 764 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1994 766 rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1998 768 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:169, 9, 8]  <||@
  Comment 1998 9  <||@
  Comment 1999 {HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>}  <||@
  Comment 2004 [stack:32, stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:644) [bci: 169, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                         |4           |5           |6  |7  |8  |9  |10                 |11  |12 
     locals:  |stack:56|QWORD[.]  |-  |-  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |stack:80|QWORD[.]  |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 2005 770 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2010 772 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2020 774 JUMP ~[] destination: B59 -> B66  <||@
  Comment 2025 block B46 null  <||@
  Comment 2025 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2025 574 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2030 576 JUMP ~[] destination: B46 -> B47  <||@
  Comment 2030 block B47 null  <||@
  Comment 2030 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2030 580 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Object@652050100]  <||@
  Comment 2030 {Object[Object@652050100]}  <||@
  Comment 2040 582 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2045 584 rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2050 586 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2055 588 r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2060 590 r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2065 592 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:123, 9, 8]  <||@
  Comment 2065 9  <||@
  Comment 2071 {HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>}  <||@
  Comment 2076 [stack:56, stack:68, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:638) [bci: 123, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                         |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |-  |-  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 2077 594 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2087 596 JUMP ~[] destination: B47 -> B66  <||@
  Comment 2092 block B78 null  <||@
  Comment 2092 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2092 978 r10|DWORD = MOVE input: int[-134939|0xfffffffffffdf0e5]  <||@
  Comment 2098 980 JUMP ~[] destination: B78 -> B79  <||@
  Comment 2098 block B79 null  <||@
  Comment 2098 982 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2098 984 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2105 986 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2112 988 DEOPT info [bci:12, 2, 8]  <||@
  Comment 2112 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2117 [stack:56, stack:72, stack:80]at java.util.HashMap.hash(HashMap.java:339) [bci: 12, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r11|DWORD  |  
  at java.util.HashMap.put(HashMap.java:612) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2                        
     locals:  |-                  |stack:40|QWORD[.]  |Object[Object@652050100] 
     stack:   |stack:56|QWORD[.]  |                   |                         
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 2118 block B21 null  <||@
  Comment 2118 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2118 264 r10|DWORD = MOVE input: int[-134163|0xfffffffffffdf3ed]  <||@
  Comment 2124 266 JUMP ~[] destination: B21 -> B79  <||@
  Comment 2126 block B1 null  <||@
  Comment 2126 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2126 22 MOV [r15|QWORD + 668] y: -116755 size: DWORD  <||@
  Comment 2137 24 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2144 26 DEOPT info [bci:0]  <||@
  Comment 2144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2149 [stack:72, stack:80]at java.util.HashSet.add(HashSet.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 2150 block B34 null  <||@
  Comment 2150 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2150 460 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@302753425]  <||@
  Comment 2150 {Object[d.a@302753425]}  <||@
  Comment 2160 462 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2163 464 r10|DWORD = MOVE input: int[-182332|0xfffffffffffd37c4]  <||@
  Comment 2169 466 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2174 468 JUMP ~[] destination: B34 -> B35  <||@
  Comment 2174 block B35 null  <||@
  Comment 2174 470 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2174 472 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2181 474 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2188 476 DEOPT info [bci:29, 9, 8]  <||@
  Comment 2188 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2193 [r9:0, stack:56, stack:72, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                         |4           |5           |6            |7  |8          |9  |10  |11  |12 
     locals:  |stack:56|QWORD[.]  |r14|DWORD  |stack:40|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |r9|QWORD[.]  |-  |r13|DWORD  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 2194 block B18 null  <||@
  Comment 2194 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2194 222 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2199 224 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2204 226 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2209 228 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2214 230 MOV [r15|QWORD + 668] y: -130331 size: DWORD  <||@
  Comment 2225 232 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2232 234 DEOPT info [bci:23, 9, 8]  <||@
  Comment 2232 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2237 [rax:0, rcx:0, rdx:0, rsi:0]at java.util.HashMap.putVal(HashMap.java:629) [bci: 23, duringCall: false, rethrow: false]
              |0             |1          |2             |3                         |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |rcx|QWORD[.]  |r10|DWORD  |rdx|QWORD[.]  |Object[Object@652050100]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
     stack:   |rax|QWORD[.]  |           |              |                          |            |            |   |   |   |   |    |    |   
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashSet.add(HashSet.java:220) [bci: 8, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2238 block B33 null  <||@
  Comment 2238 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2238 452 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2248 454 r10|DWORD = MOVE input: int[-182043|0xfffffffffffd38e5]  <||@
  Comment 2254 456 JUMP ~[] destination: B33 -> B35  <||@
  Comment 2256 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2256 4  <||@
  Comment 2262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2262 5  <||@
  HexCodeFile>>> <|@
end_nmethod
